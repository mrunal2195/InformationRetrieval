
*************Query 1*************************

1 Q0 2054 1 0.24611919 Lucene_47
on the feasibility of voice input to an on-line computer processing <B>system</B> an on-line digital computer processing <B>system</B> is considered in <B>which</B> an ordinary telephone is the complete terminal device economically and logically feasible to handle at least 40 users at a <B>time</B> with an <B>ibm</B> 360 65 computer recognition  <B>time</B>-<B>sharing</B>  remote access  voice input  speech input  telephone input output  acoustic signal
1 Q0 1519 2 0.24233252 Lucene_47
george 3-a general purpose <B>time</B> <B>sharing</B> and <B>operating</B> <B>system</B> an <B>operating</B> <B>system</B> is described <B>which</B> of online console users while at the same <B>time</B> running several off line  background  jobs  the <B>system</B> is not oriented towards either mode and can be either a batch processing <B>system</B>  such as the atlas supervisor  ibsys  or gecos   or a multiaccess <B>system</B>  resembling  to the user  ctss or multics   or both
1 Q0 1657 3 0.23330602 Lucene_47
 as a suboperating <B>system</B>  an improved version of the sharer <B>time</B>-<B>sharing</B> <B>system</B> using this feature is described  cacm december  1968 harrison  m  c  <B>operating</B> <B>system</B>  memory protection  <B>time</B>-<B>sharing</B>  multiprogramming  monitor  submonitor  suboperating <B>system</B> 4.32 4.31 4.32 ca681209 jb february 21  1978 1 27 pmimplementation of the sharer2 <B>time</B>-<B>sharing</B> <B>system</B> a simple mechanism is described for the execution
1 Q0 1161 4 0.2283251 Lucene_47
1401 compatibility feature on the <B>ibm</B> <B>system</B> 360 model 30 the  second generation  of stored-program <B>computers</B>  of <B>which</B> <B>ibm</B> 1400 series was a part  brought edp into the mass market for the first <B>time</B> of data processing equipment  program written for a particular <B>system</B> required tedious conversion as incompatible new machines came into use  the <B>ibm</B> <B>system</B> 360 has been designed with the conversion
1 Q0 1410 5 0.22665675 Lucene_47
 general-purpose <B>time</B>-<B>sharing</B> <B>system</B>  <B>tss</B>   the input process is assumed to be stationary  and to be defined by the interarrival <B>time</B> distribution  the data obtained appear to justify satisfactorilyinterarrival statistics for <B>time</B> <B>sharing</B> systems the optimization of <B>time</B>-shared <B>system</B> performance for interarrival <B>time</B>  a much more satisfactory approximation to the data can be obtained with a biphase
1 Q0 1844 6 0.22105438 Lucene_47
 of users  this <B>system</B> organization is inherently a simpler and therefore more reliable approach to <B>time</B>-<B>sharing</B> <B>computers</B> and has the potential of a highly available <B>system</B> at relatively low costa modular computer <B>sharing</B> <B>system</B> an alternative approach to the design and organization described is a conceptually simple arrangement of a bank of interchangeable <B>computers</B>  each of <B>which</B>
1 Q0 1605 7 0.21189332 Lucene_47
an experimental comparison of <B>time</B> <B>sharing</B> and batch processing the effectiveness for program development of the mit compatible <B>time</B>-<B>sharing</B> <B>system</B>  ctss  was compared with that of the <B>ibm</B> ibsys batch-processing <B>system</B> by means of a statistically designed experiment  an identical set of four   programmer <B>time</B>  computer <B>time</B>  elapsed <B>time</B>  etc   <B>which</B> were considered to be definitive of  <B>system</B>
1 Q0 1938 8 0.20309465 Lucene_47
some criteria for <B>time</B>-<B>sharing</B> <B>system</B> performance <B>time</B>-<B>sharing</B> systems  as defined in this article resources of the <B>system</B> while <B>sharing</B> its <B>time</B> with other terminal users  it is each terminal user s ability to utilize the full resources of the <B>system</B> that makes quantitative evaluation of <B>time</B>-<B>sharing</B> first-level quantitative <B>time</B>-<B>sharing</B> <B>system</B> performance evaluation  cacm january  1969 stimler  s
1 Q0 2629 9 0.20307699 Lucene_47
the unix <B>time</B>-<B>sharing</B> <B>system</B> unix is a general-purpose  multi-user  interactive <B>operating</B> <B>system</B> of the file <B>system</B> and of the user command interface  cacm july  1974 ritchie  d  m  thompson  k  <B>time</B>-<B>sharing</B>  <B>operating</B> <B>system</B>  file <B>system</B>  command language  pdp-11 4.30 4.32 ca740702 jb january 17  1978 1 seldom found even in larger <B>operating</B> systems  including   1  a hierarchical file <B>system</B> incorporating
1 Q0 2151 10 0.20239136 Lucene_47
 showing the <B>system</B> in use is presented  finally  it is shown how other <B>time</B>-<B>sharing</B> systems may  multiprogramming systems  <B>time</B>-<B>sharing</B> systems  software measurement  user program measurementuser program measurement in a <B>time</B>-shared environment a general discussion of the measurement programs in a <B>time</B>-shared environment  the tx-2 computer at mit lincoln laboratory was used
1 Q0 2357 11 0.20201573 Lucene_47
mux  a simple approach to on-line computing an on-line <B>system</B> <B>operating</B> as part of a normal batch <B>system</B> for the cdc 6600 computer is described  the <B>system</B>  <B>which</B> required one man-year for initial  implementation  cost  overhead  and user reactions  cacm may  1972 christman  r  d  <B>time</B>-<B>sharing</B>  remote  implementation effort  <B>operating</B> overhead  user reactions  remote terminals  <B>operating</B> <B>system</B> 3.79 3.89 4.39
1 Q0 2219 12 0.1939016 Lucene_47
  1971 bernstein  a  j  sharp  j  c  scheduler  <B>time</B>-<B>sharing</B>  <B>operating</B> <B>system</B>  resource allocationa policy-driven scheduler for a <B>time</B>-<B>sharing</B> <B>system</B> the service received by a process from a <B>time</B>-<B>sharing</B> <B>operating</B> <B>system</B> can be characterized by a resource count sum w i r ij   where r ij  the algorithm has been implemented in a general purpose <B>operating</B> <B>system</B>  and it has provided
1 Q0 1827 13 0.1932776 Lucene_47
performance monitoring in a <B>time</B>-<B>sharing</B> <B>system</B> a software measurement facility <B>which</B> is part of a general purpose <B>time</B>-<B>sharing</B> <B>system</B> is described  the date collection facility  dcf  has been  multiprogramming performance  software measurement  <B>time</B>-<B>sharing</B> performance  <B>system</B> evaluation of monitoring <B>operating</B> <B>system</B> and user program behavior and performance  the overall structure
1 Q0 2535 14 0.19171104 Lucene_47
 communications  <B>time</B>-<B>sharing</B>  multiplexing  scheduling algorithms  <B>operating</B> systems 3.80 3.81 6.20 ca730304the effects of multiplexing on a computer-communications <B>system</B> a study is made of the way in <B>which</B> asynchronous <B>time</B> division multiplexing changes the stochastic nature of the arrival process from a user to the computer and  consequently  affects the performance of a <B>time</B>-shared computer
1 Q0 2920 15 0.18762116 Lucene_47
 their properties  cacm october  1977 devillers  r  <B>operating</B> <B>system</B>  multiprogramming  <B>time</B>-<B>sharing</B>  <B>operating</B> <B>system</B>  etc   of the  safe situations  <B>which</B> may be realized without endangering the smooth running of the <B>system</B>  when each process specifies its future needs by a flowchart of need-defined steps  a global approach to the phenomenon and its in terpretation as a game between the <B>operating</B>
1 Q0 1071 16 0.18584868 Lucene_47
computer-usage accounting for generalized <B>time</B>-<B>sharing</B> systems the current development of general <B>time</B>-<B>sharing</B> systems requires a revision of accounting procedures for computer usage  since <B>time</B>-<B>sharing</B> <B>system</B> users operate concurrently  it is necessary to be more precise as to the amount of computer <B>time</B> and storage space that a user actually utilizes  the various cost factors <B>which</B> should
1 Q0 2500 17 0.1823597 Lucene_47
 and allocation can be expensive with regard to <B>time</B> and space in multiprogramming or <B>time</B>-<B>sharing</B> environments is to be maintained  a resource management program is described <B>which</B> uses linked lists along with other techniques to overcome a large portion of this overhead  the program  <B>which</B> is currently running as part of a large scale general purpose <B>operating</B> <B>system</B>  keeps resources relatively active
1 Q0 1805 18 0.1819278 Lucene_47
  hardware  evaluation  monitor  <B>operating</B> <B>system</B>  <B>system</B> software  supervisors  performance  <B>time</B> <B>sharing</B>  <B>time</B> slicing 2.43 2.44 4.32 ca691207 jb february 15  1978 2 47 pm 1805 4 1805 1805 4 1805 1805productivity of multiprogrammed <B>computers</B>-progress in developing an analytic prediction method multiprogramming as it is discussed here is a mode of computer operation in <B>which</B> two or more programs
1 Q0 1698 19 0.18024558 Lucene_47
a statistical model for console behavior in multiuser <B>computers</B> the ability of a computer <B>system</B> is the maximum rate at <B>which</B> a process can execute  <B>what</B> bounds can be set on overall buffer requirements  answers to these and similar questions are needed in certain aspects of <B>operating</B> <B>system</B> design  cacm september  1968 denning  p  j  statistical models for input-output  <B>operating</B> <B>system</B> design
1 Q0 2947 20 0.17784831 Lucene_47
sitar  an interactive text processing <B>system</B> for small <B>computers</B> sitar  a low-cost in teractive text handling and text analysis <B>system</B> for nontechnical users  is in many ways comparable  it is implemented on a pdp 11 <B>time</B>-<B>sharing</B> computer invoked by a crt with microprogrammed editing functions  information retrieval  text editing  minicomputers  crts <B>time</B> <B>sharing</B>  bibliographic search and retrieval
1 Q0 1315 21 0.1692843 Lucene_47
automation of the radioisotope accountability <B>system</B> the radioisotope service of the veterans administration hospital  omaha  nebraska  used a manual <B>system</B> of radioisotope accountability for three years  the procedure <B>which</B> was satisfactory but <B>time</B>-consuming was converted from manual to a fully automated computer <B>system</B> in january  1963  the program for purchased radioisotopes is written
1 Q0 585 22 0.16926403 Lucene_47
initial experience with an <B>operating</B> multiprogramming <B>system</B> the lewis research center has been an initial achievement of self-searching input and output to the automatic <B>time</B> <B>sharing</B> of independently coded problems  several important machine and program <B>system</B> modifications were necessary <B>which</B> has developed into the present multiprogramming <B>system</B> at lewis research center  cacm may  1962
1 Q0 2424 23 0.16712053 Lucene_47
 is an experimental <B>time</B>-<B>sharing</B> <B>which</B> is to have the properties of continuous availability  data privacydynamic verification of <B>operating</B> <B>system</B> decisions dynamic verification of a decision implies independent hardware and software  the dynamic verification of <B>operating</B> <B>system</B> decisions is used <B>system</B> <B>which</B> does not make certain decisions improperly even in the presence of a single hardware
1 Q0 2319 24 0.16437572 Lucene_47
<B>operating</B> <B>system</B> performance an overview of the current and future positions with respect to <B>operating</B> <B>system</B> performance is given  while a great <B>deal</B> of information and a large number of models interactions between the various subsystems of an <B>operating</B> <B>system</B>  an overall model of the total <B>system</B> must be developed to be able to analyze and design the performance aspects of an <B>operating</B> <B>system</B> although
1 Q0 2218 25 0.16302718 Lucene_47
 <B>time</B>-<B>sharing</B> <B>system</B>  inasmuch as the b6500 <B>system</B> is based upon the use of variable sized segments  simulation  swap volume minimization  <B>system</B> simulation  <B>time</B>-<B>sharing</B> 3.9 4.32 ca710203 jb february 8  1978an analysis of some <B>time</B>-<B>sharing</B> techniques the effectiveness of certain <B>time</B>-<B>sharing</B> techniques of the effectiveness of this type of organization in a <B>time</B>-<B>sharing</B> environment  the design characteristics
1 Q0 2950 26 0.15893294 Lucene_47
 algorithms based on an abstract model of a scheduling <B>system</B> <B>which</B> formalizes the notion of priority  various for the implementation efficiency of an algorithm is developed and results in the definition of <B>time</B>-invariant algorithms  <B>which</B> include most of the commonly implemented ones  for <B>time</B>-invariant algorithms a framework for implementing flexible schedulers in real <B>operating</B> systems  the policy-driven scheduler
1 Q0 2371 27 0.15884697 Lucene_47
a <B>system</B> for interprocess communication in a resource <B>sharing</B> computer network a <B>system</B> of communication between processes in a <B>time</B>-<B>sharing</B> <B>system</B> is described and the communication <B>system</B>  the hypothetical application of the <B>system</B> to an existing network is discussed  cacm april  1972 walden  d  c  interprocess communication  <B>time</B>-<B>sharing</B>  computer networks  resource <B>sharing</B> 3.81 4.39 4.82 4.9
1 Q0 2378 28 0.15661012 Lucene_47
an <B>operating</B> <B>system</B> based on the concept of a supervisory computer an <B>operating</B> <B>system</B> <B>which</B>  cacm march  1972 gaines  r  s  <B>operating</B> systems  supervisors  multiprogramming  <B>time</B>-<B>sharing</B> handles i o with external devices-the file and directory <B>system</B>-schedules active processes and manages memory  handle errors  and provides a small set of primitive functions <B>which</B> it will execute
1 Q0 1506 29 0.15487282 Lucene_47
the laconiq monitor  <B>time</B> <B>sharing</B> for online dialogues the laconiq  laboratory computer online very large files by means of a  dialogue  between a <B>system</B> user and a retrieval application  the monitor was designed so that it could work with a small computer  an <B>ibm</B> <B>system</B> 360 30   therefore facilities  and input-output were all scheduled  an unusual feature of the <B>system</B>
1 Q0 1591 30 0.15354826 Lucene_47
 teaching  the teaching <B>system</B>  abac-ii  was written to run under the <B>operating</B> <B>system</B>  ibsys  for the <B>ibm</B> into an <B>operating</B> <B>system</B> of a large computer is described  the model transferred control to the <B>operating</B> student mode and programmer mode  during the latter  the full resources of the <B>operating</B> <B>system</B> by the <B>operating</B> <B>system</B>  a course could therefore include text material interleaved with programming
1 Q0 1908 31 0.15047477 Lucene_47
-<B>sharing</B> the more favorable <B>system</B>  cacm may  1969 gold  m  m  <B>time</B>-<B>sharing</B> vs batch-processing<B>time</B>-<B>sharing</B> and batch-processing  an experimental comparison of their values in a problem - solving situation an experimental comparison of problem-solving using <B>time</B>-<B>sharing</B> and batch-processing of performance is attained by <B>time</B>-<B>sharing</B> users  there are indications that significantly lower costs
1 Q0 2948 32 0.14937352 Lucene_47
a terminal-oriented communication <B>system</B> this paper describes a <B>system</B> for full-duplex communication between a <B>time</B>-shared computer and its terminals  the <B>system</B> consists of a communications computer directly connected to the <B>time</B>-shared <B>system</B>  a number of small remote <B>computers</B> to <B>which</B> of terminals of various types  the overall <B>system</B> design is presented along with the algorithms used
1 Q0 1408 33 0.1467241 Lucene_47
the eschenbach drum scheme the prime function of a drum  <B>operating</B> in real <B>time</B>  is to perform  to <B>deal</B> with this  a standard of efficiency is developed in light of realistic real-<B>time</B> by modifying the manner in <B>which</B> it operates  at the outset  a drum is given a functional definition  then a simple design scheme  eschenbach  is introduced <B>which</B> enormously increases the rate of accessing
1 Q0 2344 34 0.14436507 Lucene_47
on the optimization of performance of <B>time</B>-<B>sharing</B> systems by simulation a simulation model of a <B>time</B>-<B>sharing</B> <B>system</B> with a finite noncontiguous store and an infinite auxiliary store is used to study in the measure of <B>system</B> performance can be obtained by using variable <B>time</B>-slice techniques nonpreemptive <B>time</B>-<B>sharing</B> systems  the comparison is found to be very favorable  cacm june  1972 blatny  j
1 Q0 3127 35 0.14126389 Lucene_47
thoth  a portable real-<B>time</B> <B>operating</B> <B>system</B> thoth isa real-<B>time</B> <B>operating</B> <B>system</B> <B>which</B> is designed with quite different architectures  both the <B>system</B> and application programs <B>which</B> use it are written in a high-level language  because the <B>system</B> is implemented by the same software on different hardware  sager  g  portability  real <B>time</B>  <B>operating</B> systems  minicomputer 3.80 4.30 4.35 ca790206 dh april
1 Q0 971 36 0.1399406 Lucene_47
<B>time</B> <B>sharing</B> in a traffic control program the toronto traffic signal control <B>system</B> consists these demands  a <B>time</B>-<B>sharing</B> program has been written whose purpose is to execute  in the order of a predefined priority  the various subprograms within the real-<B>time</B> <B>system</B>  in this paper the more interesting aspects of the <B>time</B>-<B>sharing</B> program are outlined  cacm november  1964 green  l  e  s  ca641112 jb
1 Q0 1033 37 0.13985196 Lucene_47
  the completely symbolic <B>operating</B> <B>system</B> includes display and entry of program and data  sequence controlexperimental personalized array translator <B>system</B> a <B>system</B> designed for intimate man-machine interaction in a general-purpose problem-solving environment is experimentally operational  the <B>system</B> numeric  boolean  relational and selection operators on operands <B>which</B> can be entire arrays
1 Q0 2522 38 0.139048 Lucene_47
 <B>system</B> is largely dependent upon the algorithms employed to allocate the <B>system</B> resources to the processes competing for them  recent research in <B>time</B>-<B>sharing</B> paging systems has developed the working  and indicates future directions of research on methods of controlling a computer <B>system</B>  cacm april  1973 rodriguez-rosell  j  dupuy  j  p  working set  dispatcher  scheduler  <B>time</B>-<B>sharing</B> systems  resource
1 Q0 2379 39 0.13883507 Lucene_47
 on the principles <B>which</B> guided the design  cacm march  1972 liskov  b  h  <B>operating</B> systems  <B>system</B> designthe design of the venus <B>operating</B> <B>system</B> the venus <B>operating</B> <B>system</B> is an experimental multiprogramming <B>system</B> <B>which</B> supports five or six concurrent users on a small computer  the <B>system</B> was produced architectural feature  the software exploits these features to define the <B>operating</B> <B>system</B> as simply
1 Q0 1752 40 0.1382148 Lucene_47
resource management for a medium scale <B>time</B>-<B>sharing</B> <B>operating</B> <B>system</B> task scheduling and resource  <B>time</B>-<B>sharing</B>  <B>operating</B> systems  resource management  task scheduling  paging  <B>system</B> simulation batch processing and <B>time</B>-<B>sharing</B> environment  a synopsis is given of the task scheduling and paging emphasis is placed on balancing the <B>system</B> performance relative to the characteristics of all
1 Q0 1391 41 0.1380519 Lucene_47
computer experiments in finite algebra a medium-scale programming <B>system</B> is written in mad and fap on the <B>ibm</B> 7094 to manipulate some of the objects of modern algebra  finite groups  maps and sets of maps  subsets and sets of subsets  constant integers and truth-values  designed to operate in a <B>time</B>-<B>sharing</B> environment  the <B>system</B> can serve as a teacher s aid to the undergraduate student
1 Q0 3025 42 0.1379068 Lucene_47
 a price range of five to one  the origin and evolution of the hardware  <B>operating</B> <B>system</B>  and languages to <B>time</B> <B>sharing</B> computing systems  transferring hardware technology within dec  and elsewherethe evolution of the dec <B>system</B> 10 the dec <B>system</B> 10  also known as the pdp-10  evolved from january  1978 bell  c  kotok  a  hastings  t  hill  r  computer structures  architecture  <B>operating</B>
1 Q0 3174 43 0.1337556 Lucene_47
password security  a case history this paper describes the history of the design of the password security scheme on a remotely accessed <B>time</B>-<B>sharing</B> <B>system</B>  the present design was the result of countering observed attempts to penetrate the <B>system</B>  the result is a compromise between extreme security and ease of use  cacm november  1979 morris  r  thompson  k  <B>operating</B> systems  passwords  computer
1 Q0 3048 44 0.13327539 Lucene_47
performance evaluation of highly concurrent <B>computers</B> by deterministic simulation simulation concurrent <B>computers</B>  a technique is described for constructing a detailed deterministic simulation model of a <B>system</B>  in the model a control stream replaces the instruction and data streams of the real <B>system</B>  simulation of the <B>system</B> model yields the timing and resource usage statistics needed
1 Q0 2541 45 0.13324809 Lucene_47
an overview of the ispl computer <B>system</B> design this paper explores the advantages of the concurrent design of the language  <B>operating</B> <B>system</B>  and machine  via microcode  to create an interactive from one of these domains to another has had on the design of this <B>system</B>  <B>which</B> has not been scheduling algorithms  decision of <B>what</B> to do  without endangering the <B>system</B> integration  correctly
1 Q0 1572 46 0.13093181 Lucene_47
  the use of the simulation is demonstrated by a study of the <B>ibm</B> 360 67 <B>time</B>-<B>sharing</B> <B>system</B>  cacm julythe simulation of <B>time</B> <B>sharing</B> systems the development of new large scale <B>time</B>-<B>sharing</B> systems has a variety of <B>time</B>-<B>sharing</B> systems  it can also be used to assist in the design and development of new <B>time</B>-<B>sharing</B> algorithms or techniques  for the sake of efficiency and greater applicability
1 Q0 698 47 0.12827972 Lucene_47
data-dial  two-way communication with <B>computers</B> from ordinary dial telephones an <B>operating</B> <B>system</B> is described <B>which</B> allows users to call up a remotely located computer from ordinary dial telephones  no special hardware or connections are required at the users  telephones  input to the computer is through the telephone dial output from the computer is in spoken form  results of a test
1 Q0 2439 48 0.12666129 Lucene_47
multiple terminals under user program control in a <B>time</B>-<B>sharing</B> environment user-written programs on the dartmouth <B>time</B>-<B>sharing</B> <B>system</B> can communicate with many remote terminals simultaneously terminals  remote terminals  remote consoles  <B>time</B>-<B>sharing</B>  on-line interaction  on-line games 3.81 input and output instructions in any language available on the <B>system</B>  this paper describes how
1 Q0 1168 49 0.12311453 Lucene_47
across machine lines in cobol the production of a large  file-maintenance-and-retrieval program <B>system</B> written in cobol is described  the cobol language was used specifically to enable the <B>system</B> to operate on three <B>ibm</B> <B>computers</B>  cacm december  1965 fredericks  d  s  warburtin  c  r  ca651201 jb march 6  1978 4 26 pm 1168 5 1168 1168 5 1168 1168 5 1168
1 Q0 1680 50 0.11816514 Lucene_47
  programming  and information retrieval  it is written in fortran iv  g  for the <B>ibm</B> <B>system</B> 360  model 40  and the <B>ibm</B> 2250 display unit under <B>operating</B> <B>system</B> 360  adept is a cataloged program that controls the standard <B>operating</B> <B>system</B> by terminating and rescheduling itself automatically  relinquishing computer resources allocated to it  and surrendering control to the <B>operating</B> <B>system</B> to perform
1 Q0 2380 51 0.11555727 Lucene_47
 of goals <B>which</B> are important for any <B>time</B> <B>sharing</B> <B>system</B>  it describes how the tenex designtenex  a paged <B>time</B> <B>sharing</B> <B>system</B> for the pdp-10 tenex is a new <B>time</B> <B>sharing</B> <B>system</B> implemented  <B>time</B> <B>sharing</B> <B>system</B>  scheduling algorithm  process structure  pdp-10 2.44 4.32 4.39 4.42 ca720301  and clean flexible <B>system</B> structure  although the implementation described here required some compromise
1 Q0 1341 52 0.11426446 Lucene_47
 on the usefulness of future systems  particularly with regard to such trends as <B>time</B> <B>sharing</B>  parallel programming  and  eventually  systems <B>which</B> learn  in this essay some of these questions are posedlevels of computer systems in building current computer systems  we tend to break them down into  levels  of control  command and communication  in using the <B>system</B>  we break our problems down
1 Q0 1590 53 0.11370643 Lucene_47
 recognized correctly within 1 to 2 times real-<B>time</B> on the <B>ibm</B> 7090  cacm june 1967 reddy  d  r  ca670602 jbpitch period determination of speech sounds a computer procedure <B>which</B> determines pitch periods sampled by a microphone and an analog-to-digital converter attached to an interconnected <B>ibm</B> 7090-pdp-1 <B>system</B>  these utterances were recorded at the normal noise level of the computer room but were
1 Q0 2951 54 0.1132903 Lucene_47
 network systems studied in detail  to describe and predict the response <B>time</B> for network <B>time</B>-<B>sharing</B>  a  response <B>time</B> monitor  computer networks  <B>time</B>-<B>sharing</B> systems  comparative response <B>time</B>  arpadynamic response <B>time</B> prediction for computer networks if the ultimate aim of a computing network is resource <B>sharing</B>  then the human component as well as the technical component of networking must
1 Q0 1749 55 0.111616366 Lucene_47
  <B>operating</B> <B>system</B>  multiprogramming <B>system</B>  <B>system</B> hierarchy  <B>system</B> structure  real-<B>time</B> debugging  program verification  synchronizing primitives  cooperating sequential processes  <B>system</B> levels  inputthe structure of the  the -multiprogramming <B>system</B> a multiprogramming <B>system</B> is described in <B>which</B> are placed at various hierarchical levels  in each of <B>which</B> one or more independent abstractions have been
1 Q0 1747 56 0.111361265 Lucene_47
 criteria  computer systems  computer systems design  input equipment  input equipment design  <B>operating</B> systems  <B>operating</B> systems design  multiprogramming  multiprogrammed systems  multiprogrammed <B>system</B> <B>system</B> should adopt explicit criteria for accepting or rejecting proposed <B>system</B> features  three computer are explained  examples of applications of the criteria concern the reading of a <B>time</B>-of-day
1 Q0 1854 57 0.10992589 Lucene_47
 feature <B>which</B> is available in most modern <B>computers</B> is a potent source of programming pitfalls  it is intended to serve as a basis for the construction of <B>operating</B> systems  <B>which</B> are prime examples and test on the <B>ibm</B> <B>system</B> 360  two programs using these instructions  written in pl360  are presented of it  a programming scheme is presented <B>which</B> avoids the concept of the interrupt and permits
1 Q0 637 58 0.10988011 Lucene_47
 of a project completed in may  1961 in <B>which</B> the neliac <B>system</B> was used to generate a compiler for the <B>ibm</B> 1401  the 1401 compiler  <B>which</B> runs on the 7090 and produces 1401 programs  was described in the neliac language and generated with 7090 neliac <B>system</B>  the reduction in programming <B>time</B> generated using the original neliac <B>system</B> developed at the naval electronics laboratory  san diego
1 Q0 1877 59 0.109198995 Lucene_47
 successfully used in the the <B>system</B>  cacm july  1969 habermann  a  n  multiprogramming  <B>time</B>-<B>sharing</B>prevention of <B>system</B> deadlocks a well-known problem in the design of <B>operating</B> systems is the selection of a resource allocation policy that will prevent deadlock  deadlock is the situation in <B>which</B> in sufficient generality or they suggest policies <B>which</B> will on occasion refuse a request <B>which</B>
1 Q0 1685 60 0.10751866 Lucene_47
gan  a <B>system</B> for generating and analyzing activity networks gan  a <B>system</B> for generating activity networks  is designed to save <B>time</B> in the preparation of activity networks and to <B>deal</B> conveniently with network programs  a defining description of a programming language designed for generating activity network from a set of standard networks is presented  also  a general idea of a language
1 Q0 1462 61 0.10720947 Lucene_47
multilevel <B>operating</B> systems the basic software for all newer <B>computers</B> is built on the well-established need for standard <B>operating</B> systems  this implies that all applications-no matter how large  complex or <B>time</B> consuming-must operate under  or  more precisely  on top of  the standard <B>system</B>  large applications require supervisory monitors <B>which</B> handle problems similar to those of the <B>operating</B>
1 Q0 1647 62 0.10678954 Lucene_47
 <B>which</B> has been implemented within the <B>ibm</B> 7040 44 <B>operating</B> <B>system</B>  fortran iv was selected systems  in particular the <B>ibm</B> 7040 44 fortran iv <B>system</B>  the principal advantage of the watfor compiler the compiler resides core there is virtually no <B>system</B> overhead  and hence large batches of  student  during both the compilation and the execution phases of a program run  this feature makes the <B>system</B>
1 Q0 1892 63 0.105176955 Lucene_47
 of the results to <B>time</B>-shared <B>system</B> design and programming are discussed  and a calculation  1969 wallace  v  l  mason  d  l  page-on-demand  demand paging  <B>time</B>-<B>sharing</B> multiprogrammingdegree of multiprogramming in page-on-demand systems a simple stochastic model is described <B>which</B> in page-on-demand  multiprogrammed  <B>time</B>-shared computer systems  the model preserves  as a key
1 Q0 1440 64 0.10397227 Lucene_47
starting approximations for square root calculation on <B>ibm</B> <B>system</B> 360 several starting approximations for square root calculation by newton s method are presented in a form to facilitate their use in <B>ibm</B> <B>system</B> 360 square root routines  these approximations include several for the range  1 16  1   <B>which</B> is the interval of primary interest on <B>ibm</B> <B>system</B> 360  cacm april  1966 fike  c  t  ca660409
1 Q0 1750 65 0.102578424 Lucene_47
 6600  <B>operating</B> <B>system</B> with ecs 4.30 4.32 ca680506 jb february 23  1978 9 27 am 1750 5 1750 1750 5considerations in the design of a multiple computer <B>system</B> with extended core storage the use the multiprogramming performance of a multicomputer <B>system</B> is discussed  the general design of the hardware arrangement and the software components and functions of such a <B>system</B> are based on a planned
1 Q0 2317 66 0.10253433 Lucene_47
  in the <B>operating</B> <B>system</B> area all major computer manufacturers set out to produce very ambitious understanding of <B>operating</B> <B>system</B> principles  important trends include the increased interest for some programming <B>system</B> functions  cacm july  1972 rosen  s  languages  <B>operating</B> systems  programming remain the languages in <B>which</B> most of the world s production programs are written and will remain
1 Q0 2501 67 0.100856565 Lucene_47
 structure  a short description of the major features of orvyl  a general purpose <B>time</B>-<B>sharing</B> <B>system</B> <B>which</B> editing  <B>time</B>-<B>sharing</B>  on-line text editing  interactive text editing  terminal  remote terminal  terminal <B>system</B>  interactive terminal  remote job entry  remote job retrieval  program preparationwylbur  an interactive text editing and remote job entry <B>system</B> wylbur is a comprehensive <B>system</B>
1 Q0 2003 68 0.100499086 Lucene_47
an interactive software <B>system</B> for <B>computers</B>-aided design  an application to circuit project the characteristics of an interactive software <B>system</B>  intended to constitute an interface between language  <B>which</B> is designed to perform the overall and control functions of the software <B>system</B>  its to the description of the features of the two high level user oriented languages  <B>operating</B>
1 Q0 3023 69 0.100431345 Lucene_47
architecture of the <B>ibm</B> <B>system</B> 370 this paper discusses the design considerations for the architectural extensions that distinguish <B>system</B> 370 from <B>system</B> 360  it comments on some experiences with the original objectives for <B>system</B> 360 and on the efforts to achieve them  and it describes of the various <B>ibm</B> machines <B>which</B> implement the architecture  cacm january  1978 case  r  padges  a  computer
1 Q0 2036 70 0.09956914 Lucene_47
 to be executed in a noninteractive environment is proposed  a means by <B>which</B> programs can generate interactive <B>time</B>-<B>sharing</B> commands and receive the corresponding output response is presented  and necessary information pertinent to implementation of the facility on existing <B>time</B>-<B>sharing</B> systems is given  cacm july  1970 grant  c  a  <B>time</B>-<B>sharing</B>  command languages  pseudo-teletype
1 Q0 1753 71 0.098750934 Lucene_47
virtual memory  processes  and <B>sharing</B> in multics some basic concepts involved in the design of the multics <B>operating</B> <B>system</B> are introduced  multics concepts of processes  address space  and virtual memory are defined and the use of paging and segmentation is explained  the means by <B>which</B> users may share procedures and data is discussed and the mechanism by <B>which</B> symbolic references
1 Q0 1487 72 0.0985093 Lucene_47
eliza-a computer program for the study ofnatural language communication between man and machine eliza is a program <B>operating</B> within the mac <B>time</B>-<B>sharing</B> <B>system</B> at mit <B>which</B> makes certain kinds on the basis of decomposition rules <B>which</B> are triggered by key words appearing in the input text  responses technical problems with <B>which</B> eliza is concerned are   1 the identification of key words   2
1 Q0 1236 73 0.09818882 Lucene_47
the smart automatic document retrieval <B>system</B>-an illustration a fully automatic document retrieval <B>system</B> <B>operating</B> on the <B>ibm</B> 7094 is described  the <B>system</B> is characterized by the fact that several  and adapting the search strategy to the needs of individual users  the <B>system</B> is used not only to simulate an actual <B>operating</B> environment  but also to test the effectiveness of the various available
1 Q0 2542 74 0.09727159 Lucene_47
 <B>which</B> overcomes many of the difficulties is proposed  a <B>system</B> <B>which</B> integrates performance language <B>which</B> is used to describe the evolving <B>system</B> at all stages of its development  the source  <B>operating</B> <B>system</B> development  language processing software evaluation  compilers  <B>system</B> programminga software design and evaluation <B>system</B> a critical failure of current software <B>system</B> design
1 Q0 2092 75 0.09703899 Lucene_47
 of the protosynthex iii pro totype language processing <B>system</B> are described and exemplified in detail  the <B>system</B> is written in lisp 1.5 and operates on the q-32 <B>time</B>-<B>sharing</B> <B>system</B>  the <B>system</B> s data properties and complex-relation-forming operators  and the question-answering procedures <B>which</B> employ these features in their operation are all described and illustrated  examples of the <B>system</B> s performance
1 Q0 1264 76 0.09689572 Lucene_47
blnsys-a 1401 <B>operating</B> <B>system</B> with braille capabilities blnsys is an <B>operating</B> <B>system</B> designed for a 4k 1401 with common optional features and two attached tape drives  printed output of this <B>system</B> or of executing programs may be in either english or braille  even though this <B>system</B> was written and lost processing <B>time</B> is at a minimum  this <B>system</B> will perform any or all of the following users
1 Q0 1960 77 0.09593009 Lucene_47
process management and resource <B>sharing</B> in the multiaccess <B>system</B> esope the main design principles of the multiaccess <B>system</B> esope are described  emphasis is placed on basic ideas underlying the design rather than on implementation details  the main features of the <B>system</B> include the ability given  krakowiak  s  mossiere  j  <B>time</B>-<B>sharing</B>  multiprogramming  process scheduling  resource allocation
1 Q0 2946 78 0.095621444 Lucene_47
 of information streams <B>sharing</B> a finite buffer pool  cacm july  1977 kessels  j  l  w  monitor  <B>operating</B> <B>system</B>  mutual exclusion  synchronization  conditional critical region  structuring concept synchronizing primitive <B>which</B> is nearly as expressive as the conditional wait  but can be implemented more
1 Q0 2358 79 0.095062226 Lucene_47
  c  t  daley  r  c  <B>operating</B> <B>system</B>  multics  virtual memory  segmentation  information <B>sharing</B>the multics virtual memory  concepts and design as experience with use of on-line <B>operating</B> systems has grown  the need to share information among <B>system</B> users has become increasingly apparent  many contemporary systems permit some degree of <B>sharing</B>  usually  <B>sharing</B> is accomplished by allowing
1 Q0 3069 80 0.09220788 Lucene_47
 on recursive programs and to <B>deal</B> with the <B>sharing</B> of variables <B>which</B> arises through reference  not requiring a prepass to compute calling relationships or <B>sharing</B> patterns  the algorithm is asymptotically optimal in <B>time</B> complexity  it has been implemented and is practical even on programs <B>which</B> information about <B>which</B> variables may be modified  <B>which</B> may be used  and <B>which</B> are possibly preserved
1 Q0 1677 81 0.09185997 Lucene_47
storage organization in programming systems the <B>system</B> of program and data representation that has contain a program  a data vector  or codewords <B>which</B> in turn label blocks to form arrays  this storage of <B>system</B> composition during execution  means of linkage between programs and from programs to data  and basis for storage protection  the application of labeled blocks may be extended to areas of <B>time</B>
1 Q0 2681 82 0.089694135 Lucene_47
 the original performance of the <B>system</B> is degraded  alternative approaches to repacking are discussed  and the <B>operating</B> conditions that lead to improved <B>system</B> throughput through repacking are delineateddynamic memory repacking a probabilistic model of a multiprogramming <B>system</B> is exercised in order to determine the conditions under <B>which</B> the dynamic repacking of main memory is beneficial
1 Q0 1885 83 0.08878483 Lucene_47
a computer <B>system</B> for transformational grammar a comprehensive <B>system</B> for transformational grammar has been designed and implemented on the <B>ibm</B> 360 67 computer  the <B>system</B> deals  and a simple problem-oriented programming language in <B>which</B> the algorithm for application of transformations can be expressed  in this paper we present the <B>system</B> as a whole  first discussing
1 Q0 2764 84 0.08731615 Lucene_47
an intelligent analyzer and understander of english the paper describes a working analysis and generation program for natural language  <B>which</B> handles paragraph length input  its core is a <B>system</B> of preferential choice between deep semantic patterns  based on <B>what</B> we call  semantic density   the <B>system</B> is contrasted   1  with syntax oriented linguistic approaches  and  2  with theorem proving
1 Q0 3068 85 0.08703628 Lucene_47
 for <B>operating</B> systems  this model is suitable as a basis for verifying many of those properties of an <B>operating</B> <B>system</B> <B>which</B> are necessary to assure reliable enforcement of security  the application of this approach to the ucla secure <B>operating</B> <B>system</B> is also discussed  cacm september  1978 popek  g   farbera model for verification of data security in <B>operating</B> systems program verification applied
1 Q0 1544 86 0.086553544 Lucene_47
tele-cupl  a telephone <B>time</B> <B>sharing</B> <B>system</B> a general purpose  remote access  computing <B>system</B> to the telephone terminals  but the <B>system</B> will normally be used in conjunction with remotely located high speed printing devices  the <B>system</B> is a compatible extension of an existing batch processing <B>system</B>  a significant element of the <B>system</B> is a scheme for transmitting alphanumeric information
1 Q0 2740 87 0.08456506 Lucene_47
a large semaphore based <B>operating</B> <B>system</B> the paper describes the internal structure of a large <B>operating</B> <B>system</B> as a set of cooperating sequential processes  the processes synchronize by means  the <B>operating</B> <B>system</B> is the first large one using the rc 4000 multiprogramming <B>system</B>  cacm july  1975 lauesen  s  cooperating processes  <B>operating</B> <B>system</B>  semaphores  semaphore applications  queue semaphores
1 Q0 2390 88 0.084351525 Lucene_47
 subtree of theorems required to bring them from <B>what</B> they already know to the background knowledge <B>which</B> in a multiterminal computer <B>system</B>  users of the <B>system</B> can store in the computer an updated file  this paper describes how the <B>system</B> can be organized and the role required of readers  writers  and commentators  cacm february  1972 pager  d  interactive <B>system</B>  organization of scientific community
1 Q0 3112 89 0.08418766 Lucene_47
list processing in real <B>time</B> on a serial computer a real-<B>time</B> list processing <B>system</B> is one in <B>which</B> the <B>time</B> required by the elementary list operations  e g  cons  car  cdr  rplaca  replacd  eq  <B>which</B> process requires <B>time</B> proportional to the heap size to finish  a real-<B>time</B> list processing <B>system</B> is presented <B>which</B> continuously reclaims garbage  including directed cycles  while linearizing
1 Q0 2624 90 0.08332124 Lucene_47
  goldberg  r  p  <B>operating</B> <B>system</B>  third generation architecture  sensitive instruction  formal been implemented on a limited number of third generation computer systems  e g  cp-67 on the <B>ibm</B> 360  the dec pdp-10  cannot support a virtual machine <B>system</B>  in this paper  model of a third-generation-like computer <B>system</B> is developed  formal techniques are used to derive precise sufficient
1 Q0 3065 91 0.08284882 Lucene_47
  brother trees <B>which</B> have o  log n  performance  the importance of these results stems from the close relationship of right brother trees <B>which</B> have an insertion algorithm <B>operating</B> in o  log2 n   further  although both insertion and deletion can be carried out in o  log n  <B>time</B> for right brother trees-the reverse of <B>what</B> one usually obtains  cacm september  1978 ottmann  t  six  h  wood  d
1 Q0 2878 92 0.08203815 Lucene_47
joining policies in a multipriority multiclass batch computer <B>system</B> consider a multipriority batch computer <B>system</B> <B>which</B> users from several different classes may join  its toll  service  and waiting charges  such a <B>system</B> is formulated here as a semi-markov decision process  in <B>which</B> the aim process  price scheduling  <B>operating</B> <B>system</B> 4.39 8.3 ca760302 dmm january 9  1978 2 14 pm 2878 5
1 Q0 1523 93 0.0815139 Lucene_47
sharer  a <B>time</B> <B>sharing</B> <B>system</B> for the cdc 6600 a <B>time</B> <B>sharing</B> <B>system</B> embedded within the standard batch processing <B>system</B> for the cdc 6600 is described  the <B>system</B> is general purpose and file-based execution  it uses a simple scheme for <B>system</B> extension for a machine with only one relocation and memory  implementation <B>time</B> was approximately six man-years  with the majority of the code being written
1 Q0 1226 94 0.08141487 Lucene_47
 to the <B>system</B> s <B>operating</B> efficiency  this paper provides the systems designer with an information source <B>which</B> describes ten techniques that may be employed for organizing structured data with a reference <B>which</B> allows him to limit the number of file organizations he must consider for his <B>system</B>the organization of structured files a data file is an integral part of a data processing <B>system</B>
1 Q0 2372 95 0.08124005 Lucene_47
 <B>system</B> may be represented by a model matrix whose elements are decision rules and whose row and column this matrix at translation and execution <B>time</B>  distinguishing between data dependent and data independent decision rules enables one to perform much of the checking of security only once at translation <B>time</B> rather than repeatedly at execution <B>time</B>  the model is used to explain security features of several
1 Q0 2399 96 0.08103151 Lucene_47
a crt editing <B>system</B> a test-editing and manipulation program is described  the program operates from low-cost cathode-ray tube entry and display stations with keyboard and 13 function buttons  applications  potential economy of operation  and some aspects of implementation are discussed  cacm january  1972 irons  e  t  djorup  f  m  editing  text  cathode-ray tube entry display  <B>time</B>-<B>sharing</B> 3.7
1 Q0 2621 97 0.0808236 Lucene_47
a high security log-in procedure the protection of <B>time</B> <B>sharing</B> systems from unauthorized users is often achieved by the use of passwords  by using one-way ciphers to code the passwords  the risks to one-way ciphers derived from sannon codes  cacm august  1974 purdy  g  b  <B>operating</B> systems  <B>time</B> <B>sharing</B> systems  security  cryptography 4.35 ca740803 jb january 17  1978 10 10 am 2621 5 2621 2621
1 Q0 2321 98 0.080460146 Lucene_47
  several  standard  interfaces  by means of <B>which</B> <B>computers</B> and digital terminals connecton the interface between <B>computers</B> and data communications systems future systems that combine <B>computers</B>  digital terminals  and communications equipment present design optimization problems for a particular computer-communications <B>system</B> interface  cacm july  1972 fraser  a  g  communications
1 Q0 1163 99 0.07762848 Lucene_47
philco <B>ibm</B> translation at problem-oriented  symbolic and binary levels a translation <B>system</B> has been developed to eliminate most of the effort formerly required to reprogram philco 2000 series codes for <B>ibm</B> 7094 operation  experience with this <B>system</B> is limited but highly successful encouraging application of the techniques to other source and object languages  cacm december  1965 olsen  t  m
1 Q0 414 100 0.07762848 Lucene_47
<B>ibm</B> 1440 data processing <B>system</B> features five new units the <B>ibm</B> 1440 data processing <B>system</B>  announced recently by the international business machines corporation  not only features the 1311 disk storage drive with interchangeable disk packs but four other newly developed units  cacm december  1961 wheeling  r  ca621225 jb march 17,1978 4 30 pm 414 5 414 414 5 414 414 5 414
*************Query 2*************************

2 Q0 3078 1 0.15811758 Lucene_47
 analyzed here  cacm july  1978 chattergy  r  <B>pooch</B>  <B>u</B>  computer-aided algebra  symbol manipulation
2 Q0 2434 2 0.14406894 Lucene_47
 parameter  cacm october  1973 <B>prieve</B>  <B>b</B>  g  working set model  paging  program behavior program modeling 4.3 ca731006 jb january 20  1978 11 34 <B>am</B> 1892 4 2434 1901 4 2434 2085 4 2434 2095 4 2434 2218 4
2 Q0 2863 3 0.073141724 Lucene_47
 algorithms  cacm may  1976 <B>prieve</B>  <B>b</B>  g  fabry  r  s  demand paging  performance measurement  multilevel
2 Q0 497 4 0.064101696 Lucene_47
 of subdivision <B>u</B> <B>i</B>  could be reduced to a discrete search  in this paper  the computational procedure shown that an equation for <B>u</B> <B>i</B>  involving no minimization may be found  in addition  it is shown of a given interval  a <B>b</B>  and the corresponding line segments  that give the best least squares fit are added that the ends of the line segments must be on the curve  cacm august  1962 gluss  <B>b</B>  ca620831
2 Q0 2786 5 0.050052483 Lucene_47
  for example  the input sum from <B>i</B> o to infinity x sub <B>i</B> pi over 2 produces  formula   the syntax that translates this language into typesetting commands  output maybe produced on <B>either</B> was typeset by the authors using the system described cacm march  1975 kernighan  <B>b</B>  w  cherry  l  l ca750302 jb january 10  1978 8 56 <B>am</B> 2626 4 2786 2786 4 2786 2840 4 2786 2919 4 2786 3017 4 2786
2 Q0 3129 6 0.049574953 Lucene_47
 to the files <B>either</B> by jobs in batch processing mode  or by on-line transactions  each transaction  or job  yechiali  <B>u</B>  serial files  storage allocation  reorganization  partitioned dataset 3.5 3.7 4.33 4.6 ca790208 dh april 12  1979 10 34 <B>am</B> 2816 4 3129 3129 4 3129 3129 4 3129 2493 5 3129 2816 5 3129 3129
2 Q0 1264 7 0.045437694 Lucene_47
blnsys-a 1401 operating system with braille capabilities blnsys is an operating system designed for a 4k 1401 with common optional features and two attached tape drives  printed output of this system or of executing programs may be in <B>either</B> english or braille  even though this system was <B>written</B> landwehr  j  <B>b</B>  mclaughlin  c  mueller  h  lichstein  m  pollack  s  v  ca650507 jb march 7  1978 2
2 Q0 616 8 0.04088509 Lucene_47
  and all those <B>interested</B> in developing a theoretical approach to data processing   <B>b</B>  with interestan information algebra - phase <B>i</B> report-language structure group of the codasyl development committee this report represents the results of the first phase of the work of the language structure group univac division  roy goldfinger  chairman   ibm corporation  renee <B>b</B>  jasper  navy management office
2 Q0 2250 9 0.039596964 Lucene_47
computer methods for sampling from the exponential and normal distributions  corrigendum  cacm december  1972 ahrens  j  h  dieter  <B>u</B>  ca721205 jb january 27  1978 11 20 <B>am</B> 2250 5 2250 2250 5 2250 2250 5 2250
2 Q0 1977 10 0.038728997 Lucene_47
 are determined by linear programming so as to minimize the error in <B>either</B> the l1 or l-infinity norm  auxiliary  rosen  j  <B>b</B>  approximation  data fitting  functional approximation  linear programming  interactive graphical display  spline functions 5.13 5.41 ca701101 jb february 10  1978 9 06 <B>am</B> 1977 5 1977 1977 5
2 Q0 2039 11 0.03640972 Lucene_47
permanent function of a square matrix <B>i</B> and ii  algorithm 361  g6   cacm june  1970 shriver  <B>b</B>  eberlein  p  j  dixon  r  d  matrix  permanent  determinant 5.30 ca700616 jb february 13  1978 10 01 <B>am</B> 2039 5 2039 2039 5 2039 2039 5 2039
2 Q0 397 12 0.03426061 Lucene_47
 is sufficient to identify the material normally associated with reference files for books  <B>articles</B>  programming march 17  1978 1 08 <B>am</B> 929 5 397 397 5 397 397 5 397 397 5 397 397 6 397
2 Q0 1519 13 0.034208547 Lucene_47
george 3-a general purpose time sharing and operating system an operating system is described which will run on a wide variety of configurations of the <B>i</B>  1900  and can handle a large number is not oriented towards <B>either</B> mode and can be <B>either</B> a batch processing system  such as the atlas file store  cacm november  1967 oestreicher  m  d  bailey  m  j  strauss  j  <B>i</B>  ca671101 jb february
2 Q0 2572 14 0.0337999 Lucene_47
 that society is not yet in a position to justify <B>either</B> the construction of an information utility december  1974 press  l  <B>i</B>  community information utilities  social implications  public policy 2.1 2.3 ca741202 jb january 16  1978 10 02 <B>am</B> 2572 5 2572 2572 5 2572 2572 5 2572 3179 5 2572 2572 6 2572 2607
2 Q0 1931 15 0.03311522 Lucene_47
 papers  one by hansen and one by hansen and r  r  smith  have shown how interval arithmetic  <B>i</B> by hasen and r  r  smith is compared with straightforward use of <B>i</B>  in determinant evaluation  computational results show the accuracy and running times that can be expected when using <B>i</B>  for determinant evaluation  an application using <B>i</B>  determinants in a program to test a set of functions to see
2 Q0 1652 16 0.032274164 Lucene_47
 character codes  the number of usable characters within the basic set size may be expanded <B>either</B> on the basis of the requirements of local environments  cacm january  1967 morenoff  e  mclean  j  <B>b</B>  ca670103 jb march 1  1978 9 05 <B>am</B> 1652 5 1652 1652 5 1652 1652 5 1652
2 Q0 2177 17 0.030472638 Lucene_47
an algorithm for the blocks and cutnodes of a graph an efficient method is presented for finding blocks and cutnodes of an arbitrary undirected graph  the graph may be represented <B>either</B>  <B>i</B> essentially as 2 m n  in case  <B>i</B>   or  n 2  win case  ii   a spanning tree with labeled edges  1978 8 58 <B>am</B> 1961 4 2177 2177 4 2177 2763 4 2177 1847 5 2177 2177 5 2177 2177 5 2177 2177 5 2177 2490
2 Q0 282 18 0.029283429 Lucene_47
optimum tape-writing procedures consider a magnetic tape system with a read check after writing  where an error occurs in writing a record  a programmed error routine may <B>either</B> bypass some or all of the area on tape or try to rewrite the record on the same area  this paper evaluates these two the optimum procedure  the rule depends critically on the number of times the tape being <B>written</B>
2 Q0 3202 19 0.028842052 Lucene_47
 <B>written</B> in fortran iv for a cdc 3600 and are discussed in detail  cacm august  1966 bender  <B>b</B>  ca660816 es march 17  1982 10 10 <B>am</B> 1396 5 3202 3202 5 3202 3202 5 3202 3202 5 3202 964 6 3202 1028 6 3202manip  a computer system for algebra and analytic differentiation a mathematical expression to be operated upon is <B>written</B> in fortran-like notation and stored in the computer as a string of bcd
2 Q0 2714 20 0.028448008 Lucene_47
merging with parallel processors consider two linearly ordered sets a  <B>b</B>   a  m   <B>b</B>  n  m lt  n a and <B>b</B> with the p parallel processors  which requires at most 2 log2  2m 1    3m p     m p  log2  n m   steps  if n    2 <B>b</B> m  <B>b</B> an integer   the algorithm requires at most 2 log2  m 1      m p  2 <B>b</B>  steps  in the case where m and n are of the same order of magnitude  <B>i</B> e  n km with k being
2 Q0 3086 21 0.027974082 Lucene_47
on the complexity of computing the measure of <B>u</B> ai  bi  the decision tree complexity of computing the measure of the union of n  possibly overlapping  intervals is shown to be  n log n   even if comparisons between linear functions of the interval endpoints are allowed  the existence of an  n log n of the computational model on the ease of analysis and on the results produced  cacm july  1978 fredman  m  weide  <B>b</B>
2 Q0 2304 22 0.027717875 Lucene_47
a western view of computer history many <B>u</B>  histories of the digital computer field have tended to be impersonal  with heavy emphasis on eastern universities and commercial developments  this article records the events of the early years in a personal way  the people  organizations  technologies 10 40 <B>am</B> 2304 5 2304 2304 5 2304 2304 5 2304
2 Q0 847 23 0.027054116 Lucene_47
a penny-matching program the logic of a penny-matching program <B>written</B> for the csx-1 is described  cacm june  1963 wall  e  brown  r  m  ca630602 jb march 14  1978 10 27 <B>am</B> 847 5 847 847 5 847 847 5 847
2 Q0 1010 24 0.026796594 Lucene_47
 the ability to generate  correct and operate any procedure he wishes  <B>either</B> simple or complex  cacm september  1964 dennis  j  <B>b</B>  ca640901 jb march 9  1978 6 22 pm 1010 5 1010 1010 5 1010 1010
2 Q0 2534 25 0.026495425 Lucene_47
  compilers  debugging  pl <B>i</B>  programming languages 1.5 4.12 4.42 ca730305 jb january 24  1978 10 45 <B>am</B>design and implementation of a diagnostic compiler for pl <B>i</B> pl c is a compiler for a dialect for pl <B>i</B>  the design objective was to provide a maximum degree of diagnostic assistance in a batch-controlled facilities for program testing  to accommodate these extensions to pl <B>i</B> without abandoning
2 Q0 1012 26 0.025620883 Lucene_47
 language data processing and syntax-directed compilers  a formal parsing system g    v <B>u</B> t r  consists of two finite disjoint vocabularies  v and t  a many-many map  <B>u</B>  from v onto t  and a recursive analysis determines a formal parsing system  a directed production analyzer  <B>i</B> t x p  is a nondeterministic pushdown-store machine with internal vocabulary <B>i</B>  input vocabulary t  and all productions of p
2 Q0 335 27 0.025606178 Lucene_47
some numerical experiments using newton s method for nonlinear parabolic and ellipticboundary-value problems using a generalization of newton s method  a nonlinear parabolic equation of the form <B>u</B> t -<B>u</B> xx  g <B>u</B>  and a nonlinear elliptic equation <B>u</B> xx  <B>u</B> yy  exp <B>u</B>  are solved numerically comparison of these results with results obtained using the picard iteration procedure show that in many cases
2 Q0 1821 28 0.025590066 Lucene_47
permanent function of a square matrix <B>i</B> and ii  algorithm 361  g6   cacm november  1969 shriver  <B>b</B>  eberlein  p  j  dixon  r  d  matrix  permanent  determinant 5.30 ca691109 jb february 15  197812 18 pm 1821 5 1821 1821 5 1821 1821 5 1821
2 Q0 3171 29 0.025003478 Lucene_47
line numbers made cheap a technique is described for run-time line number administration to be used for implementations of high level languages  under suitable circumstances  this method requires absolutely no overhead  in <B>either</B> time or space  during execution of the program  cacm october  1979 ca791004 db january 17  1980 9 57 <B>am</B> 3171 5 3171 3171 5 3171 3171 5 3171
2 Q0 3199 30 0.024519783 Lucene_47
algem - an algebraic manipulator algem is a package of subprograms <B>written</B> in slip  fortran iv and map 7094 ii to manipulate algebraic expressions  algem s basic algebraic operations are additions of specified variables  solving a linear equation  basic <B>i</B> o routines plus other special purpose  novak  r  j  ca660813 es march 17  1982 10 10 <B>am</B> 1396 5 3199 3199 5 3199 3199 5 3199 3199 5 3199 964 6
2 Q0 1364 31 0.024391916 Lucene_47
mathematical experimentation in time-lag modulation equations of the form du dt   g <B>u</B> t  <B>u</B> h t    arise in a number of scientific contexts  the authors point out some interesting properties of the solution <B>u</B>  t    -<B>u</B> t-1-k sin wt   sin at   these properties were obtained by means of numerical solution  cacm october  1966 bellman  r  buell  j  kalaba  r  ca661003 jb march 2  1978 4 08 pm 1364 4
2 Q0 727 32 0.024391916 Lucene_47
on the approximate solution of delta <B>u</B>  f <B>u</B>  three-dimensional dirichlet problems for delta <B>u</B>  f <B>u</B>   fu  gt   0  are treated numerically by an exceptionally fast  exceptionally accurate numerical method  programming details  numerous examples and mathematical theory are suppliedxtension of the method in a natural way to n-dimensional problems is indicated by means of a 4-dimensional example  cacm
2 Q0 3180 33 0.02375818 Lucene_47
costs of the current <B>u</B>  payments system neither the banking industry nor public policy makers have good information on the comparative costs of alternative payment systems such as cash  checks  credit cards  and eft transactions  as a result  eft systems and services are likely to be implemented ca791203 db february 25  1980 11 09 <B>am</B> 3178 5 3180 3180 5 3180 3180 5 3180 3180 5 3180 3076 6 3180 3140 6
2 Q0 2342 34 0.023659931 Lucene_47
 of parallel processes is regarded as a machine which proceeds from one state s  <B>i</B> e  a collection is shown  which will <B>either</B> verify  prove the correctness of   or discredit  prove the incorrectness 6.20 ca720603 jb january 31  1978 8 44 <B>am</B> 1781 4 2342 1828 4 2342 1854 4 2342 1877 4 2342 1960 4 2342
2 Q0 2939 35 0.023299193 Lucene_47
 be <B>written</B> to use and implement abstractions  the clu library  which permits incremental program liskov  <B>b</B>  snyder  a  atkinson  r  schaffert  c  programming languages  data types  data jb december 28  1977 7 49 <B>am</B> 2319 4 2939 2480 4 2939 2594 4 2939 2709 4 2939 2868 4 2939 2939 4 2939
2 Q0 2439 36 0.021775328 Lucene_47
multiple terminals under user program control in a time-sharing environment user-<B>written</B> programs on the dartmouth time-sharing system can communicate with many remote terminals simultaneously and can control the interactions between these terminals  such programs can be <B>written</B> using standard 4.32 ca731001 jb january 23  1978 8 33 <B>am</B> 2439 5 2439 2439 5 2439 2439 5 2439
2 Q0 2968 37 0.021637578 Lucene_47
a comparison of tree-balancing algorithms several algorithms-height-balance  <B>i</B> e  avl and extensions   weight-balance  <B>i</B> e  bb and wb   and total restructuring-for building balanced binary search  j  l  schwab  <B>b</B>  binary search trees  avl trees  weight-balanced trees  path length  analysis of algorithms  information storage and retrieval 3.7 3.72 3.74 5.31 ca770504 jb december 29  1977 2 16 <B>am</B>
2 Q0 2971 38 0.021637578 Lucene_47
sp k  a system for teaching computer programming sp k is a compatible subset of the pl <B>i</B> language  <B>b</B>  barnard  d  t  cordy  j  r  programmer education  universities  community colleges  high schools  pl <B>i</B>  sp k  minicomputers  programming language design  teaching programming  in troductory computing 1.5 4.2 4.12 4.13 ca770501 jb december 29  1977 4 40 <B>am</B> 2708 4 2971 2820 4 2971 2971 4 2971
2 Q0 1588 39 0.02138182 Lucene_47
pl <B>i</B> list processing the concepts of list processing have been introduced into the pl <B>i</B> language  with these new facilities  it is possible to write pl <B>i</B> procedures that operate on simple and complex eliminated in the list-processing facilities of pl <B>i</B>  the basic concepts of list processing and the philosophy of the pl <B>i</B> language extensions are discussed  in addition  several detailed list-processing
2 Q0 1674 40 0.020157581 Lucene_47
one-line random number generators and their use in combinations some one-line random number generators  <B>i</B> e  generators requiring a single fortran instruction are discussed  and some short fortran programs which mix several such generators are described  the aim is to provide methods  anyone wishing to experiment with generators  <B>either</B> using congruential generators by themselves
2 Q0 1702 41 0.019835098 Lucene_47
commentary on mr  mooers  paper cacm august  1968 steel jr   t  <B>b</B>  ca680812 jb february 22  1978 9 42 <B>am</B> 1702 5 1702 1702 5 1702 1702 5 1702
2 Q0 372 42 0.019835098 Lucene_47
critical path scheduling  algorithm 40  cacm march  1961 leavenworth  <B>b</B>  ca610310 jb march 17  1978 12 36 <B>am</B> 372 5 372 372 5 372 372 5 372
2 Q0 391 43 0.019835098 Lucene_47
the bks system for the philco-2000 cacm february  1961 smith  r  <B>b</B>  ca610207 jb march 17  1978 12 57 <B>am</B> 391 5 391 391 5 391 391 5 391
2 Q0 394 44 0.019835098 Lucene_47
multiple programming data processing cacm february  1961 ryle  <B>b</B>  l  ca610204 jb march 17  1978 1 00 <B>am</B> 394 5 394 394 5 394 394 5 394
2 Q0 3117 45 0.019798482 Lucene_47
the impact and use of computer technology by the police over the past decade there has been a significant growth in the use of computer technology by <B>u</B>  police departments  this growth  however  has been at a slower rate than predicted in the early 1970 s  further  when computer applications extend dh april 10  1979 11 32 <B>am</B> 3117 4 3117 3090 5 3117 3117 5 3117 3117 5 3117 3117 5 3117
2 Q0 1861 46 0.019479588 Lucene_47
 definitions  as well as on much of the motivation behind the form in which definitions are <B>written</B>  some conclusions are drawn about future definitional facilities  cacm august  1969 arden  <B>b</B>  w  galler  <B>b</B>
2 Q0 1569 47 0.019427804 Lucene_47
implementing phrase-structure productions in pl <B>i</B> a method is described for implementing the productions of a context-free phrase structure grammar in a pl <B>i</B> procedure whose structure and statements parallel the structure and notation of the grammar  cacm july  1967 irwin  l  ca670704 jb february 28  1978 9 01 <B>am</B> 1569 5 1569 1569 5 1569 1569 5 1569
2 Q0 1974 48 0.019292094 Lucene_47
neater2  a pl <B>i</B> source statement reformatter neater2 accepts a pl <B>i</B> source program and operates format and to maximize the utility of neater2 as an aid during the early stages of development of a pl <B>i</B>  this feature is expected to provide a major aid in optimization of pl <B>i</B> programs  cacm november  1970 conrow  k  smith  r  g  logical analysis of pl <B>i</B> source  reformatting of pl <B>i</B> source  documentation aid
2 Q0 1272 49 0.019140426 Lucene_47
 summary reports not possible for <B>either</B> humans or computers to produce alone  cacm april  1965 doule  l  <B>b</B>
2 Q0 1424 50 0.01893788 Lucene_47
automatic analysis of electronic digital circuits using list processing a mapping from black diagrams of digital circuits to list structures is described  together with a list processing program <B>written</B> for the control data 3600 which uses this mapping to automatically carry out circuit analysis  cacm may  1966 shalla  l  ca660513 jb march 3  1978 9 24 <B>am</B> 1424 5 1424 1424 5 1424 1424 5 1424 1846
2 Q0 1439 51 0.01893788 Lucene_47
mechanization of the curve fitting process  datan a process for fitting a curve to approximate data and the problem it creates for the engineer-programmer is defined  an approach has also been defined and a system has been <B>written</B> for the sru 1107 to mechanize a major portion of this process  ca660410 jb march 3  1978 10 26 <B>am</B> 1439 5 1439 1439 5 1439 1439 5 1439
2 Q0 3189 52 0.01893788 Lucene_47
an algebraic compiler for the fortran assembly program an algebraic compiler has been <B>written</B> which may be added to the fortran assembly program  this compiler will expand all algebraic statements with the following operations  addition  subtraction  multiplication and division  it will compile november  1962 stiegler  a  d  ca621124 es march 17  1982 10 10 <B>am</B> 1788 5 3189 3189 5 3189 3189 5
2 Q0 1593 53 0.018752608 Lucene_47
a simple technique for digital division a simple and economical method for digital division is described  the method is suitable for divisors whose leading character is <B>either</B> radix less one or is unity with the next character equal to zero  also the method is direct and needs only half the number february 28  1978 10 30 <B>am</B> 214 4 1593 1497 4 1593 1593 4 1593 1593 4 1593 1975 4 1593 1292 5 1593
2 Q0 2047 54 0.018752608 Lucene_47
incorporating origin shifts into the qr algorithm for symmetric tridiagonal matrices the qr iteration for the eigenvalues of a symmetric tridiagonal matrix can be accelerated by incorporating a sequence of origin shifts  the origin shift may be <B>either</B> subtracted directly from the diagonal elements  symmetric tridiagonal matrix 5.14 ca700608 jb february 13  1978 11 02 <B>am</B> 2047 5 2047 2047 5 2047 2047 5
2 Q0 2980 55 0.018752608 Lucene_47
the editing of picture segmentations using local analysis of graphs a major problem in picture processing is the elimination of the large number of spurious regions that result from an initial segmentation by region growing techniques  such regions have been eliminated <B>either</B> on the basis december 29  1977 6 22 <B>am</B> 2980 4 2980 2523 5 2980 2980 5 2980 2980 5 2980 2980 5 2980
2 Q0 1881 56 0.018563563 Lucene_47
transpose vector stored array  algorithm 302  k2   cacm june  1969 macleod  <B>i</B>  d  g  matrix transposition  array transposition  vector stored array 5.39 ca690612 jb february 17  1978 9 51 <B>am</B> 1881 5 1881 1881 5 1881 1881 5 1881
2 Q0 2100 57 0.018563563 Lucene_47
ortho  algorithm 127  f5   cacm february  1970 barrodale  <B>i</B>  orthogonalization  approximation 5.13 5.17 5.5 ca700215 jb february 14  1978 9 45 <B>am</B> 2100 5 2100 2100 5 2100 2100 5 2100
2 Q0 2448 58 0.018563563 Lucene_47
reversible execution cacm september  1973 zelkowitz  m  v  debugging  pl <B>i</B>  reversible execution  backtracking 4.22 4.42 ca730907 jb january 23  1978 8 54 <B>am</B> 2448 5 2448 2448 5 2448 2448 5 2448
2 Q0 2473 59 0.018563563 Lucene_47
hidden-line plotting program  algorithm r420  cacm july  1973 macleod  <B>i</B>  d  g  collins  a  m  hidden-line plot  surface plot 4.9 ca730713 jb january 23  1978 11 14 <B>am</B> 2473 5 2473 2473 5 2473 2473 5 2473
2 Q0 2713 60 0.018563563 Lucene_47
remark on stably updating mean and standard deviation of data  corrigendum  cacm october  1975 cotton  <B>i</B>  ca751006 jb january 6  1978 10 38 <B>am</B> 2713 5 2713 2713 5 2713 2713 5 2713
2 Q0 3136 61 0.0181063 Lucene_47
price performance patterns of <B>u</B>  computer systems econometric models of the <B>u</B>  computer market have been developed to study the relationships between system price and hardware performance  single measures of price performance such as  grosch s law  are shown to be so over simplified  cacm april  1979 cale  e  gremillion  l  mckenney  j  price performance  grosch s law  <B>u</B>  computer
2 Q0 2850 62 0.018057466 Lucene_47
 programs <B>written</B> in a simple pl <B>i</B> style programming language  it includes many standard debugging features
2 Q0 47 63 0.017422795 Lucene_47
russian visit to <B>u</B>  computers cacm november  1959 zaitzeff  e  m  astrahan  m  m  ca591101 jb march 22  1978 3 59 pm 47 5 47 47 5 47 47 5 47
2 Q0 1671 64 0.017040309 Lucene_47
 capabilities for the linguist  the system is <B>written</B> in bbn lisp on the scientific data system 940 to the user after each command is executed  cacm november  1968 borrow  d  g  fraser  j  <B>b</B>  phonology  rule
2 Q0 2812 65 0.017040309 Lucene_47
  the statement of requirements was <B>written</B> in ads  accurately defined systems  and analyzed december  1976 nunamaker  j  f  jr  konsynski  <B>b</B>  r  jr  ho  t  singer  c  computer-aided analysis
2 Q0 942 66 0.017040309 Lucene_47
 operations  and a set of fortran subroutines has been <B>written</B> to perform these  the main purpose is topical  1   we include some general remarks  cacm january  1963 healy  m  j  r  bogert  <B>b</B>  p
2 Q0 2449 67 0.01699933 Lucene_47
 a deterministic solution to a problem which is currently handled in a nondeterministic manner in pl <B>i</B> and cobol compilers  cacm september  1973 gates  g  w  poplawski  d  a  symbol table organization  pl <B>i</B> and cobol structured variables 4.12 ca730906 jb january 23  1978 9 17 <B>am</B> 2449 5 2449 2449 5 2449 2449 5
2 Q0 2215 68 0.016892895 Lucene_47
  it selects a feature to be tested  after receiving the result of that test  the procedure <B>either</B> classifies competitive game trees can easily be incorporated <B>either</B> directly or by analogy into spr procedures february 8  1978 8 56 <B>am</B> 2215 4 2215 2096 5 2215 2215 5 2215 2215 5 2215 2215 5 2215 3132 5 2215
2 Q0 1676 69 0.016734451 Lucene_47
 be developed  <B>written</B> in a high level language  which minimizes machine dependencies and isolates of a postfix polish notation  pass <B>i</B> to pass ii  and a tree representation referred to as a  composite blocking table   pass <B>i</B> to pass iii   machine-independent optimization occurs in pass ii and do-loop
2 Q0 1014 70 0.01659271 Lucene_47
machine controls for analysis of variance a major problem in using the analysis of variance  as the number of factors increases  is the exponential rise in the number of interactions  even though the experimenter may not be <B>interested</B> in these interactions it is impossible to ignore them in most experimental designs because of the problem of getting error terms  it is natural therefore to look
2 Q0 1096 71 0.016529249 Lucene_47
on avoiding matrix reversals between 7090 fortran ii and 7090 fortran iv cacm april  1964 stevens  d  benson  <B>b</B>  ca640412 jb march 10  1978 1 28 <B>am</B> 1096 5 1096 1096 5 1096 1096 5 1096
2 Q0 1941 72 0.016529249 Lucene_47
f-distribution  algorithm 322  s14   cacm january  1969 field  j  <B>b</B>  f  fisher s f-distribution  students s t-distribution 5.5 ca690108 jb february 20  1978 11 48 <B>am</B> 1941 5 1941 1941 5 1941 1941 5 1941
2 Q0 1981 73 0.016529249 Lucene_47
normal curve integral  algorithm 304  s15   cacm october  1970 holmgren  <B>b</B>  normal curve integral  probability  special functions 5.12 5.5 ca701009 jb february 10  1978 9 20 <B>am</B> 1981 5 1981 1981 5 1981 1981 5 1981
2 Q0 1990 74 0.016529249 Lucene_47
numerical constants  algorithm  cacm september  1970 dunham  c  <B>b</B>  numerical algorithm  numerical constants 5.10 ca700915 jb february 10  1978 9 48 <B>am</B> 1990 5 1990 1990 5 1990 1990 5 1990
2 Q0 2422 75 0.016529249 Lucene_47
adaptive correction of program statements  corrigendum  cacm november  1973 james  e  <B>b</B>  partridge  d  p  ca731104 jb january 20  1978 10 29 <B>am</B> 2422 5 2422 2422 5 2422 2422 5 2422
2 Q0 2440 76 0.016529249 Lucene_47
localization of the roots of a polynomial  algorithm r429  cacm september  1973 driessen  h  <B>b</B>  hunt  e  w  lem  ca730915 jb january 23  1978 8 34 <B>am</B> 2440 5 2440 2440 5 2440 2440 5 2440
2 Q0 2472 77 0.016529249 Lucene_47
minimal spanning tree  algorithm r422  cacm july 1973 kernighan  <B>b</B>  w  spanning tree  minimal spanning tree  prim algorithm 5.32 ca730714 jb january 23  1978 11 12 <B>am</B> 2472 5 2472 2472 5 2472 2472 5 2472
2 Q0 2917 78 0.016529249 Lucene_47
sitar  an interactive text processing system for small computers  corrigendum  cacm october  1977 schneider  <B>b</B>  r  jr  watts  r  m  ca771009 jb december 28  1977 5 58 <B>am</B> 2917 5 2917 2917 5 2917 2917 5 2917
2 Q0 1117 79 0.016232468 Lucene_47
 should be considered whenever a sort is <B>written</B> to operate on five or more tapes that cannot be read is increased  cacm march  1964 mcalester  r  l  ca640315 jb march 10  1978 2 38 <B>am</B> 1117 4 1117 1117 4 1117
2 Q0 1427 80 0.016232468 Lucene_47
 scans has been <B>written</B> for a pdp-1 computer with auxiliary disk storage and cathode ray tube display quantum-limited system  cacm may  1966 pizer  s  m  ca660510 jb march 3  1978 9 47 <B>am</B> 1427 5 1427 1427
2 Q0 1926 81 0.016232468 Lucene_47
 construction  and a minimum of nontext items  it is <B>written</B> entirely in fortran iv  cacm march  1969 berns  g dictionary  right justification  vocabulary 3.74 3.75 3.9 ca690301 jb february 20  1978 9 45 <B>am</B> 1926 5 1926
2 Q0 2519 82 0.016232468 Lucene_47
 <B>written</B> natural language by various notational and linguistic devices  the exhibition ca730501 jb january 24  1978 9 25 <B>am</B> 2519 4 2519 2390 5 2519 2519 5 2519 2519 5 2519 2519 5 2519
2 Q0 3144 83 0.016126065 Lucene_47
a model for and discussion of multi-interpreter systems a multi-interpreter system is a system in which programs execute by virtue of being interpreted by other programs  which themselves may <B>either</B> be interpreted  <B>i</B> e  nested interpreters  or run directly on the host machine  the model reveals the anatomy of interpreters and how these differ from procedures  and exhibits links to protection
2 Q0 854 84 0.015838787 Lucene_47
  g  <B>u</B>  ca630513 jb march 14  1978 11 05 <B>am</B> 1956 5 854 2017 5 854 854 5 854 854 5 854 854 5 854 849 6
2 Q0 1638 85 0.015655631 Lucene_47
sorting by replacement selecting in sorting by replacement selecting  the expected length of a sequence beginning with the <B>i</B>-th element  <B>i</B> gt 1  is proved to be 2f  in accordance with a conjecture of e  h  friend  where f is the number of memory cells used  the expected length of the j-th sequence  <B>b</B>  j  ca670204 jb february 28  1978 3 56 pm 1638 4 1638 2176 4 1638 2272 4 1638 1638 5 1638 1638 5
2 Q0 1651 86 0.015627174 Lucene_47
an interpretive input routine for linear programming in this descriptive article an input code is presented which greatly simplifies data input to any linear programming solution routine  for subsequent use <B>either</B> as a pedagogical device or for solving rather small lp problems  this latter  limited interpreter  cacm january  1967 aigner  d  j  ca670104 jb march 1  1978 8 58 <B>am</B> 1651 5 1651 1651 5 1651
2 Q0 1975 87 0.015627174 Lucene_47
 cipher in the quotient to be <B>either</B> equal to or one greater than its final replacement  cacm november february 10  1978 8 45 <B>am</B> 1258 4 1975 1292 4 1975 1497 4 1975 1497 4 1975 1593 4 1975 1975 4 1975 1975
2 Q0 2845 88 0.015433676 Lucene_47
a buddy system variation for disk storage allocation a generalization of the buddy system for storage allocation is described  the set of permitted block sizes  size <B>i</B>    <B>i</B> 0 n  must satisfy the condition size <B>i</B>  size <B>i</B>-1  size <B>i</B>-k <B>i</B>   where k may be any meaningful integral-valued function 4.39 ca760708 jb january 4  1978 11 24 <B>am</B> 1389 4 2845 1552 4 2845 2162 4 2845 2435 4 2845 2596 4 2845
2 Q0 2916 89 0.015433676 Lucene_47
a fast string searching algorithm an algorithm is presented that searches for the location   <B>i</B> cases  not all of the first <B>i</B> characters of string are inspected  the number of characters actually pattern of length 5  the algorithm will typically inspect <B>i</B> 4 characters of string before finding a match at <B>i</B>  furthermore  the algorithm has been implemented so that  on the average  fewer than <B>i</B> patlen
2 Q0 1258 90 0.015354038 Lucene_47
 to this program  cacm may  1965 blum  <B>b</B>  <B>i</B>  ca650513 jb march 7  1978 1 01 pm 1026 4 1258 1258 4 1258 1258 4
2 Q0 408 91 0.014985464 Lucene_47
the internal organization of the mad translator cacm january  1961 arden  <B>b</B>  w  galler  <B>b</B>  a  graham  r  m  ca610106 jb march 17  1978 1 22 <B>am</B> 1134 5 408 1179 5 408 1861 5 408 408 5 408 408 5 408 408 5 408 830 6 408 1614 6 408 1781 6 408 17 6 408 77 6 408 408 6 408 408 6 408 408 6 408
2 Q0 1563 92 0.014850848 Lucene_47
a method for finding hamilton paths and knight s tours the use of warnsdorff s rule for finding a knight s tour is generalized and applied to the problem of finding a hamilton path in a graph  a graph-theoretic justification for the method is given  cacm july  1967 pohl  <B>i</B>  ca670710 jb february 28  1978 8 28 <B>am</B> 1563 5 1563 1563 5 1563 1563 5 1563
2 Q0 1606 93 0.014850848 Lucene_47
chi-squared integral  algorithm 299  s15   cacm april  1967 hill  <B>i</B>  d  pike  m  c  ca670408a jb february 28  1978 11 10 <B>am</B> 1606 5 1606 1606 5 1606 1606 5 1606 2467 5 1606 2793 5 1606 1606 6 1606 1606 6 1606
2 Q0 1943 94 0.014850848 Lucene_47
complete elliptic integrals  algorithm 165  s21   cacm january 1969 farkas  <B>i</B>  special functions  complete elliptic integral of the first kind  complete elliptic integral of the second kind 5.12 ca690106 jb february 20  1978 11 54 <B>am</B> 1943 5 1943 1943 5 1943 1943 5 1943
2 Q0 2392 95 0.014850848 Lucene_47
in-situ transposition of a rectangular matrix  f1   algorithm c380  cacm january  1972 macleod  <B>i</B>  d  g  rectangular matrix  transpose 5.14 ca720111 jb february 1  1978 8 57 <B>am</B> 2057 4 2392 2057 4 2392 2058 4 2392 2392 4 2392 2392 4 2392 2416 4 2392 1600 5 2392 2055 5 2392 2392 5 2392 2392 5 2392 2392 5 2392
2 Q0 2395 96 0.014850848 Lucene_47
quadratic programming for nonlinear regression a quadratic programming algorithm is described for use with the magnified diagonal method of nonlinear regression with linear constraints  the regression method is published in jacm  july 1970  cacm january  1972 shrager  r  <B>i</B>  nonlinear equations  constraints  iteration 5.15 5.41 ca720108 jb february 1  1978 9 09 <B>am</B> 2395 5 2395 2395 5 2395 2395 5 2395
2 Q0 2520 97 0.014850848 Lucene_47
greatest common divisor of n integers and multipliers  algorithm c386  cacm april  1973 ragland  l  c  good  d  <B>i</B>  proof of algorithms  greatest common divisor  euclidean algorithm  inductive assertion method 3.15 4.42 5.10 5.24 ca730408 jb january 24  1978 9 27 <B>am</B> 2520 5 2520 2520 5 2520 2520 5 2520
2 Q0 1591 98 0.014516884 Lucene_47
 teaching  the teaching system  abac-ii  was <B>written</B> to run under the operating system  ibsys  for the ibm  write  assemble  debug  and execute at the terminal a program <B>written</B> in any language processed  1967 engvold  k  j  hughes  j  l  ca670601 jb february 28  1978 10 24 <B>am</B> 1591 5 1591 1591 5 1591
2 Q0 1705 99 0.014516884 Lucene_47
  for instance  is <B>written</B> as a derived procedure  it outputs using the fixed point or the floating point representation  and rounds properly  variants can easily be <B>written</B> because of the explicit call jb february 22  1978 10 32 <B>am</B> 1705 4 1705 1705 4 1705 1705 4 1705 1705 4 1705 1945 4 1705 2034 4
2 Q0 1334 100 0.014445973 Lucene_47
mechanization of tedious algebra  the newcomb operators of planetary theory a computer program has been <B>written</B> to generate tables of formulas for the newcomb operators of planetary theory  the newcomb operators are expressed as polynomials in two variables  one of which stands for a simple and typeset photographically on an s-560 photon system  cacm january  1965 gerard  j  m  izsak  <B>i</B>  g
*************Query 3*************************

3 Q0 1988 1 0.12636885 Lucene_47
a formalism for translator interactions a formalism is presented for describing the actions of processors for programming <B>languages</B>-<B>compilers</B>  interpreters  assemblers-and their interactions in complex systems such as compiler-<B>compilers</B> or extendible <B>languages</B>  the formalism here might be <B>used</B> to define and answer such a question as  can one do bootstrapping using a meta-compiler whose metaphase
3 Q0 2112 2 0.12636885 Lucene_47
translation equations input limited transduction expressions  or translation equations  are <B>used</B> to describe the syntax and left-context sensitive semantics for context-free <B>languages</B>  a formal expression  transduction expression  context-free <B>languages</B>  translation  recognizers  parsing  meta-<B>compilers</B>  pushdown transducer  syntax directed <B>compilers</B>  finite state automata 4.10 4.12 4.20 5.22
3 Q0 2061 3 0.108802736 Lucene_47
 analysis  parser <B>construction</B>  syntactical analyzer <B>construction</B>  generators  compiler <B>compilers</B>an algorithm for the <B>construction</B> of bounded-context parsers an algorithm is described which accepts an arbitrary context-free grammar and constructs a bounded-context parser for it whenever <B>languages</B>  pushdown automata 4.12 5.22 5.23 ca700505 jb february 13  1978 1 58 pm 1379 4 2061 1491 4
3 Q0 2921 4 0.106694825 Lucene_47
  syntax diagrams lr k  grammars  parser <B>construction</B>  parsing  programming <B>languages</B>  language generation  formal definition  <B>compilers</B>  translators  scanners 4.2 5.21 5.23 ca771005 jb december 27  1977 11 describe the syntax of programming <B>languages</B> more concisely and more understandably than is possible
3 Q0 2579 5 0.095264375 Lucene_47
  register allocation  <B>compilers</B>  programming <B>languages</B>  virtual memory  demand paging 4.12 4.2 4.39 based on usage counts to other commonly <B>used</B> register allocation techniques  and presents evidence
3 Q0 252 6 0.087738186 Lucene_47
programming a duplex computer system this paper describes a method of duplex-computer programming that has been <B>used</B> with two computers in a military defense system  the method combines special programs with a basic data processing program package  the duplex operation gives the system greater on the same inputs and continually cross-check the <B>intermediate</B> and final results  cacm november  1961
3 Q0 1154 7 0.08438296 Lucene_47
<B>multi</B>-tape and infinite-state automata -- a survey a survey of machines which are more powerful than finite automata and less powerful than general turing machines is presented  it is felt that the machines in this category are as closely related to digital computers as either the finite automata or the unrestricted turing machines  <B>intermediate</B> machines can be created by adjoining on infinite
3 Q0 2886 8 0.07079825 Lucene_47
semantic evaluation from left to right this paper describes attribute grammars and their use for the definition of programming <B>languages</B> and <B>compilers</B>  a formal definition of attribute grammars are discussed  cacm february  1976 bochmann  g  v  attribute grammars  semantics of programming <B>languages</B>  semantic attributes  left-to-right parsing  multipass <B>compilers</B>  semantic evaluation  semantic
3 Q0 3102 9 0.07008669 Lucene_47
incorporation of units into programming <B>languages</B> the issues of how a programming language might aid in keeping track of physical units  feet  sec  etc   are discussed  a method is given for the introduction of relationships among units  a watt is volts amps  a yard is three feet  and subsequent may  1978 karr  m  loveman iii  d  units  language design  compiler <B>construction</B>  language syntax
3 Q0 1723 10 0.0686148 Lucene_47
computer <B>construction</B> of project networks project networks are <B>used</B> in pert and cpm  an algorithm is given for constructing project networks directly from the project precedence relations  the algorithm creates  dummy  activities and topologically orders the arcs and nodes  the number of nodes  pert  cpm  topological ordering  network <B>construction</B> by computer 5.32 ca680706 jb february 22
3 Q0 3115 11 0.06644699 Lucene_47
 numbers are placed in one-to-one correspondence  each natural number corresponds to two <B>intermediate</B> of all 2 x 2 and 3 x 3 nonsingular binary matrices were produced by mapping the <B>intermediate</B> vectors number sequences  a bit string formed form bytes of text of a data encryption key can be <B>used</B>
3 Q0 637 12 0.06274921 Lucene_47
  in 1958  a basic  bootstrap  process was <B>used</B> to generate all but the first  i e  the systems were there is no inherent difficulty in  building <B>compilers</B> with <B>compilers</B>   indeed  it pointed out many of a project completed in may  1961 in which the neliac system was <B>used</B> to generate a compiler
3 Q0 3130 13 0.06267013 Lucene_47
 of elementary level topics and courses  and <B>intermediate</B> level courses  elective courses  <B>used</B> to round out
3 Q0 2666 14 0.062423266 Lucene_47
on lions  counter example for gotlieb s method for the <B>construction</B> of school timetables the timetable problem is an essentially discrete problem  although the discrete problem may have no feasible solution  there may exist a solution to the equivalent continuous problem  an example is given  g  sefton  i  m  combinatorial  <B>multi</B>-index problem  necessary conditions  schedule  school
3 Q0 2411 15 0.060074307 Lucene_47
tree-structured programs cacm november  1973 wegner  e  control structures  flowcharts  goto statements  inductive assertion  least fix points  optimization in <B>compilers</B>  program documentation  program flow graphs  programming language design  proof of programs  semantics of programming <B>languages</B>  structured programming  4.12 4.22 5.24 ca731115 jb january 19  1978 4 19 pm 2411 4 2411 2411 4 2411
3 Q0 1350 16 0.05766077 Lucene_47
the augmented predictive analyzer for context-free <B>languages</B>-its relative efficiency it has been be constructed  which generates the same <B>languages</B> as is generated by g and whose rules are all of the form z -- gt  cy 1      y m    m  gt   o  where z and y i  are <B>intermediate</B> symbols and c a terminal symbol predictive analyzer as a parsing algorithm for arbitrary context-free <B>languages</B> is compared with two
3 Q0 3099 17 0.057179004 Lucene_47
  these sufficient conditions are particularly useful for the <B>construction</B> of difficult integer programming problems with known optimal solutions  these problems may then be <B>used</B> to test and or  benchmark conditions  test problem <B>construction</B>  kuhn-tucker conditions  greatest common divisor 3.15 5.39 5.49
3 Q0 2939 18 0.056638602 Lucene_47
 of abstractions in program <B>construction</B>  work in programming methodology has led to the realization <B>languages</B>  through the procedure or subroutine  clu provides  in addition to procedures  novel linguistic kinds of abstractions in program <B>construction</B> is illustrated  and it is shown how clu programs may liskov  b  snyder  a  atkinson  r  schaffert  c  programming <B>languages</B>  data types  data
3 Q0 265 19 0.056330197 Lucene_47
low level language subroutines for use within fortran this paper describes some subroutines  coded in symbolic <B>languages</B> and for use within fortran coded programs  to deal with  special arithmetic   e g  <B>multi</B>-precision arithmetic   symbol manipulation  bit manipulation and expanded character set input-output  and visual display  cacm november  1961 barnett  m  p  ca611103 jb march 15  1978 10 59
3 Q0 1533 20 0.053244468 Lucene_47
 agree reasonable well with actual results  the model is <B>used</B> to study the effects of changes in the executive system and in one of its <B>compilers</B>  further applications of the model are discussed  cacm
3 Q0 3171 21 0.052138977 Lucene_47
line numbers made cheap a technique is described for run-time line number administration to be <B>used</B> for implementations of high level <B>languages</B>  under suitable circumstances  this method requires absolutely no overhead  in either time or space  during execution of the program  cacm october  1979 klint  p  line number administration  diagnostic messages  abstract machine code 4.12 4.13 4.20 4.42
3 Q0 1135 22 0.051258225 Lucene_47
 preparation of loading-speed <B>compilers</B> which translate the source programs into efficient machine codes  it stresses the structural analysis of the class of processes to be represented in the <B>languages</B>  as opposed to overcome well-known deficiencies of other business-oriented <B>languages</B> and fully meets the requirements set by codasyl for such <B>languages</B>  including machine-independence  cacm february  1964 lombardi  l
3 Q0 1029 23 0.050136104 Lucene_47
  the key to the method is the decomposition of the given function  by introduction of <B>intermediate</B> simplicity  it can be <B>used</B> as a quick-reaction tool where the derivation of analytical derivatives
3 Q0 1387 24 0.050136104 Lucene_47
solution of systems of polynomial equations by elimination the elimination procedure as described by williams has been coded in lisp and formac and <B>used</B> in solving systems of polynomial equations  it is found that the method is very effective in the case of small systems  where it yields all  in the solution of large systems of equation due to the explosive growth in the <B>intermediate</B>
3 Q0 2542 25 0.049940594 Lucene_47
 language which is <B>used</B> to describe the evolving system at all stages of its development  the source language description is <B>used</B> as direct input to performance analysis and simulation routines  using  operating system development  language processing software evaluation  <B>compilers</B>  system programming
3 Q0 1457 26 0.04861749 Lucene_47
 which have been <B>used</B> to describe structured information are then examined  and the characteristics of various processing <B>languages</B> are outlined in the light of the procedures requiring implementation  advantages of these programming <B>languages</B> for the retrieval application are examined  and suggestions
3 Q0 1835 27 0.04861749 Lucene_47
the iitran programming language the iitran language  developed to be <B>used</B> by students  and its important important features are described  iitran is a procedure-oriented language with a one-level block structure and a variety of data types  several novel and powerful features are included  b  k  hochsprung  r  r  <B>languages</B> programming <B>languages</B>  student programming systems  language
3 Q0 2873 28 0.04861749 Lucene_47
 of the possibility of using this language to design other user oriented <B>languages</B>  lg has been specifically designed for use by nonprogrammers  it is easy to learn and very close to the natural language <B>used</B> in geometry  cacm april  1976 raymond  j  interactive programming  problem oriented <B>languages</B>  computer
3 Q0 1852 29 0.046597723 Lucene_47
a base for a mobile programming system an algorithm for a macro processor which has been <B>used</B> as the base of an implementation  by bootstrapping  of processors for programming <B>languages</B> is described with programming <B>languages</B> whose implementation is based on this algorithm indicates that such a language can  programming <B>languages</B>  implementation techniques 4.12 4.22 ca690903 jb february 15  1978 4 54 pm 1530 4 1852
3 Q0 2254 30 0.046597723 Lucene_47
dynamic partitioning for array <B>languages</B> the classical process of partitioning an array of partitioning for array <B>languages</B>  of general interest is the data structure for partitioning  this consists of dynamic tree structures which are <B>used</B> to derive and maintain the array control <B>languages</B>  the description presented in this paper is implemented in a new array language  ol 2  currently
3 Q0 1807 31 0.045743205 Lucene_47
 backward  it has been <B>used</B> in the development of several fortran <B>compilers</B> that have proved to produce  v  a  england  d  e  fortran  optimization  expressions  <B>compilers</B>  compilation  subscripts
3 Q0 1671 32 0.04437039 Lucene_47
 list processor embedded in lisp  this made the system <B>construction</B> easy while providing sophisticated computer and is designed to be <B>used</B> on-line in interactive fashion  with control returned
3 Q0 2990 33 0.04437039 Lucene_47
 of automatic indexing systems that have been <B>used</B> successfully in experimental situations  among these are inverse document frequency weighting  thesaurus <B>construction</B>  and phrase generation  cacm march
3 Q0 3124 34 0.04437039 Lucene_47
recursive data structures in apl a mathematical study of three approaches for defining nested arrays in apl is presented  theorems exhibiting the relationships between the definitional systems are given and illustrated through graph representations  one of the approaches is <B>used</B> to define an apl in the <B>construction</B> of data-driven algorithms  cacm february  1979 gull w  jenkins  m  nested arrays
3 Q0 2684 35 0.040592745 Lucene_47
production systems  or can we do better than bnf  since the development of bnf  the definition of the syntax of programming <B>languages</B> has been almost universally associated with context-free and translations between <B>languages</B>  is given in a previous paper by the author  cacm february  1974 ledgard  h  f  syntax  translation  context-sensitive grammars  <B>compilers</B>  formal definition  pl i
3 Q0 2138 36 0.040049538 Lucene_47
bliss  a language for systems programming a language  bliss  is described  this language is designed so as to be especially suitable for use in writing production software systems for a specific machine  the pdp-10   <B>compilers</B>  operating systems  etc  prime design goals of the design for elements of the structure  cacm december  1971 wulf  w  a  russell  d  b  programming <B>languages</B>
3 Q0 2929 37 0.040049538 Lucene_47
  open compilation  program optimization  <B>compilers</B>  structured programming <B>languages</B>  run-time
3 Q0 3030 38 0.040049538 Lucene_47
an example of hierarchical design and proof hierarchical programming is being increasingly recognized as helpful in the <B>construction</B> of large programs  users of hierarchical techniques claim or predict substantial increases in productivity and in the reliability of the programs produced to current programming <B>languages</B> that ease hierarchical program design and proof  cacm december
3 Q0 3093 39 0.040049538 Lucene_47
  programming <B>languages</B>  error correction  automatic correction  parsing  lr  syntax errors  <B>compilers</B> 4.12
3 Q0 1003 40 0.039952476 Lucene_47
 of a process are <B>used</B> explicitly in the program  usually this results in by passing much of the mathematical procedures conventionally <B>used</B>  the program was tested against some known exact solutions biochemical reaction  the <B>construction</B> of computer programs based on the direct statement of the physical
3 Q0 1572 41 0.039952476 Lucene_47
 is described in this paper  the resulting model has a general purpose design and can be <B>used</B> to study a variety of time-sharing systems  it can also be <B>used</B> to assist in the design and development of new  the model was implemented in a limited fortran subset that is compatible with most fortran iv <B>compilers</B>
3 Q0 2424 42 0.039952476 Lucene_47
 independent hardware and software  the dynamic verification of operating system decisions is <B>used</B>  and cost effectiveness  the technique of dynamic verification allows the <B>construction</B> of an operating to reinforce each other  on prime  dynamic verification is <B>used</B> to ensure that one user s
3 Q0 1402 43 0.039377972 Lucene_47
partial step integration a partial step integration equation is derived for use with the adams or adams-bashforth method of integration of differential equations  this method of obtaining functional values at points <B>intermediate</B> to the integration points yields accuracy comparable to the integration and does not require storing of additional information as in interpolation methods  cacm july
3 Q0 1309 44 0.039104234 Lucene_47
 of two special <B>languages</B>  extract and matran  permits selective extraction of any data subset tabular or graphical form  matrix algebra is <B>used</B> as a fundamental vehicle for accomplishing both
3 Q0 303 45 0.039104234 Lucene_47
some basic terminology connected with mechanical <B>languages</B> and their processors the suggestions in this paper are part of the terminology <B>used</B> in work for the university of pennsylvania s office of computer research and education  the work is jointly supported by the national science foundation and the air force office of scientific research  cacm august  1961 gorn  s  ca610801 jb march 16  1978
3 Q0 1162 46 0.038157064 Lucene_47
 <B>languages</B> generally provide a one-for-one translation from a symbolic to a numeric version of a program  that is  from assembly language to machine language  the meta-language presented here can be <B>used</B>  or whatever else the user might desire  thus  this meta-language can be <B>used</B> to map from one assembly
3 Q0 1456 47 0.038157064 Lucene_47
 it has been <B>used</B> to define other words  such relations as class inclusion  possession  and active or passive actions are <B>used</B> as definitional material  the resulting structure serves as a powerful and other list processing <B>languages</B> are ideally suited for producing complex associative structures
3 Q0 2372 48 0.038157064 Lucene_47
 indices are users and data items respectively  a set of four functions is <B>used</B> to access rather than repeatedly at execution time  the model is <B>used</B> to explain security features of several within today s <B>languages</B> and operating systems  cacm april  1972 conway  r  w  maxwell  w  l  morgan
3 Q0 2718 49 0.038157064 Lucene_47
 programming technology utilized by this program  although typically <B>used</B> to generate procedure  is here <B>used</B> to generate declaratives  cacm october  1975 gerritsen  r  network model of databases  data <B>languages</B> 3.5 3.64 3.7 4.2 5.23 ca751001 jb january 6  1978 2 02 pm 2155 4 2718 2406 4 2718 2710 4 2718
3 Q0 1788 50 0.03772232 Lucene_47
toward a general processor for programming <B>languages</B> many efforts have been made to develop a better way of implementing a higher level programming language than by the <B>construction</B> of a whole new compiler  but so far none has proved generally satisfactory  in this paper  it is contended  and the question of where the greatest difficulties lie in compiler <B>construction</B>  cacm january  1968 halpern  m  j
3 Q0 2534 51 0.03772232 Lucene_47
  <B>compilers</B>  debugging  pl i  programming <B>languages</B> 1.5 4.12 4.42 ca730305 jb january 24  1978 10 45 am and efficient processor  it effectively demonstrates that <B>compilers</B> can provide better diagnostic
3 Q0 3105 52 0.037278175 Lucene_47
 mechanisms  this paper shows how to extend programming <B>languages</B> to provide controlled sharing checking similar to type checking  the approach can be <B>used</B> to extend any strongly-typed language  but is particularly suitable for extending <B>languages</B> that support the notion of abstract data types  cacm may  1978 jones  a  liskov b  programming <B>languages</B>  access control  data types  abstract data
3 Q0 2470 53 0.03651755 Lucene_47
 how the system can be <B>used</B> to build composite data types out of simper ones with the operations be introduced into <B>languages</B> through the mechanism of singleton data types  both deterministic  the abstractions <B>used</B> informally in the body of the paper  cacm august  1973 maclennan  b  j  semantics  formal systems  lambda-calculus  extensible <B>languages</B>  data types  modes  axioms  correctness  formal
3 Q0 2316 54 0.03631407 Lucene_47
programming <B>languages</B>  history and future this paper discusses both the history and future of programming <B>languages</B>    higher level <B>languages</B>   some of the difficulties in writing such a history are indicated  a key part of the paper is a tree showing the chronological development of <B>languages</B> and their interrelationships  reasons for the proliferation of <B>languages</B> are given  the major <B>languages</B>
3 Q0 1194 55 0.035496313 Lucene_47
 consisted of 315 documents  relating primarily to early research on <B>compilers</B>  these documents have system is described in detail  the main catalog is <B>used</B> to describe the documents  and inverted
3 Q0 1947 56 0.035496313 Lucene_47
object code optimization methods of analyzing the control flow and data flow of programs during compilation are applied to transforming the program to improve object time efficiency  dominance relationships  indicating which statements are necessarily executed before others  are <B>used</B> to do global optimizations in os 360 fortran h are described  cacm january  1969 lowry  e  s  medlock  c  w  <B>compilers</B>  data
3 Q0 2210 57 0.035496313 Lucene_47
toward automatic program synthesis an elementary outline of the theorem-proving approach to automatic program synthesis is given  without dwelling on technical details  the method is illustrated by the automatic <B>construction</B> of both recursive and iterative programs operating on natural numbers of the induction rule <B>used</B> and the form of the program constructed is explored in some detail  cacm
3 Q0 2746 58 0.035496313 Lucene_47
 and then using the pattern matching machine to process the text string in a single pass  <B>construction</B> is independent of the number of keywords  the algorithm has been <B>used</B> to improve the speed of a library
3 Q0 2820 59 0.035496313 Lucene_47
 the flexibility of the multilingual system  over 500 students have <B>used</B> caps to learn fortran  pl i  1976 wilcox  t  r  davis  a  m  tindall  m  h  interactive programming  table driven <B>compilers</B>
3 Q0 2867 60 0.035496313 Lucene_47
modularization and hierarchy in a family of operating systems this paper describes the design philosophy <B>used</B> in the <B>construction</B> of a family of operating systems  it is shown that the concepts of module and level do not coincide in a hierarchy of functions  family members can share much software as a result of the implementation of run-time modules at the lowest system level  cacm may  1976
3 Q0 205 61 0.035043344 Lucene_47
macro instruction extensions of compiler <B>languages</B> macroinstruction <B>compilers</B> constructed from a small set of functions can be made extremely powerful  in particular  conditional assembly  nested definitions  and parenthetical notation serve to make a compiler capable of accepting very general extensions to its ground language  cacm april  1960 mcilroy  m  d  ca600406 jb march 22  1978 1 49 pm
3 Q0 2732 62 0.035043344 Lucene_47
  programming <B>languages</B>  sequencing primitives  program semantics  programming language semantics  nondeterminacy  case-<B>construction</B>  repetition  termination  correctness proof  derivation of programs
3 Q0 1223 63 0.03418083 Lucene_47
high speed compilation of efficient object code a three-pass compiler with the following properties is briefly described  the last two passes scan an <B>intermediate</B> language produced by the preceding pass in essentially the reverse of the order in which it was generated  so that the first pass algebraic <B>languages</B>  cacm august  1965 gear  c  w  ca650801 jb march 6  1978 8 45 pm 267 4 1223 1139 4 1223
3 Q0 3077 64 0.033746526 Lucene_47
 of programs conventional programming <B>languages</B> are growing ever more enormous  but not stronger  inherent level programs to build still higher level ones in a style not possible in conventional <B>languages</B> over programs and whose operations are combining forms  this algebra can be <B>used</B> to transform programs and in its state transition rules  unlike von neumann <B>languages</B>  these systems have semantics loosely
3 Q0 1348 65 0.03258686 Lucene_47
 is <B>used</B> to flowchart any programs in the language described  several examples of fap and snobol flowcharts are given  however  it is not necessary to confine one s scope to existing <B>languages</B>  one may
3 Q0 2739 66 0.03258686 Lucene_47
 for computerized natural language analysis  the language is <B>used</B> in the current implementation  programming <B>languages</B> 3.42 3.79 4.22 ca750703 jb january 9  1978 10 17 am 2581 4 2739 2739 4 2739
3 Q0 2652 67 0.032411657 Lucene_47
reduction of compilation costs through language contraction programming <B>languages</B> tailored to particular groups of users can often be constructed by removing unwanted features from a general purpose in that language  when features not actually <B>used</B> by the algorithm are removed from the language  the cost  the compilation cost increases sharply  cacm may  1974 shaw  m  design of programming <B>languages</B>  language
3 Q0 1386 68 0.032091625 Lucene_47
symbolic factoring of polynomials in several variables an algorithm for finding the symbolic factors of a <B>multi</B>-variate polynomial with integer coefficients is presented  the algorithm is an extension of a technique <B>used</B> by kronecker in a proof that the prime factoring of any polynomial may sufficient power to be <B>used</B> efficiently in an online system for symbolic mathematics  cacm august
3 Q0 2233 69 0.031059274 Lucene_47
 as to yield new clues and deeper insights into their <B>construction</B>  for the benefit of the uninitiated  the encoding method <B>used</B> in the second cypher employs a specified document whose words are simply
3 Q0 2587 70 0.030922726 Lucene_47
on the <B>construction</B> of a representative synthetic workload  errata  cacm october  1974 sreenivarsan  k  kleinman  a  j  ca741011 jb january 16  1978 11 07 am 2587 4 2587 2588 4 2587 2587 5 2587 2587 5 2587 2587 5 2587 2612 5 2587
3 Q0 799 71 0.030922726 Lucene_47
design of a separable transition-diagram compiler  a cobol compiler design is presented which is compact enough to permit rapid  one-pass compilation of a large subset of cobol on a moderately large computer  versions of the same compiler for smaller machines require only two working tapes plus a compiler tape  the methods given are largely applicable to the <B>construction</B> of algol <B>compilers</B>  cacm
3 Q0 1484 72 0.03052565 Lucene_47
a language for describing the functions of synchronous systems  before the design of a system is started  the exact function desired of it should be specified  it is suggested that a computer-oriented language be <B>used</B> for this purpose  the inadequacies of the standard programming <B>languages</B> synchronous systems is introduced  these descriptions can be <B>used</B> for simulation and automatic design
3 Q0 1976 73 0.03029799 Lucene_47
<B>multi</B>-attribute retrieval with combined indexes in this paper a file organization scheme designed to replace the use of the popular secondary index filing scheme  or inverted files on secondary key to an index file  although each bucket may be <B>used</B> for many combinations of values and a combination filing scheme  elimination of false drops  combining indexes  query  <B>multi</B>-attribute retrieval 3.73 3.74
3 Q0 1565 74 0.02996436 Lucene_47
a language-independent macro processor a macro processor is described which can be <B>used</B> with almost any source language  it provides all features normally associated with a macro facility  plus the ability to make arbitrary transformations of the argument strings  the program is <B>used</B> at the basser <B>compilers</B>  cacm july  1967 waite  w  m  ca670708 jb february 28  1978 8 35 am 1358 4 1565 1530 4 1565
3 Q0 1658 75 0.02953348 Lucene_47
analysis of algorithms for the zero-one programming problem this paper is concerned with a review and examination of several existing algorithms for the zero-one programming problem  computational experience is summarized  the machine time and storage requirements of several of the algorithms are compared over several test problems of small and <B>intermediate</B> size  computer experiments still
3 Q0 1783 76 0.02953348 Lucene_47
in-and-out conversions byan in-and-out conversion we mean that a floating-point number in one base is converted into a floating-point number in another base and then converted back to a floating-point number in the original base  for all combinations of rounding and truncation conversions the question is considered of how many significant digits are needed in the <B>intermediate</B> base to allow
3 Q0 1496 77 0.028994817 Lucene_47
a formal semantics for computer <B>languages</B> and its application in a compiler-compiler a semantic meta-language has been developed for representing the meanings of statements in a large class of computer <B>languages</B>  this meta-language has been the basis for <B>construction</B> of an efficient  functioning compiler-compiler  an informal discussion of the meta-language based on the example of a complete
3 Q0 1134 78 0.02784443 Lucene_47
some effects of the 6600 computer on language structures  the problem of compiling efficient 6600 codes prompted the development of an <B>intermediate</B> language reflecting the structure of the machine  that is more easily manipulated in improving object program efficiency  the subject of this paper is the <B>intermediate</B> language and methods of manipulating it  compilations of a series of arithmetic
3 Q0 2341 79 0.026709946 Lucene_47
  best thought of as a three-dimensional extension to a string   the third dimension is <B>used</B> and their operations are mainly <B>used</B> for composing printable output  a variety of graphical problems of specialized syntax and could readily be absorbed into the external structure of most programming <B>languages</B>
3 Q0 1869 80 0.026069488 Lucene_47
block structures  indirect addressing  and garbage collection programming <B>languages</B> have included explicit or implicit block structures to provide a naming convenience for the programmer  however  when indirect addressing is <B>used</B>  as in snobol  naming constraints may be introduced  two modifications to snobol are described  resulting in two desirable consequences   1  naming constraints disappear
3 Q0 2320 81 0.026069488 Lucene_47
structured multiprogramming this paper presents a proposal for structured representation of multiprogramming in a high level language  the notation <B>used</B> explicitly associates a data structure shared by concurrent processes with operations defined on it  this clarifies the meaning of programs multiprogramming  programming <B>languages</B>  operating systems  concurrent processes  shared data  mutual exclusion
3 Q0 2558 82 0.026069488 Lucene_47
protection in programming <B>languages</B> linguistic mechanisms which can be <B>used</B> to protect one subprogram from another s malfunctioning are described  function-producing functions and various type-tagging schemes are considered  an attempt is made to distinguish between access limitation and authentication  cacm january  1973 morris  j  h  jr  protection  types  environments trademarks  seals  access
3 Q0 2767 83 0.026069488 Lucene_47
a comparison of simulation event list algorithms four algorithms are considered which can be <B>used</B> to schedule events in a general purpose discrete simulation system  two of the algorithms are new  one is based on an end-order tree structure for event notices  and another uses an indexed linear list <B>languages</B>  the most promising algorithm uses the indexed list concept  it will require an adaptive routine
3 Q0 3101 84 0.026069488 Lucene_47
the sl5 procedure mechanism this paper describes an integrated procedure mechanism that permits procedures to be <B>used</B> as recursive functions or as coroutines  this integration is accomplished by treating procedures and their activation records  called environments  as data objects hanson  d  griswold  r  procedures  coroutines  programming <B>languages</B>  interpreters  snobol 4
3 Q0 1313 85 0.024738181 Lucene_47
<B>construction</B> of nonlinear programming test problems cacm february  1965 rosen  j  b  suzuki  s  ca650211 jb march 7  1978 10 58 pm 1313 5 1313 1313 5 1313 1313 5 1313 3099 5 1313 3138 5 1313 1313 6 1313 1313 6 1313 2031 6 1313
3 Q0 2066 86 0.024738181 Lucene_47
an algol <B>construction</B> for procedures as parameters of procedures cacm april  1970 knight  k  r  algol  procedures  parameters  side effects 4.22 ca700418 jb february 13  1978 2 30 pm 2066 4 2066 2066 4 2066 1833 5 2066 1842 5 2066 2066 5 2066 2066 5 2066 2066 5 2066
3 Q0 2495 87 0.024738181 Lucene_47
adapting optimal code generation for arithmetic expressions to the instruction sets available on present-day computers cacm june  1973 stockhausen  p  f  arithmetic expressions  code generation  <B>compilers</B>  object-code optimization  register assignment  trees 4.12 5.24 5.32 ca730605 jb january 23  1978 2 24 pm 2495 5 2495 2495 5 2495 2495 5 2495
3 Q0 2551 88 0.024738181 Lucene_47
mutual recursion in algol 60 using restricted <B>compilers</B> cacm january  1973 atkins m  s  algol 60  mutual recursion  compiler restrictions 4.12 4.22 ca730110 jb january 24  1978 3 46 pm 2551 5 2551 2551 5 2551 2551 5 2551 2658 5 2551 2551 6 2551
3 Q0 2658 89 0.024738181 Lucene_47
an alternative approach to mutual recursion in algol 60 using restricted <B>compilers</B> cacm april  1974 balfour  a  algol 60  mutual recursion  compiler restrictions 4.12 4.22 ca740412 jb february 1  1978 10 32 am 2658 4 2658 2551 5 2658 2658 5 2658 2658 5 2658 2658 5 2658
3 Q0 2659 90 0.024738181 Lucene_47
some remarks on lookup of structured variables cacm april  1974 abrahams  p  w  pl 1  symbol table  structured variables  qualified references  <B>compilers</B> 4.12 4.22 ca740411 jb february 1  1978 10 34 am 2659 4 2659 2449 5 2659 2659 5 2659 2659 5 2659 2659 5 2659
3 Q0 51 91 0.024738181 Lucene_47
on the <B>construction</B> of micro-flowcharts cacm october  1959 gorn  s  ingerman  p  z  crozier  j  b  ca591008 jb march 22  1978 4 10 pm 249 5 51 51 5 51 51 5 51 51 5 51 196 6 51 303 6 51 51 6 51
3 Q0 70 92 0.024738181 Lucene_47
<B>construction</B> of a set of test matrices this paper develops the equations and properties of a set of test matrices which are useful in the determination of the accuracy of routines for finding the inverse  determinant and or eigenvalues of a matrix  cacm august  1959 aegerter  m  j  ca590803 jb march 22  1978 6 09 pm 70 5 70 70 5 70 70 5 70
3 Q0 929 93 0.024738181 Lucene_47
glossary <B>construction</B> cacm february  1963 grems  m  ca630204 jb march 14  1978 2 21 pm 929 4 929 929 5 929 929 5 929 929 5 929 397 5 929 690 5 929 890 6 929 929 6 929 3195 6 929
3 Q0 2871 94 0.024611231 Lucene_47
logical analysis of programs most present systems for verification of computer programs are incomplete in that <B>intermediate</B> inductive assertions must be provided manually by the user  termination is not proven  and incorrect programs are not treated  as a unified solution to these problems  this paper suggests conducting a logical analysis of programs by using invariants which express what
3 Q0 1304 95 0.023868147 Lucene_47
a rapid turnaround <B>multi</B>-programming system in this paper  basic features  system characteristics and the control algorithm for a <B>multi</B>-programming system with rapid turnaround time are described  cacm march  1965 irons  e  t  ca650303 jb march 7  1978 6 19 pm 1304 5 1304 1304 5 1304 1304 5 1304 1550 5 1304 1304 6 1304 1472 6 1304
3 Q0 1703 96 0.023440633 Lucene_47
accommodating standards and identification of programming <B>languages</B> the user public wants standardization and reliable identification of programming <B>languages</B> and related services  one way related family of <B>languages</B>  oppressive rigidity usually associated with standardization is avoided <B>languages</B> and computer services  cacm august  1968 mooers  c  n  standardization  programming
3 Q0 2603 97 0.023440633 Lucene_47
the equivalence of reducing transition <B>languages</B> and deterministic <B>languages</B> the class of reducing transition <B>languages</B> introduced by eickel  paul  bauer  and samelson was shown by morris to be a proper superclass of the simple precedence <B>languages</B>  in this paper this result is extended  showing that  in fact  the first class is equivalent to the class of deterministic context free <B>languages</B>
3 Q0 2705 98 0.023440633 Lucene_47
programming <B>languages</B>  natural <B>languages</B>  and mathematics some social aspects of programming are illuminated through analogies with similar aspects of mathematics and natural <B>languages</B>  the split <B>languages</B> toward flexion less  word-order based language types speaks for programming language design  auxiliary <B>languages</B> it is suggested that fortran and cobol will remain dominant for a long time to come
3 Q0 1459 99 0.02320504 Lucene_47
requirements for real-time <B>languages</B> real-time <B>languages</B> have different requirements from other programming <B>languages</B> because of the special nature of their applications  the environment in which their object programs are executed and the environment in which they may be compiled  it may not be the language extensions that ultimately advance developments in the field  progress may be made
3 Q0 2814 100 0.022967035 Lucene_47
roster of programming <B>languages</B> for 1974-75 cacm december  1976 sammet  j  e  ca761201 jb january 3  1978 2 38 pm 2814 5 2814 2814 5 2814 2814 5 2814
*************Query 4*************************

4 Q0 1135 1 0.11169295 Lucene_47
  it stresses the structural analysis of the class of <B>processes</B> to be represented in the languages  as <B>opposed</B> to emphasizing formal  <B>i</B> e   contents-independent  syntactical definitions  it relies <B>exclusively</B>  there are no control statements such as go to  etc    instead of using <B>procedure</B> <B>descriptions</B>  which common to all <B>processes</B> of such class  permits writing extremely compact programs  even for comparatively
4 Q0 2931 2 0.10324425 Lucene_47
  programs naturally enter in giving <B>descriptions</B> of <B>processes</B>  the definition of the precise definitions and proofs  which are clean and <B>without</B> undue dependence on <B>implementations</B>  nevertheless formalization is well advanced  however  the semantical theory can hardly be said to be <B>complete</B>  though we have many <B>examples</B>  we have still to give wide-ranging mathematical answers to these queries
4 Q0 3043 3 0.09155723 Lucene_47
<B>distributed</B> <B>processes</B>  a concurrent programming concept a language concept for concurrent <B>processes</B> <B>without</B> common variables is introduced  these <B>processes</B> communicate and synchronize by means of <B>procedure</B> <B>calls</B> and guarded regions  this concept is proposed for real-time applications controlled by microcomputer networks with <B>distributed</B> storage  the paper gives several <B>examples</B> of <B>distributed</B>
4 Q0 3128 4 0.088807955 Lucene_47
synchronization with eventcounts and sequencers synchronization of concurrent <B>processes</B> requires controlling the relative ordering of events in the <B>processes</B>  a new synchronization mechanism is proposed  using <B>abstract</B> objects called eventcounts and sequencers  that allows <B>processes</B> to control the ordering of events directly  <B>rather</B> than using mutual exclusion to protect manipulations of shared
4 Q0 2377 5 0.07294079 Lucene_47
 access privilege with a computation  this paper describes hardware processor <B>mechanisms</B> for implementing these rings of protection  the <B>mechanisms</B> for implementing these rings of protection  the <B>mechanisms</B> allow cross-ring <B>calls</B> and subsequent returns to occur <B>without</B> trapping to the supervisor to a companion user <B>procedure</B>  the <B>mechanisms</B> of <B>passing</B> and referencing arguments are the same in both cases
4 Q0 2342 6 0.072590604 Lucene_47
interference <B>between</B> <B>communicating</B> parallel <B>processes</B> various kinds of interference <B>between</B> <B>communicating</B> parallel <B>processes</B> have been examined by dijkstra  knuth  and others  solutions have been of parallel <B>processes</B> is regarded as a machine which proceeds from one state s  <B>i</B> e  a collection <B>between</B> sets of states  or of the existence of certain sequences  a mechanical proof <B>procedure</B>
4 Q0 2851 7 0.07171941 Lucene_47
  an <B>abstract</B> conceptual model and a parallel-program model  the former model does not distinguish <B>between</B> control and data states  the latter model includes the capability for the representation  or <B>processes</B>  executing the program  an induction principle is presented which treats the control and data correctness conditions can be expressed <B>without</B> enumeration of the set of all possible control states
4 Q0 3049 8 0.06602217 Lucene_47
  bagdams  which provides a common means of <B>communicating</B> the <B>descriptions</B> of graphical entities <B>between</B>a simply extended and modified batch <B>environment</B> graphical system  sembegs  sembegs is a <B>complete</B> batch <B>environment</B> graphical system containing components for handling graphical data files batch <B>environment</B>  and is even extendable to a fully interactive system  the paper presents
4 Q0 2939 9 0.06528075 Lucene_47
 an in troduction to the abstraction <B>mechanisms</B> in clu  by means of programming <B>examples</B>  the utility of the threeabstraction <B>mechanisms</B> in clu clu is a new programming language designed to support the use of abstractions in program construction  <B>work</B> in programming methodology has led to the realization languages  through the <B>procedure</B> or subroutine  clu provides  in addition to procedures  novel linguistic
4 Q0 616 10 0.0583261 Lucene_47
an information algebra - phase <B>i</B> report-language structure group of the codasyl development committee this report represents the results of the first phase of the <B>work</B> of the language structure group  the goal of this <B>work</B> is to arrive at a proper structure for a machine-independent <B>problem</B>  and all those <B>interested</B> in developing a <B>theoretical</B> approach to data processing   b  with interest
4 Q0 2314 11 0.050138924 Lucene_47
  and packaging  implementation of a generalized <B>environment</B> structure model specified <B>would</B> allow  <B>rather</B> than focusing just on language features  since algorithms must be not only coded in a language  programmable control structures  and sophisticated data communication <B>mechanisms</B>  interactive  alternative methods of <B>procedure</B> invocation required include invocation by pattern and by monitoring
4 Q0 2895 12 0.04728674 Lucene_47
a language for formal <B>problem</B> specification a language for specifying the in tended behavior of <B>communicating</B> parallel <B>processes</B> is described  the specifications are constrain ts on the order writers <B>problem</B> and the writer priority of the second readers writers <B>problem</B>  cacm december  1977 greif  <B>i</B>  formal specifications program correctness  parallel processing  synchronization  readers
4 Q0 2900 13 0.042851787 Lucene_47
some theorems to aid in solving the file allocation <B>problem</B> the file allocation <B>problem</B>-<B>i</B> e  the <B>problem</B> of finding the optimal set of network sites at which to locate copies of a file-is known to be  in general  polynomial <B>complete</B>  heuristics and other aids to finding optimal  or near-optimal  cacm november  1977 grapa  e  belford  g  g  file allocation  computer networks  <B>distributed</B> data
4 Q0 2905 14 0.042449716 Lucene_47
 <B>i</B> of identifiers  two methods are presented for building  in a mechanical way  perfect hashing functions  <B>i</B> e  functions transforming the elements of <B>i</B> into unique addresses  the first method  the  quotient reduction  method  is shown to be <B>complete</B> in the sense that for every set <B>i</B> the smallest table in which the elements of <B>i</B> can be stored and from which they can be retrieved by using a perfect
4 Q0 2519 15 0.04196532 Lucene_47
on the <B>problem</B> of <B>communicating</B> complex information the nature of the difficulty involved in <B>communicating</B> mathematical results <B>between</B> scientists using a computer based information retrieval system is examined  the <B>problem</B> is analyzed in terms of psychological and information-processing <B>processes</B> of the structure inherent in the information we are <B>communicating</B>  and a sophisticated interactive system
4 Q0 1727 16 0.04181963 Lucene_47
 of the number of jumps from the <B>i</B>-th instruction on to the j-th instruction in the run time  in the cases estimation of the s ij   it is easier to estimate not s ij  but the quantities p ij  s ij  c <B>i</B>  sum s ij   j 1 n   where c <B>i</B>  is an arbitrary positive constant for each <B>i</B>  although the p ij  are  for each <B>i</B>  proportional to s ij   the estimation of p ij  is easier  because we must estimate only
4 Q0 3141 17 0.040404744 Lucene_47
  <B>rather</B> than o n2   cacm may  1979 chang  e  roberts  r  decentralized algorithms  <B>distributed</B> systemsan improved algorithm for decentralized extrema-finding in circular configurations of <B>processes</B> of uniquely numbered <B>processes</B> arranged in a circle  in which no central controller exists and the number of <B>processes</B> is not known a priori  this decentralized algorithm uses a technique of selective
4 Q0 2438 18 0.040248007 Lucene_47
 processor is assumed  and the implementation assumes multiple-<B>processes</B> coordinate by <B>passing</B> controla model and stack implementation of multiple environments many control and access <B>environment</B> structures require that storage for a <B>procedure</B> activation exist at times when control is not nested within the <B>procedure</B> activated  this is straightforward to implement by dynamic storage allocation
4 Q0 2439 19 0.040108647 Lucene_47
multiple terminals under user program control in a time-sharing <B>environment</B> user-written programs on the dartmouth time-sharing system can communicate with many <B>remote</B> terminals simultaneously and can control the interactions <B>between</B> these terminals  such programs can be written using standard this multiple-terminal facility was implemented <B>without</B> requiring any changes in the system executive
4 Q0 2840 20 0.038945112 Lucene_47
  in restricted cases  it can be shown that this <B>problem</B> is decidable  <B>i</B> e  there is an algorithmprotection in operating systems a model of protection <B>mechanisms</B> in computing systems is presented and its appropriateness is argued  the  safety  <B>problem</B> for protection systems under this model are discussed  cacm august  1976 harrison  <B>m</B>  a  ruzzo  w  l  ullman  j  d  protection  protection system
4 Q0 2848 21 0.037676457 Lucene_47
 to record the logic of <B>processes</B> to be automated  the result of such an interview is not a structure of <B>complete</B> decision tables but <B>rather</B> sets of decision rules  the purpose of this paper is to provide a <B>procedure</B> for synthesizing the decision rules and thus provide an aid in developing a structure of <B>complete</B> decision tables  cacm july  1976 cheng  c  rabin  j  decision rules  decision tables
4 Q0 2402 22 0.037105042 Lucene_47
pictorial pattern recognition and the phase <B>problem</B> of x-ray crystallography the availability encourages the development of algorithms adapted to this <B>environment</B>  pictorial pattern recognition building  <B>i</B> e  the use of chemical information to frame  structural hypotheses  which can recognition algorithms is hindered by the fact that the cross-correlation <B>between</B> a model
4 Q0 2536 23 0.037048552 Lucene_47
 varied <B>remote</B> terminal access to a large scale computer is considered  the problems of embedding telecommunications <B>i</B> o within an operating system are discussed  and it is shown how the decentralization of intelligence acquired by front-end processing vastly simplifies the <B>problem</B>  a specific over a hard wired line controller  cacm march  1973 feinroth  y  franceschini  e  goldstein  <B>m</B>
4 Q0 1099 24 0.036816236 Lucene_47
professional computer <B>work</B> for the blind developments in computer technology have opened new the blind can participate <B>without</B> serious disadvantage  the opportunities offered them to gain entrance suited for programming <B>work</B>  because of intense training in and constant experience with locating objects in the unseen <B>environment</B> and also because of superbly trained memory  the blind brings
4 Q0 2060 25 0.03605703 Lucene_47
  the existence of label variables permits the construction of coroutines  quasi-parallel <B>processes</B>  and other unorthodox control <B>mechanisms</B>  a variety of programming <B>examples</B> illustrates the generality in turn possess other values  the assignment operation always affects the relation <B>between</B> some  regardless of its internal representation  more generally  any data structure may be implicit  <B>i</B> e
4 Q0 1506 26 0.035668798 Lucene_47
 is that it is event-driven <B>rather</B> than clock-driven  the program segments called into execution by the <B>remote</B> crt consoles are invariably run to completion <B>rather</B> than  rolled-out  to be brought back at a later time very large files by means of a  dialogue  <B>between</B> a system user and a retrieval application  the monitor was designed so that it could <B>work</B> with a small computer  an ibm system 360 30   therefore
4 Q0 1665 27 0.035524588 Lucene_47
 is dealt with in this tutorial article by the use of the aed rword system  developed at <B>m</B>  as part for character string  these processors may be described as generalized decision-making <B>mechanisms</B> based upon-coded processors  which <B>would</B> analyze the language and detect errors  and which <B>would</B> be convenient and easy to use  cacm december  1968 johnson  w  l  porter  j  h  ackley  s  <B>i</B>  ross  d  t  character
4 Q0 1588 28 0.034661476 Lucene_47
pl <B>i</B> list processing the concepts of list processing have been introduced into the pl <B>i</B> language  with these new facilities  it is possible to write pl <B>i</B> procedures that operate on simple and complex directly with complex data structures and or from their inability to perform the <B>complete</B> range eliminated in the list-processing facilities of pl <B>i</B>  the basic concepts of list processing
4 Q0 2233 29 0.034454852 Lucene_47
 of cryptanalysts have expended untold man-years  thus far <B>without</B> success  attempting tode code them  vast <B>would</B> fill volumes  yet serious students of cryptography have always had nagging doubts about  818  37  52  49      <B>i</B> have deposited in the county of bedford about four miles from buford s the letters of these words are sought out at random to match the letters of the clear text or <B>message</B>
4 Q0 2705 30 0.0343236 Lucene_47
 <B>between</B> pure and applied mathematics is found similarly in programming  the development of natural based on general  <B>abstract</B> constructs  by analogy with incidents of the history of artificial  the most promising avenues for further <B>work</B> of wide influence are seen to be high quality program literature  <B>i</B> e  programs  of general utility and studies of questions related to program style  cacm
4 Q0 2721 31 0.03226639 Lucene_47
 the relationships <B>between</B> the ecological <B>mechanisms</B> involved  the simulation parameters were varied claudson  r  <B>m</B>  digital simulation  mathematical modeling  plankton population dynamics  phytoplankton  zooplankton  river ecosystems  ecological <B>mechanisms</B>  environmental simulation  modeling ecosystems
4 Q0 1742 32 0.03220757 Lucene_47
 for a computer display are considered  to <B>work</B> efficiently  such a channel must have a sufficient number of instructions that it is best understood as a small processor <B>rather</B> than a powerful channel for each trip around  the degree of physical separation <B>between</B> display and parent computer is a key  display programming  graphical interaction  <B>remote</B> displays 2.44 6.22 6.29 6.35 ca680603 jb february
4 Q0 3057 33 0.031938516 Lucene_47
  then the <B>problem</B> becomes np-<B>complete</B>  even if it is restricted to k2   2  cacm october  1978 chang the <B>problem</B> of optimal his togram matching using monotone gray level transformation  which always assigns all picture points of a given gray level <B>i</B> to another gray level t <B>i</B>  such that if <B>i</B>  gt  j  then t <B>i</B> such that the sum of absolute errors <B>between</B> the gray level his togram of the transformed picture
4 Q0 2932 34 0.031844664 Lucene_47
complexity of computations the framework for research in the theory of complexity of computations is described  emphasizing the in terrelation <B>between</B> seemingly diverse problems and methods  illustrative <B>examples</B> of practical and <B>theoretical</B> significance are given  directions for new research are discussed  cacm september  1977 rabin  <B>m</B>  o  complexity of computations  algebraic complexity
4 Q0 1908 35 0.030966941 Lucene_47
 and <B>problem</B>-solving <B>rather</B> than as a programming end in itself  statistically and logically significant <B>would</B> have resulted if the time-sharing users had stopped <B>work</B> when they reached a performance leveltime-sharing and batch-processing  an experimental comparison of their values in a <B>problem</B> - solving situation an experimental comparison of <B>problem</B>-solving using time-sharing and batch-processing
4 Q0 2684 36 0.029865677 Lucene_47
 requirements  notably the compatibility <B>between</B> the declaration of an identifier and its uses  the correspondence <B>between</B> actual and formal parameters  and issues arising from block structure  this paper explores the use of a formal notation called production systems in providing a readable and <B>complete</B> formal definition of syntax  as a practical illustration  a small but significant subset of pl <B>i</B>
4 Q0 1159 37 0.029693032 Lucene_47
 halpern  <B>m</B>  <B>i</B>  ca651210 jb march 6  1978 3 44 pm 1159 4 1159 1988 4 1159 381 4 1159 1159 5 1159 for believing that the machine-independence <B>problem</B> is being substantially diminished by current trends in computer design  and that it is this process of convergence in hardware design <B>rather</B> than any
4 Q0 2383 38 0.027694877 Lucene_47
music and computer composition the <B>problem</B> discussed is that of simulating human composition with this kind of program and several schemes that are known not to <B>work</B> are discussed  several that this is because the relevant probabilities which <B>would</B> discriminate against unfamiliar sequences were of cognitive <B>processes</B>  computer music  computer composition  music theory 3.44 3.65 ca720208 jb january 31
4 Q0 2969 39 0.027048578 Lucene_47
 the model  a search <B>procedure</B> for the file location <B>problem</B> is described  along with an exampleoptimal program and data locations in computer networks an optimization <B>procedure</B> the dependencies <B>between</B> files and programs such as occur in real heterogeneous computer networks  databases  <B>distributed</B> databases  optimal file location 3.81 3.51 4.33 ca770503 jb december 29  1977 2
4 Q0 1829 40 0.025842886 Lucene_47
an interactive graphical display monitor in a batch-processing <B>environment</B> with <B>remote</B> entry computer  which is a general purpose  batch-processing system with <B>remote</B> entry  the existing g21  where routine <B>calls</B> take the place of manual actions  thus the human and program can interact  graphic interface  graphic in batch <B>environment</B>  design of graphical system 4.30 4.31 4.39 4.41 ca691101
4 Q0 2396 41 0.025481857 Lucene_47
 from <B>examples</B> and performs various actions  cacm january  1972 mccalla  g  <B>i</B>  sampson  j  r  natural simple english  <B>processes</B> english sentences of unrestricted content but somewhat restricted format a simplified semantic intersection <B>procedure</B> to find a valid interpretation of the input  while the contents of its own memory to an indirect form of question answering  <B>examples</B> are presented
4 Q0 2816 42 0.025135983 Lucene_47
optimal reorganization of <B>distributed</B> space disk files in most database organizations  the cost  by reorganizing the database the access costs can be reduced  a basic <B>problem</B> is to establish the proper tradeoff <B>between</B> performance  storage costs  and reorganization costs  this paper considers for <B>distributed</B> free space is described  a cost function describing the excess costs due to physical
4 Q0 409 43 0.024943342 Lucene_47
cl-1  an <B>environment</B> for a compiler a flexible  large-scale programming system to facilitate the solution of information processing problems and to provide intercommunication <B>between</B> programs on a master file concept and has provisions for accepting  storing  and retrieving both <B>descriptions</B> of distinct data <B>descriptions</B> and the content and use of such <B>descriptions</B> are discussed in some detail
4 Q0 1180 44 0.024808457 Lucene_47
  called imperatives  a transformation consists of a matching <B>procedure</B>  which decides where an imperative is applicable  and a replacement <B>procedure</B> that modifies that part of the workspace <B>complete</B> programs of imperatives are given to show a few applications of the language  cacm november  1965 cohen  <B>i</B>  wegstein  j  h  ca651101 jb march 6  1978 6 22 pm 1180 5 1180 1180 5 1180 1180 5 1180
4 Q0 1681 45 0.024744304 Lucene_47
easy english a language for information retrieval through a <B>remote</B> typewriter console easy english is a natural command language designed to simplify communication <B>between</B> man and machine through <B>remote</B> typewriter console  it has been developed for retrieval of documents from a computerized data syntactical form  <B>examples</B> of which are presented   and this form is then transformed
4 Q0 2020 46 0.024702784 Lucene_47
 frequently is a pricing <B>procedure</B>  in this paper the manner in which one <B>would</B> like to allocate august  1970 nielsen  n  r  allocation <B>mechanisms</B>  charging  computer pricing  costing  flexible
4 Q0 2915 47 0.024623645 Lucene_47
  programming languages  standards  formalisms  formal <B>descriptions</B>  fortran  cobol  pl <B>i</B>  basicconsiderations for future programming language standards activities this paper reviews the current state of programming language standards activities with respect to the anomalies which exist <B>between</B> the various published and proposed standards for fortran  cobol  pl <B>i</B>  and basic  proposals
4 Q0 3056 48 0.024609385 Lucene_47
counting large numbers of events in small registers it is possible to use a small counter to keep approximate counts of large numbers  the resulting expected error can be <B>rather</B> precisely controlled  this relative error can be expected to be 24 percent or less 95 percent of the time  <B>i</B> e o   n 8 of experiments or <B>processes</B>  cacm october  1978 morris  r  counting 5.11 ca781005 dh january 29
4 Q0 1014 49 0.02457129 Lucene_47
machine controls for analysis of variance a major <B>problem</B> in using the analysis of variance the experimenter may not be <B>interested</B> in these interactions it is impossible to ignore them in most experimental designs because of the <B>problem</B> of getting error terms  it is natural therefore to look to the computer to handle the bulk of <B>work</B> involved in computing the interactions  a program device
4 Q0 2371 50 0.024392352 Lucene_47
a system for interprocess communication in a resource sharing computer network a system of communication <B>between</B> <B>processes</B> in a time-sharing system is described and the communication system is extended so that it may be used <B>between</B> <B>processes</B> <B>distributed</B> throughout a computer network  the hypothetical application of the system to an existing network is discussed  cacm april  1972 walden  d  c
4 Q0 2701 51 0.02386519 Lucene_47
a fast and usually linear algorithm for global flow analysis  <B>abstract</B> only--<B>complete</B> paper jacm 23,1 january  1976  a new algorithm for global flow analysis on reducible graphs is presented be extended to yet larger classes of function spaces and graphs by relaxing the time bound  <B>examples</B> graham  s  l  wegman  <B>m</B>  global flow analysis  data flow  code optimization  common subexpression
4 Q0 1595 52 0.023700804 Lucene_47
 <B>work</B> was the unearthing of a <B>theoretical</B> error which had been induced into the literature  the useon the computer enumeration of finite topologies the <B>problem</B> of enumerating the number of topologies which can be formed from a finite point set is considered both theoretically and computationally result underscores its continuing usefulness in this area  cacm may  1967 evans  j  w  harary  f  lynn  <B>m</B>
4 Q0 1470 53 0.023659673 Lucene_47
the structure of programming languages the following are identified as major components of every programming language   1  the elementary program statement   2  <B>mechanisms</B> for linking elementary of each of these components are described  compared and evaluated  many <B>examples</B>  frequently from that commands the action to be taken  a requirement describes the effect to be achieved <B>without</B>
4 Q0 1012 54 0.023413884 Lucene_47
  consists of two finite <B>disjoint</B> vocabularies  v and t  a many-many map  u  from v onto t  and a recursive analysis determines a formal parsing system  a directed production analyzer  <B>i</B> t x p  is a nondeterministic pushdown-store machine with internal vocabulary <B>i</B>  input vocabulary t  and all productions of p in the form   z a  - gt  ay1     ym where z  yi are elements of the set <B>i</B> and a is an element
4 Q0 2742 55 0.023406075 Lucene_47
improved event-scanning <B>mechanisms</B> for discrete event simulation simulation models of large time  this <B>problem</B> may be attributed in part to difficulties such as slow stochastic convergence  however  an additional <B>problem</B> lies in the fact that a significant amount of bookkeeping time are presented  all of which improve in effectiveness as the events-list scan <B>problem</B> becomes more
4 Q0 2606 56 0.023260398 Lucene_47
 programmed algorithms  the new algorithm is a step-by-step <B>procedure</B> for solving the initial value <B>problem</B> the other methods which are discussed will have failed  cacm september  1974 willers  <B>i</B>  <B>m</B>  ordinary differential equations  initial value <B>problem</B>  integration  taylor series  singularities  continued
4 Q0 2940 57 0.023241533 Lucene_47
 to operate on <B>abstract</B> entities <B>without</B> explicit dependence on the representation of those entities  1977 shaw  <B>m</B>  wulf  w  a  abstraction and representation  <B>abstract</B> data types  assertions  control the alphard  form  provides the programmer with a great deal of control over the implementation of <B>abstract</B> and function definition to the iteration statement  the most important poin t of interaction <B>between</B>
4 Q0 1651 58 0.023199 Lucene_47
  for subsequent use either as a pedagogical device or for solving <B>rather</B> small lp problems  this latter  limited evaluation  large lp problems <B>would</B> doubtless benefit from an input system more suited for bulk data as a textbook presentation of the lp <B>problem</B>  limited only by a keypunch s inability to write subscripts  etc the input deck as an aid in identification  e g   of row constraints  the article includes <B>examples</B>
4 Q0 1943 59 0.023002168 Lucene_47
<B>complete</B> elliptic integrals  algorithm 165  s21   cacm january 1969 farkas  <B>i</B>  special functions  <B>complete</B> elliptic integral of the first kind  <B>complete</B> elliptic integral of the second kind 5.12 ca690106 jb february 20  1978 11 54 am 1943 5 1943 1943 5 1943 1943 5 1943
4 Q0 1458 60 0.02288454 Lucene_47
  there are a number of changes in the working conditions noted  these changes in the <B>environment</B> make necessary corresponding changes in the <B>processes</B> related to producing and checking out programs  in the main for the online user  it is the system surrounding the programming language  in this paper the online <B>environment</B> and its effect on programming are discussed  cacm march  1966 schwartz  j  <B>i</B>  ca660314 jb march 3
4 Q0 2920 61 0.022709716 Lucene_47
game interpretation of the deadlock avoidance <B>problem</B> the deadlock avoidance <B>problem</B> may be defined informally as the determination  from some a priori information about the <B>processes</B>  resources  operating system  etc   of the  safe situations  which may be realized <B>without</B> endangering the smooth steps  a global approach to the phenomenon and its in terpretation as a game <B>between</B> the operating
4 Q0 1931 62 0.022319011 Lucene_47
 by hasen and r  r  smith is compared with straightforward use of <B>i</B>  in determinant evaluation  computational results show the accuracy and running times that can be expected when using <B>i</B>  for determinant evaluation  an application using <B>i</B>  determinants in a program to test a set of functions to <B>see</B> papers  one by hansen and one by hansen and r  r  smith  have shown how interval arithmetic  <B>i</B>
4 Q0 1527 63 0.022026412 Lucene_47
a grammar base question answering <B>procedure</B> the subject of this paper is a <B>procedure</B>  through questions posed in natural language sentences  this <B>procedure</B> makes use of a sentence recognition device for the class of grammars which will correctly decide <B>between</B> the grammatical language  a set which can be exhaustively and <B>exclusively</B> generated by a grammar  based upon
4 Q0 3020 64 0.022009842 Lucene_47
 measurements of the cost of <B>procedure</B> linkage in pl <B>i</B> and the savings achievable via <B>procedure</B> integration is amplified and applied to a relatively complex pl <B>i</B> program  the aim is to demonstrate systematic are presented and our conclusions are briefly discussed  cacm february  1978 auslander  <B>m</B>  strong  h  recursion removal  recursion elimination  optimization  <B>procedure</B> linkage  <B>procedure</B> integration 4.19
4 Q0 1886 65 0.02169847 Lucene_47
 by first factoring the expressions  <B>i</B> e  finding a set of subexpressions each of which occurs in two <B>procedure</B> is applied which orders the factors and expressions such that all information is computed generated  the factorization algorithms are also applicable to the <B>problem</B> of factoring boolean  1969 breuer  <B>m</B>  a  factorization algorithms  code optimization  sequencing of operations  detection
4 Q0 2949 66 0.021351978 Lucene_47
 tajibnapis  w  d  <B>distributed</B> computer network  correctness proofs  computer networks  <B>distributed</B> control  network topology  routing <B>problem</B> in networks  <B>distributed</B> operating system  store and forwarda correctness proof of a topology information main tenance protocol for a <B>distributed</B> computer network in order for the nodes of a <B>distributed</B> computer network to communicate  each node must have
4 Q0 2541 67 0.021253632 Lucene_47
  and centralized the communication <B>mechanisms</B> enabling the construction of hierarchical subsystems scheduling algorithms  decision of what to do  <B>without</B> endangering the system integration  correctly performing the scheduling decisions   cacm february  1973 balzer  r  <B>m</B>  concurrent design  operating
4 Q0 2568 68 0.021111691 Lucene_47
 extension of the previous <B>work</B> is the introduction of variable length examinations where w <B>i</B>  is the number of periods for exam <B>i</B>  the object of this paper is to generalize the definition of largesta graph formulation of a school scheduling algorithm the <B>problem</B> classically titled  the examination schedule <B>problem</B>  takes various forms in the literature  most of these formulations can
4 Q0 2692 69 0.021087905 Lucene_47
 of vertices <B>without</B> repetition of first and last  in marked contrast to representation as a collection of edges as was heretofore the common <B>procedure</B>  output polygons have an identical format  with new the particularly difficult <B>problem</B> of detecting that a new vertex may be required at a corner hidden-surface computations  cacm january  1974 sutherland  <B>i</B>  e  hodgman  g  w  computer graphics
4 Q0 69 70 0.020918448 Lucene_47
statistical programs for the ibm 650-part <B>i</B> a collection is given of brief <B>descriptions</B> of statistical programs now in use in university computing centers which have ibm 650 s  cacm august  1959 hamblen  j  w  ca590804 jb march 22  1978 6 07 pm 69 5 69 69 5 69 69 5 69
4 Q0 2666 71 0.020645427 Lucene_47
  which together satisfy the long-term requirements of the timetable <B>problem</B>  cacm april  1974 smith  g  sefton  <B>i</B>  <B>m</B>  combinatorial  multi-index <B>problem</B>  necessary conditions  schedule  school the timetable <B>problem</B> is an essentially discrete <B>problem</B>  although the discrete <B>problem</B> may have no feasible solution  there may exist a solution to the equivalent continuous <B>problem</B>  an example is given
4 Q0 497 72 0.020475432 Lucene_47
 of subdivision u <B>i</B>  could be reduced to a discrete search  in this paper  the computational <B>procedure</B> showed how dynamic programming could be used to determine the solution to a <B>problem</B> previously considered by stone  the <B>problem</B> comprises the determination  given n  of the n points of subdivision shown that an equation for u <B>i</B>  involving no minimization may be found  in addition  it is shown
4 Q0 2767 73 0.020377124 Lucene_47
 study <B>would</B> be fruitful  cacm april  1975 vaucher  j  g  duval  p  simulation  time flow <B>mechanisms</B>  event list algorithm  simulation  time flow <B>mechanisms</B>  event list algorithm  simulation executive
4 Q0 3120 74 0.020340374 Lucene_47
 instead control structures  namely events and <B>processes</B>  the <B>work</B> of the compiler-writer becomes easier special processing for each <B>problem</B>  this technique has been applied to the construction of an algol 68 compiler  three <B>examples</B> from that implementation are described and discussed here  cacm january
4 Q0 1534 75 0.02018694 Lucene_47
 and is intended to allow the integration of a <B>remote</B> console  display  subsystem into a conventional job stack <B>environment</B>  the use of the drums  the buffering of input and output on slow peripherals  and the execution of normal job stack <B>work</B> are described  the display subsystem is described only
4 Q0 1166 76 0.020128032 Lucene_47
 of the address or tag of an incompatible instruction requires incorporation of an address-tag equivalent  <B>i</B> o is handled by generating <B>calls</B> to <B>i</B> o simulation subroutines  cacm december  1965 dellert jr   g  t be expressed by a single basic skeleton  several levels of macro <B>calls</B> are required to supply arguments
4 Q0 1622 77 0.020078957 Lucene_47
an efficient <B>procedure</B> for the generation of closed subsets an efficient algorithm is described for generating subsets of a set s which satisfy constraints of the form   if s <B>i</B>  is a member of the subset  then s j  must also be a member of the subset   the algorithm has been programmed in the wisp in multidimensional iterative networks  cacm march  1967 waite  w  <B>m</B>  ca670307 jb february 28  1978 1 18
4 Q0 1530 78 0.019668993 Lucene_47
the ml <B>i</B> macro processor a general purpose macro processor called ml <B>i</B> is described  ml <B>i</B> has been implemented on the pdp-7 and <B>i</B>  atlas 2 computers and is intended as a tool to allow users to extend any existing programming language by incorporating new statements and other syntactic forms of their own choosing and in their own notation  this allows a <B>complete</B> user-oriented language to be built
4 Q0 2592 79 0.019590404 Lucene_47
 to be generating correct solutions <B>without</B> ever having been  bench-marked  by test problems are there large problems with known solutions readily available  this paper presents a <B>theoretical</B> justification and have a wide range of numerical characteristics  cacm october  1974 charnes  a  raike  w  <B>m</B>  stutz  j  d  walters  a  s  linear programming  test <B>problem</B> generation  lp program evaluation  lp program
4 Q0 3105 80 0.019257376 Lucene_47
 <B>mechanisms</B>  this paper shows how to extend programming languages to provide controlled sharing  but is particularly suitable for extending languages that support the notion of <B>abstract</B> data types  cacm may  1978 jones  a  liskov b  programming languages  access control  data types  <B>abstract</B> data
4 Q0 1911 81 0.01907763 Lucene_47
 languages is considered within the frame <B>work</B> of transformational theory  to account for these phenomena to the syntactic analysis <B>problem</B> for this class of grammars is outlined  precise specification of both the generative <B>procedure</B> of this paper and its inverse is given in the form of lisp function definitions  cacm april  1969 petrick  s  r  postal  p  <B>m</B>  rosenbaum  p  s  natural languages
4 Q0 3018 82 0.01905765 Lucene_47
 a certain combinatorial optimization <B>problem</B> in connection with this method  this optimization <B>problem</B> is here shown to be equivalent to the <B>problem</B> of covering the edges of a graph by <B>complete</B> subgraphs with the objective of minimizing the number of <B>complete</B> subgraphs  a relationship <B>between</B> this edge-clique-cover <B>problem</B> and the graph coloring <B>problem</B> is established which allows algorithms
4 Q0 1145 83 0.018931787 Lucene_47
git-a heuristic program for testing pairs of directed line graphs for isomorphism  given a pair of directed line graphs  the <B>problem</B> of ascertaining whether or not they are isomorphic is one  git-graph isomorphism tester-incorporates a variety of <B>processes</B> that attempt to narrow down the search for an isomorphism  or to demonstrate that none exists  no one scheme is relied upon <B>exclusively</B>
4 Q0 2958 84 0.018801682 Lucene_47
 and <B>complete</B>  cacm june  1977 guttag  j  <B>abstract</B> data type  correctness proof  data type  data<B>abstract</B> data types and the development of data structures <B>abstract</B> data types can play presents and discusses the application of an algebraic technique for the specification of <B>abstract</B> data types  among the <B>examples</B> presented is a top-down development of a symbol table for a block structured
4 Q0 3103 85 0.018733859 Lucene_47
 only a single general purpose implementation for an <B>abstract</B> type  thus the programs produced using <B>abstract</B> types were then inefficient in space or time  in this paper a system for automatically choosing efficient <B>implementations</B> for <B>abstract</B> types from a library of <B>implementations</B> is discussed with <B>abstract</B> data types such as sets and lists  programmer time can be saved by automating
4 Q0 2890 86 0.018570568 Lucene_47
 network are constructed  one to find the optimal <B>message</B> routing and the other to illustrate maintained at each network node  simulation results are presented which confirm the <B>theoretical</B>  quadratic routing  alternate routing  store-and-forward network  <B>distributed</B> network  computer network  <B>message</B> switching 3.81 8.0 8.1 8.3 ca760103 jb january 5  1978 10 37 am 2890 5 2890 2890 5 2890
4 Q0 3088 87 0.01836493 Lucene_47
general equations for idealized cpu-<B>i</B> o overlap configurations general equations are derived for estimating the maximum possible utilization of main storage partitions  cpu and <B>i</B> o devices under different conditions in an idealized cpu-<B>i</B> o overlap model of multiprogrammed computer systems  the equations are directly applicable to any configuration consisting of sets of identical cpu s <B>i</B> o
4 Q0 1569 88 0.018300503 Lucene_47
implementing phrase-structure productions in pl <B>i</B> a method is described for implementing the productions of a context-free phrase structure grammar in a pl <B>i</B> <B>procedure</B> whose structure and statements parallel the structure and notation of the grammar  cacm july  1967 irwin  l  ca670704 jb february 28  1978 9 01 am 1569 5 1569 1569 5 1569 1569 5 1569
4 Q0 2232 89 0.018263105 Lucene_47
 in pattern recognition and the geometrical concept itself  the object of the <B>work</B> is to clarify how be obtained  the focus is on the <B>theoretical</B> subject matter  the results consist of a set-theoretic  and <B>descriptions</B> of alternate widths  all widths are calculated for an illustrative example  graphical
4 Q0 2406 90 0.018220585 Lucene_47
 as in advanced data management systems and <B>distributed</B> data bases  this paper reviews past <B>work</B>a data definition and mapping language a data definition language <B>i</B> sa declarative computer language for specifying data structures  most data definition languages concentrate on the declaration of logical data structures with little concern for how these structures are physically realized
4 Q0 1584 91 0.01816435 Lucene_47
<B>procedure</B> for the normal distribution functions  algorithm 272  s15   cacm june  1967 hill  <B>i</B>  d  joyce  s  a  ca670607l jb march 23  1978 3 40 pm 1584 5 1584 1584 5 1584 1584 5 1584
4 Q0 1485 92 0.017709687 Lucene_47
the structure of programming languages in this paper the major components of every programming language are identified as   1  the elementary program statement   2  <B>mechanisms</B> for linking elementary statements together   3  the means by which a program can obtain data inputs  several alternative forms of each of these components are also described  compared and evaluated  many <B>examples</B>
4 Q0 2631 93 0.017703444 Lucene_47
 june  1974 barton  <B>i</B>  j  creasey  s  e  lynch  <B>m</B>  f  snell  <B>m</B>  j  text searching  information theory treats text as a string of characters <B>rather</B> than words bounded by spaces  and chooses subsets
4 Q0 2515 94 0.017612852 Lucene_47
  produces event-node networks which are not minimal  since our <B>procedure</B> includes the set-covering <B>problem</B>minimal event-node network of project precedence relations a <B>procedure</B> for constructing a minimal event-node network to represent a set of precedence relations <B>without</B> parallel activities corneil  d  g  gotlieb  c  c  lee  y  <B>m</B>  network  project  event-node network  activity-node network
4 Q0 2376 95 0.017423522 Lucene_47
synchronization of <B>communicating</B> <B>processes</B> formalization of a well-defined synchronization mechanism can be used to prove that concurrently running <B>processes</B> of a system communicate correctly  this is demonstrated for a system consisting of many sending <B>processes</B> which deposit messages in a buffer and many receiving <B>processes</B> which remove messages from that buffer  the formal description
4 Q0 1350 96 0.017268348 Lucene_47
 -- gt  cy 1      y <B>m</B>    <B>m</B>  gt   o  where z and y <B>i</B>  are intermediate symbols and c a terminal symbol <B>descriptions</B> sd gs x  assigned to a given sentence x by the predictive analyzer  however  are usually different from the structural <B>descriptions</B> sd g x  assigned to the same sentence by the original context
4 Q0 1677 97 0.016817678 Lucene_47
 of system composition during execution  means of linkage <B>between</B> programs and from programs to data protection  addressing <B>mechanisms</B>  paging  segmentation  file handling 4.30 4.40 6.20 ca681102 jb february 21
4 Q0 1710 98 0.016806306 Lucene_47
 of the relationships <B>between</B> these data items may be represented  a special picture language is described which has by means of a series of macro <B>calls</B>  which are outlined in the appendix  emphasis is on the philosophy of the system <B>rather</B> than a particular implementation  though sufficient information is included
4 Q0 3108 99 0.016707422 Lucene_47
economical encoding of commas <B>between</B> strings a method for insertion of delimiters <B>between</B> strings <B>without</B> using new symbols is presented  as the lengths of the strings increase  the extra cost  in terms of prolongation  becomes vanishingly small compared to the lengths of the strings  cacm april  1978 even  s  rodeh  <B>m</B>  string transmission  delimiters  commas  encoding of the integers 3.57 3.81
4 Q0 3171 100 0.016683685 Lucene_47
line numbers made cheap a technique is described for run-time line number administration to be used for <B>implementations</B> of high level languages  under suitable circumstances  this method requires absolutely no overhead  in either time or space  during execution of the program  cacm october  1979 klint  p  line number administration  diagnostic messages  <B>abstract</B> machine code 4.12 4.13 4.20 4.42
*************Query 5*************************

5 Q0 1829 1 0.15504323 Lucene_47
 the <B>human</B> <B>user</B>  it also will respond to commands from a <B>user</B> program through a similar <B>interface</B>  where routine calls take the place of manual actions  thus the <B>human</B> and program can interact  the structure of the monitor program and the <B>human</B> and program <B>interfaces</B> are described  graphic <B>interface</B>  graphic in batch environment  <B>design</B> of graphical system 4.30 4.31 4.39 4.41 ca691101
5 Q0 2035 2 0.122878514 Lucene_47
 are available through a uniform <B>command</B> set which itself can be augmented by the <B>user</B>  the machine-machine communication  on-line <B>editing</B>  on-line <B>efficiency</B>  on-line environment  scroll <B>editing</B>  small which provides full facilities for text <B>editing</B>  automatic filing and file maintenance  and program preparation and assembly  it focuses on the preparation and <B>editing</B> of continuously displayed 23,040
5 Q0 2321 3 0.09978925 Lucene_47
on the <B>interface</B> between computers and data communications systems future systems that combine computers  digital terminals  and communications equipment present <B>design</B> optimization problems  several  standard  <B>interfaces</B>  by means of which computers and digital terminals connect to the communications systems will be required  when specifying these <B>interfaces</B>  consideration must be given
5 Q0 2629 4 0.09546072 Lucene_47
 of the file system and of the <B>user</B> <B>command</B> <B>interface</B>  cacm july  1974 ritchie  <B>d</B>  m  thompson  k  time demountable volumes   2  compatible file  device  and inter-process <B>i</B> o   3  the ability to initiate asynchronous processes   4  system <B>command</B> language selectable on a per-<B>user</B> basis  and  5  overthe unix time-sharing system unix is a general-purpose  multi-<B>user</B>  interactive operating system
5 Q0 3102 5 0.08686944 Lucene_47
 may  1978 karr  m  loveman iii  <B>d</B>  units  language <B>design</B>  compiler construction  language syntaxincorporation of units into programming languages the <B>issues</B> of how a programming language might aid in keeping track of physical units  feet  sec  <B>etc</B>   are discussed  a method is given for the introduction of relationships among units  a watt is volts amps  a yard is three feet  and subsequent
5 Q0 3147 6 0.08402591 Lucene_47
a model for automating file and program <B>design</B> in business application systems this paper discusses a model for finding an efficient <B>implementation</B> of a business application system whose logical specifications have been determined in advance  the model <B>views</B> file and program <B>design</B> as a problem works computationally an <B>d</B> is simple enough to be adapted to many file <B>design</B> situations  cacm june
5 Q0 2786 7 0.08341188 Lucene_47
a system for typesetting mathematics this paper describes the <B>design</B> and <B>implementation</B> of a system  and the <B>like</B> necessary to print according to mathematical conventions are all done automatically  for example  the input sum from <B>i</B> o to infinity x sub <B>i</B> pi over 2 produces  formula   the syntax a phototypesetter or on a terminal with forward and reverse half-line motions  the system <B>interfaces</B> directly
5 Q0 2299 8 0.07974802 Lucene_47
an extensible editor for a small machine with disk storage a <B>design</B> philosophy for developing a sophisticated utility program is illustrated by the actual <B>design</B> and <B>implementation</B> of a text editor <B>editing</B> function  cacm august  1972 benjamin  a  j  <B>command</B> processing  context searching  executive substitution  recursion  state table  storage allocation  string manipulation  text <B>editing</B>  virtual memory
5 Q0 1671 9 0.0792688 Lucene_47
 to the <B>user</B> after each <B>command</B> is executed  cacm november  1968 borrow  <B>d</B>  g  fraser  j  b  phonology  rulea phonological rule tester the <B>design</B> and <B>implementation</B> of a system to alleviate the problem of rule evaluation for the linguist in the area of phonology are presented  it permits the <B>user</B> to define  on-line  sets of rules statable within the framework presented in the sound patterns of english
5 Q0 1978 10 0.07540341 Lucene_47
 the problem area is that the <B>interface</B> with a <B>user</B> can be greatly simplified  in this paper we discuss some of the advantages accrued by such systems and <B>design</B> considerations for interactive routines  furthermore  an <B>implementation</B> of an on-line least squares data-fitting program  peg  is presented capabilities of the <B>human</B> problem solver  several on-line systems for general purpose mathematical problem
5 Q0 2873 11 0.07481335 Lucene_47
 of the possibility of using this language to <B>design</B> other <B>user</B> oriented languages  lg has been specificallylg  a language for analytic geometry a conversational programming language for analytic geometry is described  together with some aspects of its <B>implementation</B>  the language allows the flexible graphics  <B>interpreters</B>  analytic geometry 3.20 4.13 4.22 4.9 ca760403 jb january 4  1978 4 26 pm 2873 5
5 Q0 2106 12 0.07414094 Lucene_47
 to the belief that the creative <B>design</B> and evaluation of management information systems requires a thorough fulfill several criteria  it should   1  raise as few spurious <B>issues</B> as possible   2  allow  without undue effort  the solution of interesting problems   3  be capable of exposing all outstanding <B>issues</B> of significance  capable of exposing all outstanding <B>issues</B> of significance  within the chosen
5 Q0 3050 13 0.07008893 Lucene_47
systems <B>design</B> education  a gaming approach one of the problems facing <B>managers</B> of computer administrator and can be varied to simulate a variety of real-world situations  <B>i</B> o bound jobs  compute bound jobs  <B>etc</B>    the player of the game receives a set of detailed reports on the cost of his  system <B>design</B>  configuration  management game 2.43 2.44 ca781101 dh january 29  1979 11 43 am 2407 4 3050
5 Q0 2357 14 0.06368095 Lucene_47
  <B>implementation</B>  cost  overhead  and <B>user</B> reactions  cacm may  1972 christman  r  <B>d</B>  time-sharing  remote  <B>implementation</B> effort  operating overhead  <B>user</B> reactions  remote terminals  operating system 3.79 3.89 4.39 software <B>implementation</B>  although basically simple  provides the necessary elements to input and modify files  submit them for batch execution  and provide results at the <B>user</B> s terminal  a multiplexer
5 Q0 1605 15 0.059948426 Lucene_47
an experimental comparison of time sharing and batch processing the <B>effectiveness</B> for program  were specified as <B>design</B> factors in the experiment  data was obtained for six variables  e g   programmer time  computer time  elapsed time  <B>etc</B>   which were considered to be definitive of  system <B>effectiveness</B>   and analysis of variance techniques were employed to estimate system differences
5 Q0 1699 16 0.058956962 Lucene_47
 <B>command</B> language  symbolic <B>command</B> language  interactive systems  <B>user</B> learning factors  on-line  man-machine  language and on some of the mechanical and psychological limitations in their <B>design</B> in evaluation of such a system include ease of use  learning time  and <B>effectiveness</B> of actual retrieval  three
5 Q0 1409 17 0.057431348 Lucene_47
 mc as memory  the <B>design</B> objectives as originally conceived in a special seminar were   1  to be a research project in computer <B>design</B>   2  to be usable as an educational machine and  3  to have easily modifiable hardware for basic research in computer systems <B>design</B>  an unusual arrangement of information within the 22 mc memory allows a simple <B>interface</B> with the 340 kc arithmetic unit  which
5 Q0 1571 18 0.057196036 Lucene_47
 will be possible in the system <B>design</B> through determination of <B>interface</B> parameters betweena <B>user</B>-oriented time-shared online system an existing system and planned additions within the data processing laboratory of the brain research institute at ucla is described  the system represents an attempt to provide research workers of the institute with the ability to interact directly
5 Q0 1937 19 0.05712681 Lucene_47
codas  a data display system codas  a customer oriented data system  is a <B>user</B>-oriented data retrieval and display system  the <B>command</B> language of the system provides the <B>user</B> with an easy means system <B>design</B> are described  cacm february  1969 day  r  h  mansfield  m  k  ellis  m  e  data display  information retrieval  graphic display  <B>command</B> languages  report program generation  management
5 Q0 1764 20 0.055981796 Lucene_47
 on august 31  1967  was entitled education  <B>design</B> experiments  and computer appreciation  its second half consisted of a panel discussion on computer appreciation  organized and chaired by elliot <B>i</B> dam and arthur bohn  who had presented <B>papers</B> in the first half  this is a transcript of the panel to <B>papers</B> by van dam and kahn or to the discussion during the first half of the session  pertinent <B>papers</B>
5 Q0 2169 21 0.055236667 Lucene_47
 designed and implemented to handle large problems with ease and <B>efficiency</B>  considerable effort has been spent to ensure a minimum amount of machine dependence in the <B>implementation</B>  thus permitting a brief description of the language  run time data structures  and <B>implementation</B> is given  cacm august  1971 hall jr   a  <B>d</B>  symbolic algebra  rational function manipulation  polynomial manipulation
5 Q0 2003 22 0.054717667 Lucene_47
 <B>design</B> criteria provide the <B>user</B> with commands which are both simple and efficient in order to performan interactive software system for computers-aided <B>design</B>  an application to circuit project the characteristics of an interactive software system  intended to constitute an <B>interface</B> between designer and computer during various steps of the <B>design</B> process  are presented  the main emphasis is given
5 Q0 3137 23 0.054558486 Lucene_47
 the perspective of the end-<B>user</B>  the making evident the effect of various <B>design</B> and operating parameters on overall cost per transaction  the technique is illustrated by application to the <B>design</B> of an interactive transaction processing system  cacm april  1979 bucci  g  streeter  <B>d</B>  distributeda methodology for the <B>design</B> of distributed information systems a macro model of a distributed
5 Q0 2145 24 0.052866988 Lucene_47
 <B>design</B> of printed circuit boards  help helps automate a <B>design</B> stage one step closer to production than logical <B>design</B>  it can be used to <B>design</B> wiring patterns of two-layer circuit boards on which ics placed  help employs two methods of wiring  one is the heuristic method  which simulates <B>human</B> approaches to wiring <B>design</B>  and the other is the theoretically interesting but time-consuming method
5 Q0 3011 25 0.0528053 Lucene_47
 and where department users have less control over <B>design</B> and <B>implementation</B> activities  finally  management computing clearly has impacts for top <B>managers</B>  mostly involving <B>improvements</B> in decision
5 Q0 892 26 0.05153372 Lucene_47
recol-a retrieval <B>command</B> language an interrogation scheme is described for the retrieval  <B>editing</B> printed output  and summarizing the results of the above operations  some examples of a typical file application and the more significant features of a particular machine <B>implementation</B> are given  cacm march  1963 climenson  w  <B>d</B>  ca630328 jb march 14  1978 12 42 pm 1309 4 892 1324 4 892
5 Q0 2820 27 0.050822463 Lucene_47
the <B>design</B> and <B>implementation</B> of a table driven  interactive diagnostic programming system caps components of caps are table driven  both to reduce the space needed for <B>implementation</B> and to increase the flexibility of the multilingual system  over 500 students have used caps to learn fortran  pl <B>i</B>  error correction  <B>interpreters</B>  debugging  computer assisted instruction  computer science education
5 Q0 2483 28 0.049194746 Lucene_47
 selection  the tree searching algorithms are the heart of coko s <B>effectiveness</B>  yet coko s entire development just as it troubles a <B>human</B> player  standard exponential growth is curbed algorithms are described which could be used as a <B>command</B> structure by anyone desiring to do some chess program experimentation  a comparison is made of some mysterious actions of <B>human</B> players
5 Q0 1742 29 0.048104532 Lucene_47
  as it was found that successive <B>improvements</B> to the display processor <B>design</B> lie on a circular path  by making <B>improvements</B> one can return to the original simple <B>design</B> plus one new general purpose computeron the <B>design</B> of display processors the flexibility and power needed in the data channel factor in display processor <B>design</B>  cacm june  1968 myer  t  h  display processor <B>design</B>  display
5 Q0 1188 30 0.04776704 Lucene_47
an algol-<B>like</B> computer <B>design</B> language the idea of constructing a computer <B>design</B> language by making use of an algol-<B>like</B> programming language is presented  a computer designer can benefit from using a <B>design</B> language at a higher level just as a computer <B>user</B> can benefit from a higher level programming language  the purposes and requirements of the <B>design</B> language are enumerated  to achieve most
5 Q0 2138 31 0.04637762 Lucene_47
 machine  the pdp-10   compilers  operating systems  <B>etc</B>  prime <B>design</B> goals of the <B>design</B> for elements of the structure  cacm december  1971 wulf  w  a  russell  <B>d</B>  b  programming languages  <B>implementation</B> language  systems programming  data structures 4.12 4.21 4.22 ca711205 jb february 2
5 Q0 2247 32 0.04521452 Lucene_47
  an alternative approach to <B>implementation</B> which does not have this effect is sketched  cacm december  1972 parnas  <B>d</B>  l  software  modules  modularity  software engineering  kwic index  software <B>design</B> 4.0 the shortening of its development time  the <B>effectiveness</B> of a  modularization  is dependent upon the criteria used in dividing the system into modules  a system <B>design</B> problem is presented and both
5 Q0 1519 33 0.04518009 Lucene_47
 and off line jobs use a common <B>command</B> language  the system includes a multilevel device-independent file store  cacm november  1967 oestreicher  m  <B>d</B>  bailey  m  j  strauss  j  <B>i</B>  ca671101 jb february will run on a wide variety of configurations of the <B>i</B>  1900  and can handle a large number supervisor  ibsys  or gecos   or a multiaccess system  resembling  to the <B>user</B>  ctss or multics   or both
5 Q0 1651 34 0.043211326 Lucene_47
  use derives not at all from inherent limitations in the code itself  but from an <B>efficiency</B> handling than the input code described  from a <B>user</B> s standpoint  input appears almost exactly as a textbook presentation of the lp problem  limited only by a keypunch s inability to write subscripts  <B>etc</B>  the <B>user</B> may also  under very general requirements only  liberally use editorial comments throughout
5 Q0 1698 35 0.043138094 Lucene_47
 computations efficiently  it is quite difficult to characterize a particular <B>user</B>  but rather easy to characterize the entire <B>user</B> community  based on the properties of this community we have postulated a hypothetical  virtual console   no claim is made that a virtual console behaves <B>like</B> any actual console the model we answer questions <B>like</B>  how many processes are suspended waiting for console input  what
5 Q0 251 36 0.04273105 Lucene_47
ballistic cam <B>design</B> this paper presents a digital computer program for the rapid calculation of manufacturing data <B>essential</B> to the <B>design</B> of preproduction cams which are utilized in ballistic computers of tank fire control systems  the cam profile generated introduces the superelevation angle required by tank main armament for a particular type ammunition  cacm november  1961 archambault  m
5 Q0 2105 37 0.042555016 Lucene_47
 a method of programming by computer interpretation of a flowchart  the <B>user</B> draws a description of a sampled-data system and specifies description is transmitted to a large scale computer  the <B>design</B> <B>design</B> may require numerous modifications of the original <B>design</B>  a graphical interactive system  1970 robins  m  f  beyer  j  <B>d</B>  simulation program  graphical input-output sampled data systems 3.20
5 Q0 2469 38 0.04235997 Lucene_47
 by the <B>design</B> of a speed independent processor from modules developed in the investigation of petri net <B>implementation</B>  cacm august  1973 misunas  <B>d</B>  speed independent asynchronous  petri net 6.1 6.33petri nets and speed independent <B>design</B> petri nets are investigated as one method of modeling speed independent asynchronous circuits  a study of circuit realizations of petri nets leads
5 Q0 2534 39 0.041705303 Lucene_47
<B>design</B> and <B>implementation</B> of a diagnostic compiler for pl <B>i</B> pl c is a compiler for a dialect for pl <B>i</B>  the <B>design</B> objective was to provide a maximum degree of diagnostic assistance in a batch  and the <B>design</B> of pl c is dominated by this consideration  pl c also introduces several explicit <B>user</B> of every program submitted and continues execution until a <B>user</B>-established error limit is reached
5 Q0 1923 40 0.041482605 Lucene_47
pseudofiles an approach to system <B>interfaces</B> for high level languages using basic input output methods for programs to communicate with deeply embedded facilities such as <B>command</B> language processors  cacm march  1969 rosin  r  f  operating systems  <B>interfaces</B> input-output  high level languages  <B>command</B> language 4.22 4.30 4.31 4.41 ca690304 jb february 20  1978 9 12 am 1923 5 1923 1923 5 1923
5 Q0 3087 41 0.041180626 Lucene_47
 of aircraft flight and maintenance data using a system called planes  the <B>design</B> and <B>implementation</B> of important <B>issues</B> in programming natural language systems for limited domains  and the relationship of this system to others  cacm july  1978 waltz  <B>d</B>  question answering  relational database  natural
5 Q0 1281 42 0.04115237 Lucene_47
 in this paper  instead of using format statements to determine the input  the computer asks the <B>user</B> for the required values one at a time  the computer converses with the <B>user</B> during the input process  checks for errors  provides standard data  and allows <B>editing</B> of values input  cacm april  1965 pyle  <B>i</B>  c  ca650410 jb march 7  1978 3 48 pm 1281 5 1281 1281 5 1281 1281 5 1281
5 Q0 2542 43 0.04109936 Lucene_47
a software <B>design</B> and evaluation system a critical failure of current software system <B>design</B> and <B>implementation</B> methodology is that the performance of a proposed <B>design</B> is not evaluated before evaluation with <B>design</B> and <B>implementation</B> is described  this system is based on a simple  high level reimplementation of the proposed system  cacm february  1973 graham  r  m  clancy  g  j  jr  devaney  <B>d</B>  b
5 Q0 2314 44 0.0400395 Lucene_47
 the requirements specified are applicable to the <B>design</B> of advanced programming systems for a wide range features are described to facilitate program composition  entry  testing  debugging  <B>editing</B>  optimization  and packaging  <B>implementation</B> of a generalized environment structure model specified would allow facilitate use of complex data stores  cacm july  1972 bobrow  <B>d</B>  g  list processing  programming
5 Q0 2396 45 0.03975326 Lucene_47
  based on a semantic memory network <B>like</B> that of quillian s tlc  muse  from a model to understand and the addition of new ones  muse also has a repertoire of actions  which range from <B>editing</B> and reporting from examples and performs various actions  cacm january  1972 mccalla  g  <B>i</B>  sampson  j  r  natural intelligence  <B>human</B> memory simulation 3.36 3.42 3.62 3.65 3.74 ca720107 jb february 1  1978 9 20 am 1400 4
5 Q0 1238 46 0.038705368 Lucene_47
a technique for integrated reports from a multi-run system the requirements of a requisition accounting system for the san francisco overseas supply agency  osa  included exception reporting to osa itself  the simultaneous <B>satisfaction</B> of the reporting requirement and the accounting requirements posed definite problems in system <B>design</B>  particularly the handling of the reporting function
5 Q0 2812 47 0.03775196 Lucene_47
computer-aided analysis and <B>design</B> of information systems this paper describes the use of computer-aided analysis for the <B>design</B> and development of an integrated financial management system by the navy material <B>command</B> support activity  nmcsa   computer-aided analysis consists of a set of procedures and computer programs specifically designed to aid in the process of applications software <B>design</B>
5 Q0 1408 48 0.037045103 Lucene_47
 <B>improvements</B>  in this paper the problem is attacked not by changing the drum  but rather  then a simple <B>design</B> scheme  eschenbach  is introduced which enormously increases the rate of accessing expensive drums  it is suggested that although the <B>design</B> scheme has a specific use  the method  to deal with this  a standard of <B>efficiency</B> is developed in light of realistic real-time
5 Q0 2841 49 0.035383224 Lucene_47
designing surfaces in 3-<B>d</B> an experimental system for computer-aided <B>design</B> of free-form surfaces graphics  computer-aided <B>design</B>  picture processing  b-splines  3-<B>d</B> displays 3.80 6.22 8.2 ca760803 jb   which allows 3-<B>d</B> movements of the points controlling the shapes of the surfaces   2  all no knowledge of them by the <B>user</B> of the system  also examined are some of the features that should
5 Q0 3012 50 0.035350498 Lucene_47
 on <B>user</B> reactions were gathe red from a questionnaire  the results show the important role played of the study for the <B>design</B> of similar systems are discussed  cacm march  1978 lucas  hr  <B>implementation</B>  system use  information storage and retrieval system 2.10 3.50 3.72 ca780301 jb march 28  1978
5 Q0 3031 51 0.03430455 Lucene_47
  this <B>implementation</B> allows for limited testing of programs at <B>design</B> time  before a conventional <B>implementation</B> is accomplished  cacm december  1978 guttag  j  horowitz  e  musser  <B>d</B>  abstract data type at successive levels of <B>implementation</B>  the major thrust of the paper is twofold  first  it is shown how of an <B>implementation</B> of an abstract data type  second  semi-automatic tools are described which can be used both
5 Q0 2887 52 0.03374187 Lucene_47
  possible error-including <B>design</B>  and lack of research  the types of errors were identified frequency  which implies high potential <B>effectiveness</B> for software based correction of cobol  surprisingly  only four high-frequency errors were error-prone  which implies minimal error inducing <B>design</B>  particularly for the learning <B>user</B> of cobol  cacm january  1976 litecky  c  r  davis  g  b  errors
5 Q0 1824 53 0.033361126 Lucene_47
 to an algorithmic language  pl <B>i</B>  that provides the pattern-matching capabilities normally found only in special in a bnf-<B>like</B> format  these parse-requests form their own programming language with special sequencing rules  upon successfully completing a parse-request  an associated piece of pl <B>i</B> code is executed  this code has available for use  as normal pl <B>i</B> strings the various pieces  at all levels
5 Q0 2771 54 0.032960247 Lucene_47
 bounded by many faces  cacm april  1975 braid  <B>i</B>  c  computational geometry  computer-aided <B>design</B>the synthesis of solids bounded by many faces a technique is presented which allows a class of solid objects to be synthesized and stored using a computer  synthesis begins with primitive solids <B>like</B> a cube  wedge  or cylinder  any solid can be moved  scaled  or rotated  solids may also be added
5 Q0 1853 55 0.032817192 Lucene_47
 are described  finally  consideration is given to those <B>design</B> factors <B>essential</B> to the success of a plex processing system <B>implementation</B>  cacm september  1969 hansen  w  j  data structure  datacompact list representation  definition  garbage collection  and system <B>implementation</B> compact lists are stored sequentially in memory  rather than chained with pointers  since this is not always
5 Q0 2380 56 0.032790847 Lucene_47
 of goals which are important for any time sharing system  it describes how the tenex <B>design</B> and <B>implementation</B> achieve these goals  these include specifications for a powerful multiprocess large memory virtual machine  intimate terminal interaction  comprehensive uniform file and <B>i</B> o capabilities  and clean flexible system structure  although the <B>implementation</B> described here required some compromise
5 Q0 2572 57 0.032654803 Lucene_47
 the author urges a prudent and decentralized approach to the question of the <B>design</B> and desirability is proposed   5  take steps to involve a representative group of ultimate users in systems <B>design</B> in a prototype community or the acceptance of a policy in favor of its widespread <B>implementation</B>  cacm december  1974 press  l  <B>i</B>  community information utilities  social implications  public policy 2.1 2.3
5 Q0 1960 58 0.03078999 Lucene_47
 the <B>design</B> rather than on <B>implementation</B> details  the main features of the system include the ability given to any <B>user</B> to schedule his own parallel processes using system primitive operations  the fileprocess management and resource sharing in the multiaccess system esope the main <B>design</B> principles information about <B>user</B> behavior  cacm december  1970 betourne  c  boulenger  j  ferrie  j  kaiser  c
5 Q0 1435 59 0.030019406 Lucene_47
<B>design</B> of computer simulation experiments for industrial systems the aim of this paper is to provide background information on the existing literature on experimental <B>design</B> techniques which may be applicable to the <B>design</B> of computer simulation experiments for industrial systems  although major four specific experimental <B>design</B> problems and several techniques for solving them  the four
5 Q0 3035 60 0.029785516 Lucene_47
 was developed and tested through <B>implementation</B> at a university  two years after the methodology was implemented  the <B>effectiveness</B> of the planning methodology was assessed in terms of the improvement  and administration  two control institutions were employed to contrast the <B>improvements</B> at the test
5 Q0 1810 61 0.02898404 Lucene_47
 on an automatic folding mechanism of simple <B>design</B>  a demand paging unit built at the ibm research center under the conditions tested  even though it is operating across a memory-to-storage <B>interface</B> become a normal part of most computing systems  cacm december  1969 sayre  <B>d</B>  paging  automatic
5 Q0 2622 62 0.028847022 Lucene_47
a <B>user</B> authentication scheme not requiring secrecy in the computer in many computer operating systems a <B>user</B> authenticates himself by entering a secret password known solely to himself and the system  this function is applied to the <B>user</B> s password and the result compared to a table entry  a match being interpreted as authentication of the <B>user</B>  the intruder may know all about h and have access
5 Q0 1135 63 0.028552981 Lucene_47
  the approach adopted here departs from conventional mechanical language <B>design</B> philosophies to emphasizing formal  <B>i</B> e   contents-independent  syntactical definitions  it relies exclusively  there are no control statements such as go to  <B>etc</B>    instead of using procedure descriptions  which
5 Q0 2957 64 0.027534442 Lucene_47
 <B>implementation</B> detail  should be incorporated into programming languages  cacm june  1977 smith  j  m  smith  <B>d</B>  c  p  data abstraction  relational database  data type  aggregation  database <B>design</B> are important in database <B>design</B>  a top-down methodology for database <B>design</B> is described which separates
5 Q0 1252 65 0.02748425 Lucene_47
symbolic notations for statistical tables and an approach towards automatic system <B>design</B> the preparation of statistical tables is an important function of the data processing systems of some and time-consuming part of system <B>design</B> and programming in many computer applications  one notation is described and suggestions are made for the <B>implementation</B> of the larger goal  cacm june  1965 smith  b
5 Q0 2514 66 0.026673578 Lucene_47
an array grammar programming system a package of fortran programs has been developed that permits a <B>user</B> to interactively <B>design</B> and test array grammars  the <B>user</B> can control the rule selection procedure in a derivation or parse  using weighted programming matrices  he also has a choice of instance selection schemes  raster random  parallel   examples are given involving array languages
5 Q0 1603 67 0.026587995 Lucene_47
 additions provide a uniform device to machine <B>interface</B> for such elements as keyboards graphic input devices  and interval timers  the software relieves the <B>user</B> program from the details of input output timing  buffering  and task scheduling and provides parallel processing capability  <B>user</B> programs-language subroutine calls  cacm may  1967 hornbuckle  g  <B>d</B>  ca670503 jb february 28  1978 10 57 am
5 Q0 1747 68 0.026005492 Lucene_47
 reproducibility of output  these criteria imply that a <B>user</B> can  if he desires  either know or control all  and the assignment of capability indexes  cacm may  1968 van horn  e  c  computer <B>design</B>  computer <B>design</B> criteria  computer systems  computer systems <B>design</B>  input equipment  input equipment <B>design</B>  operating systems  operating systems <B>design</B>  multiprogramming  multiprogrammed systems  multiprogrammed system
5 Q0 2201 69 0.025878945 Lucene_47
 and error <B>design</B> of picture sequences in a conversational mode  during all stages on the system input elements  light pen  pushbuttons  and teletype  is maintained  at the <B>user</B> s request  this record is sent to the ibm 360 75 where the s-<B>d</B> 4020 instructions necessary to produce the same sequence
5 Q0 1101 70 0.025759557 Lucene_47
the place of logical <B>design</B> and switching theory in the computer curriculum cacm april  1964 muller  <B>d</B>  e  ca640407 jb march 10  1978 1 49 am 1101 5 1101 1101 5 1101 1101 5 1101
5 Q0 2407 71 0.024834486 Lucene_47
 of <B>implementation</B> are discussed  cacm december  1973 couger  j  <B>d</B>  education  undergraduate curricula  management systems  information systems  information analysis  system <B>design</B>  systems analysis 1.52
5 Q0 3028 72 0.024751686 Lucene_47
the manchester mark <B>i</B> and atlas  a his torical perspective in 30 years of computer <B>design</B> at manchester university two systems stand out  the mark <B>i</B>  developed over the period 1946-49  and the atlas the architecture and system software in present-day terminology  several <B>design</B> concepts such as address-generation and store management have evolved in the progression from mark <B>i</B> to atlas  the wider impact
5 Q0 2535 73 0.024653021 Lucene_47
 a <B>user</B> to the computer and  consequently  affects the performance of a time-shared computer delays are reduced  these <B>improvements</B> are offset by the transmission delays imposed by multiplexing  analytical and simulation results are based on the model of the computer-communications system being an m <B>d</B> results include a general description of the output process of an m <B>d</B> 1 queue and the conditions under
5 Q0 3040 74 0.024367042 Lucene_47
 tree search <B>efficiency</B>  an algorithm is developed that can achieve any level of consistency desired  backtrack  combinatorial algorithms  constraint networks  constraint <B>satisfaction</B>  graph coloring  network
5 Q0 2399 75 0.024158558 Lucene_47
a crt <B>editing</B> system a test-<B>editing</B> and manipulation program is described  the program operates from low-cost cathode-ray tube entry and display stations with keyboard and 13 function buttons  applications  potential economy of operation  and some aspects of <B>implementation</B> are discussed  cacm january  1972 irons  e  t  djorup  f  m  <B>editing</B>  text  cathode-ray tube entry display  time-sharing 3.7
5 Q0 2252 76 0.023886489 Lucene_47
 can be nested  such as algol and pl <B>i</B>   the method permits <B>editing</B> of the source language using of entire routines  the <B>essential</B> points of the method are   1  the syntax of the language is restricted in the sense that recompilation of modified lines does not occur until the last of a set of <B>editing</B>
5 Q0 3127 77 0.023883417 Lucene_47
  it has the same <B>interface</B> to <B>user</B> programs  hence  application programs which use thoth are highly efficient interprocess communication primitives  cacm february  1979 cheriton  <B>d</B>  malcolm  m  melen  l
5 Q0 1534 78 0.02355793 Lucene_47
dad  the c  operating system the <B>design</B> and <B>implementation</B> of the c  operating system  dad  is described in detail  this system is designed for the control data 3600 using a large drum backing store and is intended to allow the integration of a remote console  display  subsystem into a conventional are given  and an assessment is made of the validity of various <B>design</B> decisions  performance figures
5 Q0 3146 79 0.02263993 Lucene_47
 magnitude and complexity  under this program  students can acquire <B>essential</B> skills of software engineering  such as team work  software project management  software <B>design</B> methodology
5 Q0 2151 80 0.022496725 Lucene_47
<B>user</B> program measurement in a time-shared environment a general discussion of the measurement of software systems is followed by a description of a hardware and software scheme for measuring <B>user</B> for the <B>implementation</B> of such a system and the characteristics of this <B>implementation</B> are reported  a scenario provide similar measuring facilities  cacm october  1971 nemeth  a  g  rovner  p  <B>d</B>  operating systems
5 Q0 1159 81 0.022494024 Lucene_47
 trends in computer <B>design</B>  and that it is this process of convergence in hardware <B>design</B> rather than any halpern  m  <B>i</B>  ca651210 jb march 6  1978 3 44 pm 1159 4 1159 1988 4 1159 381 4 1159 1159 5 1159
5 Q0 2971 82 0.02242149 Lucene_47
 and can be learned or implemented without the following subsets  cacm may  1977 holt  r  c  wortman  <B>d</B>  b  barnard  <B>d</B>  t  cordy  j  r  programmer education  universities  community colleges  high schools  pl <B>i</B>  sp k  minicomputers  programming language <B>design</B>  teaching programming  in troductorysp k  a system for teaching computer programming sp k is a compatible subset of the pl <B>i</B> language
5 Q0 2947 83 0.022062918 Lucene_47
  it is implemented on a pdp 11 time-sharing computer invoked by a crt with microprogrammed <B>editing</B> functions  it uses a simple <B>command</B> language designating a function  a file  and a search template consisting  information retrieval  text <B>editing</B>  minicomputers  crts time sharing  bibliographic search and retrieval  literary analysis  linguistic analysis  <B>command</B> languages 3.4 3.7 ca770705 jb december 28  1977 10 20
5 Q0 2522 84 0.022011714 Lucene_47
the <B>design</B>  <B>implementation</B>  and evaluation of a working set dispatcher the behavior of a computer system is largely dependent upon the algorithms employed to allocate the system resources to the processes competing for them  recent research in time-sharing paging systems has developed the working case have further results been announced  this report discusses the <B>design</B> and <B>implementation</B>
5 Q0 2484 85 0.021908924 Lucene_47
 in different information structures  as list  tree  ring  <B>etc</B>  thus the problem of information set of constraints  the results presented may be valuable to designers as useful <B>design</B> concepts
5 Q0 1053 86 0.021790484 Lucene_47
<B>design</B> and <B>implementation</B> of a general-purpose input routine a general-purpose input routine is discussed and advocated for fortran  the philosophy of such programs is examined and exemplified  cacm june  1964 hassitt  a  ca640614 jb march 9  1978 9 27 pm 1053 4 1053 1053 4 1053 1053 4 1053 1053 4 1053 720 4 1053 1053 5 1053 1053 5 1053 1053 5 1053 1649 5 1053 435 5 1053 474 5 1053 718 5 1053 720
5 Q0 2181 87 0.021724999 Lucene_47
 and economic <B>issues</B>  this presentation gives a summary of the discussions  a condensation of the pedagogic and substantive concerns raised  and consideration of the resource allocation <B>issues</B>  m  university programs  management education  curriculum <B>design</B>  business administration curricula
5 Q0 2217 88 0.02168053 Lucene_47
  a number of experiments were performed to test the <B>effectiveness</B> and generality of the learning program  results showed that the learning produced dramatic <B>improvements</B> in the solutions to problems which  cacm february  1971 slagle  j  r  farrell  c  <B>d</B>  learning  theorem-providing  heuristic  automatic
5 Q0 1708 89 0.021421382 Lucene_47
 problem  cacm august  1968 borrow  <B>d</B>  g  murphy  <B>d</B>  l  storage management  list processor <B>implementation</B>  lisp  paging  secondary storage utilization  <B>efficiency</B> of paged computation 3.7 4.1 4.2a note on the <B>efficiency</B> of a lisp computation in a paged machine the problem of the use of two levels of storage for programs is explored in the context of a lisp system which uses core memory
5 Q0 1030 90 0.02140971 Lucene_47
techniques for the simulation of computer logic the simulation of a digital computer is an integral part of most computer <B>design</B> automation systems  the evaluation of the boolean functions which characterize the computer being simulated constitutes one major portion of a simulation system  four <B>efficiency</B> of a simulation system  methods are presented for simultaneously evaluating many functions
5 Q0 2246 91 0.02140971 Lucene_47
  into the assembly language of each desired object machine  the <B>design</B> of the machine-independent language  p  j  portable software  level of language  machine independent  macro processor  <B>efficiency</B> 4.12
5 Q0 537 92 0.021176819 Lucene_47
a machine program for theorem-proving the program of a proof procedure is discussed in connection with trial runs and possible <B>improvements</B>  cacm july  1962 davis  m  logemann  g  loveland  <B>d</B>  ca620724 jb march 17  1978 8 11 pm 537 5 537 537 5 537 537 5 537
5 Q0 3025 93 0.02112785 Lucene_47
 are described in terms of technological change  <B>user</B> requirements  and <B>user</B> developments  the pdp-10  to minicomputer <B>design</B> and manufacturing  supporting minicomputer hardware and software development  and serving as a model for single <B>user</B> and timeshared interactive minicomputer microcomputer systems  cacm
5 Q0 1465 94 0.021059839 Lucene_47
program translation viewed as a general data processing problem <B>efficiency</B> dictates that the overall <B>effectiveness</B> of a compiler be increased by all means available  for a compiler to have a substantial useful life it needs a clear logical structure  reliability and sound data processing techniques  a compiler must be based on fixed conventions to preserve <B>efficiency</B> and reliability  empty
5 Q0 2358 95 0.02092883 Lucene_47
 of size and access privilege  here  the <B>design</B> and <B>implementation</B> considerations of segmentationthe multics virtual memory  concepts and <B>design</B> as experience with use of on-line operating systems has grown  the need to share information among system users has become increasingly apparent  many storage  through the use of segmentation  however  multics provides direct hardware addressing by <B>user</B>
5 Q0 1844 96 0.020703157 Lucene_47
a modular computer sharing system an alternative approach to the <B>design</B> and organization of a general purpose interactive multiterminal computing system is presented  the system organization  thus  while each active terminal <B>user</B>  occupies  a dedicated disk drive  he may share the computer system if compatible computers are used  cacm october  1969 baskin  h  b  horowitz  e  b  tennison  r  <B>d</B>
5 Q0 1769 97 0.02055886 Lucene_47
 of <B>human</B> work activity changes from production to service  computer developments in hardware  computer-aided <B>design</B>  problem-oriented languages  data communication  education  computer science
5 Q0 2956 98 0.020180332 Lucene_47
some ideas on data types in high-level languages a number of <B>issues</B> are explored concerning the notion that a data type is a set of values together with a set of primitive operations on those values of the more narrow for <B>i</B>   1 to n notation   the use of the domain of an array as a data type june  1977 gries  <B>d</B>  gehani  n  data types  generic procedures  programming languages 4.12 4.20 4.22
5 Q0 2716 99 0.020170411 Lucene_47
optimizing the performance of a relational algebra database <B>interface</B> an approach for implementing a  smart  <B>interface</B> to support a relational view of data is proposed  the basic idea is to employ automatic programming techniques so that the <B>interface</B> analyzes and efficiently refines the high level query specification supplied by the <B>user</B>  a relational algebra <B>interface</B>  called squiral  which
5 Q0 1962 100 0.020152997 Lucene_47
 creating  storing  reproducing  and <B>editing</B> functions of time is described  the functions are typical of those generated by <B>human</B> beings  multiple functions  up to 14  are produced for long periods of time  up to several hours  at sufficiently high sampling rates to describe fast <B>human</B> reactions  up-time <B>human</B> inputs to the computer which can interact with already stored functions and computed
*************Query 6*************************

6 Q0 2826 1 0.15596727 Lucene_47
interactive skeleton techniques for enhancing <B>motion</B> <B>dynamics</B> in key frame animation a significant increase in the capability for controlling <B>motion</B> <B>dynamics</B> in key frame animation is achieved through skeleton control  this technique allows an animator to develop a complex <B>motion</B> sequence by animating a stick figure representation of an image  this control sequence is then used to drive an image
6 Q0 695 2 0.101936825 Lucene_47
use of the disk file on stretch the paper begins by briefly describing the stretch  ibm 7030  computer with special emphasis given to the organization and operation of its input-output equipment  physical characteristics of the two-disk system  4,194,304 72-bit words  8 usec-per-word transmission rate  etc   are noted  timing limitations due to <B>arm</B> <B>motion</B> and disk rotation are discussed
6 Q0 2828 3 0.09071245 Lucene_47
hierarchical <B>geometric</B> models for visible surface algorithms the <B>geometric</B> structure inherent their relative <B>motion</B> and placement  but also to assist in solving many other problems of systems  or a <B>geometric</B> hierarchy  five significant improvements to current techniques are possible  first in primary store for immediate access by the visible surface algorithm  finally  the <B>geometric</B> structure
6 Q0 531 4 0.08572883 Lucene_47
 because of name misspellings  changes of name upon marriage  and other problems  <B>we</B> are <B>interested</B> computer  honeywell 800   here <B>we</B> present in more detail our initial procedures for the person-matching
6 Q0 2931 5 0.07443831 Lucene_47
  though <B>we</B> have many examples  <B>we</B> have still to give wide-ranging mathematical answers to these queries  the statics of the problem  and how they are to be transformed  the <B>dynamics</B>   so far the theories of automata and of nets  though most in teresting for <B>dynamics</B>  have formalized only a portion of the field  and there has been perhaps too much concentration on the finite-state and algebraic <B>aspects</B>  it would
6 Q0 2721 6 0.06472345 Lucene_47
the digital simulation of river plankton population <B>dynamics</B> this paper deals with the development methods  a simulation of the actual population <B>dynamics</B> of asterionella in the columbia river ecosystems  as well as in environmental <B>planning</B> involving such examinations  cacm september  1975 claudson  r  m  digital simulation  mathematical modeling  plankton population <B>dynamics</B>  phytoplankton
6 Q0 435 7 0.06304066 Lucene_47
  but rather occurs by an evolutionary process  <B>we</B> should be concerned also with the problem area that the author is <B>interested</B>  a method employing a decision matrix is presented
6 Q0 1014 8 0.057936806 Lucene_47
machine controls for analysis of variance a major problem in using the analysis of variance  as the number of factors increases  is the exponential rise in the number of interactions  even though the experimenter may not be <B>interested</B> in these interactions it is impossible to ignore them in most experimental designs because of the problem of getting error terms  it is natural therefore to look
6 Q0 605 9 0.056174614 Lucene_47
computer simulation of city traffic in simulating traffic flow on city streets  the national bureau of standards has used data processing techniques to tabulate and make <B>motion</B> pictures of vehicle movements in the model  each vehicle is assigned a digital identification giving points of entry and exit  type of vehicle  desired speed  and actual speed  in proportions simulating field data  changes
6 Q0 1543 10 0.055598445 Lucene_47
computer formulation of the equations of <B>motion</B> using tensor notation a means is described for extending the area of application of digital computers beyond the numerical data processing stage  a digital computer has been used to derive the equations of <B>motion</B> of a point mass in a general will derive the equations of <B>motion</B> in any coordinate system requested by the user  results
6 Q0 2230 11 0.051756598 Lucene_47
a language for treating <B>geometric</B> patterns in a two-dimensional space in this paper cadep  a problem-oriented language for positioning <B>geometric</B> patterns in a two-dimensional space  is presented  urban <B>planning</B>  logical and block diagram representation  the design criteria  the structure  layout problems  integrated circuit  architecture design  urban <B>planning</B> 3.23 3.24 3.25 4.22 ca710104
6 Q0 1623 12 0.04966012 Lucene_47
 engineering problem  although readers may be <B>interested</B> in the problem because it is stated in a general
6 Q0 1867 13 0.04966012 Lucene_47
on the expected lengths of sequences generated in sorting by replacement selecting in the replacement-selecting technique of sorting  one is <B>interested</B> in the ratio l j  of the expected length of the j-th sequence generated by the technique to the number of memory cells used  using complex-variable theory  it is shown that l j  - gt  2 and that  asymptotically  the average interval between sign
6 Q0 2873 14 0.048891403 Lucene_47
lg  a language for analytic geometry a conversational programming language for analytic geometry is described  together with some <B>aspects</B> of its implementation  the language allows the flexible definition of <B>geometric</B> objects and elements  computes their parameters  and displays the results  it also provides the capability of specifying a <B>geometric</B> figure via a collection of parameters
6 Q0 1341 15 0.045888595 Lucene_47
levels of computer systems in building current computer systems  <B>we</B> tend to break them down into  levels  of control  command and communication  in using the system  <B>we</B> break our problems down on the usefulness of future systems  <B>particularly</B> with regard to such trends as time sharing  parallel programming  and the general attitude <B>we</B> must take in pursuing the problem further is discussed  cacm december  1966 bryant  p
6 Q0 492 16 0.04138343 Lucene_47
 to address a record  is computed on the basis of a markov chain model  for the reader not <B>interested</B>
6 Q0 438 17 0.040124726 Lucene_47
mechanical pragmatics  a time-<B>motion</B> study of a miniature mechanical linguistic system cacm december  1962 gorn  s  ca621201 jb march 17  1978 5 19 pm 249 4 438 267 4 438 1134 4 438 1139 4 438 1141 4 438 1141 4 438 1215 4 438 1223 4 438 1425 4 438 1647 4 438 1781 4 438 1781 4 438 1787 4 438 1792 4 438 364 4 438 364 4 438 405 4 438 405 4 438 438 4 438 438 4 438 438 4 438 438 4 438 561 4 438 44 4
6 Q0 1397 18 0.033106744 Lucene_47
proceedings of the acm symposium on symbolic and algebraic manipulation the acm symposium on symbolic and algebraic manipulation brought together over four hundred people <B>interested</B> in programming languages designed for manipulation of algebraic formulas and symbol strings  in their applications  and in algorithms for their implementation  twenty-eight papers were presented  followed by a lively
6 Q0 417 19 0.032863263 Lucene_47
 during the <B>planning</B> stage  techniques are suggested for making legal clearance effective with the least <B>aspects</B> of computer systems involved in legal situations  cacm december  1962 freed  r  n  ca621222 jb
6 Q0 1365 20 0.03209978 Lucene_47
  and generation of the coefficients of equations in keplerian <B>motion</B>  these types of analysis-which arose
6 Q0 1664 21 0.03209978 Lucene_47
an algorithm for deriving the equations of mathematical physics by symbolic manipulation a method is described whereby a digital computer can be used to derive the equations of mathematical physics in any curvilinear coordinate system requested by the user  the effectiveness of the technique is demonstrated by using it to derive the navier-stokes equations of fluid <B>motion</B> and the continuity
6 Q0 616 22 0.028968403 Lucene_47
  and all those <B>interested</B> in developing a theoretical approach to data processing   b  with interest
6 Q0 670 23 0.028221758 Lucene_47
 and provide for many legal <B>aspects</B> right now  before systems and practices crystallize  in order to avoid the later impact of unanticipated physical complications and expense  the legal <B>aspects</B> cooperatives  more challenging are questions relating to off-premises processors  <B>particularly</B> by banks for nonbank entities and <B>particularly</B> of the rendering of that service without charge for bank
6 Q0 1385 24 0.027386054 Lucene_47
computer technology in communist china  1956-1965 based on information from translations of communist chinese news items and periodical literature for the 1965 period  computer technology in china is reviewed under the following headings   1  initial <B>planning</B>  organization and educational <B>aspects</B> of computer technology and automation   2  machine development progress  two major specific machines
6 Q0 1234 25 0.024074834 Lucene_47
the structure of yet another algol compiler a high-speed  top down  method of syntax analysis which completely eliminates  back-up  of the source string has been implemented in a convenient macro-language  a technique of simulation at compile time of the use of a conventional run-time stack enables the generation of code for expressions which minimizes stores  fetches and stack-pointer <B>motion</B>
6 Q0 242 26 0.023410004 Lucene_47
notes on <B>geometric</B> weighted check digit verification this note describes a method for utilizing <B>geometric</B> weight modulus 11 checking digits on a computer which does not have either multiplication or division  in addition some attempt has been made to show some limitations of this system  cacm december  1961 wilson  j  g  ca611208 jb march 15  1978 10 17 pm 242 5 242 242 5 242 242 5 242
6 Q0 1885 27 0.022630787 Lucene_47
a computer system for transformational grammar a comprehensive system for transformational grammar has been designed and implemented on the ibm 360 67 computer  the system deals with the transformational model of syntax  along the lines of chomsky s <B>aspects</B> of the theory of syntax  the major of transformations can be expressed  in this paper <B>we</B> present the system as a whole  first discussing
6 Q0 1698 28 0.021799566 Lucene_47
 to characterize the entire user community  based on the properties of this community <B>we</B> have postulated the model <B>we</B> answer questions like  how many processes are suspended waiting for console input  what  answers to these and similar questions are needed in certain <B>aspects</B> of operating system design
6 Q0 2671 29 0.02014952 Lucene_47
a note on a <B>combinatorial</B> problem of burnett and coffman cacm march  1974 stone  h  s  memories  interleaving  derangements  rencontres  <B>combinatorial</B> analysis 5.39 6.34 ca740312 jb january 18  1978 10 54 am 2671 5 2671 2671 5 2671 2671 5 2671
6 Q0 2176 30 0.019681016 Lucene_47
buffer allocation in merge-sorting a fixed buffer allocation for merge-sorting is presented here which minimizes the number of input-output operations for a given order of merge  when sorting on movable <B>arm</B> disks  the number of seeks is equal to the number of input-output operations  and the seek of merge sorting on movable <B>arm</B> disks when the input data are not random  and that this output buffer
6 Q0 3035 31 0.019480452 Lucene_47
a strategic <B>planning</B> methodology for the computing effort in higher education  an empirical <B>planning</B> of the computing effort in higher education are presented here  a <B>planning</B> methodology was implemented  the effectiveness of the <B>planning</B> methodology was assessed in terms of the improvement institution  the results of the research indicate the <B>planning</B> methodology significantly enhanced
6 Q0 3033 32 0.018104628 Lucene_47
 according to a double exponential  in this paper <B>we</B> suggest a heuristically guided top-down search combines the positive <B>aspects</B> of the above two techniques  compressed tables with a large number
6 Q0 3154 33 0.018104628 Lucene_47
 of the algorithm  <B>we</B> argue that computer programs would be more often correct and more easily improved and modified if their logic and control <B>aspects</B> were identified and separated in the program text  cacm
6 Q0 2753 34 0.016833033 Lucene_47
  and characteristic of many design tasks in architecture  engineering  urban <B>planning</B>  and natural resource management  these space <B>planning</B> tasks usually involve manipulating two-dimensional representations problem solver with a <B>planning</B> phase prefixed to it  it uses the <B>planning</B> process to give it a sense used to achieve it  task-specific information  <B>planning</B>  diagnostic procedures  remedial actions
6 Q0 1148 35 0.016553372 Lucene_47
an example in  significant-digit  arithmetic  different methods of handling the summing process for the <B>geometric</B> series are shown to give results indicating widely differing significances when carried out in a machine incorporating  significant-digit  arithmetic  cacm january  1964 miller  r  h  ca640107 jb march 10  1978 5 34 am 1148 4 1148 1148 5 1148 1148 5 1148 1148 5 1148 85 5 1148 3131 5
6 Q0 2078 36 0.016529711 Lucene_47
representations for space <B>planning</B> problems involving the arrangement of objects in two- or three-space where the objective function primarily consists of derivatives of the distance between objects or their arrangement are called space <B>planning</B> problems  the representational requirements structures that allow automated space <B>planning</B> are described and compared  cacm april  1970 eastman
6 Q0 2389 37 0.016529711 Lucene_47
preliminary report on a system for general space <B>planning</B> a computer language and a set of programs within that language are described which allow the formulating and solving of a class of space <B>planning</B> problems  the language is an extension of algol and includes means to represent spaces  automated design  architecture  heuristic programs  space <B>planning</B> 3.20 3.40 3.64 3.66 ca720202 jb january
6 Q0 1009 38 0.016119614 Lucene_47
solution of <B>combinatorial</B> problems using generating functions on a variable-field computer the utility of generating functions in solving <B>combinatorial</B> problems is discussed  particular implementation results are presented and evaluated  cacm september  1964 weinberg  g  m  ca640902 jb march 9  1978 6 17 pm 1009 5 1009 1009 5 1009 1009 5 1009
6 Q0 1186 39 0.016119614 Lucene_47
recursive solution of a class of <B>combinatorial</B> problems  an example <B>combinatorial</B> problems requiring the selection of n elements from a set of m elements may be solved by a recursion process analogous to that for computing binomial coefficients  several specific problems are analyzed  the general technique is exposed  and an algol program is developed for one of the problems  cacm october  1965
6 Q0 530 40 0.015905723 Lucene_47
a computer method for radiation treatment <B>planning</B> cacm july  1962 siler  w  laughlin  j  s  ca620731 jb march 17  1978 7 43 pm 530 5 530 530 5 530 530 5 530
6 Q0 697 41 0.015905723 Lucene_47
a numerical method for the determination of moving field isodose curves for treatment <B>planning</B> in radiotherapy cacm october  1963 dalrymple  g  v  perez-tamayo  r  ca631028 jb march 13  1978 5 19 pm 697 5 697 697 5 697 697 5 697
6 Q0 3198 42 0.015610638 Lucene_47
microprogramming  emulators and programming languages the problem <B>we</B> have been concerned with is that of converting language to action - or intellectual energy to mechanical energy  the medium that <B>we</B> use for this purpose is language and therefore <B>we</B> are preoccupied with the subject of language  in the areas of language investigation <B>we</B> have concentrated first on formalizing syntax
6 Q0 1113 43 0.0146286795 Lucene_47
computer-made perspective movies as a scientific and communication tool  it is easy to program the basic transformation required for a perspective drawing  this fact plus the advent of high speed microfilm printers such as the general <B>dynamics</B> electronics s-c 4020 makes possible perspective movies as the direct output from a computer  the programming of such a movie is briefly described
6 Q0 704 44 0.014247862 Lucene_47
<B>combinatorial</B> of m things taken one at a time two at a time  up to n at a time  algorithm 161  cacm october  1963 collins  d  h  ca631021 jb march 13  1978 5 34 pm 704 5 704 704 5 704 704 5 704
6 Q0 705 45 0.014247862 Lucene_47
<B>combinatorial</B> of m things taken n at a time  algorithm 160  cacm october  1963 blakely  r  e  ca631020 jb march 13  1978 5 36 pm 705 5 705 705 5 705 705 5 705
6 Q0 887 46 0.014247862 Lucene_47
<B>combinatorial</B> of m things taken one at a time  two at a time  up to n at a time  algorithm 161  cacm april  1963 wright  h  v  wolfson  m  l  ca630404 jb march 14  1978 12 28 pm 887 5 887 887 5 887 887 5 887
6 Q0 888 47 0.014247862 Lucene_47
algorithm 160 <B>combinatorial</B> of m things taken n at a time cacm april  1963 wolfson  m  l  wright  h  v  ca630403 jb march 14  1978 12 29 pm 2590 5 888 888 5 888 888 5 888 888 5 888 888 6 888
6 Q0 2836 48 0.014104662 Lucene_47
 probabilistic parsing or <B>combinatorial</B> optimization  cacm september  1976 loui  m  c  derivation tree  parse tree  probabilistic grammar  structural ambiguity  <B>combinatorial</B> optimization 5.23 5.49
6 Q0 397 49 0.01391658 Lucene_47
 is sufficient to identify the material normally associated with reference files for books  <B>articles</B>  programming
6 Q0 2319 50 0.013578472 Lucene_47
 be developed to be able to analyze and design the performance <B>aspects</B> of an operating system although impact on the way <B>we</B> go about modularizing operating and computer systems  cacm july  1972 lynch  w
6 Q0 3172 51 0.013496453 Lucene_47
an algorithm for <B>planning</B> collision-free paths among polyhedral obstacles this paper describes a collision avoidance algorithm for <B>planning</B> a safe path for a polyhedral object moving among known polyhedral objects  the algorithm transforms the obstacles so that they represent the locus of forbidden positions for an arbitrary reference point on the moving object  a trajectory of this reference
6 Q0 3185 52 0.013380547 Lucene_47
the humble programmer <B>we</B> shall do a much better programming job  provided that <B>we</B> approach the task with a full appreciation if its tremendous difficulty  provided that <B>we</B> stick to modest and elegant programming languages  provided that <B>we</B> respect the intrinsic limitations of the human mind and approach the task as very humble programmers  cacm october  1972 dijkstra  e  w  ca721010 es march 18
6 Q0 1634 53 0.012466589 Lucene_47
27 bits are not enough for 8-digit accuracy from the inequality 10 8  lt  2 27  <B>we</B> are likely to conclude that <B>we</B> can represent 8-digit decimal floating-point numbers accurately by 27-bit floating-point numbers  however  <B>we</B> need 28 significant bits to represent some 8-digit numbers accurately  in general  <B>we</B> can show that if 10 p  lt  2 q-1  then q significant bits are always enough for p-digit
6 Q0 2707 54 0.012339009 Lucene_47
 allowed the solution of two previously open <B>combinatorial</B> problems  the computation of new terms <B>combinatorial</B> problem  cacm november  1975 bitner  j  r  reingold  e  m  backtrack  depth-first search  exhaustive search  macros  <B>combinatorial</B> computing  non-attacking queen s problem  difference
6 Q0 3040 55 0.012089711 Lucene_47
synthesizing constraint expressions a constraint network representation is presented for a <B>combinatorial</B> search problem  finding values for a set of variables subject to a set of constraints  a theory of consistency levels in such networks is formulated  which is related to problems of backtrack  backtrack  <B>combinatorial</B> algorithms  constraint networks  constraint satisfaction  graph coloring  network
6 Q0 2502 56 0.01148033 Lucene_47
a comment on the practical <B>aspects</B> of computer science education cacm may  1973 estell  r  g  education  computer engineering  computer sciences curriculum  systems design 1.52 6.0 ca730518 jb january 23  1978 4 23 pm 2502 5 2502 2502 5 2502 2502 5 2502
6 Q0 1368 57 0.011398289 Lucene_47
systematic generation of hamiltonian circuits for a <B>combinatorial</B> matrix which may specify both directed and nondirected arcs  the paper describes a computer program which generates systematically and exhaustively all the hamiltonian circuits  specific application is made to the  traveling salesman  problem  cacm september  1966 roberts  s  m  ca660911 jb march 2  1978 4 30 pm 1368 5 1368 1368 5
6 Q0 2087 58 0.011398289 Lucene_47
a number system for the permutations cacm march  1970 pager  d  permutation  ordering  number  number system  p-number  <B>combinatorial</B> 4.49 5.39 ca700311 jb february 13  1978 3 42 pm 2087 4 2087 2189 4 2087 3188 4 2087 1594 5 2087 2087 5 2087 2087 5 2087 2087 5 2087 2189 5 2087 1594 6 2087 2087 6 2087 3191 6 2087 521 6 2087
6 Q0 2804 59 0.011398289 Lucene_47
elementary divisors of tensor products the elementary divisors of a tensor product of linear transformations have been known for 40 years  this paper provides a short  easily accessible proof of these results  and points out an interesting <B>combinatorial</B> consequence of the proof  cacm january  1975 marcus  m  robinson  h  elementary divisors  tensor products  linear transformations 5.14 ca750107
6 Q0 767 60 0.011398289 Lucene_47
certification of algorithm 161 <B>combinatorial</B> of m things taken one at a time  two at a time  up to n at a time  m  l  wolfson and h  v  wright  comm  acm  apr  1963  cacm august  1963 thoro  d  ca630831 jb march 13  1978 8 13 pm 767 5 767 767 5 767 767 5 767
6 Q0 768 61 0.011398289 Lucene_47
certification of algorithm 160 <B>combinatorial</B> of m things taken n at a time  m  l  wolfson and h  v  wright  comm  acm  apr  1963  cacm august  1963 thoro  d  ca630830 jb march 13  1978 8 14 pm 768 5 768 768 5 768 768 5 768
6 Q0 2485 62 0.011247044 Lucene_47
managing the computer resource  a stage hypothesis based on the study of expenditures for data processing  a descriptive stage hypothesis is presented  it is suggested that the <B>planning</B>  organizing  and controlling activities associated with managing the computer resource will change in character  computer budget  computer expenditures  stage hypothesis  <B>planning</B>  organizing  control  computer
6 Q0 2909 63 0.011150455 Lucene_47
what can <B>we</B> do about the unnecessary diversity of notation for syntactic definitions  cacm november  1977 wirth  n  syntactic description language  extended bnf 4.20 ca771107 jb december 27  1977 7 20 am 2909 5 2909 2909 5 2909 2909 5 2909
6 Q0 1621 64 0.011134005 Lucene_47
computer typesetting of algol an application of computer-aided typesetting is introduced  a working method is described for publishing algol by computerized translation from hardware into reference representation  computerized <B>planning</B> of typographical lay-out and computerized control of a typesetting machine  the point is made that experts in science  technology  and programming are guaranteed
6 Q0 2187 65 0.011019807 Lucene_47
computer science  a conceptual framework for curriculum <B>planning</B> two views of computer science are considered  a global view which attempts to capture broad characteristics of the field and its the discipline  as well as the relations between them  an approach to curriculum <B>planning</B>  curriculum <B>planning</B>  education 1.0 1.52 ca710603 jb february 3  1978 10 17 am 1665 4 2187 1768 4 2187
6 Q0 3135 66 0.010345858 Lucene_47
detection of three-dimensional patterns of atoms in chemical structures an algorithm for detecting occurrences of a three-dimensional pattern of objects within a larger structure is presented  the search technique presented uses the <B>geometric</B> structure of the pattern to define characteristics demanded of candidates for matching  this is useful in cases where the properties of each atom
6 Q0 2705 67 0.009942258 Lucene_47
programming languages  natural languages  and mathematics some social <B>aspects</B> of programming are illuminated through analogies with similar <B>aspects</B> of mathematics and natural languages  the split between pure and applied mathematics is found similarly in programming  the development of natural december  1975 naur  p  analogies related to social <B>aspects</B> pure and applied mathematics  language
6 Q0 1001 68 0.009741384 Lucene_47
copyright <B>aspects</B> of computer usage this paper is concerned with the question of what constitutes infringement of a copyright on a book or other nondramatic literary work when the work is fed into a computer and is indexed  analyzed  partially reprinted  or otherwise utilized by the computer  some <B>aspects</B> of the proposed new copyright law are also included  general recommendations are made
6 Q0 1088 69 0.009543433 Lucene_47
menu <B>planning</B> by computer a computer code has been developed which plans menus by finding minimum cost combinations of menu items such that the daily dietary  gastronomic and production requirements can be satisfied for a sequence of days  a fast  special integer programming algorithm is described which approximates the theoretical solution to the problem  if necessary  any menu can be changed
6 Q0 2231 70 0.009461476 Lucene_47
the reconstruction of binary patterns from their projections given the horizontal and vertical projections of a finite binary pattern f  can <B>we</B> construct the original pattern f  in this paper <B>we</B> give a characterization of patterns that are reconstructable from their projection  three algorithms are developed to reconstruct both unambiguous and ambiguous patterns  it is shown that an unambiguous
6 Q0 1047 71 0.009425091 Lucene_47
generation of test matrices by similarity transformations a method for obtaining test matrices with a prescribed distribution of characteristic roots is given  the process consists of using <B>particularly</B> simple similarity transformations to generate full matrices from canonical forms  the matrices generated also have known characteristic vectors  inverses and determinants  cacm june  1964 ortega
6 Q0 2306 72 0.009184264 Lucene_47
ancient babylonian algorithms the early origins of mathematics are discussed  emphasizing those <B>aspects</B> which seem to be of greatest interest from the standpoint of computer science  a number of old babylonian tablets  many of which have never before been translated into english  are quoted  cacm july  1972 knuth  d  e  history of computation  babylonian tablets  sexagesimal number system
6 Q0 2167 73 0.008920364 Lucene_47
 of view of a designer who wants to construct a useful and efficient system  first <B>we</B> describe various and make it more intelligible to a user  then <B>we</B> delineate the spectrum of approaches to the design of expressions  finally <B>we</B> discuss some of the theoretical results related to algebraic simplification  <B>we</B> describe several positive results about the existence of powerful simplification algorithms
6 Q0 281 74 0.008920364 Lucene_47
putting a hex on e x recent notes on approximate natural antilogy have not considered indirect formulations for describing e x  in this note <B>we</B> produce a particular family of very fast  high precision and eminently practical exponential evaluation formulas derived from one such formulation  cacm october  1961 feurzeig  w  ca610913 jb march 16  1978 1 27 pm 281 5 281 281 5 281 281 5 281
6 Q0 2417 75 0.008548717 Lucene_47
four <B>combinatorial</B> algorithms  g6   algorithm a466  cacm november  1973 ehrlich  g  permutations and combinations 5.39 ca731109 jb january 20  1978 9 59 am 2044 4 2417 2189 4 2417 2417 4 2417 2505 4 2417 2874 4 2417 2908 4 2417 2417 5 2417 2417 5 2417 2417 5 2417 2834 5 2417 2884 5 2417 521 5 2417 3115 5 2417 907 6 2417 969 6 2417 2045 6 2417 2045 6 2417 2417 6 2417 2417 6 2417 2417 6 2417 2466 6
6 Q0 2505 76 0.008548717 Lucene_47
reflection-free permutations  rosary permutations  and adjacent transposition algorithms cacm may  1973 roy  m  k  permutation  permutation generation  scheduling  <B>combinatorial</B> analysis 5.39 ca730515 jb january 23  1978 4 29 pm 2044 4 2505 2189 4 2505 2292 4 2505 2417 4 2505 2505 4 2505 2505 4 2505 2505 4 2505 2874 4 2505 2908 4 2505 2189 5 2505 2292 5 2505 2505 5 2505 2505 5 2505 2505 5 2505
6 Q0 2666 77 0.008548717 Lucene_47
  g  sefton  i  m  <B>combinatorial</B>  multi-index problem  necessary conditions  schedule  school
6 Q0 2772 78 0.008548717 Lucene_47
 specific sets of necessary conditions  is given  cacm april  1975 smith  g  <B>combinatorial</B>  necessary
6 Q0 3086 79 0.008548717 Lucene_47
  analysis of algorithms  <B>combinatorial</B> problems  computational complexity  computational models
6 Q0 1046 80 0.008349949 Lucene_47
a compiler-building system developed by brooker and morris in a number of <B>articles</B> published during the past two years  r  a  brooker and d  morris  joined by j  rohl in their most recent paper have presented a very interesting programming system that they have developed for the ferranti atlas computer  the present paper describes some of the major features of their system  it expands on some
6 Q0 2547 81 0.008276686 Lucene_47
representation of contours ad regions for efficient computer search a novel computer-searchable representation for the three basic pictorial features  contour maps  region coverage  and line structures  is described  the representation  which has practical storage requirements  provides a rapid mean of searching large files for data associated with <B>geometric</B> position as well as with attribute
6 Q0 2667 82 0.008276686 Lucene_47
  exponential  hyperexponential  and <B>geometric</B>   other data show paging characteristics of tasks
6 Q0 1238 83 0.008078649 Lucene_47
a technique for integrated reports from a multi-run system the requirements of a requisition accounting system for the san francisco overseas supply agency  osa  included exception reporting to osa itself  the simultaneous satisfaction of the reporting requirement and the accounting requirements posed definite problems in system design  <B>particularly</B> the handling of the reporting function
6 Q0 1262 84 0.008078649 Lucene_47
 within this range  do togethers may be nested  the statements should be <B>particularly</B> effective for use
6 Q0 1325 85 0.008078649 Lucene_47
 capabilities of the present system are <B>particularly</B> concerned with increasing the fidelity of the adaptive
6 Q0 2769 86 0.008078649 Lucene_47
a modification of warshall s algorithm for the transitive closure of binary relations an algorithm is given for computing the transitive closure of a binary relation that is represented by a boolean matrix  the algorithm is similar to warshall s although it executes faster for sparse matrices on most computers  <B>particularly</B> in a paging environment  cacm april  1975 warren  h  s  jr  warshall s
6 Q0 3095 87 0.008078649 Lucene_47
 node in the tree  the algorithm is <B>particularly</B> useful and efficient when examination of data
6 Q0 3149 88 0.008078649 Lucene_47
the cyclic order property of vertices as an aid in scene analysis a cyclic-order property is defined for bodies bounded by smooth-curved faces  the property is shown to be useful for analyzing pictures of such bodies  <B>particularly</B> when the line data extracted from the pictures are imperfect  this property augments previously known grammatical rules that determine the existence of three
6 Q0 755 89 0.008078649 Lucene_47
  <B>particularly</B> in those engineering problems where high accuracy is not needed  cacm august  1963 pope  d
6 Q0 2399 90 0.008036232 Lucene_47
a crt editing system a test-editing and manipulation program is described  the program operates from low-cost cathode-ray tube entry and display stations with keyboard and 13 function buttons  applications  potential economy of operation  and some <B>aspects</B> of implementation are discussed  cacm january  1972 irons  e  t  djorup  f  m  editing  text  cathode-ray tube entry display  time-sharing 3.7
6 Q0 971 91 0.008036232 Lucene_47
 interesting <B>aspects</B> of the time-sharing program are outlined  cacm november  1964 green  l  e  s  ca641112 jb
6 Q0 1099 92 0.0079528615 Lucene_47
 rehabilitation <B>planning</B>  also of immediate interest is the fact that the blind may be especially
6 Q0 3117 93 0.0079528615 Lucene_47
-dispatch systems where the machine begins to become a tool for decision making  strategic <B>planning</B>
6 Q0 1517 94 0.007884562 Lucene_47
methods for analyzing data from computer simulation experiments this paper addresses itself to the problem of analyzing data generated by computer simulations of economic systems  <B>we</B> first turn to a hypothetical firm  whose operation is represented by single-channel  multistation queueing model-test  two multiple comparison methods  and a multiple ranking method  <B>we</B> illustrate  compare
6 Q0 3156 95 0.007884562 Lucene_47
computing connected components on parallel computers <B>we</B> present a parallel algorithm which uses n2 processors to find the connected components of an undirected graph with n vertices in time o log2n   an o log2n  time bound also can be achieved using only n n  log2n   processors  the algorithm can be used to find the transitive closure of a symmetric boolean matrix  <B>we</B> assume that the processors
6 Q0 2621 96 0.007805319 Lucene_47
a high security log-in procedure the protection of time sharing systems from unauthorized users is often achieved by the use of passwords  by using one-way ciphers to code the passwords  the risks involved with storing the passwords in the computer can be avoided  <B>we</B> discuss the selection of a suitable one-way cipher and suggest that for this purpose polynomials over a prime modulus are superior
6 Q0 1978 97 0.007725262 Lucene_47
the use of interactive graphics to solve numerical problems with the advent of on-line  time-sharing  computer systems and graphic terminals  <B>we</B> have available a new dimension in numerical problem solving capabilities  rather than simply use the new power to achieve fast turnaround  <B>we</B> can develop the problem area is that the interface with a user can be greatly simplified  in this paper <B>we</B> discuss some
6 Q0 3150 98 0.007725262 Lucene_47
 for by the tasks <B>we</B> attempt  just as high level languages enabled the programmer to escape from the intricacies and manipulate complex systems and components  in order to develop such systems  <B>we</B> need to shift our of the packages and objects with which <B>we</B> build  this paper analyzes some of the shortcomings
6 Q0 1433 99 0.007123931 Lucene_47
a note on linear programming algorithm design  a <B>combinatorial</B> problem as linear programming models grow bigger and bigger in size  much actual data that must be memorized is often put on magnetic tape or disk  and consequently there is an improportionality fast rise in the consumption of computer timeo cut down this expense  an ever increasing effort is made to design more efficient algorithms
6 Q0 1948 100 0.007123931 Lucene_47
computers in group theory  a survey computers are being applied to an increasingly diverse range of problems in group theory  the most important areas of application at present are coset enumeration  subgroup lattices  automorphism groups of finite groups  character tables  and commutator calculus  group theory programs range from simple <B>combinatorial</B> or numerical programs to large symbol
*************Query 7*************************

7 Q0 3043 1 0.2967059 Lucene_47
<B>distributed</B> <B>processes</B>  a <B>concurrent</B> programming concept a language concept for <B>concurrent</B> <B>processes</B> without common variables is introduced  these <B>processes</B> <B>communicate</B> and <B>synchronize</B> by means  <B>concurrent</B> programming  <B>distributed</B> <B>processes</B>  microprocessor networks  nondeterminism  guarded regions <B>processes</B> and shows that they <B>include</B> procedures  coroutines  classes  monitors  <B>processes</B>  semaphores
7 Q0 1623 2 0.17591636 Lucene_47
  mathematical  sense and could be of <B>interest</B> in <B>areas</B> other than circuit analysis  cacm march  1967an application of formac a nonlinear circuit analysis problem is stated and the way in <B>which</B> it was solved <B>using</B> formac is indicated  the solution of the problem <B>using</B> formac was notable since and utilized practically every command  in <B>particular</B>  it made extensive use of the part command
7 Q0 2912 3 0.16836518 Lucene_47
 their use  these <B>include</B> a solution to the general problem in <B>which</B> a read is repeated if it might have obtained an incorrect result  and two <B>techniques</B> for transmitting messages between <B>processes</B><B>concurrent</B> reading and writing the problem of sharing data among asynchronous process is considered  it is assumed that only one process at a time can modify the data  but <B>concurrent</B> reading
7 Q0 3141 4 0.14386886 Lucene_47
 of uniquely numbered <B>processes</B> arranged in a circle  in <B>which</B> no central controller exists and the number of <B>processes</B> is not known a priori  this decentralized algorithm uses a technique of selective  rather than o n2   cacm may  1979 chang  e  roberts  r  decentralized <B>algorithms</B>  <B>distributed</B> systemsan improved algorithm for decentralized extrema-finding in circular configurations of <B>processes</B>
7 Q0 2949 5 0.13717939 Lucene_47
a <B>correctness</B> proof of a topology information main tenance protocol for a <B>distributed</B> computer network in order for the nodes of a <B>distributed</B> computer network to <B>communicate</B>  each node must have   a <B>correctness</B> proof of this topology information protocol is also presented  cacm july  1977 tajibnapis  w  d  <B>distributed</B> computer network  <B>correctness</B> proofs  computer networks  <B>distributed</B> control
7 Q0 3128 6 0.1371103 Lucene_47
synchronization with eventcounts and sequencers synchronization of <B>concurrent</B> <B>processes</B> requires controlling the relative ordering of events in the <B>processes</B>  a new synchronization mechanism is proposed  <B>using</B> abstract objects called eventcounts and sequencers  that allows <B>processes</B> to control the ordering of events directly  rather than <B>using</B> mutual exclusion to protect manipulations of shared
7 Q0 2342 7 0.11945542 Lucene_47
 of parallel <B>processes</B> is regarded as a machine <B>which</B> proceeds from one state s  <B>i</B> e  a collection gilbert  p  chandler  w  j  <B>concurrent</B> programming control  cooperating <B>processes</B>  formal <B>programs</B> is shown  <B>which</B> will either verify  prove the <B>correctness</B> of   or discredit  prove the incorrectness to calculate transition rules from the  partial rules  by <B>which</B> the individual <B>processes</B> operate
7 Q0 2903 8 0.11368298 Lucene_47
  called  recursion in troduction   is described and applied to two <B>algorithms</B> <B>which</B> solve pattern matching problems  by <B>using</B> recursion in troduction  <B>algorithms</B> <B>which</B> manipulate a stack are first translated into recursive <B>algorithms</B> in <B>which</B> no stack operations occur  these <B>algorithms</B> are then subjected <B>programs</B> with a very efficient running time  in <B>particular</B>  it is shown how the fast linear pattern
7 Q0 2890 9 0.10345301 Lucene_47
  <B>message</B> switching 3.81 8.0 8.1 8.3 ca760103 jb january 5  1978 10 37 <B>am</B> 2890 5 2890 2890 5 2890on quadratic adaptive routing <B>algorithms</B> two analytic models of a store-and-forward communications network are constructed  one to find the optimal <B>message</B> routing and the other to illustrate maintained at each network node  simulation results are presented <B>which</B> confirm the theoretical
7 Q0 2402 10 0.10025598 Lucene_47
 encourages the development of <B>algorithms</B> adapted to this environment  pictorial pattern recognition <B>techniques</B> make possible a number of approaches to x-ray structure determination based on molecular model building  <B>i</B> e  the use of chemical information to frame  structural hypotheses  <B>which</B> can recognition <B>algorithms</B> is hindered by the fact that the cross-correlation between a model
7 Q0 2865 11 0.09631652 Lucene_47
 deductive system <B>which</B> is in some sense complete for partial <B>correctness</B>  a crucial axiom provides  gries  d  structured multiprogramming <B>correctness</B> proofs  program verification  <B>concurrent</B>verifying properties of parallel <B>programs</B>  an axiomatic approach an axiomatic method for proving a number of properties of parallel <B>programs</B> is presented  hoare has given a set of axioms for partial
7 Q0 1145 12 0.094379485 Lucene_47
 in <B>areas</B> such as game-playing and theorem-proving  where practical <B>algorithms</B> are unknown  for the interesting cases   but where various practical though only partially successful <B>techniques</B> are available  git-graph isomorphism tester-incorporates a variety of <B>processes</B> that attempt to narrow down for <B>which</B> no efficient algorithmic solution is known  since a straightforward enumerative algorithm might
7 Q0 2376 13 0.08519244 Lucene_47
synchronization of communicating <B>processes</B> formalization of a well-defined synchronization mechanism can be used to prove that concurrently running <B>processes</B> of a system <B>communicate</B> correctly  this is demonstrated for a system consisting of many sending <B>processes</B> <B>which</B> deposit messages in a buffer and many receiving <B>processes</B> <B>which</B> remove messages from that buffer  the formal description
7 Q0 1381 14 0.083777525 Lucene_47
 is extremely significant for the <B>understanding</B> of our current society  student <B>interest</B> in this development is intense and if properly utilized should yield a much better <B>understanding</B> of mathematical concepts as well as the ideas of programming and logical structure <B>which</B> have been introduced into many are not professional mathematicians be modified to <B>include</B> the extensions and clarifications <B>which</B> are possible
7 Q0 2111 15 0.083035566 Lucene_47
spelling correction in systems <B>programs</B> several specialized <B>techniques</B> are shown for efficiently incorporating spelling correction <B>algorithms</B> in to compilers and operating systems  these <B>include</B> spelling correction is presented  by <B>using</B> systems <B>which</B> perform spelling correction  the number ca700204 jb february 14  1978 10 40 <B>am</B> 1112 4 2111 1179 4 2111 1288 4 2111 1544 4 2111 1592 4 2111 1592 4
7 Q0 1135 16 0.08243282 Lucene_47
 common to all <B>processes</B> of such class  permits writing extremely compact <B>programs</B>  even for comparatively preparation of loading-speed compilers <B>which</B> translate the source <B>programs</B> into efficient machine codes  there are no control statements such as go to  etc    instead of <B>using</B> procedure descriptions  <B>which</B> compute programming language <B>which</B> covers a wide class of business and file processing applications
7 Q0 2317 17 0.08008324 Lucene_47
 <B>understanding</B> of operating system principles  important trends <B>include</B> the increased <B>interest</B>programming systems and languages 1965-1975 in spite of impressive gains by pl <B>i</B>  fortran and cobol remain the languages in <B>which</B> most of the world s production <B>programs</B> are written and will remain so into the foreseeable future  there is a great deal of theoretical <B>interest</B> in algol 68
7 Q0 2657 18 0.07553019 Lucene_47
 is obtained as soon as the proof is completed  this is achieved by <B>using</B> a modified variable tracing mechanism invented by green in 1969  the <B>correctness</B> of the improved algorithm is also proved  <B>i</B> ean improved program-synthesizing algorithm and its <B>correctness</B> an improved program-synthesizing  c  l  waldinger  r  j  program-synthesizing <B>algorithms</B>  theorem proving  consequence finding
7 Q0 2208 19 0.07532467 Lucene_47
  <B>which</B> is the fast store  is divided into a number of storage <B>areas</B>  when an entry is to be filed in the hierarchy  a hashing algorithm will attempt to place the entry into one of these <B>areas</B>  if this <B>particular</B> area is full  then the entry will be placed into the slower second-level store  even  the number of storage <B>areas</B> into <B>which</B> the first-level store is divided and the total size
7 Q0 1948 20 0.07453113 Lucene_47
  group theory <B>programs</B> range from simple combinatorial or numerical <B>programs</B> to large symbol manipulation systems  in this survey the more important <B>algorithms</B> in use are described and contrasted  and results <B>which</B> have been obtained <B>using</B> existing <B>programs</B> are indicated  an extensive bibliography of problems in group theory  the most important <B>areas</B> of application at present are coset enumeration
7 Q0 2306 21 0.070617 Lucene_47
ancient babylonian <B>algorithms</B> the early origins of mathematics are discussed  emphasizing those aspects <B>which</B> seem to be of greatest <B>interest</B> from the standpoint of computer science  a number of old babylonian tablets  many of <B>which</B> have never before been translated into english  are quoted  cacm  sorting 1.2 ca720722 jb january 30  1978 10 50 <B>am</B> 2306 5 2306 2306 5 2306 2306 5 2306
7 Q0 2740 22 0.07038466 Lucene_47
 operating system as a set of cooperating sequential <B>processes</B>  the <B>processes</B> <B>synchronize</B> by means of semaphores and extended semaphores  queue semaphores   the number of parallel <B>processes</B> is carefully  the operating system is the first large one <B>using</B> the rc 4000 multiprogramming system  cacm july  1975 lauesen  s  cooperating <B>processes</B>  operating system  semaphores  semaphore applications  queue semaphores
7 Q0 2424 23 0.07036522 Lucene_47
 be modest  cacm november  1973 fabry  r  s  operating systems  data security  <B>fault</B> <B>tolerance</B> that every time the decision is made there is a consistency check performed on the decision <B>using</B> is an experimental time-sharing <B>which</B> is to have the properties of continuous availability  data privacy system <B>which</B> does not make certain decisions improperly even in the presence of a single hardware
7 Q0 2033 24 0.069569655 Lucene_47
 of errors of commission may be tolerable in some applications  in <B>particular</B>  applications in <B>which</B> a large associated with new methods  an example is discussed <B>which</B> illustrates possible <B>areas</B> of application with a <B>particular</B> conventional hash-coding method  the computational factors considered are the size of the hash area  space   the time required to identify a <B>message</B> as a nonmember of the given set
7 Q0 1698 25 0.06861032 Lucene_47
 to <B>communicate</B> with the outside world efficiently is as important as its ability to perform computations efficiently  it is quite difficult to characterize a <B>particular</B> user  but rather easy  but the entire collection of virtual consoles models the collection of actual consoles  <B>using</B> the model we answer questions like  how many <B>processes</B> are suspended waiting for console input  what
7 Q0 2905 26 0.06517604 Lucene_47
 table in <B>which</B> the elements of <B>i</B> can be stored and from <B>which</B> they can be retrieved by <B>using</B> a perfect <B>which</B> allows retrieval of an item in a static table with a single probe is considered  given a set <B>i</B> of identifiers  two methods are presented for building  in a mechanical way  perfect hashing functions  <B>i</B> e  functions transforming the elements of <B>i</B> into unique addresses  the first method
7 Q0 2871 27 0.06496931 Lucene_47
 is not proven  and incorrect <B>programs</B> are not treated  as a unified solution to these problems  this paper suggests conducting a logical analysis of <B>programs</B> by <B>using</B> invariants <B>which</B> express what is actually occurring in the program  the first part of the paper is devoted to <B>techniques</B>logical analysis of <B>programs</B> most present systems for verification of computer <B>programs</B>
7 Q0 1886 28 0.06242609 Lucene_47
 by first factoring the expressions  <B>i</B> e  finding a set of subexpressions each of <B>which</B> occurs in twogeneration of optimal code for expressions via factorization given a set of expressions <B>which</B> procedure is applied <B>which</B> orders the factors and expressions such that all information is computed required to hold the results of evaluating the factors  in order to make these <B>techniques</B> computationally
7 Q0 2795 29 0.061986152 Lucene_47
 sentence paraphrases <B>which</B> demonstrate <B>understanding</B> with respect to a given context  this generator of linguistic knowledge  <B>which</B> <B>include</B>   1  executable tests of conceptual properties stored <B>processes</B>  semantic representation 3.42 3.60 3.65 ca750204 jb january 12  1978 8 43 <B>am</B> 1885 4 2795
7 Q0 3148 30 0.061832 Lucene_47
high level programming for <B>distributed</B> computing programming for <B>distributed</B> and other loosely coupled systems is a problem of growing <B>interest</B>  this paper describes an approach to <B>distributed</B>  <B>message</B>  and transaction key  the methodology is shown to be independent of <B>particular</B> languages of the project are also discussed  cacm june  1979 feldman  j  <B>distributed</B> computing  modules  messages
7 Q0 2344 31 0.06114949 Lucene_47
 in the measure of system performance can be obtained by <B>using</B> variable time-slice <B>techniques</B>  scheduling <B>algorithms</B> 3.80 4.30 4.32 ca720601 jb january 31  1978 9 19 <B>am</B> 2219 4 2344 2344 4 2344 performance is used to ascertain <B>which</B> of the parameters controllable by the job-scheduling algorithm  including the scheduling itself  require optimization  and <B>which</B> of the parameters not normally
7 Q0 2142 32 0.059593506 Lucene_47
 determined and the problem is to find the  most representative  picture  three <B>algorithms</B> are described  all <B>using</B> monte carlo methods  <B>which</B> were designed to solve this problem  the <B>algorithms</B> and medicine  e g  in electron microscopy and x-ray photography  in <B>which</B> it is desirable to estimate  image processing  linear programming  mathematical programming  monte carlo <B>techniques</B>
7 Q0 2716 33 0.059432086 Lucene_47
 automatic programming <B>techniques</B> so that the interface analyzes and efficiently refines the high level query specification supplied by the user  a relational algebra interface  called squiral  <B>which</B> was designed <B>using</B> this approach  is described in detail  squiral seeks to minimize query response time analysis  and  5  maintaining locality in page references  <B>algorithms</B> for implementing the operators
7 Q0 1923 34 0.055325966 Lucene_47
pseudofiles an approach to system interfaces for high level languages <B>using</B> basic input output support facilities is described  it is shown that this technique can provide potentially inexpensive methods for <B>programs</B> to <B>communicate</B> with deeply embedded facilities such as command language processors  command language 4.22 4.30 4.31 4.41 ca690304 jb february 20  1978 9 12 <B>am</B> 1923 5 1923 1923 5 1923
7 Q0 1854 35 0.052804712 Lucene_47
 of <B>programs</B> with <B>concurrent</B> activities  the scheme includes a set of basic instructions and test on the ibm system 360  two <B>programs</B> <B>using</B> these instructions  written in pl360  are presented feature <B>which</B> is available in most modern computers is a potent source of programming pitfalls and errors  and that it therefore may heavily contribute to the unreliability of <B>programs</B> making use
7 Q0 1609 36 0.05236037 Lucene_47
 with a very small expenditure of time  results of experiments <B>using</B> these <B>techniques</B> are given course examinations is presented  in principle  an examination schedule <B>which</B> requires a minimum examinations simultaneously can be found in two steps  first  course <B>which</B> may have their examinations be obtained  known <B>algorithms</B> for carrying out these procedures are prohibitively expensive  approximations
7 Q0 2950 37 0.051361438 Lucene_47
-invariant <B>algorithms</B>  <B>which</B> <B>include</B> most of the commonly implemented ones  for time-invariant <B>algorithms</B> <B>algorithms</B> based on an abstract model of a scheduling system <B>which</B> formalizes the notion of priority  various classes of scheduling <B>algorithms</B> are defined and related to existing <B>algorithms</B>  a criterion  fabry  r  s  scheduling <B>algorithms</B>  scheduling models  priority  operating systems processor
7 Q0 3014 38 0.050590556 Lucene_47
 <B>correctness</B>  this paper explores a technique for proving the <B>correctness</B> and termination of <B>programs</B> or termination by any of the conventional <B>techniques</B> can be rephrased directly as a proof <B>using</B> intermittent the validity of program transformations and the <B>correctness</B> of continuously operating <B>programs</B>  cacm february  1978 manna  z  waldinger  r  intermittent assertions  <B>correctness</B> of <B>programs</B>  termination
7 Q0 2981 39 0.05048689 Lucene_47
 <B>programs</B>  iterative <B>programs</B> 4.19 4.22 5.21 5.24 ca770401 jb december 29  1977 6 31 <B>am</B> 2981 4 2981 3030 4 to prove a loop s <B>correctness</B> directly from its input-output specification without the use of an invariant and  in <B>particular</B>  it is shown that subgoal induction can be viewed as a specialized form of computation induction  a set of sufficient conditions are presented <B>which</B> guarantee that an input-output
7 Q0 2439 40 0.050438136 Lucene_47
multiple terminals under user program control in a time-sharing environment user-written <B>programs</B> on the dartmouth time-sharing system can <B>communicate</B> with many remote terminals simultaneously and can control the interactions between these terminals  such <B>programs</B> can be written <B>using</B> standard 4.32 ca731001 jb january 23  1978 8 33 <B>am</B> 2439 5 2439 2439 5 2439 2439 5 2439
7 Q0 616 41 0.049632873 Lucene_47
 that this report will be read  a  with avid <B>interest</B> by programming language designers and implementors  and all those <B>interested</B> in developing a theoretical approach to data processing   b  with <B>interest</B> and <B>understanding</B> by professional programmers and systems analysts  and  c  with appreciationan information algebra - phase <B>i</B> report-language structure group of the codasyl development
7 Q0 3134 42 0.04901902 Lucene_47
 requesting a group of information items  all of <B>which</B> possess a <B>particular</B> set of attributes  and possibly a method for the organization and retrieval of attribute based information systems  <B>using</B> the normal multiplication table as a directory for the information system  <B>algorithms</B> for the organization of disk accesses and disk space are compared to other common approaches  <B>algorithms</B> evaluating
7 Q0 3078 43 0.048851993 Lucene_47
 manipulation <B>programs</B>  since many physical systems can be modeled by markov and semi-markov <B>processes</B>analysis of the availability of computer systems <B>using</B> computer- aided algebra analytical results in this paper  these results are obtained by <B>using</B> various computer-aided algebraic manipulation <B>techniques</B>  a major purpose of this paper is to demonstrate that the difficulties of obtaining
7 Q0 2646 44 0.048565544 Lucene_47
 nature of the <B>i</B> o scheduling  these <B>algorithms</B> are restricted to classes of <B>programs</B> with predictablea model for masking rotational latency by dynamic disk allocation this paper presents the background and <B>algorithms</B> for masking the rotational latency of a disk or drum  it discusses the anticipatory <B>using</B> a small amount of buffer memory  the methods discussed are independent of the overall size
7 Q0 46 45 0.048405472 Lucene_47
 design and in programming systems  minimum requirements for successful <B>concurrent</B> execution of several independent problem <B>programs</B> are discussed  these requirements are met in the stretch system by a carefully balanced combination of built-in and programmed logic  <B>techniques</B> are described <B>which</B> place the burden of the programmed logic on system <B>programs</B>  supervisory program and compiler  rather
7 Q0 2674 46 0.047524597 Lucene_47
 has been described <B>which</B> extends the capabilities of this organization to <B>include</B> general graphics  two fundamentally different scan conversion <B>algorithms</B> <B>which</B> have been developed to supportscan conversion <B>algorithms</B> for a cell organized raster display raster scan computer graphics applications  the <B>algorithms</B> were implemented in fortran on the cdc 6400 computer  results obtained
7 Q0 1397 47 0.04715878 Lucene_47
 on symbolic and algebraic manipulation brought together over four hundred people <B>interested</B> in programming  and in <B>algorithms</B> for their implementation  twenty-eight papers were presented  followed by a lively panel discussion of future directions  evening meetings were arranged for several <B>interest</B> groups  the conference was sponsored by the acm special <B>interest</B> committee on symbolic and algebraic
7 Q0 3021 48 0.046999097 Lucene_47
 means are not needed to transmit keys  since a <B>message</B> can be enciphered <B>using</B> an encryption key publicly revealed by the intended recipient  only he can decipher the <B>message</B>  since only he knows the corresponding decryption key   2  a <B>message</B> can be  signed  <B>using</B> a privately held decryption key  anyone can verify this signature <B>using</B> the corresponding publicly revealed encryption key  signatures
7 Q0 2829 49 0.046957213 Lucene_47
 in the <B>areas</B> of texture simulation and lighting models  the parameterization of a patch defines a coordinate system <B>which</B> is used as a key for mapping patterns onto the surface  the intensity function  the shape and size of this weighting function are chosen <B>using</B> digital signal processing to the intensity obtained from the texture mapping  several examples of images synthesized <B>using</B>
7 Q0 2276 50 0.046416733 Lucene_47
 are known for transforming uniformly <B>distributed</B> random numbers into exponentially and normally <B>distributed</B>  with some new <B>algorithms</B>  a number of procedures convert taylor series expansions directly into sampling steps  an approach <B>which</B> may be used for sampling from any continuous distribution distribution there remains a choice between slower and shorter <B>algorithms</B> and faster but space consuming
7 Q0 2902 51 0.046360854 Lucene_47
 dynamic memory allocation <B>algorithms</B> when used to service simulation <B>programs</B> as represented by 18 test memory fragmentation  <B>algorithms</B> main taining separate free space lists for each size of memory block used tended to perform quite well compared with other <B>algorithms</B>  simple <B>algorithms</B> operating on memory ordered lists  without any free list  performed surprisingly well  <B>algorithms</B> employing power
7 Q0 2216 52 0.04498843 Lucene_47
 does not assume uniformly <B>distributed</B> branching ratios  and therefore is applicable to a family of sorting <B>algorithms</B> discussed by hoare  singleton  and van emden  the solution to the integral equation indicates that <B>using</B> more advanced <B>algorithms</B> in the family makes only minor reductions 5.5 ca710205 jb february 8  1978 9 09 <B>am</B> 1175 4 2216 1919 4 2216 1997 4 2216 2017 4 2216 2041 4 2216
7 Q0 3164 53 0.04439425 Lucene_47
 in certain <B>areas</B> of database implementation in <B>which</B> there are constraints on the permissible sequences of actions  two pad <B>algorithms</B> are presented  one uses a simple path matrix representation  deadlock 4.34 5.32 4.33 ca790905 db january 14  1980 11 56 <B>am</B> 3164 4 3164 1712 5 3164 3164 5 3164
7 Q0 2860 54 0.04399496 Lucene_47
a practitioner s guide to addressing <B>algorithms</B> this paper consolidates a number of popular rules of thumb <B>which</B> have been suggested for the design of record addressing <B>algorithms</B>  and discusses transformations  overflow <B>techniques</B>  loading factors  bucket sizes  and loading order and considered  <B>particular</B> attention is focused on the reasonableness of common heuristics for determining primary
7 Q0 2581 55 0.04379769 Lucene_47
 system  designed for use in a continuous speech recognizer  lpars <B>processes</B> a string of phonemes <B>which</B> contains ambiguity and error  the system is locally-organized in the sense that it builds local <B>which</B> might complete the utterance  cacm november  1974 miller  p  l  parsing  speech recognition  speech <B>understanding</B>  augmented transition network  local parsing 3.42 3.65 3.69 ca741103 jb january
7 Q0 2268 56 0.043529022 Lucene_47
 on <B>which</B> the <B>programs</B> were tested is included in an appendix  for the <B>particular</B> problemsa comparative study of computer <B>programs</B> for integrating differential equations a study comparing the performance of several computer <B>programs</B> for integrating systems of ordinary differential equations is reported  the integration methods represented <B>include</B> multistep methods  predictor-correctors
7 Q0 2979 57 0.04313086 Lucene_47
studies in machine cognition <B>using</B> the game of poker a progress report is presented of on-going and learning <B>processes</B> on the one hand  and machine learning  large scale programming systems  and novel programming <B>techniques</B> on the other  there has also been in terest in how humans make deductive recently established <B>which</B>  besides its usefulness for experiments in game playing  enables humans
7 Q0 2895 58 0.042993255 Lucene_47
 greif  <B>i</B>  formal specifications program <B>correctness</B>  parallel processing  synchronization  readersa language for formal problem specification a language for specifying the in tended behavior of communicating parallel <B>processes</B> is described  the specifications are constrain ts on the order in <B>which</B> events of a computation can occur  the language is used to write specifications of the readers
7 Q0 1427 59 0.042753406 Lucene_47
simulation of radioisotope scans by computer in radioisotope scanning  a field <B>which</B> is assuming  <B>areas</B> of increased source activity are represented on the scan by <B>areas</B> of increased dot density  to study the output of scanners with various characteristics  a program <B>which</B> simulates radioisotope  past and present research <B>using</B> the output of the simulator has shown the flexibility of the system
7 Q0 2897 60 0.042559355 Lucene_47
 <B>techniques</B> have allowed a new design for compilers to emerge  such a compiler translates the parsed object code  the traditionally difficult pl <B>i</B> concatenate statement was investigated as a detailed example  a set of fairly simple optimizations was identified <B>which</B> allow the compiler to produce good of the concatenate statement  the code produced by a compiler <B>using</B> the expansion-optimization strategy
7 Q0 2535 61 0.042013194 Lucene_47
the effects of multiplexing on a computer-communications system a study is made of the way in <B>which</B> results <B>include</B> a general description of the output process of an m d 1 queue and the conditions under <B>which</B> this output process is approximately poisson  cacm march  1973 pack  c  d  computer communications  time-sharing  multiplexing  scheduling <B>algorithms</B>  operating systems 3.80 3.81 6.20 ca730304
7 Q0 3031 62 0.041950915 Lucene_47
abstract data types and software validation a data abstraction can be naturally specified <B>using</B> specification of a data type  an example is given <B>which</B> shows how to employ algebraic axioms the use of algebraic axiomatizations can simplify the process of proving the <B>correctness</B> of an implementation of an abstract data type  second  semi-automatic tools are described <B>which</B> can be used both
7 Q0 1665 63 0.04190272 Lucene_47
automatic generation of efficient lexical processors <B>using</B> finite state <B>techniques</B> the practical processors for aed-o and mad are among the many <B>which</B> have been produced  the <B>techniques</B> employed is a lexical processor <B>which</B> reads a string of characters and combines them into the items as defined on the <B>particular</B> character read  the system has been in operation since 1966  and processors generated have
7 Q0 2438 64 0.041529838 Lucene_47
 an implementation technique <B>using</B> a single stack to hold procedure activation storage <B>which</B> allows processor is assumed  and the implementation assumes multiple-<B>processes</B> coordinate by <B>passing</B> control  1978 8 27 <B>am</B> 1972 4 2438 2156 4 2438 2168 4 2438 2438 4 2438 2438 4 2438 2723 4 2438 2736 4 2438 2833
7 Q0 1551 65 0.040906444 Lucene_47
on compiling <B>algorithms</B> for arithmetic expressions this paper deals with <B>algorithms</B> concerning arithmetic expressions used in a fortran iv compiler for a hitac-5020 computer having n accumulators  the <B>algorithms</B> generate an object code <B>which</B> minimizes the frequency of storing and recovering august  1967 nakata  <B>i</B>  ca670804 jb february 27  1978 4 35 pm 1551 4 1551 1945 4 1551 1122 5 1551 1551 5
7 Q0 2016 66 0.04055379 Lucene_47
the instrumentation of multics an array of measuring tools devised to aid in the implementation of a prototype computer utility is discussed  these tools <B>include</B> special hardware clocks and data channels  general purpose programmed probing and recording tools  and specialized measurement facilities  some <B>particular</B> measurements of <B>interest</B> in a system <B>which</B> combines demand paging
7 Q0 2454 67 0.040527586 Lucene_47
 <B>algorithms</B> are based on two-dimensional iterative <B>techniques</B> <B>which</B> are highly efficient and quite simplecomputational <B>algorithms</B> for closed queueing networks with exponential servers methods are presented for computing the equilibrium distribution of customers in closed queueing networks  1978 10 07 <B>am</B> 2454 5 2454 2454 5 2454 2454 5 2454 2712 5 2454 2741 5 2454 3070 5 2454 1526 6 2454
7 Q0 2094 68 0.040293965 Lucene_47
on an algorithm for nonlinear minimax approximation certain nonlinear minimax approximation problems are characterize d by properties <B>which</B> permit the application of special <B>algorithms</B>  mainly based on the exchange <B>algorithms</B> of remes  1934  1935   for their solution  in this paper the application and  in <B>particular</B>  can successfully solve problems <B>which</B> lead to difficulties with the more conventional
7 Q0 2851 69 0.039989427 Lucene_47
  or <B>processes</B>  executing the program  an induction principle is presented <B>which</B> treats the control and dataformal verification of parallel <B>programs</B> two formal models for parallel computation are presented <B>correctness</B> conditions can be expressed without enumeration of the set of all possible control states  examples are presented in <B>which</B> the induction principle is used to demonstrate proofs of mutual
7 Q0 1440 70 0.0399103 Lucene_47
 in ibm system 360 square root routines  these approximations <B>include</B> several for the range  1 16  1   <B>which</B> is the interval of primary <B>interest</B> on ibm system 360  cacm april  1966 fike  c  t  ca660409 jb march 3  1978 10 32 <B>am</B> 1015 4 1440 1346 4 1440 1440 4 1440 1440 4 1440 1645 4 1440 1932 4 1440
7 Q0 2665 71 0.03971894 Lucene_47
copying list structures <B>using</B> bounded workspace two new <B>algorithms</B> are presented for list structure copying <B>using</B> bounded workspace  the first  of primarily theoretical <B>interest</B>  shows that without cell tag bits the task can be performed in time n 2  the second algorithm  assuming one tag bit processing  copying  marking  space complexity 4.34 5.25 ca740405 jb january 18  1978 9 55 <B>am</B> 1869 4 2665
7 Q0 2972 72 0.03966839 Lucene_47
proof <B>techniques</B> for hierarchically structured <B>programs</B> a method for describing and structuring <B>programs</B> that simplifies proofs of their <B>correctness</B> is presented  the method formally represents a program in terms of levels of abstraction  each level of <B>which</B> can be described by a self-contained nonprocedural specification  the proofs  like the <B>programs</B>  are structured by levels  although only
7 Q0 2324 73 0.039666783 Lucene_47
 of user oriented software  and comparisons of currently known <B>algorithms</B> to demonstrate <B>which</B> <B>techniques</B> are best for specific problems  cacm july  1972 shanno  d  f  weil  r  l  integer programming of these mathematical programming <B>techniques</B>  it is forecast that the useful contributions to nonlinear programming science  operations research  <B>algorithms</B> 5.41 8.3 ca720704 jb january 30  1978 3 14 pm 2324 5 2324
7 Q0 2519 74 0.039166193 Lucene_47
 in communicating mathematical results between scientists <B>using</B> a computer based information retrieval system is examined  the problem is analyzed in terms of psychological and information-processing <B>processes</B>  and what turns out to be a vicious circle of effects is described  these <B>include</B> ways of augmenting ca730501 jb january 24  1978 9 25 <B>am</B> 2519 4 2519 2390 5 2519 2519 5 2519 2519 5 2519 2519 5 2519
7 Q0 3075 75 0.03892074 Lucene_47
 processing  sorting  <B>algorithms</B>  bucket sort 3.74 4.34 5.25 5.31 ca780803 dh february 7  1979 10 25 <B>am</B>fast parallel sorting <B>algorithms</B> a parallel bucket-sort algorithm is presented that requires time o than the product of processors and time  a realistic model is used model is used in <B>which</B> no memory contention is permitted  a procedure is also presented to sort n numbers in time o k log n  <B>using</B> n
7 Q0 595 76 0.038734518 Lucene_47
 the hardware and logic for that computer for <B>which</B> he will write cobol <B>programs</B>  unfortunatelyguides to teaching cobol the teaching of cobol can be divided into three main subject <B>areas</B>  they are the syntax of cobol  the use of such syntax in solving any given problem  and programming  difficult to measure  how then might we approach solving this problem  cacm may  1962 greene  <B>i</B>  ca620510 jb
7 Q0 396 77 0.03848756 Lucene_47
  resulting in verifiably accurate <B>programs</B>  the programmer specifies the program to be debugged  memory <B>areas</B>  set of input data  maximum repetition of loops  and checkpoint information for each set are quite flexible  and the system can be used alone or in conjunction with other debugging <B>techniques</B>  cacm july  1961 jacoby  k  layton  h  ca610714 es march 17  1982 10 10 <B>am</B> 931 5 396 396 5 396 396 5
7 Q0 1160 78 0.03792561 Lucene_47
 implemented <B>which</B> converts 7090 fap language <B>programs</B> into 3600 assembly language  the input to the system is a fap program deck <B>which</B> has been specially prepared for translation by the user  the output consists of the translated compass language program together with a comprehensive diagnostic listing <B>which</B> the user must analyze in order to verify any questionable <B>areas</B> of the translation  the translation
7 Q0 855 79 0.03750704 Lucene_47
 storage work <B>areas</B>  cacm may  1963 goetz  m  a  ca630512 jb march 14  1978 11 10 <B>am</B> 2017 5 855 855 processing <B>programs</B> an approach to the organization and structure of data on bryant disc file memory <B>areas</B> are covered  characteristics of bryant disc file systems on the bendix g-20 and rca 301  two for sorting and performing file maintenance processing <B>using</B> the proposed structure and executive
7 Q0 2771 80 0.037478916 Lucene_47
the synthesis of solids bounded by many faces a technique is presented <B>which</B> allows a class of solid objects to be synthesized and stored <B>using</B> a computer  synthesis begins with primitive solids like together or subtracted  two <B>algorithms</B> to perform addition are described  for practical designers bounded by many faces  cacm april  1975 braid  <B>i</B>  c  computational geometry  computer-aided design
7 Q0 2389 81 0.03746365 Lucene_47
preliminary report on a system for general space planning a computer language and a set of <B>programs</B> within that language are described <B>which</B> allow the formulating and solving of a class of space of constraints  the <B>algorithms</B> used to solve problems expressed in this language rely on heuristic programming  both the language and the search <B>algorithms</B> are detailed  cacm february  1972 eastman  c  m
7 Q0 2520 82 0.037373982 Lucene_47
greatest common divisor of n integers and multipliers  algorithm c386  cacm april  1973 ragland  l  c  good  d  <B>i</B>  proof of <B>algorithms</B>  greatest common divisor  euclidean algorithm  inductive assertion method 3.15 4.42 5.10 5.24 ca730408 jb january 24  1978 9 27 <B>am</B> 2520 5 2520 2520 5 2520 2520 5 2520
7 Q0 3006 83 0.03724053 Lucene_47
anomalies with variable partition paging <B>algorithms</B> five types of anomalous behavior <B>which</B> may the fact that  with certain reference strings and paging <B>algorithms</B>  an increase in mean memory allocation may result in an increase in <B>fault</B> rate  two paging <B>algorithms</B>  are examined in terms  page <B>fault</B> frequency  paging <B>algorithms</B> 4.32 4.35 4.6 8.1 ca780307 jb march 28,1978 1 01 pm 1892 4
7 Q0 2579 84 0.03713706 Lucene_47
 based on usage counts to other commonly used register allocation <B>techniques</B>  and presents evidence <B>which</B> shows that the usage count technique is significantly better than these other <B>techniques</B>  cacm usage counts can be developed by <B>algorithms</B> that eliminate redundant computations  and describes how ca741105 jb january 16  1978 10 24 <B>am</B> 1781 4 2579 1807 4 2579 2034 4 2579 2290 4 2579 2579 4 2579 2579 4
7 Q0 1458 85 0.036904734 Lucene_47
 necessary corresponding changes in the <B>processes</B> related to producing and checking out <B>programs</B>  in the main  it it not the programming language itself <B>which</B> must be changed to provide a facility and its effect on programming are discussed  cacm march  1966 schwartz  j  <B>i</B>  ca660314 jb march 3  197811 44 <B>am</B> 1458 4 1458 1523 4 1458 1603 4 1458 1698 4 1458 1747 4 1458 1748 4 1458 1854 4 1458
7 Q0 3104 86 0.03676136 Lucene_47
 <B>correctness</B>  this paper introduces a <B>techniques</B> whereby test data can be used in proving program <B>correctness</B>  in addition to simplifying the process of proving <B>correctness</B>  this method simplifies the processtest data as an aid in proving program <B>correctness</B> proofs of program <B>correctness</B> tend to be long and recursive <B>programs</B> is demonstrated  cacm may  1978 geller  m  program verification  program
7 Q0 2900 87 0.03653566 Lucene_47
some theorems to aid in solving the file allocation problem the file allocation problem-<B>i</B> e  the problem of finding the optimal set of network sites at <B>which</B> to locate copies of a file-is known  solutions are therefore much needed  in this paper we present three theorems <B>which</B> can be applied  cacm november  1977 grapa  e  belford  g  g  file allocation  computer networks  <B>distributed</B> data
7 Q0 1603 88 0.036399893 Lucene_47
 timing  buffering  and task scheduling and provides parallel processing capability  user <B>programs</B> <B>communicate</B> with the monitor through a small set of meta-instruction <B>which</B> consists mostly of machine-language subroutine calls  cacm may  1967 hornbuckle  g  d  ca670503 jb february 28  1978 10 57 <B>am</B>
7 Q0 2931 89 0.03617148 Lucene_47
  <B>programs</B> naturally enter in giving descriptions of <B>processes</B>  the definition of the precise seem that the <B>understanding</B> of higher-level program features involves us with infinite objects definitions and proofs  <B>which</B> are clean and without undue dependence on implementations  nevertheless  approximation  function spaces 1.2 4.20 5.21 5.24 5.27 ca770902 jb december 28  1977 6 49 <B>am</B> 2931 5 2931
7 Q0 2051 90 0.035937797 Lucene_47
a pl <B>i</B> program to assist the comparative linguist a practical pl <B>i</B> program is described <B>which</B> can  the program tabulates the correspondences  and uses list processing <B>techniques</B> to sort and count  of the <B>programs</B>  and illustrates its use with a small portion of hypothetical data  cacm june  1970 frantz correspondence  list processing 3.42 ca700604 jb february 13  1978 11 51 <B>am</B> 2051 5 2051 2051 5 2051 2051
7 Q0 3032 91 0.03572984 Lucene_47
  to this list of <B>algorithms</B> we add  6  reverse path forwarding  a broadcast routing method <B>which</B> exploitsreverse path forwarding of broadcast packets a broadcast packet is for delivery to all nodes of a network  <B>algorithms</B> for accomplishing this delivery through a store-and-forward packet switching computer network <B>include</B>  1  transmission of separately addressed packets   2  multidestination
7 Q0 2541 92 0.03556386 Lucene_47
an overview of the ispl computer system design this paper explores the advantages of the <B>concurrent</B> from one of these domains to another has had on the design of this system  <B>which</B> has not been scheduling <B>algorithms</B>  decision of what to do  without endangering the system integration  correctly performing the scheduling decisions   cacm february  1973 balzer  r  m  <B>concurrent</B> design  operating
7 Q0 2379 93 0.035561897 Lucene_47
 multiprogramming system <B>which</B> supports five or six <B>concurrent</B> users on a small computer  the system was produced as possible  in this paper the development of the system is described  with <B>particular</B> emphasis on the principles <B>which</B> guided the design  cacm march  1972 liskov  b  h  operating systems  system design  virtual machines  <B>processes</B>  process communication  virtual devices  data sharing  resource
7 Q0 3056 94 0.0355576 Lucene_47
  an example is given in <B>which</B> 8-bit counters  bytes  are used to keep track of as many as 130,000 events with a relative error <B>which</B> is substantially independent of the number n of events  this relative error can be expected to be 24 percent or less 95 percent of the time  <B>i</B> e o   n 8   the <B>techniques</B> could be used to advantage in multichannel counting hardware or software used for the monitoring
7 Q0 2828 95 0.035443887 Lucene_47
hierarchical geometric models for visible surface <B>algorithms</B> the geometric structure inherent for producing pictures by computer  by <B>using</B> an extension of traditional structure information  or a geometric hierarchy  five significant improvements to current <B>techniques</B> are possible  first suggests a recursive descent  visible surface algorithm in <B>which</B> the computation time potentially
7 Q0 2913 96 0.03517379 Lucene_47
 increasing the resolution or defocusing the display can attenuate them  an <B>understanding</B> for evaluating filters is presented  the application of prefiltering to hidden-surface <B>algorithms</B>-surface removal  sampling 8.2 ca771103 jb december 27  1977 7 56 <B>am</B> 2816 4 2913 2828 4 2913 2827 4
7 Q0 2904 97 0.03507893 Lucene_47
an algorithm for reduction of operator strength a simple algorithm <B>which</B> uses an indexed temporary extensions  including linear function test replacement  are discussed  these <B>algorithms</B> should fit well into an integrated package of local optimization <B>algorithms</B>  cacm november  1977 cocke  j  strongly connected region 4.12 5.24 5.32 ca771112 jb december 27  1977 6 34 <B>am</B> 2904 5 2904 2904 5
7 Q0 2289 98 0.03459418 Lucene_47
 is the determination of <B>algorithms</B> that exploit the possibilities for parallelism  especially for problems whose solutions appear to be inherently serial  in <B>particular</B>  several parallelized <B>algorithms</B>  these <B>algorithms</B> exhibit a computation time that in many cases grows at a rate not exceeding log2 n  where n <B>algorithms</B> for these problems require about n steps  and noncellular implementations require from n
7 Q0 2035 99 0.03459008 Lucene_47
 <B>which</B> provides full facilities for text editing  automatic filing and file maintenance  and program-character text strings  manuscripts  <B>which</B> can be positioned anywhere by the user and edited are available through a uniform command set <B>which</B> itself can be augmented by the user  the machine are logically similar to a disk  priority was given to the design of efficient tape <B>algorithms</B>
7 Q0 1745 100 0.034553338 Lucene_47
  <B>distributed</B> data base  program leasing 2.3 2.40 3.80 4.30 ca680511 jb february 23  1978 8 49 <B>am</B> 1745 5 and so that the cost of their construction is reasonable  and  3  the development of public  <B>message</B>
*************Query 8*************************

8 Q0 2951 1 0.49962288 Lucene_47
dynamic response time prediction for computer <B>networks</B> if the ultimate aim of a computing <B>network</B> in participating in the vast store of <B>resources</B> available on a <B>network</B>  analytical  simulation <B>network</B> <B>systems</B> studied in detail  to describe and predict the response time for <B>network</B> time-sharing  a  response time monitor  computer <B>networks</B>  time-sharing <B>systems</B>  comparative response time  arpa
8 Q0 2625 2 0.39056793 Lucene_47
capability-based <B>addressing</B> various <B>addressing</B> <B>schemes</B> making use of segment tables are examined  the inadequacies of these <B>schemes</B> when dealing with shared addresses are explained  a computer using capability-based <B>addressing</B> may be substantially superior to present <B>systems</B>  shared addresses  information sharing  <B>operating</B> <B>systems</B>  computer utility  segmentation  tagged
8 Q0 2541 3 0.34960225 Lucene_47
  it also suggested an important new concept for <B>operating</B> <B>systems</B>  separation of the scheduling from the maintenance functions in <B>resource</B> allocation  this separation enables incorporation of new design of the language  <B>operating</B> system  and machine  via microcode  to create an interactive implemented   this freedom simplified both incremental compilation and the system s <B>addressing</B> structure
8 Q0 3032 4 0.31576154 Lucene_47
 of a <B>network</B>  algorithms for accomplishing this delivery through a store-and-forward packet switching computer <B>network</B> include  1  transmission of separately addressed packets   2  multidestination <B>addressing</B>   3  hot potato forwarding  4  spanning tree forwarding  and  5  source based forwarding <B>networks</B>  the algorithm is described as being practical because it is not optimal according to metrics
8 Q0 2776 5 0.27400357 Lucene_47
 of these <B>operating</B> <B>networks</B>  a number of factors are identified for consideration in developingcomputer <B>networks</B> in higher education  socio-economic-political factors this study presents the results of a nationwide survey of computer <B>networks</B> in higher education conducted during 1971-73  five major and 18 minor <B>networks</B> were identified  the five major <B>networks</B> included  the arpa net
8 Q0 2371 6 0.25787923 Lucene_47
a system for interprocess communication in a <B>resource</B> sharing computer <B>network</B> a system is extended so that it may be used between processes distributed throughout a computer <B>network</B>  the hypothetical application of the system to an existing <B>network</B> is discussed  cacm april  1972 walden  d  c  interprocess communication  time-sharing  computer <B>networks</B>  <B>resource</B> sharing 3.81 4.39 4.82 4.9
8 Q0 2500 7 0.24985497 Lucene_47
a practical approach to managing <B>resources</B> and avoiding deadlocks <B>resource</B> scheduling running as part of a large scale general purpose <B>operating</B> system  keeps <B>resources</B> relatively active involving large numbers of tasks and <B>resources</B> with conflicting requirements  detection and or prevention of deadlocks can require massive amounts of additional overhead if efficient usage of <B>resources</B>
8 Q0 2522 8 0.2304349 Lucene_47
 rodriguez-rosell  j  dupuy  j  p  working set  dispatcher  scheduler  time-sharing <B>systems</B>  <B>resource</B> allocation  software evaluation  <B>operating</B> <B>systems</B>  supervisory <B>systems</B> 4.31 4.32 ca730406 jb system is largely dependent upon the algorithms employed to allocate the system <B>resources</B> to the processes competing for them  recent research in time-sharing paging <B>systems</B> has developed the working
8 Q0 1752 9 0.21893433 Lucene_47
  time-sharing  <B>operating</B> <B>systems</B>  <B>resource</B> management  task scheduling  paging  system simulation<B>resource</B> management for a medium scale time-sharing <B>operating</B> system task scheduling and <B>resource</B> balancing for a medium size virtual memory paging machine are discussed in relation to a combined the system <B>resources</B>  simulation results relative to alternate hardware characteristics and the effects
8 Q0 2949 10 0.2001035 Lucene_47
 tajibnapis  w  d  distributed computer <B>network</B>  correctness proofs  computer <B>networks</B>  distributed control  <B>network</B> topology  routing problem in <B>networks</B>  distributed <B>operating</B> system  store and forward <B>network</B> in order for the nodes of a distributed computer <B>network</B> to communicate  each node must have information about the <B>network</B> s topology  since nodes and links sometimes crash  a scheme is needed
8 Q0 1611 11 0.18855958 Lucene_47
scheduling project <B>networks</B> some of the basic concepts and terminology of project networking are developed  the critical path algorithm incorporated in the c-e-i-r proprietary scheduling system ramps  <B>resource</B> allocation and multi-project scheduling  is described  the error detection and <B>network</B> analysis features of the algorithm are also described  cacm april  1967 klein  m  m  ca670404 jb
8 Q0 1877 12 0.18846934 Lucene_47
prevention of system deadlocks a well-known problem in the design of <B>operating</B> <B>systems</B> is the selection of a <B>resource</B> allocation policy that will prevent deadlock  deadlock is the situation in which <B>resources</B> have been allocated to various tasks in such a way that none of the tasks can continue of the current allocation of <B>resources</B> and determine whether or not the granting of the request will introduce
8 Q0 1685 13 0.18473253 Lucene_47
gan  a system for generating and analyzing activity <B>networks</B> gan  a system for generating activity <B>networks</B>  is designed to save time in the preparation of activity <B>networks</B> and to deal conveniently with <B>network</B> programs  a defining description of a programming language designed for generating activity <B>network</B> from a set of standard <B>networks</B> is presented  also  a general idea of a language
8 Q0 2892 14 0.18136504 Lucene_47
 loaded <B>network</B>  similar results are derived for a recently proposed <B>network</B> protocol and compared  computer communication <B>networks</B>  interprocess communication  measurement  packet switching  performance evaluation and efficiency  <B>resource</B> sharing 3.81 4.39 4.6 4.9 ca760101 jb january 5  1978 10 49
8 Q0 1677 15 0.16680753 Lucene_47
storage organization in programming <B>systems</B> the system of program and data representation that has arrangement is discussed with its realized advantages or programming <B>systems</B>  simplicity of programmed <B>addressing</B>  flexibility of data structures  efficiency of memory utilization  variability protection  <B>addressing</B> mechanisms  paging  segmentation  file handling 4.30 4.40 6.20 ca681102 jb february 21
8 Q0 1695 16 0.16389436 Lucene_47
 analysis  discrete system simulation  library <B>systems</B>  modeling  <B>network</B> simulation  neural <B>networks</B>plexus-an on-line system for modeling neural <B>networks</B> a description is presented of plexus  a system which enables a user to construct and specify a neural <B>network</B>  to analyze the output data produced by the <B>network</B>  and to store and retrieve <B>networks</B> and data from a library  the system  operated
8 Q0 1928 17 0.16347411 Lucene_47
exclusive simulation of activity in digital <B>networks</B> a technique for simulating the detailed logic <B>networks</B> of large and active digital <B>systems</B> is described  essential objectives sought are improved described may be used for the simulation of <B>network</B> structures other than digital <B>networks</B>  cacm activities  the passage of time is simulated in a precise  quantitative fashion and <B>systems</B>
8 Q0 2920 18 0.16249648 Lucene_47
 informally as the determination  from some a priori information about the processes  <B>resources</B>  <B>operating</B> system  etc   of the  safe situations  which may be realized without endangering the smooth steps  a global approach to the phenomenon and its in terpretation as a game between the <B>operating</B> their properties  cacm october  1977 devillers  r  <B>operating</B> system  multiprogramming  time-sharing
8 Q0 2020 19 0.15863872 Lucene_47
the allocation of computer <B>resources</B>-is pricing the answer  the widespread use of complex third generation computing <B>systems</B> has led to a much broader concern about the means by which the <B>resources</B> of these <B>systems</B> are allocated among the user community  one means that is suggested more and more computing <B>resources</B> is considered  and then the extent to which a pricing mechanism fits this mold
8 Q0 2095 20 0.1444401 Lucene_47
measurements of segment size distributions of segment sizes measured under routine <B>operating</B> con system  they should be relevant to the design of new computer <B>systems</B>  especially with respect to the organization of paging <B>schemes</B>  cacm march  1970 batson  a  ju  s  wood  d  c  storage allocation  segmentation  segment sizes  page sizes  paging  <B>resource</B> allocation  memory allocation  core
8 Q0 1680 21 0.14128524 Lucene_47
 40  and the ibm 2250 display unit under <B>operating</B> system 360  adept is a cataloged program that controls the standard <B>operating</B> system by terminating and rescheduling itself automatically  relinquishing computer <B>resources</B> allocated to it  and surrendering control to the <B>operating</B> system to perform instruction  tutorial <B>systems</B>  programming  simulation  modeling  information retrieval <B>operating</B>
8 Q0 2614 22 0.1389906 Lucene_47
arrow to precedence <B>network</B> transformation  h   algorithm a481  cacm august  1974 crandall  k  c  critical path  <B>networks</B>  precedence <B>networks</B> 3.23 5.40 ca740810 jb january 17  1978 9 37 am 2614 5 2614 2614 5 2614 2614 5 2614
8 Q0 2358 23 0.13842078 Lucene_47
the multics virtual memory  concepts and design as experience with use of on-line <B>operating</B> <B>systems</B> contemporary <B>systems</B> permit some degree of sharing  usually  sharing is accomplished by allowing storage  through the use of segmentation  however  multics provides direct hardware <B>addressing</B> by user  segmented main memory  since the size of main memory on contemporary <B>systems</B> is rather limited
8 Q0 2194 24 0.13549955 Lucene_47
  some computers permit either 8-bit <B>addressing</B>  interpreted relative to the location counter  or full 16-bit <B>addressing</B> of all of memory  when assembling or compiling two or more blocks of instructions operations on the column vectors of a ternary matrix  cacm may  1971 richards  d  l  <B>addressing</B>  assembler  covering problem  integer programming  variable-length <B>addressing</B> 4.11 4.12 4.21 5.41 ca710505
8 Q0 2830 25 0.13549955 Lucene_47
a practitioner s guide to <B>addressing</B> algorithms  corrigendum  cacm september  1976 severance  d  g  duhne  r  a  ca760909 jb january 4  1978 8 43 am 2830 5 2830 2830 5 2830 2830 5 2830
8 Q0 912 26 0.13549955 Lucene_47
<B>addressing</B> an array yi in k-dimensions by fortran for analysis of variance cacm march  1963 garber  m  j  ca630309 jb march 14  1978 1 44 pm 912 5 912 912 5 912 912 5 912 1014 5 912 912 6 912
8 Q0 2499 27 0.12882145 Lucene_47
 <B>resource</B> essential to control of other <B>resources</B>  the general suggestions for allocationefficient multiprogramming <B>resource</B> allocation and accounting although sometimes thought of as only a component of time-sharing operation  multiprogramming can involve broader questions of <B>resource</B>  it may serve maximal <B>resource</B> use to be unfair  for example by holding an input output channel idle
8 Q0 2197 28 0.12569459 Lucene_47
 computing <B>networks</B>  one such <B>network</B> has been constructed in the san francisco bay area by stanford university  this paper reports upon the lessons learned from the operation of the <B>network</B> over the past development  educational computing  <B>network</B> computing  regional computing <B>networks</B>  remote computingthe merit of regional computing <B>networks</B> one of the suggested means for stimulating the spread
8 Q0 2482 29 0.12133886 Lucene_47
 <B>operating</B> system  for constructing appropriate mixtures and suggests appropriate subsystems for the most frequently occurring <B>resource</B> allocation problems cacm july  1973 howard  j  h  jr  deadlocks  <B>resource</B> allocation  <B>operating</B> <B>systems</B>  multiprogramming  hierarchical <B>systems</B> 4.30 4.32 ca730704 jb january  the individual techniques can be tailored for subproblems of <B>resource</B> allocation and still operate together
8 Q0 1261 30 0.11825653 Lucene_47
modeling and simulation of digital <B>networks</B> the simulation of digital <B>networks</B> on a digital  the digital <B>network</B> is modeled as a set of time-dependent or time-independent boolean transformations  each transformation describing the input-output relationship of a model element comprising the <B>network</B> mode  the simplicity of utilizing the fortran iv programming system as a digital <B>network</B> simulator
8 Q0 2858 31 0.11734605 Lucene_47
a process for the determination of addresses in variable length <B>addressing</B> an algorithm is presented for the assignment of instruction addresses and formats under the following conditions   1 to the <B>addressing</B> constraints  this may be  for example  achieving the smallest number of long instructions of optimization criteria  cacm june  1976 frieder  g  saal  h  j  variable length <B>addressing</B>  assembler  paging
8 Q0 3127 32 0.11476697 Lucene_47
  sager  g  portability  real time  <B>operating</B> <B>systems</B>  minicomputer 3.80 4.30 4.35 ca790206 dh aprilthoth  a portable real-time <B>operating</B> system thoth isa real-time <B>operating</B> system which is designed to be portable over a large set of machines  it is currently running on two minicomputers portable  thoth encourages structuring programs as <B>networks</B> of communicating processes by providing
8 Q0 828 33 0.113792405 Lucene_47
incompressible flow <B>network</B> calculations a general method for the calculation of flows and pressures in fluid flow <B>networks</B> is presented  the method is applicable to computer use  cacm june  1963 cantrell  h  n  ca630621 jb march 14  1978 10 03 am 828 5 828 828 5 828 828 5 828
8 Q0 1869 34 0.10839964 Lucene_47
block structures  indirect <B>addressing</B>  and garbage collection programming languages have included  when indirect <B>addressing</B> is used  as in snobol  naming constraints may be introduced  two even when there is indirect <B>addressing</B> within function definitions  and  2  there is a significant <B>addressing</B>  garbage collection  local names  snobol 4.22 ca690711 jb february 15  1978 6 49 pm 1869 4
8 Q0 3133 35 0.1081572 Lucene_47
logic and semantic <B>networks</B> an extended form of semantic <B>network</B> is defined  which can be regarded  the extended semantic <B>network</B> is provided with a precise semantics  inference rules  and a procedural interpretation  on the other hand  by regarding semantic <B>networks</B> as an abstract data structure  a  kowalski  r  logic  semantic <B>networks</B>  theorem-proving  indexing  resolution  deduction  logic programming
8 Q0 2515 36 0.10531167 Lucene_47
minimal event-node <B>network</B> of project precedence relations a procedure for constructing a minimal event-node <B>network</B> to represent a set of precedence relations without parallel activities is presented  a minimal event-node <B>network</B> is an event-node <B>network</B> in which both the number of nodes  produces event-node <B>networks</B> which are not minimal  since our procedure includes the set-covering problem
8 Q0 1723 37 0.10477572 Lucene_47
computer construction of project <B>networks</B> project <B>networks</B> are used in pert and cpm  an algorithm is given for constructing project <B>networks</B> directly from the project precedence relations ii for the ibm 7094  cacm july  1968 fisher  a  c  liebman  j  s  nemhauser  g  l  project <B>networks</B>  pert  cpm  topological ordering  <B>network</B> construction by computer 5.32 ca680706 jb february 22
8 Q0 1754 38 0.103921816 Lucene_47
dynamic storage allocation <B>systems</B> in many recent computer system designs  hardware facilities have storage allocation <B>systems</B>-according to the functional capabilities provided and the underlying facilities in several representative computer <B>systems</B> is included as an appendix  cacm may  1968  virtual memories  storage fragmentation  storage hierarchies  <B>addressing</B> mechanisms 4.30 6.20
8 Q0 2379 39 0.10132264 Lucene_47
 on the principles which guided the design  cacm march  1972 liskov  b  h  <B>operating</B> <B>systems</B>  system designthe design of the venus <B>operating</B> system the venus <B>operating</B> system is an experimental architectural feature  the software exploits these features to define the <B>operating</B> system as simply  virtual machines  processes  process communication  virtual devices  data sharing  <B>resource</B>
8 Q0 2320 40 0.10124169 Lucene_47
 <B>operating</B> <B>systems</B> but also within user programs  cacm july  1972 hansen  p  b  structured multiprogramming  programming languages  <B>operating</B> <B>systems</B>  concurrent processes  shared data  mutual exclusion regions and event variables enables the programmer to control scheduling of <B>resources</B> among
8 Q0 2849 41 0.100675665 Lucene_47
ethernet  distributed packet switching for local computer <B>networks</B> ethernet is a branching stations  the packet transport mechanism provided by ethernet has been used to build <B>systems</B> which can be viewed as either local computer <B>networks</B> or loosely coupled multiprocessors  an ethernet s shared and implementation are described  based on experience with an <B>operating</B> ethernet of 100 nodes along
8 Q0 3040 42 0.09655605 Lucene_47
  backtrack  combinatorial algorithms  constraint <B>networks</B>  constraint satisfaction  graph coloring  <B>network</B>synthesizing constraint expressions a constraint <B>network</B> representation is presented for a combinatorial search problem  finding values for a set of variables subject to a set of constraints  a theory of consistency levels in such <B>networks</B> is formulated  which is related to problems of backtrack
8 Q0 2297 43 0.09583169 Lucene_47
a model of memory contention in a paging machine this paper is concerned with certain aspects of contention for main memory <B>resources</B> in a multiprogrammed computer system <B>operating</B> under demand paging  in the model presented  the number of page-frames of main memory allocated to a problem program  1972 oden  p  h  shedler  g  s  paging machines  demand paging  <B>operating</B> <B>systems</B> studies  queuing
8 Q0 40 44 0.09581265 Lucene_47
 <B>addressing</B> and instruction formats can increase the overall performance  binary addresses are also  a careful review of the significance of decimal and binary <B>addressing</B> and both binary and decimal data
8 Q0 492 45 0.09581265 Lucene_47
analysis of a file <B>addressing</B> method this paper presents a new file <B>addressing</B> method based on the calculation of an address from the identification of a record  for large recirculating type files  it seems to be more advantageous than customary ones  the probability distribution of the displacement of records from their calculated address  which is one less than the number of probes required
8 Q0 2969 46 0.0949955 Lucene_47
optimal program and data locations in computer <B>networks</B> an optimization procedure for the allocation of program and data files in a computer <B>network</B> is presented  this algorithm takes into account the dependencies between files and programs such as occur in real heterogeneous computer <B>networks</B> and a possible application of the model  cacm may  1977 morgan  h  l  levin  k  d  computer <B>networks</B>
8 Q0 3126 47 0.09484968 Lucene_47
comments on perfect hashing functions  a single probe retrieving method for static sets cacm february  1979 anderson  m  hashing  hashing methods  hash coding  direct <B>addressing</B>  identifier- to-address transformations  perfect hashing functions  perfect hash coding  reduction  retrieving  scatter storage  searching 3.7 3.74 4.34 ca790205 dh april 10  1979 4 25 pm 3041 4 3126 3126 4 3126 3176 4
8 Q0 2597 48 0.09478617 Lucene_47
  1974 hoare  c  a  r  monitors  <B>operating</B> <B>systems</B>  scheduling  mutual exclusion  synchronization  systemmonitors  an <B>operating</B> system structuring concept this paper develops brinch-hansen s concept of a monitor as a method of structuring an <B>operating</B> system  it introduces a form of synchronization  illustrative examples include a single <B>resource</B> scheduler  a bounded buffer  an alarm clock  a buffer
8 Q0 3076 49 0.09439718 Lucene_47
 transfer <B>systems</B>  social impacts of computing  privacy  social choice  computer <B>networks</B>  <B>network</B> few years  computer-based <B>systems</B> which automate the transfer and recording of debits and credits have begun to be implemented on a large scale  these <B>systems</B> promise both financial benefits significant social  legal  and technical questions that must be resolved if full scale <B>systems</B>
8 Q0 2860 50 0.09387684 Lucene_47
a practitioner s guide to <B>addressing</B> algorithms this paper consolidates a number of popular rules of thumb which have been suggested for the design of record <B>addressing</B> algorithms  and discusses the applicability of these rules to large commercial databases  guidelines for selecting identifier  data management  file retrieval  searching  <B>addressing</B> techniques  hashing functions  synonym
8 Q0 2080 51 0.09244269 Lucene_47
the nucleus of a multiprogramming system this paper describes the philosophy and structure of a multiprogramming system that can be extended with a hierarchy of <B>operating</B> <B>systems</B> to suit diverse requirements of program scheduling and <B>resource</B> allocation  the system nucleus simulates an environment  <B>operating</B> <B>systems</B>  parallel processes  process concept  process communication  message buffering  process
8 Q0 3158 52 0.09153647 Lucene_47
secure personal computing in an insecure <B>network</B> a method for implementing secure personal computing in a <B>network</B> with one or more central facilities is proposed  the method employs a public-key confidential files in the central facility or transmit confidential data to other users on the <B>network</B>  cacm august  1979 denning  d  personal computing  security  privacy  <B>networks</B>  public-key encryption 2.12
8 Q0 1846 53 0.09089752 Lucene_47
on simulating <B>networks</B> of parallel processes in which simultaneous events may occur some of the problems of simulating discrete event <B>systems</B>  particularly computer <B>systems</B>  on a conventional digital computer are dealt with  the <B>systems</B> are assumed to be described as a <B>network</B> of interconnected sequential processes  briefly reviewed are the common techniques used to handle such simulations when
8 Q0 1735 54 0.08315072 Lucene_47
 of the periodic fluctuation in computer use often associated with monthly time allocation <B>schemes</B>  cacm june  1968 sutherland  i  e  computer scheduling  auction  time allocation  <B>operating</B> efficiency 2.40
8 Q0 2991 55 0.082142234 Lucene_47
  key transformation  key-to-address transformation  direct <B>addressing</B>  direct access  direct access method  randomizing  random access  file <B>addressing</B>  file organizations  file structures  scatter storage  search method  collisions  synonyms  clustering  information retrieval  open <B>addressing</B>
8 Q0 2258 56 0.08129973 Lucene_47
additional results on key-to-address transform techniques  a fundamental performance study on large existing formatted files cacm november  1972 lum  v  y  yuen  p  s  t  hashing  hashing techniques  hashing methods  hash coding  keys  key transformation  key-to-address transformation  direct <B>addressing</B>  direct access method  randomizing  random access file organization  file search  scatter
8 Q0 615 57 0.08129973 Lucene_47
<B>addressing</B> multidimensional arrays a useful method of representing a function of n variables is to consider the function to assume its values at selected points in n-dimensional space  although this picture is of value to the analyst  the elements of an n-dimensional array must exist in conventional storage as a linear array or vector  the means of performing the transformation of a set
8 Q0 2219 58 0.08079879 Lucene_47
-sharing <B>operating</B> system can be characterized by a <B>resource</B> count sum w i r ij   where r ij  is the number of units of service received by process i from <B>resource</B> i and w i  is the cost per unit  1971 bernstein  a  j  sharp  j  c  scheduler  time-sharing  <B>operating</B> system  <B>resource</B> allocation the <B>resource</B> count of each process above its policy function will provide the specified level of service
8 Q0 2712 59 0.07916292 Lucene_47
horner s rule for the evaluation of general closed queueing <B>networks</B> the solution of separable closed queueing <B>networks</B> requires the evaluation of homogeneous multinomial expressions  the number of terms in those expressions grows combinatorially with the size of  the <B>network</B> such that a direct constant is evaluated  cacm october  1975 reiser  m  kobayashi  h  queueing <B>networks</B>  queueing theory
8 Q0 441 60 0.07916292 Lucene_47
topological sorting of large <B>networks</B> topological sorting is a procedure required for many problems involving analysis of <B>networks</B>  an example of one such problem is pert  the present paper presents a very general method for obtaining topological order  it permits treatment of larger <B>networks</B> than the procedure can be adapted to any machine  it is discussed in terms of the 7090  a pert <B>network</B> of 30,000
8 Q0 2501 61 0.07665012 Lucene_47
 as facilities for text alignment and justification  a powerful method for <B>addressing</B> text by content  document preparation  data entry  content <B>addressing</B> 3.70 3.79 4.10 4.19 4.41 4.43 4.49 ca730519 jb
8 Q0 3083 62 0.07665012 Lucene_47
pseudochaining in hash tables this paper presents pseudochaining as a new collision-resolution method  pseudochaining is half way between open <B>addressing</B> and chaining  it owes its name to the fact that link fields are present in each cell of the hash table which permits  chaining  of the first  cacm july  1978 halatsis  c  philokyprou  g  hash code  scatter storage  open <B>addressing</B>  chaining
8 Q0 1751 63 0.07583678 Lucene_47
 demand  are defined  and <B>resource</B> allocation is formulated as the problem of balancing demands against available equipment  cacm may  1968 denning  p  j  general <B>operating</B> system concepts  multiprocessing  multiprogramming  <B>operating</B> <B>systems</B>  program behavior  program models  <B>resource</B> allocation of a general treatment of <B>resource</B> allocation in modern computer <B>systems</B> is an adequate model for program
8 Q0 1938 64 0.07574069 Lucene_47
some criteria for time-sharing system performance time-sharing <B>systems</B>  as defined in this article  are those multiaccess <B>systems</B> which permit a terminal user to utilize essentially the full <B>resources</B> of the system while sharing its time with other terminal users  it is each terminal user s ability to utilize the full <B>resources</B> of the system that makes quantitative evaluation of time-sharing
8 Q0 1461 65 0.074910626 Lucene_47
discussion summary on <B>operating</B> <B>systems</B> cacm march  1966 ca660311 jb march 3  1978 1 26 pm 1461 5 1461 1461 5 1461 1461 5 1461
8 Q0 2128 66 0.07429395 Lucene_47
 application to more general <B>resource</B> allocation problems  it is implemented by means of a method  g  c  time sharing  <B>resource</B> allocation  scheduling algorithms  monitors  dynamic allocation  processor allocation  multiprogramming  multiprocessing  time slicing  scheduling  conversational <B>systems</B>  interactive <B>systems</B> 3.80 4.30 4.31 4.32 6.33 ca700103 jb february 14  1978 2 15 pm 1751 4 2128
8 Q0 3092 67 0.07228134 Lucene_47
characteristics of application software maintenance maintenance and enhancement of application software consume a major portion of the total life cycle cost of a system  rough estimates of the total <B>systems</B> and programming <B>resources</B> consumed range as high as 75-80 percent in each category  however indicate that   1  maintenance and enhancement do consume much of the total <B>resources</B> of <B>systems</B>
8 Q0 2632 68 0.071089625 Lucene_47
hydra  the kernel of a multiprocessor <B>operating</B> system this paper describes the design philosophy of hydra-the kernel of an <B>operating</B> system for c mmp  the carnegie-mellon multi-mini-processor  this philosophy is realized through the introduction of a generalized notion of  <B>resource</B>   both physical <B>systems</B>  cacm june  1974 wulf  w  cohen  e  corwin  w  jones  a  levin  r  pierson  c  pollack  f
8 Q0 3088 69 0.068883955 Lucene_47
 different conditions in an idealized cpu-i o overlap model of multiprogrammed computer <B>systems</B> both balanced and unbalanced <B>resource</B> utilization conditions  cacm june  1978 teory  t  blocking  buffering  input output  overlap  performance  <B>resource</B> allocation  throughput  timesharing 3.72 4.30
8 Q0 1591 70 0.06854634 Lucene_47
 student mode and programmer mode  during the latter  the full <B>resources</B> of the <B>operating</B> system into an <B>operating</B> system of a large computer is described  the model transferred control to the <B>operating</B> teaching  the teaching system  abac-ii  was written to run under the <B>operating</B> system  ibsys  for the ibm by the <B>operating</B> system  a course could therefore include text material interleaved with programming
8 Q0 2900 71 0.06827544 Lucene_47
some theorems to aid in solving the file allocation problem the file allocation problem-i e  the problem of finding the optimal set of <B>network</B> sites at which to locate copies of a file-is known to be  in general  polynomial complete  heuristics and other aids to finding optimal  or near-optimal  cacm november  1977 grapa  e  belford  g  g  file allocation  computer <B>networks</B>  distributed data
8 Q0 2274 72 0.067864284 Lucene_47
generating english discourse from semantic <B>networks</B> a system is described for generating english sentences from a form of semantic nets in which the nodes are word-sense meanings and the paths are primarily deep case relations  the grammar used by the system is in the form of a <B>network</B> that imposes  the generation algorithm uses the information in the semantic <B>network</B> to select appropriate generation paths
8 Q0 3110 73 0.067749776 Lucene_47
 instructions  variable-length <B>addressing</B>  code generation  assemblers  compilers  np-complete
8 Q0 332 74 0.067749776 Lucene_47
an indirect chaining method for <B>addressing</B> on secondary keys methods for entering random access files on the basis of one key are briefly surveyed  the widely used chaining method  based on a pseudo-random key transformation  is reviewed in more detail  an efficient generalization of the chaining method which permits recovery on additional keys is then presented  cacm may  1961 johnson  l  r
8 Q0 71 75 0.067749776 Lucene_47
 <B>addressing</B>  cacm august  1959 bagley  p  r  ca590802 jb march 22  1978 6 16 pm 71 5 71 71 5 71 71 5
8 Q0 3068 76 0.06722448 Lucene_47
a model for verification of data security in <B>operating</B> <B>systems</B> program verification applied <B>systems</B>  a precise definition of data security is developed here in terms of a general model for <B>operating</B> <B>systems</B>  this model is suitable as a basis for verifying many of those properties  d  <B>operating</B> <B>systems</B>  security  protection  program verification 4.35 5.24 ca780904 dh february 5
8 Q0 1879 77 0.06706885 Lucene_47
 and an accompanying technique for segment <B>addressing</B> which take advantage of the above result  evidence is presented  b  storage allocation  storage fragmentation  paging  segmentation  <B>addressing</B> 6.2 6.20 ca690701 jb
8 Q0 3053 78 0.06706885 Lucene_47
packed scatter tables scatter tables for open <B>addressing</B> benefit from recursive entry displacements  cutoffs for unsuccessful searches  and auxiliary cost functions  compared with conventional methods  the new techniques provide substantially improved tables that resemble exact-solution optimal problem  backtrack programming  hashing  open <B>addressing</B>  recursion  scatter table rearrangements 3.74
8 Q0 2578 79 0.06608154 Lucene_47
self-stabilizing <B>systems</B> in spite of distributed control cacm november  1974 dijkstra  e  w  multiprocessing  <B>networks</B>  self-stabilization  synchronization  mutual exclusion  robustness  sharing  error recovery  distributed control  harmonious cooperation  self-repair 4.32 ca741106 jb january 16,1978 10 18 am 2578 5 2578 2578 5 2578 2578 5 2578
8 Q0 144 80 0.06534846 Lucene_47
do it by the numbers-digital shorthand present communications <B>systems</B> transmit single characters in groups of coded pulses between simple terminal equipments  since english words form only a sparse set of all possible alphabetic combinations  present methods are inefficient when computer <B>systems</B> translation <B>schemes</B>  provision is made for transmission of purely numeric and or binary streams
8 Q0 2681 81 0.06386733 Lucene_47
  and the <B>operating</B> conditions that lead to improved system throughput through repacking are delineated productivity  <B>resource</B> utilization  system throughput 4.32 5.5 6.20 ca740302 jb january 18  1978 12 37 pm
8 Q0 2046 82 0.061002232 Lucene_47
 <B>systems</B> provide users with tree-structured files or slightly more general <B>network</B> models of the data organization  hierarchies of data  <B>networks</B> of data  relations  derivability  redundancy  consistency
8 Q0 2798 83 0.06083278 Lucene_47
analysis of interleaved memory <B>systems</B> using blockage buffers a model of interleaved memory <B>systems</B> is presented  and the analysis of the model by monte carlo simulation is discussed  the simulations investigate the performance of various system structures  i e  <B>schemes</B> for sending instruction burnett  g  j  coffman  e  g  jr  interleaved memory <B>systems</B>  modular memory <B>systems</B>  memory performance
8 Q0 3177 84 0.05993847 Lucene_47
how to share a secret in this paper we show how to divide data d into n pieces in such a way that d is easily reconstructable from any k pieces  but even complete knowledge of k - 1 pieces reveals olutely no information about d  this technique enables the construction of robust key management <B>schemes</B> for cryptographic <B>systems</B> that can function securely and reliably even when misfortunes destroy
8 Q0 1785 85 0.05748759 Lucene_47
scatter storage techniques scatter storage techniques as a method for implementing the symbol tables of assemblers and compilers are reviewed and a number of ways of using them more effectively are presented  many of the most useful variants of the techniques are documented  cacm january  1968 morris  r  scatter storage  hash <B>addressing</B>  searching  file searching  file <B>addressing</B>  storage layout
8 Q0 2109 86 0.05748759 Lucene_47
 method  hash <B>addressing</B>  address clustering  scatter storage  file searching  file <B>addressing</B>  hash
8 Q0 2203 87 0.05748759 Lucene_47
  keys  key transformation  key-to-address transformation  direct <B>addressing</B>  direct access method  randomizing  random access file <B>addressing</B>  file organizations  file structures  scatter storage
8 Q0 2543 88 0.05748759 Lucene_47
  1973 brent  r  p  address calculation  content <B>addressing</B>  file searching  hash <B>addressing</B>  hash code
8 Q0 3117 89 0.0574033 Lucene_47
 beyond  routine  uses to  nonroutine  efforts  such as <B>resource</B> allocation or computer-aided-dispatch <B>systems</B> where the machine begins to become a tool for decision making  strategic planning colton  k  computer technology  innovation  police <B>resource</B> allocation  police command and control
8 Q0 2988 90 0.056299116 Lucene_47
 <B>network</B> models of computer <B>systems</B>  empirical analyses and analytic studies based on applying  system performance  queueing <B>network</B> models  in teractive computer <B>systems</B> 4.32 ca770304 jb december model is proposed as being broadly applicable to the analysis of in teractive computer <B>systems</B> which
8 Q0 2621 91 0.05485262 Lucene_47
 to one-way ciphers derived from sannon codes  cacm august  1974 purdy  g  b  <B>operating</B> <B>systems</B>  time sharing <B>systems</B>  security  cryptography 4.35 ca740803 jb january 17  1978 10 10 am 2621 5 2621 2621a high security log-in procedure the protection of time sharing <B>systems</B> from unauthorized users is often achieved by the use of passwords  by using one-way ciphers to code the passwords  the risks
8 Q0 3072 92 0.05462988 Lucene_47
feedback coupled <B>resource</B> allocation policies in the multiprogramming- multiprocessor computer system model studies of some integrated  feedback-driven scheduling <B>systems</B> for multiprogrammed- multiprocessor computer <B>systems</B> are presented  the basic control variables used are the data-flow rates for the processes executing on the cpu  the model <B>systems</B> feature simulated continuous-flow and preempt
8 Q0 2437 93 0.05419982 Lucene_47
 coding  key transformation  key-to-address transformation  direct <B>addressing</B>  randomizing  random
8 Q0 2905 94 0.05419982 Lucene_47
  1977 sprugnoli  r  hashing  hashing methods  hash coding  direct <B>addressing</B>  identifier-to-address
8 Q0 796 95 0.05419982 Lucene_47
 register permits double modification in general and relative <B>addressing</B> of subroutines in particular
8 Q0 1750 96 0.054062087 Lucene_47
 of the faster memory  cacm may  1968 fuchel  k  heller  s  multiple computer <B>systems</B>  extended core storage  multiprogrammed <B>operating</B> <B>systems</B>  multiprocessor <B>operating</B> <B>systems</B>  control data corporation 6600  <B>operating</B> system with ecs 4.30 4.32 ca680506 jb february 23  1978 9 27 am 1750 5 1750 1750 5
8 Q0 2372 97 0.05308662 Lucene_47
 existing <B>systems</B>  and serves as a framework for a proposal for general security system implementation within today s languages and <B>operating</B> <B>systems</B>  cacm april  1972 conway  r  w  maxwell  w  l  morgan  h  l  security  privacy  access control confidentiality  <B>operating</B> <B>systems</B>  access management  dataon the implementation of security measures in information <B>systems</B> the security of an information
8 Q0 1247 98 0.052969813 Lucene_47
an <B>operating</B> environment for dynamic-recursive computer programming <B>systems</B> presented in this paper is a brief nontechnical introduction to oedipus  a computer programming system which can serve as an <B>operating</B> environment for dynamic and or recursive programs and programming <B>systems</B>  the available services include dynamic allocation of storage for contiguous blocks of arbitrary size  input
8 Q0 2343 99 0.049948726 Lucene_47
a proposal to establish a pseudo virtual memory via writable overlays many computer <B>systems</B> solve executable storage size problems for large programs by using overlays  however  it appears that no one overlay scheme contains a well-balanced combination of the most useful capabilities which capabilities from existing <B>schemes</B> and is complemented by several additional features  e g  writable
8 Q0 2069 100 0.04994042 Lucene_47
comments on a paper by wallace and mason cacm april  1970 heess jr   w  f  page-on-demand  demand paging  time-sharing multiprogramming  markovian computer models  scheduling strategies  <B>operating</B> <B>systems</B>  memory management 2.44 4.32 4.39 6.20 6.21 ca700415 jb february 13  1978 2 36 pm 2069 5 2069 2069 5 2069 2069 5 2069
*************Query 9*************************

9 Q0 2849 1 0.5963191 Lucene_47
ethernet  <B>distributed</B> packet switching for <B>local</B> computer <B>networks</B> ethernet is a branching broadcast communication system for carrying digital data packets among locally <B>distributed</B> computing be viewed as either <B>local</B> computer <B>networks</B> or loosely coupled multiprocessors  an ethernet s shared  boggs  d  r  computer <B>networks</B>  packet switching  multiprocessing  <B>distributed</B> control  <B>distributed</B>
9 Q0 2949 2 0.44630384 Lucene_47
 tajibnapis  w  d  <B>distributed</B> computer <B>network</B>  correctness proofs  computer <B>networks</B>  <B>distributed</B> control  <B>network</B> topology  routing problem in <B>networks</B>  <B>distributed</B> <B>operating</B> system  store and forwarda correctness proof of a topology information main tenance protocol for a <B>distributed</B> computer <B>network</B> in order for the nodes of a <B>distributed</B> computer <B>network</B> to communicate  each node must have
9 Q0 1745 3 0.3869135 Lucene_47
-switched communications services so that adequate provisions are made for information <B>security</B>  cacm may  1968 dennis  j  b  information <B>networks</B>  information <B>systems</B>  computing and free enterprise  <B>distributed</B> data base  program leasing 2.3 2.40 3.80 4.30 ca680511 jb february 23  1978 8 49 am 1745 5
9 Q0 2578 4 0.34534243 Lucene_47
self-stabilizing <B>systems</B> in spite of <B>distributed</B> control cacm november  1974 dijkstra  e  w  multiprocessing  <B>networks</B>  self-stabilization  synchronization  mutual exclusion  robustness  sharing  error recovery  <B>distributed</B> control  harmonious cooperation  self-repair 4.32 ca741106 jb january 16,1978 10 18 am 2578 5 2578 2578 5 2578 2578 5 2578
9 Q0 2372 5 0.34050655 Lucene_47
 existing <B>systems</B>  and serves as a framework for a proposal for general <B>security</B> system implementation within today s languages and <B>operating</B> <B>systems</B>  cacm april  1972 conway  r  w  maxwell  w  l  morgan  h  l  <B>security</B>  privacy  access control confidentiality  <B>operating</B> <B>systems</B>  access management  dataon the implementation of <B>security</B> measures in information <B>systems</B> the <B>security</B> of an information
9 Q0 3137 6 0.33573273 Lucene_47
a methodology for the design of <B>distributed</B> information <B>systems</B> a macro model of a <B>distributed</B> the perspective of the end-user  the making evident the effect of various design and <B>operating</B> of an interactive transaction processing system  cacm april  1979 bucci  g  streeter  d  <B>distributed</B> processing  system design  cost minimization  <B>distributed</B> database  interactive computing  economic
9 Q0 3068 7 0.3312213 Lucene_47
a model for verification of data <B>security</B> in <B>operating</B> <B>systems</B> program verification applied  d  <B>operating</B> <B>systems</B>  <B>security</B>  protection  program verification 4.35 5.24 ca780904 dh february 5 <B>systems</B>  a precise definition of data <B>security</B> is developed here in terms of a general model for <B>operating</B> <B>systems</B>  this model is suitable as a basis for verifying many of those properties
9 Q0 2621 8 0.3137483 Lucene_47
a high <B>security</B> log-in procedure the protection of time sharing <B>systems</B> from unauthorized users is often achieved by the use of passwords  by using one-way ciphers to code the passwords  the risks to one-way ciphers derived from sannon codes  cacm august  1974 purdy  g  b  <B>operating</B> <B>systems</B>  time sharing <B>systems</B>  <B>security</B>  cryptography 4.35 ca740803 jb january 17  1978 10 10 am 2621 5 2621 2621
9 Q0 2951 9 0.30046126 Lucene_47
dynamic response time prediction for computer <B>networks</B> if the ultimate aim of a computing <B>network</B> <B>network</B> <B>systems</B> studied in detail  to describe and predict the response time for <B>network</B> time-sharing  a  response time monitor  computer <B>networks</B>  time-sharing <B>systems</B>  comparative response time  arpa in participating in the vast store of resources available on a <B>network</B>  analytical  simulation
9 Q0 2776 10 0.28275627 Lucene_47
 of these <B>operating</B> <B>networks</B>  a number of factors are identified for consideration in developingcomputer <B>networks</B> in higher education  socio-economic-political factors this study presents the results of a nationwide survey of computer <B>networks</B> in higher education conducted during 1971-73  five major and 18 minor <B>networks</B> were identified  the five major <B>networks</B> included  the arpa net
9 Q0 3174 11 0.28132048 Lucene_47
password <B>security</B>  a case history this paper describes the history of the design of the password <B>security</B> scheme on a remotely accessed time-sharing system  the present design was the result of countering observed attempts to penetrate the system  the result is a compromise between extreme <B>security</B> and ease of use  cacm november  1979 morris  r  thompson  k  <B>operating</B> <B>systems</B>  passwords  computer
9 Q0 3076 12 0.28105658 Lucene_47
 transfer <B>systems</B>  social impacts of computing  privacy  social choice  computer <B>networks</B>  <B>network</B> few years  computer-based <B>systems</B> which automate the transfer and recording of debits and credits have begun to be implemented on a large scale  these <B>systems</B> promise both financial benefits significant social  legal  and technical questions that must be resolved if full scale <B>systems</B>
9 Q0 3082 13 0.27923933 Lucene_47
  l  <B>distributed</B> <B>systems</B>  computer <B>networks</B>  clock synchronization  multiprocess <B>systems</B> 4.32 5.29time  clocks  and the ordering of events in a <B>distributed</B> system the concept of one event happening before another in a <B>distributed</B> system is examined  and is shown to define a partial ordering of the events  a <B>distributed</B> algorithm is given for synchronizing a system of logical clocks which can
9 Q0 1928 14 0.26383603 Lucene_47
exclusive simulation of activity in digital <B>networks</B> a technique for simulating the detailed logic <B>networks</B> of large and active digital <B>systems</B> is described  essential objectives sought are improved described may be used for the simulation of <B>network</B> structures other than digital <B>networks</B>  cacm activities  the passage of time is simulated in a precise  quantitative fashion and <B>systems</B>
9 Q0 3158 15 0.25669506 Lucene_47
 august  1979 denning  d  personal computing  <B>security</B>  privacy  <B>networks</B>  public-key encryption 2.12secure personal computing in an insecure <B>network</B> a method for implementing secure personal computing in a <B>network</B> with one or more central facilities is proposed  the method employs a public-key encryption device and hardware keys  each user is responsible for his own <B>security</B> and need not rely
9 Q0 2371 16 0.245592 Lucene_47
 is extended so that it may be used between processes <B>distributed</B> throughout a computer <B>network</B>  the hypothetical application of the system to an existing <B>network</B> is discussed  cacm april  1972 walden  d  c  interprocess communication  time-sharing  computer <B>networks</B>  resource sharing 3.81 4.39 4.82 4.9a system for interprocess communication in a resource sharing computer <B>network</B> a system
9 Q0 1695 17 0.24347714 Lucene_47
 analysis  discrete system simulation  library <B>systems</B>  modeling  <B>network</B> simulation  neural <B>networks</B>plexus-an on-line system for modeling neural <B>networks</B> a description is presented of plexus  a system which enables a user to construct and specify a neural <B>network</B>  to analyze the output data produced by the <B>network</B>  and to store and retrieve <B>networks</B> and data from a library  the system  operated
9 Q0 1750 18 0.23480554 Lucene_47
 of the faster memory  cacm may  1968 fuchel  k  heller  s  multiple computer <B>systems</B>  extended core storage  multiprogrammed <B>operating</B> <B>systems</B>  multiprocessor <B>operating</B> <B>systems</B>  control data corporation 6600  <B>operating</B> system with ecs 4.30 4.32 ca680506 jb february 23  1978 9 27 am 1750 5 1750 1750 5<B>considerations</B> in the design of a multiple computer system with extended core storage the use
9 Q0 3141 19 0.21834654 Lucene_47
  rather than o n2   cacm may  1979 chang  e  roberts  r  decentralized algorithms  <B>distributed</B> <B>systems</B>  <B>operating</B> <B>systems</B> 4.32 4.35 5.25 5.32 ca790502 dh june 5  1979 2 35 pm 3141 5 3141 3141 5 3141 3141 5
9 Q0 2969 20 0.21586172 Lucene_47
optimal program and data locations in computer <B>networks</B> an optimization procedure for the allocation of program and data files in a computer <B>network</B> is presented  this algorithm takes into account the dependencies between files and programs such as occur in real heterogeneous computer <B>networks</B> and a possible application of the model  cacm may  1977 morgan  h  l  levin  k  d  computer <B>networks</B>
9 Q0 1747 21 0.20158063 Lucene_47
 criteria  computer <B>systems</B>  computer <B>systems</B> design  input equipment  input equipment design  <B>operating</B> <B>systems</B>  <B>operating</B> <B>systems</B> design  multiprogramming  multiprogrammed <B>systems</B>  multiprogrammed systemthree criteria for designing computing <B>systems</B> to facilitate debugging the designer of a computing clock  the synchronization of parallel processes  protection in multiprogrammed <B>systems</B>
9 Q0 3128 22 0.19635728 Lucene_47
 synchronization  interprocess communication  <B>distributed</B> <B>systems</B>  <B>security</B> models  mutual exclusion arguments and also simplifies implementation in <B>distributed</B> <B>systems</B>  the mechanism is defined
9 Q0 1685 23 0.19063361 Lucene_47
gan  a system for generating and analyzing activity <B>networks</B> gan  a system for generating activity <B>networks</B>  is designed to save time in the preparation of activity <B>networks</B> and to deal conveniently with <B>network</B> programs  a defining description of a programming language designed for generating activity <B>network</B> from a set of standard <B>networks</B> is presented  also  a general idea of a language
9 Q0 3127 24 0.18037422 Lucene_47
  sager  g  portability  real time  <B>operating</B> <B>systems</B>  minicomputer 3.80 4.30 4.35 ca790206 dh aprilthoth  a portable real-time <B>operating</B> system thoth isa real-time <B>operating</B> system which is designed to be portable over a large set of machines  it is currently running on two minicomputers portable  thoth encourages structuring programs as <B>networks</B> of communicating processes by providing
9 Q0 2046 25 0.17709722 Lucene_47
 <B>systems</B> provide users with tree-structured files or slightly more general <B>network</B> models of the data organization  hierarchies of data  <B>networks</B> of data  relations  derivability  redundancy  consistency  composition  join  retrieval language  predicate calculus  <B>security</B>  data integrity 3.70 3.73 3.75
9 Q0 2424 26 0.17697914 Lucene_47
 be modest  cacm november  1973 fabry  r  s  <B>operating</B> <B>systems</B>  data <B>security</B>  fault tolerancedynamic verification of <B>operating</B> system decisions dynamic verification of a decision implies independent hardware and software  the dynamic verification of <B>operating</B> system decisions is used  and cost effectiveness  the technique of dynamic verification allows the construction of an <B>operating</B>
9 Q0 1808 27 0.17626385 Lucene_47
 use  relative <B>security</B>  costs  and preferred methods are included in this paper  cacm december  1969 van tassel  d  cryptographic  cryptanalysis  ciphers secrecy <B>systems</B>  <B>security</B> <B>systems</B>  confidential
9 Q0 2900 28 0.17450133 Lucene_47
  cacm november  1977 grapa  e  belford  g  g  file allocation  computer <B>networks</B>  <B>distributed</B> datasome theorems to aid in solving the file allocation problem the file allocation problem-i e  the problem of finding the optimal set of <B>network</B> sites at which to locate copies of a file-is known to be  in general  polynomial complete  heuristics and other aids to finding optimal  or near-optimal
9 Q0 2622 29 0.16687676 Lucene_47
 are discussed  cacm august  1974 evans  a  jr  kantrowitz  w  weiss  e  <B>operating</B> system <B>security</B>  <B>security</B>  authentication  passwords  one-way encryption  cryptology 4.39 5.39 ca740802 jb january 17a user authentication scheme not requiring secrecy in the computer in many computer <B>operating</B> <B>systems</B> a user authenticates himself by entering a secret password known solely to himself and the system
9 Q0 1461 30 0.1563896 Lucene_47
discussion summary on <B>operating</B> <B>systems</B> cacm march  1966 ca660311 jb march 3  1978 1 26 pm 1461 5 1461 1461 5 1461 1461 5 1461
9 Q0 1846 31 0.1561945 Lucene_47
on simulating <B>networks</B> of parallel processes in which simultaneous events may occur some of the problems of simulating discrete event <B>systems</B>  particularly computer <B>systems</B>  on a conventional digital computer are dealt with  the <B>systems</B> are assumed to be described as a <B>network</B> of interconnected sequential processes  briefly reviewed are the common techniques used to handle such simulations when
9 Q0 2870 32 0.15523645 Lucene_47
 of the <B>security</B> requirements of different existing <B>systems</B> and facilitate the construction of mechanisms that enforce <B>security</B>  the model provides a unifying view of all <B>systems</B> that restrict information flow framework suitable for formulating the requirements of secure information flow among <B>security</B> classes  the central component of the model is a lattice structure derived from the <B>security</B> classes and justified
9 Q0 3011 33 0.14343956 Lucene_47
management utilization of computers in american <B>local</B> governments traditional concepts of management information <B>systems</B>  mis  bear little relation to the information <B>systems</B> currently in use by top management in most us <B>local</B> governments  what exists is management-oriented computing  involving the use of relatively unsophisticated applications  despite the unsophisticated nature of these <B>systems</B>
9 Q0 2614 34 0.14343047 Lucene_47
arrow to precedence <B>network</B> transformation  h   algorithm a481  cacm august  1974 crandall  k  c  critical path  <B>networks</B>  precedence <B>networks</B> 3.23 5.40 ca740810 jb january 17  1978 9 37 am 2614 5 2614 2614 5 2614 2614 5 2614
9 Q0 2358 35 0.1328822 Lucene_47
the multics virtual memory  concepts and design as experience with use of on-line <B>operating</B> <B>systems</B> contemporary <B>systems</B> permit some degree of sharing  usually  sharing is accomplished by allowing of size and access privilege  here  the design and implementation <B>considerations</B> of segmentation  segmented main memory  since the size of main memory on contemporary <B>systems</B> is rather limited
9 Q0 2197 36 0.12970975 Lucene_47
 computing <B>networks</B>  one such <B>network</B> has been constructed in the san francisco bay area by stanford university  this paper reports upon the lessons learned from the operation of the <B>network</B> over the past development  educational computing  <B>network</B> computing  regional computing <B>networks</B>  remote computingthe merit of regional computing <B>networks</B> one of the suggested means for stimulating the spread
9 Q0 3182 37 0.12590276 Lucene_47
 greater accuracy and freedom from error and fraud with electronic funds transfer <B>systems</B>  efts the same as for manual depository and other financial service <B>systems</B> - for example  fraud  theft the accelerating use of efts and its continual technological advances broaden the scope of <B>security</B> issues vulnerabilities  cacm december  1979 parker  d  efts  computer abuse  crime  <B>security</B>  errors  losses  positions
9 Q0 1261 38 0.1220341 Lucene_47
modeling and simulation of digital <B>networks</B> the simulation of digital <B>networks</B> on a digital  the digital <B>network</B> is modeled as a set of time-dependent or time-independent boolean transformations  each transformation describing the input-output relationship of a model element comprising the <B>network</B> mode  the simplicity of utilizing the fortran iv programming system as a digital <B>network</B> simulator
9 Q0 3043 39 0.12085308 Lucene_47
 by microcomputer <B>networks</B> with <B>distributed</B> storage  the paper gives several examples of <B>distributed</B>  concurrent programming  <B>distributed</B> processes  microprocessor <B>networks</B>  nondeterminism  guarded regions<B>distributed</B> processes  a concurrent programming concept a language concept for concurrent processes without common variables is introduced  these processes communicate and synchronize by means
9 Q0 2137 40 0.11921102 Lucene_47
new lisp techniques for a paging environment the system described herein employs the block concept  and that of global and <B>local</B> variables  in addition to the methods applied in most lisp <B>systems</B>  also  a new means of list representation is used   <B>local</B> sequential  for lists created during compilation  and  block level sequential  for those created dynamically  a new garbage collection algorithm
9 Q0 3148 41 0.118711755 Lucene_47
high level programming for <B>distributed</B> computing programming for <B>distributed</B> and other loosely coupled <B>systems</B> is a problem of growing interest  this paper describes an approach to <B>distributed</B> computing at the level of general purpose programming languages  based on primitive notions of module of the project are also discussed  cacm june  1979 feldman  j  <B>distributed</B> computing  modules  messages
9 Q0 828 42 0.117427364 Lucene_47
incompressible flow <B>network</B> calculations a general method for the calculation of flows and pressures in fluid flow <B>networks</B> is presented  the method is applicable to computer use  cacm june  1963 cantrell  h  n  ca630621 jb march 14  1978 10 03 am 828 5 828 828 5 828 828 5 828
9 Q0 2581 43 0.11657822 Lucene_47
  speech understanding  augmented transition <B>network</B>  <B>local</B> parsing 3.42 3.65 3.69 ca741103 jb january which contains ambiguity and error  the system is locally-organized in the sense that it builds <B>local</B>  these <B>local</B> structures are used as  islands of reliability  to guide the search for more highly garbled words
9 Q0 2988 44 0.1163272 Lucene_47
 <B>network</B> models of computer <B>systems</B>  empirical analyses and analytic studies based on applying  system performance  queueing <B>network</B> models  in teractive computer <B>systems</B> 4.32 ca770304 jb december model is proposed as being broadly applicable to the analysis of in teractive computer <B>systems</B> which
9 Q0 3023 45 0.116321884 Lucene_47
architecture of the ibm system 370 this paper discusses the design <B>considerations</B> for the architectural extensions that distinguish system 370 from system 360  it comments on some experiences with the original objectives for system 360 and on the efforts to achieve them  and it describes <B>systems</B>  architecture  instruction sets  virtual storage  error handling 6.0 6.21 ca780107 jb march
9 Q0 46 46 0.116321884 Lucene_47
multiprogramming stretch  feasibility <B>considerations</B> the tendency towards increased parallelism in computers is noted  exploitation of this parallelism presents a number of new problems in machine design and in programming <B>systems</B>  minimum requirements for successful concurrent execution of several independent problem programs are discussed  these requirements are met in the stretch system
9 Q0 2632 47 0.114823475 Lucene_47
 <B>systems</B>  cacm june  1974 wulf  w  cohen  e  corwin  w  jones  a  levin  r  pierson  c  pollack  f  <B>operating</B> system  kernel  nucleus  protection  <B>security</B> 4.3 6.2 ca740614 jb january 17  1978 2 40 pmhydra  the kernel of a multiprocessor <B>operating</B> system this paper describes the design philosophy of hydra-the kernel of an <B>operating</B> system for c mmp  the carnegie-mellon multi-mini-processor
9 Q0 3133 48 0.11161216 Lucene_47
logic and semantic <B>networks</B> an extended form of semantic <B>network</B> is defined  which can be regarded  the extended semantic <B>network</B> is provided with a precise semantics  inference rules  and a procedural interpretation  on the other hand  by regarding semantic <B>networks</B> as an abstract data structure  a  kowalski  r  logic  semantic <B>networks</B>  theorem-proving  indexing  resolution  deduction  logic programming
9 Q0 1032 49 0.11089192 Lucene_47
theoretical <B>considerations</B> in information retrieval <B>systems</B> information storage and retrieval <B>systems</B> are composed of three major components   a  identification of information and tagging it for effective retrieval   b  searching strategy  how to enter the file to circumvent the scanning of nonrelevant material  and  c  file organization to make access to information efficient  for identification
9 Q0 1247 50 0.11058414 Lucene_47
an <B>operating</B> environment for dynamic-recursive computer programming <B>systems</B> presented in this paper is a brief nontechnical introduction to oedipus  a computer programming system which can serve as an <B>operating</B> environment for dynamic and or recursive programs and programming <B>systems</B>  the available services include dynamic allocation of storage for contiguous blocks of arbitrary size  input
9 Q0 2890 51 0.11052702 Lucene_47
  quadratic routing  alternate routing  store-and-forward <B>network</B>  <B>distributed</B> <B>network</B>  computer <B>network</B> <B>network</B> are constructed  one to find the optimal message routing and the other to illustrate of its current routing decision on the future state of the <B>network</B>  the form of the optimality maintained at each <B>network</B> node  simulation results are presented which confirm the theoretical
9 Q0 3111 52 0.10980845 Lucene_47
 in a theoretical and a practical sense  cacm april  1978 merkle  r  <B>security</B>  cryptography  cryptology  communications <B>security</B>  wiretap  computer <B>network</B> <B>security</B>  passive eavesdropping  key <B>security</B>  it is necessary to transmit a key  by secret means  before encrypted messages can be sent in such a fashion that communications <B>security</B> can be maintained  a method is described which forces
9 Q0 3038 53 0.109505035 Lucene_47
  encryption  <B>security</B>  authentication  <B>networks</B>  protocols  public-key cryptosystems  data encryptionusing encryption for authentication in large <B>networks</B> of computers use of encryption to achieve authenticated communication in computer <B>networks</B> is discussed  example protocols are presented for the establishment of authenticated connections  for the management of authenticated mail
9 Q0 1844 54 0.109033726 Lucene_47
 terminal  a crosspoint switching <B>network</B> allows any such disk drive to be connected to any computer  economic configurations are possible for a range of <B>systems</B> sizes that span at least one order of magnitude  rittenhouse  l  e  multiple terminal <B>systems</B>  terminal oriented <B>systems</B>  multiple processor <B>systems</B>  high availability  conversational <B>systems</B>  general purpose time-sharing <B>systems</B>  real-time
9 Q0 2515 55 0.10867572 Lucene_47
minimal event-node <B>network</B> of project precedence relations a procedure for constructing a minimal event-node <B>network</B> to represent a set of precedence relations without parallel activities is presented  a minimal event-node <B>network</B> is an event-node <B>network</B> in which both the number of nodes  produces event-node <B>networks</B> which are not minimal  since our procedure includes the set-covering problem
9 Q0 1723 56 0.10812267 Lucene_47
computer construction of project <B>networks</B> project <B>networks</B> are used in pert and cpm  an algorithm is given for constructing project <B>networks</B> directly from the project precedence relations ii for the ibm 7094  cacm july  1968 fisher  a  c  liebman  j  s  nemhauser  g  l  project <B>networks</B>  pert  cpm  topological ordering  <B>network</B> construction by computer 5.32 ca680706 jb february 22
9 Q0 322 57 0.10779472 Lucene_47
operational compatibility of <B>systems</B>-conventions the general standards committee of the share organization has devoted considerable effort to the problem of <B>operating</B> a computer efficiently in view of the growing number of programming <B>systems</B> available  each of these programming <B>systems</B> has been coded to utilize a fixed set of hardware components without recognizing the fact that others may
9 Q0 3177 58 0.10683203 Lucene_47
 schemes for cryptographic <B>systems</B> that can function securely and reliably even when misfortunes destroy half the pieces and <B>security</B> breaches expose all but one of the remaining pieces  cacm november  1979
9 Q0 2151 59 0.106811896 Lucene_47
 showing the system in use is presented  finally  it is shown how other time-sharing <B>systems</B> may provide similar measuring facilities  cacm october  1971 nemeth  a  g  rovner  p  d  <B>operating</B> <B>systems</B>  multiprogramming <B>systems</B>  time-sharing <B>systems</B>  software measurement  user program measurement of software <B>systems</B> is followed by a description of a hardware and software scheme for measuring user
9 Q0 1978 60 0.10450409 Lucene_47
 of the advantages accrued by such <B>systems</B> and design <B>considerations</B> for interactive routines-sharing  computer <B>systems</B> and graphic terminals  we have available a new dimension in numerical problem capabilities of the human problem solver  several on-line <B>systems</B> for general purpose mathematical problem solving have already been implemented as well as some special purpose <B>systems</B> for solving problems
9 Q0 2069 61 0.10425973 Lucene_47
comments on a paper by wallace and mason cacm april  1970 heess jr   w  f  page-on-demand  demand paging  time-sharing multiprogramming  markovian computer models  scheduling strategies  <B>operating</B> <B>systems</B>  memory management 2.44 4.32 4.39 6.20 6.21 ca700415 jb february 13  1978 2 36 pm 2069 5 2069 2069 5 2069 2069 5 2069
9 Q0 2198 62 0.10410949 Lucene_47
introduction to  feature analysis of generalized data base management <B>systems</B>  this paper management <B>systems</B>  this introduction gives a review of the current state of the art in these <B>systems</B> and discusses the differences and similarities between capabilities found in host language <B>systems</B> and those found in self-contained <B>systems</B>  after some discussion of the problems of data
9 Q0 3181 63 0.102983706 Lucene_47
 <B>systems</B> will require a coordinated educational effort of considerable scale  in addition  research to the changing environment and consumer needs  cacm december  1979 long  r  electronic funds transfer <B>systems</B>  consumer education  <B>security</B> and fraud  privacy  system reliability  eft ombudsman 2.12 ca791204 db
9 Q0 3025 64 0.102863036 Lucene_47
 the pdp-6  circa 1963  over five generations of implementations to presently include <B>systems</B> covering a price range of five to one  the origin and evolution of the hardware  <B>operating</B> system  and languages to time sharing computing <B>systems</B>  transferring hardware technology within dec  and elsewhere  and serving as a model for single user and timeshared interactive minicomputer microcomputer <B>systems</B>  cacm
9 Q0 2948 65 0.10120282 Lucene_47
  error correction  multiplexing  <B>local</B> echoing  communication system  <B>network</B> 3.81 4.31 ca770704 jb to solve three specific problems  <B>local</B> echoing  error detection and correction on the telephone lines
9 Q0 3040 66 0.099640414 Lucene_47
  backtrack  combinatorial algorithms  constraint <B>networks</B>  constraint satisfaction  graph coloring  <B>network</B>synthesizing constraint expressions a constraint <B>network</B> representation is presented for a combinatorial search problem  finding values for a set of variables subject to a set of constraints  a theory of consistency levels in such <B>networks</B> is formulated  which is related to problems of backtrack
9 Q0 2522 67 0.09885754 Lucene_47
 rodriguez-rosell  j  dupuy  j  p  working set  dispatcher  scheduler  time-sharing <B>systems</B>  resource allocation  software evaluation  <B>operating</B> <B>systems</B>  supervisory <B>systems</B> 4.31 4.32 ca730406 jb to the processes competing for them  recent research in time-sharing paging <B>systems</B> has developed the working
9 Q0 2188 68 0.0972812 Lucene_47
an approach to the optimum design of computer graphics <B>systems</B> display system designers are faced from large numbers of alternatives  the selection is based on <B>considerations</B> such as system  quantitative design procedure and helps give a better understanding of now to configure display <B>systems</B> guidelines  cacm june  1971 foley  j  d  design guidelines  graphic display <B>systems</B>  mathematical model
9 Q0 1290 69 0.0969349 Lucene_47
transparent-mode control procedures for data communication  using the american standard code for information interchange -a tutorial this paper gives the <B>considerations</B> of task group x3.3.4 in the area of transparent-mode data communication control philosophy  the appearance of this paper of <B>systems</B> providing complete character transparency  it does not cover concepts of transparency in which
9 Q0 2454 70 0.09652633 Lucene_47
computational algorithms for closed queueing <B>networks</B> with exponential servers methods are presented for computing the equilibrium distribution of customers in closed queueing <B>networks</B> to implement  implementation <B>considerations</B> such as storage allocation strategies and order <B>networks</B>  equilibrium distributions  steady state distributions 5.12 5.5 8.1 8.3 ca730901 jb january 23
9 Q0 2111 71 0.095876805 Lucene_47
spelling correction in <B>systems</B> programs several specialized techniques are shown for efficiently incorporating spelling correction algorithms in to compilers and <B>operating</B> <B>systems</B>  these include morgan  h  l  spelling correction  error correction  debugging  compilers  <B>operating</B> <B>systems</B> spelling correction is presented  by using <B>systems</B> which perform spelling correction  the number
9 Q0 1226 72 0.09494321 Lucene_47
the organization of structured files a data file is an integral part of a data processing system  in many <B>systems</B>  the selection of an organization for the data within the file can be critical to the system s <B>operating</B> efficiency  this paper provides the <B>systems</B> designer with an information source which describes ten techniques that may be employed for organizing structured data
9 Q0 3153 73 0.09473503 Lucene_47
the control of response times in multi-class <B>systems</B> by memory allocations the possibility of giving different quality of service to jobs of different classes by regulating their memory allocation are obtained  a way of applying the results to <B>systems</B> with more than two job classes is indicated  cacm july  1979 hine  j  mitrani  i  tsur  s  queueing <B>networks</B>  paging  virtual memory  performance
9 Q0 1680 74 0.09441187 Lucene_47
 instruction  tutorial <B>systems</B>  programming  simulation  modeling  information retrieval <B>operating</B> 40  and the ibm 2250 display unit under <B>operating</B> system 360  adept is a cataloged program that controls the standard <B>operating</B> system by terminating and rescheduling itself automatically  relinquishing computer resources allocated to it  and surrendering control to the <B>operating</B> system to perform
9 Q0 1652 75 0.094164014 Lucene_47
a code for non-numeric information processing applications in online <B>systems</B> a code has been specifically designed to simplify the internal information processing operations within an online computer system with respect to non-numeric applications  and to maximize the transfer rate on the basis of the requirements of <B>local</B> environments  cacm january  1967 morenoff  e  mclean  j  b
9 Q0 2947 76 0.094164014 Lucene_47
sitar  an interactive text processing system for small computers sitar  a low-cost in teractive text handling and text analysis system for nontechnical users  is in many ways comparable to in teractive bibliographical search and retrieval <B>systems</B>  but has several additional features  circular file structure  a crt with <B>local</B> memory  and conversational computing produce a system much
9 Q0 1811 77 0.09306176 Lucene_47
 to the question of whether it is possible to program parallel-processor computing <B>systems</B> to efficiently decrease execution time for useful problems  parallel-processor <B>systems</B> are multiprocessor <B>systems</B> in an electrical <B>network</B> was written for a parallel-processor computing system  and execution  tasking  storage interference  electrical <B>network</B>  simulation  relaxation  jacobi  gauss-seidel
9 Q0 3032 78 0.093010135 Lucene_47
 of a <B>network</B>  algorithms for accomplishing this delivery through a store-and-forward packet switching computer <B>network</B> include  1  transmission of separately addressed packets   2  multidestination <B>networks</B>  the algorithm is described as being practical because it is not optimal according to metrics developed for its analysis in this paper  and also because it can be implemented in existing <B>networks</B>
9 Q0 2406 79 0.09256725 Lucene_47
 and physical aspects of data is increasingly apparent  such languages will be a key <B>systems</B>  as well as in advanced data management <B>systems</B> and <B>distributed</B> data bases  this paper reviews past work management <B>systems</B>  file translation 3.51 3.70 3.73 4.29 4.82 ca731202 jb january 19  1978 2 58 pm 2155 4
9 Q0 2950 80 0.09215345 Lucene_47
 a framework for implementing flexible schedulers in real <B>operating</B> <B>systems</B>  the policy-driven scheduler  fabry  r  s  scheduling algorithms  scheduling models  priority  <B>operating</B> <B>systems</B> processor
9 Q0 3059 81 0.091660604 Lucene_47
 system are developed in this paper  the solution technique is developed by <B>network</B> decomposition for <B>systems</B> which are in approximate cpu i o utilization balance and for low degrees of multiprogramming  multiprogramming  parallel processing  queueing <B>network</B> models  multiprocessing of computation and i o 4.32
9 Q0 3070 82 0.091660604 Lucene_47
hybrid simulation models of computer <B>systems</B> this paper describes the structure and operation of a hybrid simulation model in which both discrete-event simulation and analytic techniques are combined  and a central-server queueing <B>network</B> models the use of system processors  the accuracy and efficiency  h  performance evaluation  simulation  queueing <B>network</B> models  central server model 4.32 4.35 8.1
9 Q0 1923 83 0.091227256 Lucene_47
pseudofiles an approach to system interfaces for high level languages using basic input output support facilities is described  it is shown that this technique can provide potentially inexpensive methods for programs to communicate with deeply embedded facilities such as command language processors  cacm march  1969 rosin  r  f  <B>operating</B> <B>systems</B>  interfaces input-output  high level languages
9 Q0 2624 84 0.08982893 Lucene_47
formal requirements for virtualizable third generation architectures virtual machine <B>systems</B> have been implemented on a limited number of third generation computer <B>systems</B>  e g  cp-67 on the ibm 360 67  from previous empirical studies  it is known that certain third generation computer <B>systems</B>  e g  goldberg  r  p  <B>operating</B> system  third generation architecture  sensitive instruction  formal
9 Q0 3026 85 0.08982893 Lucene_47
the evolution of the sperry univac 1100 series  a his tory  analysis  and projection the 1100 series <B>systems</B> are sperry univac s large-scale main frame computer <B>systems</B>  beginning with the 1107-speed register  or two operands from high-speed registers  the 1100 <B>operating</B> system is designed computer series  computer architecture  multiprocessing languages  data management <B>systems</B>  end
9 Q0 3021 86 0.0895566 Lucene_47
 applications in  electronic mail  and  electronic funds transfer  <B>systems</B>  a message is encrypted     q-1    the <B>security</B> of the system rests in part on the difficulty of factoring the published cryptosystems  privacy  authentication  <B>security</B>  factorization  prime number  electronic mail  message
9 Q0 1664 87 0.08871353 Lucene_47
 as input  in this paper the emphasis is on theoretical <B>considerations</B> and methodology rather than on programming details  results are presented for cylindrical polar and spherical polar coordinate <B>systems</B>  tensor  tensor equation  curvilinear coordinate <B>systems</B>  fortran  symbolic manipulation 3.21 3.25
9 Q0 2138 88 0.08544952 Lucene_47
bliss  a language for <B>systems</B> programming a language  bliss  is described  this language is designed so as to be especially suitable for use in writing production software <B>systems</B> for a specific machine  the pdp-10   compilers  <B>operating</B> <B>systems</B>  etc  prime design goals of the design of <B>systems</B> programs  a major feature which contributes to the realization of these goals is a mechanism
9 Q0 1462 89 0.085325144 Lucene_47
multilevel <B>operating</B> <B>systems</B> the basic software for all newer computers is built on the well-established need for standard <B>operating</B> <B>systems</B>  this implies that all applications-no matter how large  large applications require supervisory monitors which handle problems similar to those of the <B>operating</B> <B>systems</B>  but at a different level  sometimes  still a third or even a fourth such level is required
9 Q0 2741 90 0.0843557 Lucene_47
decomposability  instabilities  and saturation in multiprogramming <B>systems</B> a step-by-step approach to model the dynamic behavior and evaluate the performance of computing <B>systems</B> is proposed <B>systems</B>  i  unstable regimes of operations and  ii  critical computing loads which bring the system evaluation  saturation  instabilities  thrashing  aggregation  system levels  hierarchy <B>networks</B>
9 Q0 2892 91 0.08403855 Lucene_47
 loaded <B>network</B>  similar results are derived for a recently proposed <B>network</B> protocol and compared  computer communication <B>networks</B>  interprocess communication  measurement  packet switching
9 Q0 2470 92 0.08344772 Lucene_47
 and nondeterministic functions are shown to be definable in the system  it is described how the <B>local</B> of the paradoxical combinator  y  the questions of <B>local</B> and global environments and of various modes  formal <B>systems</B>  lambda-calculus  extensible languages  data types  modes  axioms  correctness  formal
9 Q0 2876 93 0.08238696 Lucene_47
intentional resolution of privacy protection in database <B>systems</B> traditionally  privacy protection in database <B>systems</B> is understood to be the control over what information a given user can get from a database  this paper is concerned with another  independent  dimension of privacy protection  n  protection in database  protection in programming languages  privacy  <B>security</B>  intentional
9 Q0 2840 94 0.08229043 Lucene_47
protection in <B>operating</B> <B>systems</B> a model of protection mechanisms in computing <B>systems</B> is presented and its appropriateness is argued  the  safety  problem for protection <B>systems</B> under this model is to determine in a given situation whether a subject can acquire a particular right to an object  <B>operating</B> system  decidability  turing machine 4.30 4.31 5.24 ca760804 jb january 4  1978 10 12 am
9 Q0 1611 95 0.08219915 Lucene_47
scheduling project <B>networks</B> some of the basic concepts and terminology of project networking are developed  the critical path algorithm incorporated in the c-e-i-r proprietary scheduling system ramps  resource allocation and multi-project scheduling  is described  the error detection and <B>network</B> analysis features of the algorithm are also described  cacm april  1967 klein  m  m  ca670404 jb
9 Q0 2712 96 0.08169168 Lucene_47
horner s rule for the evaluation of general closed queueing <B>networks</B> the solution of separable closed queueing <B>networks</B> requires the evaluation of homogeneous multinomial expressions  the number of terms in those expressions grows combinatorially with the size of  the <B>network</B> such that a direct constant is evaluated  cacm october  1975 reiser  m  kobayashi  h  queueing <B>networks</B>  queueing theory
9 Q0 441 97 0.08169168 Lucene_47
topological sorting of large <B>networks</B> topological sorting is a procedure required for many problems involving analysis of <B>networks</B>  an example of one such problem is pert  the present paper presents a very general method for obtaining topological order  it permits treatment of larger <B>networks</B> than the procedure can be adapted to any machine  it is discussed in terms of the 7090  a pert <B>network</B> of 30,000
9 Q0 2036 98 0.07911934 Lucene_47
 <B>systems</B> is given  cacm july  1970 grant  c  a  time-sharing  command languages  pseudo-teletype  interaction  conditional job control  <B>operating</B> <B>systems</B> 3.80 3.81 4.29 4.39 ca700701 jb february 13  1978 9
9 Q0 3028 99 0.07911934 Lucene_47
  paging  virtual storage  extra codes  compilers  <B>operating</B> <B>systems</B>  ferranti  manchester mark i  atlasthe manchester mark i and atlas  a his torical perspective in 30 years of computer design at manchester university two <B>systems</B> stand out  the mark i  developed over the period 1946-49  and the atlas  1955-62   this paper places each computer in its his torical context and then describes
9 Q0 1324 100 0.07908603 Lucene_47
answering english questions by computer  a survey fifteen experimental english language question-answering <B>systems</B> which are programmed and <B>operating</B> are described and reviewed  the <B>systems</B> range from a conversation machine to programs which make sentences about pictures and <B>systems</B> which translate from english into logical calculi  <B>systems</B> are classified as list-structured data-based  graphic
*************Query 10*************************

10 Q0 2785 1 1.232669 Lucene_47
  <B>parallel</B> <B>computation</B>  <B>parallel</B> architecture 4.2 4.21 4.22 ca750303jb january 9  1978 4 57 pm 2785 4 2785glypnir-a programming language for illiac iv glypnir is one of the earliest existing <B>languages</B> designed for programming the illiac iv computer  the syntax of the language is based on algol 60 of the language  and discusses some of the problems associated with <B>parallel</B> computer architectures  cacm march
10 Q0 2514 2 0.6858537 Lucene_47
an array grammar programming system a package of fortran programs has been developed that permits a user to interactively design and test array grammars  the user can control the rule selection procedure in a derivation or parse  using weighted programming matrices  he also has a choice of instance selection schemes  raster random  <B>parallel</B>   examples are given involving array <B>languages</B>
10 Q0 2700 3 0.6350775 Lucene_47
reduction  a method of proving properties of <B>parallel</B> programs when proving that a <B>parallel</B> program properties such as halting  thus correctness proofs of a <B>parallel</B> system can often be greatly simplified  cacm december  1975 lipton  r  j  deadlock free  reduction  interruptible  indivisible  <B>parallel</B> program  semaphore  verification method  process  <B>computation</B> sequence 4.32 4.35 5.24 ca751207 jb
10 Q0 1795 4 0.61630225 Lucene_47
optimal code for serial and <B>parallel</B> <B>computation</B> cacm december  1969 fateman  r  j  code optimization  sequencing of operations  detection of common subexpressions 4.12 ca691217 jb february 15  1978 1 59 pm 1795 5 1795 1795 5 1795 1795 5 1795
10 Q0 1747 5 0.56454766 Lucene_47
 clock  the synchronization of <B>parallel</B> processes  protection in multiprogrammed systems design  virtual computers  programming <B>languages</B>  programming language design  program semantics  debugging  program debugging  program testing  <B>parallel</B> processing  <B>parallel</B> programming
10 Q0 2266 6 0.5639915 Lucene_47
a highly <B>parallel</B> algorithm for approximating all zeros of a polynomial with only real zeros an algorithm is described based on newton s method which simultaneously approximates all zeros of a polynomial with only real zeros  the algorithm  which is conceptually suitable for <B>parallel</B> <B>computation</B>  cacm november  1972 patrick  m  l  <B>parallel</B> numerical algorithms  real polynomials  real zeros
10 Q0 2895 7 0.47967058 Lucene_47
a language for formal problem specification a language for specifying the in tended behavior of communicating <B>parallel</B> processes is described  the specifications are constrain ts on the order in which events of a <B>computation</B> can occur  the language is used to write specifications of the readers greif  i  formal specifications program correctness  <B>parallel</B> processing  synchronization  readers
10 Q0 3059 8 0.4699929 Lucene_47
  multiprogramming  <B>parallel</B> processing  queueing network models  multiprocessing of <B>computation</B> and i o 4.32models for <B>parallel</B> processing within programs  application to cpu i o and i o i o overlap approximate queueing models for internal <B>parallel</B> processing by individual programs in a multiprogrammed system are developed in this paper  the solution technique is developed by network decomposition
10 Q0 3075 9 0.4699929 Lucene_47
fast <B>parallel</B> sorting algorithms a <B>parallel</B> bucket-sort algorithm is presented that requires time o log n  and the use of n processors  the algorithm makes use of a technique that requires more space 1   1 k processors  for k an arbitrary integer  the model of <B>computation</B> for this procedure permits simultaneous fetches from the same memory location  cacm august  1978 hirschberg  d  <B>parallel</B>
10 Q0 2851 10 0.46513686 Lucene_47
formal verification of <B>parallel</B> programs two formal models for <B>parallel</B> <B>computation</B> are presented  an abstract conceptual model and a <B>parallel</B>-program model  the former model does not distinguish principle  a special case of the assertions method  which is called <B>parallel</B> place assertions  is shown on the satisfiability of certain logical formulas  cacm july  1976 keller  r  m  <B>parallel</B> program  correctness
10 Q0 1536 11 0.4130606 Lucene_47
dynamic <B>computation</B> of derivatives it is shown how wengert s procedure for <B>computation</B> of derivatives can be implemented conveniently by use of compiler-generated complex addition  subtraction  and linkage to complex arithmetic subroutines  evaluation of a function and derivative proceed in <B>parallel</B>  as in wengert s procedure  but with the  imaginary  parts of variables declared complex bearing
10 Q0 2316 12 0.37021825 Lucene_47
programming <B>languages</B>  history and future this paper discusses both the history and future of programming <B>languages</B>    higher level <B>languages</B>   some of the difficulties in writing such a history are indicated  a key part of the paper is a tree showing the chronological development of <B>languages</B> and their interrelationships  reasons for the proliferation of <B>languages</B> are given  the major <B>languages</B>
10 Q0 3073 13 0.3671968 Lucene_47
communicating sequential processes this paper suggests that input and output are basic primitives of programming and that <B>parallel</B> composition of communicating sequential processes is a fundamental of familiar programming exercises  cacm august  1978 hoare  c  programming  programming <B>languages</B>  programming primitives  program structures  <B>parallel</B> programming  concurrency  input  output  guarded
10 Q0 2685 14 0.3573937 Lucene_47
the <B>parallel</B> execution of do loops methods are developed for the <B>parallel</B> execution of different iterations of a do loop  both asynchronous multiprocessor computers and array computers are considered  practical application to the design of compilers for such computers is discussed  cacm february  1974 lamport  l  <B>parallel</B> computing  multiprocessor computers  array computers  vector computers
10 Q0 1262 15 0.35372806 Lucene_47
procedure-oriented language statements to facilitate <B>parallel</B> processing two statements are suggested which allow a programmer writing in a procedure-oriented language to indicate sections of program which are to be executed in <B>parallel</B>  the statements are do together and hold  these serve partly as brackets in establishing a range of <B>parallel</B> operation and partly to define each <B>parallel</B> path
10 Q0 141 16 0.35372806 Lucene_47
some thoughts on <B>parallel</B> processing cacm october  1960 yarbrough  l  d  ca601007 jb march 20  1978 8 16 pm 141 5 141 141 5 141 141 5 141
10 Q0 2973 17 0.35372806 Lucene_47
sorting on a mesh-connected <B>parallel</B> computer two algorithms are presented for sorting n 2 elements on an n x n mesh-connected processor array that require o n  routing and comparison steps  the best previous algorithm takes time o n log n   the algorithms of this paper are shown to be optimal april  1977 thompson  c  d  kung  h  t  <B>parallel</B> computer  <B>parallel</B> sorting  <B>parallel</B> merge  routing
10 Q0 392 18 0.35372806 Lucene_47
comment on a paper on <B>parallel</B> processing cacm february  1961 nekora  m  r  ca610206 jb march 17  1978 12 58 am 392 5 392 392 5 392 392 5 392
10 Q0 1158 19 0.333498 Lucene_47
program structures for <B>parallel</B> processing constructs for organizing and explicating <B>parallel</B> program segments are discussed as extensions to algol 60  the constructs serve as meta-commands and are motivated by equipment having multiprocessing capability  cacm december  1965 anderson  j  p  ca651211 jb march 6  1978 3 39 pm 1158 4 1158 1158 5 1158 1158 5 1158 1158 5 1158 1262 5 1158
10 Q0 2289 20 0.31978038 Lucene_47
 in speed achieved by virtue of the possibilities for <B>parallel</B> processing  in this paper it is shown  these algorithms exhibit a <B>computation</B> time that in many cases grows at a rate not exceeding log2 n  where n-in-memory arrays  <B>parallel</B> processing  special purpose computers  algorithms for distance and spanning tree
10 Q0 2714 21 0.31195882 Lucene_47
merging with <B>parallel</B> processors consider two linearly ordered sets a  b   a  m   b  n  m lt  n  and p  p lt  m  <B>parallel</B> processors working synchronously  the paper presents an algorithm for merging a and b with the p <B>parallel</B> processors  which requires at most 2 log2  2m 1    3m p     m p  log2 favorably with the previous best <B>parallel</B> merging algorithm  batcher s algorithm  which requires n p     m
10 Q0 950 22 0.30633745 Lucene_47
<B>parallel</B> methods for integrating ordinary differential equations this paper is dedicated to the proposition that  in order to take full advantage for real-time computations of highly <B>parallel</B> computers as can be expected to be available in the near future  much of numerical analysis will have to be recast in a more  <B>parallel</B>  form  by this is meant that serial algorithms ought to be replaced
10 Q0 1302 23 0.29477337 Lucene_47
<B>parallel</B> signaling speeds for data transmission  proposed american stand ard  cacm march  1965 ca650305 jb march 7  1978 6 08 pm 1302 5 1302 1302 5 1302 1302 5 1302
10 Q0 2265 24 0.29402938 Lucene_47
a model for type checking most current programming <B>languages</B> treat <B>computation</B> over different classes of objects  e g  numbers  strings  labels and functions   for correct compilation and execution  the following question then arises  is a program properly constructed so that its operations  f  type checking  types  lambda calculus  models for programming <B>languages</B>  syntax  semantics
10 Q0 1811 25 0.28881773 Lucene_47
a case study in programming for <B>parallel</B>-processors an affirmative partial answer is provided to the question of whether it is possible to program <B>parallel</B>-processor computing systems to efficiently decrease execution time for useful problems  <B>parallel</B>-processor systems are multiprocessor systems in an electrical network was written for a <B>parallel</B>-processor computing system  and execution
10 Q0 1309 26 0.28009525 Lucene_47
 of two special <B>languages</B>  extract and matran  permits selective extraction of any data subset manipulation and <B>computation</B>  cacm february  1965 montillon  g  d  ca650215 jb march 7  1978 10 51 pm
10 Q0 2175 27 0.2552812 Lucene_47
 the expression is to be executed  these subexpressions can be evaluated in serials  in <B>parallel</B> with a  cache  buffer memory  if the number of subexpressions which can be executed in <B>parallel</B>  <B>parallel</B> processing  cache  arithmetic expressions  subexpression ordering  computational trees  compilers
10 Q0 2195 28 0.2552812 Lucene_47
 is then discussed  the method described is suitable for <B>parallel</B> processing because the operations relative to each state can be computed in <B>parallel</B>  and the number of stages is equal to the length n optimal detection  heuristic methods  global recognition  <B>parallel</B> processing  dynamic programming
10 Q0 2401 29 0.2552812 Lucene_47
on shrinking binary picture patterns a <B>parallel</B> processing algorithm for shrinking binary patterns to obtain single isolated elements  one for each pattern  is presented  this procedure may be used employed  two-by-two elements   the <B>parallel</B> nature of the process  and the possibility of shrinking january  1972 levialdi  s  counting binary patterns  shrinking  <B>parallel</B> processing  multiple connected
10 Q0 3156 30 0.2552812 Lucene_47
computing connected components on <B>parallel</B> computers we present a <B>parallel</B> algorithm which uses n2 processors to find the connected components of an undirected graph with n vertices in time o log2n   an o log2n  time bound also can be achieved using only n n  log2n   processors  the algorithm can  graph theory  <B>parallel</B> processing  algorithms  transitive closure  connected component 5.25 5.32 6.22
10 Q0 2557 31 0.2501235 Lucene_47
on the time required for a sequence of matrix products this paper discusses the multiplication of conformable sequences of row vectors  column vectors  and square matrices  the minimum time required to evaluate such products on ordinary serial computers as well as <B>parallel</B> computers is discussed multiplication  operation minimization  <B>parallel</B> machine  time minimization 4.22 5.14 ca730104 jb january
10 Q0 2570 32 0.2501235 Lucene_47
a comparison of list schedules for <B>parallel</B> processing systems the problem of scheduling two or more processors to minimize the execution time of a program which consists of a set of partially ordered tasks is studied  cases where task execution times are deterministic and others in which execution is presented  cacm december  1974 adam  t  l  chandy  k  m  dickson  j  r  <B>parallel</B> processing
10 Q0 3077 33 0.24858053 Lucene_47
 of programs conventional programming <B>languages</B> are growing ever more enormous  but not stronger  inherent level programs to build still higher level ones in a style not possible in conventional <B>languages</B> and in its state transition rules  unlike von neumann <B>languages</B>  these systems have semantics loosely coupled to states-only one state transition occurs per major <B>computation</B>  cacm august  1978 backus  j
10 Q0 1703 34 0.23897484 Lucene_47
accommodating standards and identification of programming <B>languages</B> the user public wants standardization and reliable identification of programming <B>languages</B> and related services  one way related family of <B>languages</B>  oppressive rigidity usually associated with standardization is avoided <B>languages</B> and computer services  cacm august  1968 mooers  c  n  standardization  programming
10 Q0 2603 35 0.23897484 Lucene_47
the equivalence of reducing transition <B>languages</B> and deterministic <B>languages</B> the class of reducing transition <B>languages</B> introduced by eickel  paul  bauer  and samelson was shown by morris to be a proper superclass of the simple precedence <B>languages</B>  in this paper this result is extended  showing that  in fact  the first class is equivalent to the class of deterministic context free <B>languages</B>
10 Q0 2705 36 0.23897484 Lucene_47
programming <B>languages</B>  natural <B>languages</B>  and mathematics some social aspects of programming are illuminated through analogies with similar aspects of mathematics and natural <B>languages</B>  the split <B>languages</B> toward flexion less  word-order based language types speaks for programming language design  auxiliary <B>languages</B> it is suggested that fortran and cobol will remain dominant for a long time to come
10 Q0 2470 37 0.23837952 Lucene_47
  formal systems  lambda-calculus  extensible <B>languages</B>  data types  modes  axioms  correctness  formal language definition  formal description  data structures  description <B>languages</B>  models of <B>computation</B> be introduced into <B>languages</B> through the mechanism of singleton data types  both deterministic
10 Q0 2931 38 0.23837952 Lucene_47
logic and programming <B>languages</B> logic has been long in terested in whether answers to certain parts of computability theory  programming <B>languages</B> offer an obvious opportunity as their syntactic meaning of a program then requires us to explain what are the objects of <B>computation</B>  in a way <B>languages</B>  automata  denotational semantics  a-calculus models  computability  partial functions
10 Q0 1459 39 0.23657301 Lucene_47
requirements for real-time <B>languages</B> real-time <B>languages</B> have different requirements from other programming <B>languages</B> because of the special nature of their applications  the environment in which their object programs are executed and the environment in which they may be compiled  it may not be the language extensions that ultimately advance developments in the field  progress may be made
10 Q0 1367 40 0.2358187 Lucene_47
character structure and character parity sense for <B>parallel</B>-by-bit data communication in ascii   proposed american standard  cacm september  1966 ca660912 jb march 2  1978 4 26 pm 1367 4 1367 2772 4 1367 2787 4 1367 1116 5 1367 1367 5 1367 1367 5 1367 1367 5 1367
10 Q0 1569 41 0.2358187 Lucene_47
implementing phrase-structure productions in pl i a method is described for implementing the productions of a context-free phrase structure grammar in a pl i procedure whose structure and statements <B>parallel</B> the structure and notation of the grammar  cacm july  1967 irwin  l  ca670704 jb february 28  1978 9 01 am 1569 5 1569 1569 5 1569 1569 5 1569
10 Q0 1828 42 0.2358187 Lucene_47
synchronization in a <B>parallel</B>-accessed data base the following problem is considered  given a data for synchronization which will maximize the amount of <B>parallel</B> activity allowed  it is assumed that the data is discussed and their performance compared  cacm november  1969 shoshani  a  bernstein  a  j  <B>parallel</B> accessing  <B>parallel</B> search  file search  data base  synchronization  locking  deadlock 3.73 3.74 4.32
10 Q0 2814 43 0.23414658 Lucene_47
roster of programming <B>languages</B> for 1974-75 cacm december  1976 sammet  j  e  ca761201 jb january 3  1978 2 38 pm 2814 5 2814 2814 5 2814 2814 5 2814
10 Q0 628 44 0.23414658 Lucene_47
on a floating-point number representation for use with algorithmic <B>languages</B> cacm march  1962 grau  a  a  ca620304 jb march 20  1978 3 09 pm 628 5 628 628 5 628 628 5 628
10 Q0 651 45 0.23414658 Lucene_47
a survey of <B>languages</B> and systems for information retrieval cacm january  1962 grems  m  ca620108 jb march 20  1978 4 36 pm 651 5 651 651 5 651 651 5 651
10 Q0 1216 46 0.2334127 Lucene_47
symbolic derivatives without list processing  subroutines  or recursion a routine has been developed which computes and prints out the symbolic derivative of an absolutely continuous elementary function of one or several variables  no use is made of list-processing <B>languages</B>  the chain rule <B>computation</B>  a subset may be imbeded in a formula translator to introduce a differentiation operator
10 Q0 2081 47 0.2334127 Lucene_47
 as to find the forms best suited for <B>computation</B>  these forms are called normal forms  several  programming <B>languages</B>  sequence operations  symbol manipulation 4.12 4.22 5.14 5.41 ca700403 jb february 13
10 Q0 2342 48 0.23069666 Lucene_47
interference between communicating <B>parallel</B> processes various kinds of interference between communicating <B>parallel</B> processes have been examined by dijkstra  knuth  and others  solutions have been given for the mutual exclusion problem and associated subproblems  in the form of <B>parallel</B> programs of <B>parallel</B> processes is regarded as a machine which proceeds from one state s  i e  a collection
10 Q0 2295 49 0.2207555 Lucene_47
comment on the composition of semantics in algol 68 cacm august  1972 van der poel  w  l  programming primitives  programming <B>languages</B>  algol  semantics  recursive composition  design of programming <B>languages</B>  data structures 1.3 4.2 4.22 5.23 5.24 ca720807 jb january 30  1978 9 29 am 2295 5 2295 2295 5 2295 2295 5 2295
10 Q0 2433 50 0.20843625 Lucene_47
 and express <B>parallel</B> algorithms are described  cacm october  1973 millstein  r  e  array processing  parallelism detection  explicit parallelism  array allocation  <B>parallel</B> control structures  illiac iv
10 Q0 1008 51 0.20634137 Lucene_47
scheduling meetings with a computer computer scheduling of papers as it was developed for the 1960 meeting of the federation of american societies for experimental biology  faseb  is described  the faseb meeting is the largest scientific meeting held in the united states each year  the technique developed for faseb can be applied to schedule any meeting with <B>parallel</B> sessions  cacm september
10 Q0 1341 52 0.20634137 Lucene_47
levels of computer systems in building current computer systems  we tend to break them down into  levels  of control  command and communication  in using the system  we break our problems down correspondingly  the continued use of such a structure raises questions about its effects on the usefulness of future systems  particularly with regard to such trends as time sharing  <B>parallel</B> programming
10 Q0 1601 53 0.20634137 Lucene_47
<B>parallel</B> numerical methods for the solution of equations classical iterative procedures iteration are computationally independent  making the methods of interest in a <B>parallel</B> processing families of numerical procedures which use the technique of the procedures in a <B>parallel</B> processing are interpreted in a <B>parallel</B> processing environment  in such an environment the procedures obtained
10 Q0 2182 54 0.20634137 Lucene_47
interrupt driven programming cacm july  1971 zelkowitz  m  interrupts  supervisors  monitors  debugging  <B>parallel</B> processing  associative memories  microprogramming 3.51 4.32 4.42 ca710608 jb february 3  1978 9 49 am 2182 4 2182 2534 4 2182 1959 5 2182 2182 5 2182 2182 5 2182 2182 5 2182 2497 5 2182 2534 5 2182 830 6 2182 1471 6 2182 1787 6 2182 1959 6 2182 1973 6 2182 2111 6 2182 2182 6 2182
10 Q0 1846 55 0.20422497 Lucene_47
on simulating networks of <B>parallel</B> processes in which simultaneous events may occur some of the problems of simulating discrete event systems  particularly computer systems  on a conventional digital problems  the technique will either find a method of simulating the <B>parallel</B> events or report  l  simulation  <B>parallel</B> processes  simultaneous events  picture processing  computer system
10 Q0 2865 56 0.20422497 Lucene_47
verifying properties of <B>parallel</B> programs  an axiomatic approach an axiomatic method for proving a number of properties of <B>parallel</B> programs is presented  hoare has given a set of axioms for partial correctness  but they are not strong enough in most cases  this paper defines a more powerful for the use of auxiliary variables  which are added to a <B>parallel</B> program as an aid to proving it correct
10 Q0 2896 57 0.20422497 Lucene_47
an exercise in proving <B>parallel</B> programs correct a <B>parallel</B> program  dijkstra s on-the-fly garbage collector  is proved correct using a proof method developed by owicki  the fine degree of in terleaving in this program makes it especially difficult to understand  and complicates the proof greatly  difficulties with proving such <B>parallel</B> programs correct are discussed  cacm december  1977 gries  d
10 Q0 2305 58 0.20277686 Lucene_47
the  plankalkul  of konrad zuse  a forerunner of today s programming <B>languages</B> plankalkul was an attempt by korrad zuse in the 1940 s to devise a notational and conceptual system for writing what programming <B>languages</B>  the investigation is of historical interest  also  it may provide insights july  1972 bauer  f  l  wossner  h  higher programming <B>languages</B>  programming  theory of programming
10 Q0 1466 59 0.19512214 Lucene_47
discussion summary on graphical <B>languages</B> cacm march  1966 ca660306 jb march 3  1978 1 46 pm 1466 5 1466 1466 5 1466 1466 5 1466 2341 5 1466 990 6 1466 1468 6 1466 1466 6 1466 3184 6 1466
10 Q0 2661 60 0.19512214 Lucene_47
ideal teaching machines-a solution to the pedagogic language problem cacm april  1974 sterling  t  d  pollack  s  v  education  programming <B>languages</B>  simulators 1.52 4.2 ca740409 jb february 1  1978 10 38 am 2661 5 2661 2661 5 2661 2661 5 2661
10 Q0 2782 61 0.19512214 Lucene_47
a reply to gentleman and marovich cacm march  1975 karp  r  a  high-level <B>languages</B>  philosophy of language design 4.22 5.19 ca750306 jb january 9  1978 4 38 pm 2782 5 2782 2782 5 2782 2782 5 2782
10 Q0 920 62 0.19512214 Lucene_47
toward better documentation of programming <B>languages</B> cacm march  1963 yngve  v  h  sammet  j  e  ca630301 jb march 14  1978 1 51 pm 920 5 920 920 5 920 920 5 920 728 5 920 920 6 920 45 6 920
10 Q0 1098 63 0.19316107 Lucene_47
a comparison of list-processing computer <B>languages</B>  including a detailed comparison of comit  ipl-v well-known computer programming <B>languages</B> which  among them  exhibit all the principal characteristics of existing list-processing <B>languages</B>  important common features of list-processing <B>languages</B> <B>languages</B> under consideration are detailed  representations of data  both by the programmer
10 Q0 1923 64 0.19316107 Lucene_47
pseudofiles an approach to system interfaces for high level <B>languages</B> using basic input output support facilities is described  it is shown that this technique can provide potentially inexpensive methods for programs to communicate with deeply embedded facilities such as command language processors  cacm march  1969 rosin  r  f  operating systems  interfaces input-output  high level <B>languages</B>
10 Q0 2326 65 0.18673016 Lucene_47
fix point approach to the theory of <B>computation</B> following the fix point theory of scott  the semantics of computer programs are defined in terms of the least fix points of recursive programs  this allows not only the justification of all existing verification techniques  but also their extension  semantics of programming <B>languages</B>  least fix points  recursive programs  computational induction 5.23
10 Q0 1325 66 0.17686403 Lucene_47
 matched filters  the development of three dimensional pattern analysis  the analysis of <B>parallel</B>
10 Q0 1554 67 0.17686403 Lucene_47
a computer technique for displaying n-dimensional hyperobjects a digital computer and automatic plotter have been used to generate three-dimensional stereoscopic movies of the three-dimensional <B>parallel</B> and perspective projections of four-dimensional hyperobjects rotating in four-dimensional space  the observed projections and their motions were a direct extension of three-dimensional experience
10 Q0 2727 68 0.17686403 Lucene_47
multiple byte processing with full-word instructions a method is described which allows <B>parallel</B> processing of packed data items using only ordinary full-word computer instructions  even though the processing requires operations whose execution is contingent upon the value of a datum  it provides a useful technique for processing small data items such as alphanumeric characters  cacm august  1975
10 Q0 2952 69 0.17686403 Lucene_47
functions realizable with word-<B>parallel</B> logical and two s-complement addition instructions cacm june  1977 warren  h  s  jr  boolean functions  two s-complement  sign propagation 4.0 6.32 ca770611 jb december 28  1977 12 45 pm 362 4 2952 2296 4 2952 2952 4 2952 2952 4 2952 2952 4 2952 2952 4 2952 2952 4 2952 2952 4 2952 142 4 2952 142 4 2952 142 4 2952 142 5 2952 162 5 2952 163 5 2952 192 5 2952
10 Q0 3044 70 0.17686403 Lucene_47
a note on conditional expressions evaluation of a conditional expression may succeed even when the  deciding predicate  diverges and the alternatives are records  or nodes  whose fields have different content  cacm november  1978 friedman  d  wise  d  <B>parallel</B> evaluation  suspending cons  lisp  conditional forms  if-then-else  ambiguous function  infinite structures 4.2 4.13 4.32 5.24 ca781107 dh
10 Q0 3175 71 0.17686403 Lucene_47
  these probabilities are updated in <B>parallel</B> for all code letters  using joint letter probabilities  iterating
10 Q0 320 72 0.17686403 Lucene_47
 to fully express and consider both the sequential and <B>parallel</B> aspects of logic  they can be compiled
10 Q0 1366 73 0.17560993 Lucene_47
computer simulation-discussion of the technique and comparison of <B>languages</B> the purpose of this paper is to present a comparison of some computer simulation <B>languages</B> and of some of the involved  users of digital computers must choose from available <B>languages</B> or write their own  substantial costs is chosenore and more computer simulation <B>languages</B> are being developed  comparisons and evaluations
10 Q0 1485 74 0.16898072 Lucene_47
the structure of programming <B>languages</B> in this paper the major components of every programming language are identified as   1  the elementary program statement   2  mechanisms for linking elementary  frequently from list processing <B>languages</B>  illustrate the forms described  the advantages  disadvantages concludes with the suggestion that programming <B>languages</B> evolve toward one which will permit all
10 Q0 1678 75 0.16898072 Lucene_47
automata  formal <B>languages</B>  abstract switching  and computability in a ph  computer science program a number of courses are listed in the area describe as automata  formal <B>languages</B>  abstract switching  and computability  that might be available to a ph  student in computer science  a brief catalog science program  automata  formal <B>languages</B>  switching theory  theory of computability 1.5 5.2 6.1
10 Q0 1852 76 0.16898072 Lucene_47
a base for a mobile programming system an algorithm for a macro processor which has been used as the base of an implementation  by bootstrapping  of processors for programming <B>languages</B> is described with programming <B>languages</B> whose implementation is based on this algorithm indicates that such a language can  programming <B>languages</B>  implementation techniques 4.12 4.22 ca690903 jb february 15  1978 4 54 pm 1530 4 1852
10 Q0 2254 77 0.16898072 Lucene_47
dynamic partitioning for array <B>languages</B> the classical process of partitioning an array into subarrays is extended to a more useful array language operation  various modes of partitioning are defined of partitioning for array <B>languages</B>  of general interest is the data structure for partitioning <B>languages</B>  the description presented in this paper is implemented in a new array language  ol 2  currently
10 Q0 2080 78 0.166749 Lucene_47
 in which program execution and input output are handled uniformly as <B>parallel</B>  cooperating process  operating systems  <B>parallel</B> processes  process concept  process communication  message buffering  process
10 Q0 1457 79 0.16556664 Lucene_47
 of various processing <B>languages</B> are outlined in the light of the procedures requiring implementation  advantages of these programming <B>languages</B> for the retrieval application are examined  and suggestions
10 Q0 1835 80 0.16556664 Lucene_47
  b  k  hochsprung  r  r  <B>languages</B> programming <B>languages</B>  student programming systems  language
10 Q0 1911 81 0.16556664 Lucene_47
on coordination reduction and sentence analysis a class of coordination phenomena in natural <B>languages</B> is considered within the frame work of transformational theory  to account for these phenomena it is proposed that certain machinery be added to the syntactic component of a transformational definitions  cacm april  1969 petrick  s  r  postal  p  m  rosenbaum  p  s  natural <B>languages</B>
10 Q0 2873 82 0.16556664 Lucene_47
 of the possibility of using this language to design other user oriented <B>languages</B>  lg has been specifically in geometry  cacm april  1976 raymond  j  interactive programming  problem oriented <B>languages</B>  computer
10 Q0 2842 83 0.16168723 Lucene_47
the denotational semantics of programming <B>languages</B> this paper is a tutorial introduction to the theory of programming language semantics developed by d  scott and c  strachey  the application theory of <B>computation</B> due to scott is motivated and outlined  finally  the paper presents a formal  applicative  imperative  environment  store  continuation  theory of <B>computation</B>  higher-order
10 Q0 1142 84 0.15609771 Lucene_47
an extension of algol-like <B>languages</B> cacm february  1964 rose  g  f  ca640201 jb march 10  1978 4 57 am 1102 4 1142 1142 4 1142 1781 4 1142 1945 4 1142 762 4 1142 949 4 1142 1142 5 1142 1142 5 1142 1142 5 1142 483 5 1142
10 Q0 1163 85 0.15609771 Lucene_47
philco ibm translation at problem-oriented  symbolic and binary levels a translation system has been developed to eliminate most of the effort formerly required to reprogram philco 2000 series codes for ibm 7094 operation  experience with this system is limited but highly successful encouraging application of the techniques to other source and object <B>languages</B>  cacm december  1965 olsen  t  m
10 Q0 2084 86 0.15609771 Lucene_47
a note on the complement of inherently ambiguous context-free <B>languages</B> cacm march  1970 maurer  h  a  ambiguity  inherent ambiguity  complement  context-free language  chomsky-language  phrase structure language  production system  type 2 language  bounded language 5.22 5.24 ca700314 jb february 13  1978 3 37 pm 2084 5 2084 2084 5 2084 2084 5 2084
10 Q0 2406 87 0.15609771 Lucene_47
 language for specifying data structures  most data definition <B>languages</B> concentrate on the declaration on a computer system  however  the need for data definition <B>languages</B> which describe both the logical and physical aspects of data is increasingly apparent  such <B>languages</B> will be a key systems  as well of these  generalized  data definition <B>languages</B> are also discussed  cacm december  1973 sibley  e  h
10 Q0 2647 88 0.15609771 Lucene_47
more on algorithms that reveal properties of floating point arithmetic units cacm may  1974 gentleman  w  m  marovich  s  b  floating-point arithmetic  high-level <B>languages</B>  philosophy of language design 4.9 5.19 ca740506 jb january 17  1978 4 04 pm 2647 4 2647 2792 4 2647 2267 5 2647 2647 5 2647 2647 5 2647 2647 5 2647 2792 5 2647 2267 6 2647 2647 6 2647
10 Q0 3150 89 0.15609771 Lucene_47
beyond programming <B>languages</B> as computer technology matures  our growing ability to create large for by the tasks we attempt  just as high level <B>languages</B> enabled the programmer to escape from the intricacies of programming <B>languages</B> as they now exist  and lays out some possible directions for future research  cacm july  1979 winograd  t  programming  programming <B>languages</B>  programming systems  systems
10 Q0 3171 90 0.15609771 Lucene_47
line numbers made cheap a technique is described for run-time line number administration to be used for implementations of high level <B>languages</B>  under suitable circumstances  this method requires absolutely no overhead  in either time or space  during execution of the program  cacm october  1979 klint  p  line number administration  diagnostic messages  abstract machine code 4.12 4.13 4.20 4.42
10 Q0 1468 91 0.15316872 Lucene_47
syntax-directed interpretation of classes of pictures a descriptive scheme for classes of pictures based on labeling techniques using <B>parallel</B> processing algorithms was proposed by the author some  the <B>parallel</B> processing simulator  originally written for an ibm 7094 system  has now been rewritten for a cdc outputs using this grammar and the <B>parallel</B> processing simulator mentioned earlier  cacm march  1966
10 Q0 2645 92 0.15270722 Lucene_47
two <B>languages</B> for estimating program efficiency two <B>languages</B> enabling their users to estimate estimating its efficiency  processors for the two <B>languages</B> are also described  the first processor on the formula produced by the first processor  examples of the usage of the two <B>languages</B>  zuckerman  c  programming <B>languages</B>  syntax-directed translation  symbolic manipulation  program
10 Q0 1200 93 0.14738669 Lucene_47
 to certain matrix operations  a <B>parallel</B> nomenclature is suggested for their classification  cacm
10 Q0 1409 94 0.14738669 Lucene_47
  the arithmetic unit has a command structure similar to large <B>parallel</B> machines  and uses flip-flop
10 Q0 1603 95 0.14738669 Lucene_47
 timing  buffering  and task scheduling and provides <B>parallel</B> processing capability  user programs
10 Q0 1928 96 0.14738669 Lucene_47
 simulation  network structures  scheduling  queuing  simultaneous activities  <B>parallel</B> events 4.22 4.29 6.9
10 Q0 1959 97 0.14738669 Lucene_47
 systems  supervisory systems  interrupt scheduling  <B>parallel</B> processing 3.51 4.22 4.32 ca701204 jb
10 Q0 2114 98 0.14738669 Lucene_47
  directory search  serial processing of lists  prime keyword  <B>parallel</B> processing of lists 3.70 3.73 3.74
10 Q0 2515 99 0.14738669 Lucene_47
minimal event-node network of project precedence relations a procedure for constructing a minimal event-node network to represent a set of precedence relations without <B>parallel</B> activities is presented  a minimal event-node network is an event-node network in which both the number of nodes and the number of arcs are the minima to preserve the given precedence relations counterexamples are given
10 Q0 2898 100 0.14738669 Lucene_47
 program modules may be nested freely  cacm december  1977 kessels  j  l  w  <B>parallel</B> programming
*************Query 11*************************

11 Q0 2699 1 1.2306654 Lucene_47
automatic data structure choice in a language of <B>very</B> <B>high</B> <B>level</B> <B>setl</B> is a set-theoretically oriented language of <B>very</B> <B>high</B> <B>level</B> whose repertoire of semantic objects includes finite sets  ordered n  cacm december  1975 schwartz  j  t  program optimization  automatic programming  <B>high</B>-<B>level</B> <B>languages</B>  set-theoretic <B>languages</B>  data structure choice 4.12 4.20 4.22 ca751208 jb january 5  1978 3 53 pm
11 Q0 2906 2 0.62269163 Lucene_47
a <B>very</B> <B>high</B> <B>level</B> programming language for data processing applications application development today is too labor-in tensive  in recent years  <B>very</B> <B>high</B>-<B>level</B> <B>languages</B> have been increasingly for writing calculations  cacm november  1977 hammer  m  owe  w  g  kruskal  v  j  wladawsky  i  <B>very</B> <B>high</B> <B>level</B> language  nonprocedural language  data flow language  business application  business data
11 Q0 724 3 0.4377947 Lucene_47
a profile of the programmer synopsis  549 members of the acm participated in a study concerned primarily with the attitudes of programmers toward their careers and jobs  a <B>very</B> <B>high</B> percentage relate to the nature of their work  and mostfind their jobs offer <B>high</B> <B>level</B> of professional interest problems for programming in the immediate future are listed by participants  <B>languages</B>  personnel  various
11 Q0 2782 4 0.4305565 Lucene_47
a reply to gentleman and marovich cacm march  1975 karp  r  a  <B>high</B>-<B>level</B> <B>languages</B>  philosophy of language design 4.22 5.19 ca750306 jb january 9  1978 4 38 pm 2782 5 2782 2782 5 2782 2782 5 2782
11 Q0 1923 5 0.4262292 Lucene_47
pseudofiles an approach to system interfaces for <B>high</B> <B>level</B> <B>languages</B> using basic input output support facilities is described  it is shown that this technique can provide potentially inexpensive methods for programs to communicate with deeply embedded facilities such as command language processors  cacm march  1969 rosin  r  f  operating systems  interfaces input-output  <B>high</B> <B>level</B> <B>languages</B>
11 Q0 2717 6 0.40918213 Lucene_47
convert  a <B>high</B> <B>level</B> translation definition language for data conversion this paper describes a <B>high</B> <B>level</B> and nonprocedural translation definition language  convert  which provides <B>very</B> powerful  database reorganization  translation definition  utility program  programming <B>languages</B>  nonprocedural <B>languages</B> 3.50 3.75 4.29 4.4 4.9 ca751002 jb january 6  1978 1 45 pm 2155 4 2717 2406 4 2717 2710 4
11 Q0 2647 7 0.34444523 Lucene_47
more on algorithms that reveal properties of floating point arithmetic units cacm may  1974 gentleman  w  m  marovich  s  b  floating-point arithmetic  <B>high</B>-<B>level</B> <B>languages</B>  philosophy of language design 4.9 5.19 ca740506 jb january 17  1978 4 04 pm 2647 4 2647 2792 4 2647 2267 5 2647 2647 5 2647 2647 5 2647 2647 5 2647 2792 5 2647 2267 6 2647 2647 6 2647
11 Q0 3171 8 0.34444523 Lucene_47
line numbers made cheap a technique is described for run-time line number administration to be used for implementations of <B>high</B> <B>level</B> <B>languages</B>  under suitable circumstances  this method requires absolutely no overhead  in either time or space  during execution of the program  cacm october  1979 klint  p  line number administration  diagnostic messages  abstract machine code 4.12 4.13 4.20 4.42
11 Q0 1835 9 0.2875042 Lucene_47
the iitran programming language the iitran language  developed to be used by students  and its important important features are described  iitran is a procedure-oriented language with a one-<B>level</B>  b  k  hochsprung  r  r  <B>languages</B> programming <B>languages</B>  student programming systems  language design  <B>high</B> school programs  college courses 1.51 1.52 4.12 4.22 ca691011 jb february 15  1978 1 54 pm
11 Q0 2267 10 0.2583339 Lucene_47
  a  floating-point arithmetic  <B>high</B>-<B>level</B> <B>languages</B>  philosophy of language design 4.9 5.19 ca721102 jb
11 Q0 3150 11 0.24393441 Lucene_47
 for by the tasks we attempt  just as <B>high</B> <B>level</B> <B>languages</B> enabled the programmer to escape from the intricacies of a machine s order code  higher <B>level</B> programming systems can provide the means to understandbeyond programming <B>languages</B> as computer technology matures  our growing ability to create large of programming <B>languages</B> as they now exist  and lays out some possible directions for future research  cacm
11 Q0 2198 12 0.24355954 Lucene_47
 programming <B>languages</B>  the problem of <B>high</B> <B>level</B> interrogation and update functions acting on network structures is mentioned  followed by a discussion of the problem of catering to a <B>high</B> volume of transactions initiated from terminals by parametric users-the lowest <B>level</B> of user  the use of cobol <B>languages</B>  data structures  storage structures  information retrieval  transaction processing 3.5
11 Q0 2716 13 0.24049081 Lucene_47
 language  data manipulation language  <B>very</B> <B>high</B> <B>level</B> language 3.70 4.13 4.33 ca751003 jb january 6  1978optimizing the performance of a relational algebra database interface an approach for implementing a  smart  interface to support a relational view of data is proposed  the basic idea is to employ automatic programming techniques so that the interface analyzes and efficiently refines the <B>high</B> <B>level</B>
11 Q0 2956 14 0.23958683 Lucene_47
some ideas on data types in <B>high</B>-<B>level</B> <B>languages</B> a number of issues are explored concerning the notion that a data type is a set of values together with a set of primitive operations on those values  among these are the need for a notation for iterating over the elements of any finite set  instead june  1977 gries  d  gehani  n  data types  generic procedures  programming <B>languages</B> 4.12 4.20 4.22
11 Q0 2316 15 0.23301129 Lucene_47
programming <B>languages</B>  history and future this paper discusses both the history and future of programming <B>languages</B>    higher <B>level</B> <B>languages</B>   some of the difficulties in writing such a history are indicated  a key part of the paper is a tree showing the chronological development of <B>languages</B> specific <B>languages</B> are discussed  cacm july  1972 sammet  j  e  programming <B>languages</B>  higher <B>level</B>
11 Q0 3148 16 0.23135449 Lucene_47
<B>high</B> <B>level</B> programming for distributed computing programming for distributed and other loosely computing at the <B>level</B> of general purpose programming <B>languages</B>  based on primitive notions of module  message  and transaction key  the methodology is shown to be independent of particular <B>languages</B> program of development in advanced programming <B>languages</B>  and relations with other aspects
11 Q0 3077 17 0.22585946 Lucene_47
 machinery of procedure declarations to become generally applicable  combining forms can use <B>high</B> <B>level</B> programs to build still higher <B>level</B> ones in a style not possible in conventional <B>languages</B> of programs conventional programming <B>languages</B> are growing ever more enormous  but not stronger  inherent defects at the most basic <B>level</B> cause them to be both fat and weak  their primitive word-at-a-time
11 Q0 2527 18 0.21698037 Lucene_47
implementation of <B>high</B> <B>level</B> language machine computing machines which directly execute the statements of a <B>high</B> <B>level</B> language have been proposed in the past  this report describes the actual implementation of such a machine  it is a computer whose  machine language  is apl  the machine is fully errors  cacm april  1973 hassitt  a  lageschulte  j  w  lyon  l  e  computer architecture  <B>high</B> <B>level</B>
11 Q0 2081 19 0.21527825 Lucene_47
some complete calculi for matrices a matrix calculus is introduced with the intention of developing data structures suitable for a <B>high</B> <B>level</B> algorithmic language for mathematical programming  the paper investigates how the special structure of matrices can be described and utilized for efficient  programming <B>languages</B>  sequence operations  symbol manipulation 4.12 4.22 5.14 5.41 ca700403 jb february 13
11 Q0 1872 20 0.21469636 Lucene_47
chebyshev interpolation and quadrature formulas of <B>very</B> <B>high</B> degree  errata  cacm july  1969 salzer  h  e  ca690708 jb february 17  1978 9 01 am 1872 5 1872 1872 5 1872 1872 5 1872 2394 5 1872 1872 6 1872 1903 6 1872
11 Q0 2923 21 0.21035562 Lucene_47
<B>high</B>-<B>level</B> data flow analysis in contrast to the predominant use of low-<B>level</B> in termediate text  <B>high</B>-<B>level</B> data flow analysis deals with programs essentially at source <B>level</B> and exploits the control flow information implicit in the parse tree  the need for <B>high</B>-<B>level</B> flow analysis arises from  this paper proposes a simple general method of <B>high</B>-<B>level</B> data flow analysis that allows free use of escape
11 Q0 1043 22 0.20669103 Lucene_47
talk-a <B>high</B>-<B>level</B> source language debugging technique with real-time data extraction talk  meaning take a look  is a debugging technique which aids substantially in debugging complex real-time programming systems by interrupting the users program at desired points to extract previously specified data  the extracted data is later edited  listing the associated data with its <B>high</B>-<B>level</B> source
11 Q0 2003 23 0.19166948 Lucene_47
 to the description of the features of the two <B>high</B> <B>level</B> user oriented <B>languages</B>  operating to extend the use of the two <B>languages</B> to different computer-assisted applications  cacm september
11 Q0 2091 24 0.18860075 Lucene_47
pdel-a language for partial differential equations conventional computer methods available to solve continuous system problems characterized by partial differential equations are <B>very</B> time-consuming and cumbersome  a convenient  easy to learn and to use  <B>high</B> <B>level</B> problem oriented language to solve and study partial differential equation problems has been designed  a practical translator
11 Q0 2815 25 0.17504267 Lucene_47
<B>high</B>-<B>level</B> binding with low-<B>level</B> linkers an easy to implement scheme is described by which a compiler can enforce agreement between complex data types in separately compiled modules  the scheme is designed to work with any existing link editor or linking loader  no matter how deficient  obscure run-time errors caused by inconsistent usages are forestalled by static errors detected at linking
11 Q0 1627 26 0.17251836 Lucene_47
application of <B>level</B> changing to a multilevel storage organization a technique for organizing the devices of a computer storage system is described  this technique  called the multilevel store  provides a means for economically satisfying the requirements for <B>very</B> large storage capacities of certain data management and information retrieval systems  the concept of <B>level</B> changing is introduced
11 Q0 2320 27 0.17222261 Lucene_47
structured multiprogramming this paper presents a proposal for structured representation of multiprogramming in a <B>high</B> <B>level</B> language  the notation used explicitly associates a data structure shared by concurrent processes with operations defined on it  this clarifies the meaning of programs multiprogramming  programming <B>languages</B>  operating systems  concurrent processes  shared data  mutual exclusion
11 Q0 1903 28 0.1717571 Lucene_47
chebyshev interpolation and quadrature formulas of <B>very</B> <B>high</B> degree cacm may  1969 salzer  h  e  chebyshev polynomials  chebyshev interpolation  chebyshev quadrature  chebyshev points  chebyshev zeros  interpolation  quadrature  definite integrals 5.13 5.16 ca690506 jb february 17  1978 3 42 pm 1903 5 1903 1903 5 1903 1903 5 1903 2394 5 1903 1872 6 1903 1903 6 1903
11 Q0 281 29 0.1717571 Lucene_47
putting a hex on e x recent notes on approximate natural antilogy have not considered indirect formulations for describing e x  in this note we produce a particular family of <B>very</B> fast  <B>high</B> precision and eminently practical exponential evaluation formulas derived from one such formulation  cacm october  1961 feurzeig  w  ca610913 jb march 16  1978 1 27 pm 281 5 281 281 5 281 281 5 281
11 Q0 2246 30 0.16903782 Lucene_47
 this language at a <B>high</B> <B>level</B> or a low <B>level</B>  and presents some comparative results  cacm december  1972 brown  p  j  portable software  <B>level</B> of language  machine independent  macro processor  efficiency 4.12
11 Q0 2705 31 0.1504097 Lucene_47
programming <B>languages</B>  natural <B>languages</B>  and mathematics some social aspects of programming are illuminated through analogies with similar aspects of mathematics and natural <B>languages</B>  the split <B>languages</B> toward flexion less  word-order based language types speaks for programming language design  auxiliary <B>languages</B> it is suggested that fortran and cobol will remain dominant for a long time to come
11 Q0 2873 32 0.12972283 Lucene_47
 of the possibility of using this language to design other user oriented <B>languages</B>  lg has been specifically designed for use by nonprogrammers  it is easy to learn and <B>very</B> close to the natural language used in geometry  cacm april  1976 raymond  j  interactive programming  problem oriented <B>languages</B>  computer
11 Q0 2938 33 0.12527369 Lucene_47
toward a discipline of real-time programming programming is divided into three major categories with increasing complexity of reasoning in program validation  sequential programming  multiprogramming  and real-time programming  by adhering to a strict programming discipline and by using a suitable <B>high</B>-<B>level</B> language molded after this discipline  the complexity of reasoning about concurrency
11 Q0 2787 34 0.12503047 Lucene_47
 as a structured program  which can readily be coded by the reader in the <B>high</B> <B>level</B> or low <B>level</B> programming
11 Q0 265 35 0.12452047 Lucene_47
low <B>level</B> language subroutines for use within fortran this paper describes some subroutines  coded in symbolic <B>languages</B> and for use within fortran coded programs  to deal with  special arithmetic   e g  multi-precision arithmetic   symbol manipulation  bit manipulation and expanded character set input-output  and visual display  cacm november  1961 barnett  m  p  ca611103 jb march 15  1978 10 59
11 Q0 3080 36 0.12337108 Lucene_47
proving the correctness of heuristically optimized code a system for proving that programs written in a <B>high</B> <B>level</B> language are correctly translated to a low <B>level</B> language is described  a primary use of the system is as a post optimization step in code generation  the low <B>level</B> language programs of errors in the low <B>level</B> language programs  the examples demonstrate that optimization of the genre
11 Q0 3026 37 0.1163057 Lucene_47
 on a 36-bit word  ones complement structure which obtains one operand from storage and one from a <B>high</B>-speed register  or two operands from <B>high</B>-speed registers  the 1100 operating system is designed computer series  computer architecture  multiprocessing <B>languages</B>  data management systems  end
11 Q0 3185 38 0.11027596 Lucene_47
the humble programmer we shall do a much better programming job  provided that we approach the task with a full appreciation if its tremendous difficulty  provided that we stick to modest and elegant programming <B>languages</B>  provided that we respect the intrinsic limitations of the human mind and approach the task as <B>very</B> humble programmers  cacm october  1972 dijkstra  e  w  ca721010 es march 18
11 Q0 1769 39 0.10990546 Lucene_47
  problem-oriented <B>languages</B> are particularly effective over the entire front  online computers and time-sharing also rate <B>high</B> by this measure  education and increased understanding are basic to all  computer-aided design  problem-oriented <B>languages</B>  data communication  education  computer science
11 Q0 1861 40 0.10957893 Lucene_47
the mad definition facility one of the first definition facilities for higher <B>level</B> <B>languages</B> is described  users of the language can define new operators and or data types into the mad language  so that their use appears as if they were predefined  information is given on how one writes  a  graham  r  m  mad  definitions  operators  macros  higher <B>level</B> language 4.12 4.22 ca690802 jb
11 Q0 2398 41 0.10957893 Lucene_47
 an advanced implementation of basic  system-<B>level</B> interactive features  and a general capability a flexible cai scan capability is illustrated  an example of interaction at the system <B>level</B> shows how in education  extended <B>languages</B>  interactive systems 1.50 1.51 3.32 4.22 ca720105 jb february 1  1978 9 28 am
11 Q0 1145 42 0.10734818 Lucene_47
git-a heuristic program for testing pairs of directed line graphs for isomorphism  given a pair of directed line graphs  the problem of ascertaining whether or not they are isomorphic is one for which no efficient algorithmic solution is known  since a straightforward enumerative algorithm might require 40 years of running time on a <B>very</B> <B>high</B> speed computer in order to compare two 15-node graphs
11 Q0 48 43 0.10734818 Lucene_47
shift-register code for indexing applications in this communication the use of a shift-register code with n   10 is described for calling 64 wireless telemetering stations in a fixed cyclical order  a <B>high</B> degree of redundancy is used  permitting a single-error correcting code   minimum-distance for tuitous error combinations of <B>very</B> low probability  it has been called  the communication describes
11 Q0 2542 44 0.104394734 Lucene_47
 evaluation with design and implementation is described  this system is based on a simple  <B>high</B> <B>level</B>
11 Q0 2593 45 0.104394734 Lucene_47
a back-end computer for data base management it is proposed that the data base management function be placed on a dedicated back-end computer which accepts commands  in a relatively <B>high</B> <B>level</B> language such as the codasyl data base task group  april 1971 report  from a host computer  accesses the data base on secondary storage  and returns results  the advantages of such a configuration
11 Q0 2826 46 0.104394734 Lucene_47
 sequence through the same movement  the simplicity of the stick figure image encourages a <B>high</B> <B>level</B>
11 Q0 2898 47 0.104394734 Lucene_47
 evaluation  this paper describes a conceptual framework for a <B>high</B> <B>level</B> programming language providing
11 Q0 2954 48 0.104394734 Lucene_47
a bounded storage algorithm for copying cyclic structures a new algorithm is presented which copies cyclic list structures using bounded workspace and linear time  unlike a previous similar algorithm  this one makes no assumptions about the storage allocation system in use and uses only operations likely to be available in a <B>high</B>-<B>level</B> language  the distinctive feature of this algorithm
11 Q0 3027 49 0.104394734 Lucene_47
the development of the mu5 computer system following a brief outline of the background of the mu5 project  the aims and ideas for mu5 are discussed  a description is then given of the instruction set  which includes a number of features conducive to the production of efficient compiled code from <B>high</B>-<B>level</B> language source programs  the design of the processor is then traced from the initial ideas
11 Q0 3127 50 0.104394734 Lucene_47
thoth  a portable real-time operating system thoth isa real-time operating system which is designed to be portable over a large set of machines  it is currently running on two minicomputers with quite different architectures  both the system and application programs which use it are written in a <B>high</B>-<B>level</B> language  because the system is implemented by the same software on different hardware
11 Q0 3103 51 0.10259165 Lucene_47
automatic data structure selection  an example and overview the use of several levels of abstraction has proved to be <B>very</B> helpful in constructing and maintaining programs  when programs are designed with abstract data types such as sets and lists  programmer time can be saved by automating the process of filling in low-<B>level</B> implementation details  in the past  programming systems have provided
11 Q0 2317 52 0.09726947 Lucene_47
 and in extensible <B>languages</B>  but so far at least they have had little practical impact  problem-oriented <B>languages</B> may <B>very</B> well become the most important language development area in the next five to ten yearsprogramming systems and <B>languages</B> 1965-1975 in spite of impressive gains by pl i  fortran and cobol remain the <B>languages</B> in which most of the world s production programs are written and will remain
11 Q0 1710 53 0.09189664 Lucene_47
 proved <B>very</B> useful for drawing asp structures on paper  asp structures are built and manipulated  associative  data structure  ring structure lists  list structure  set <B>languages</B>  modeling  graphics
11 Q0 2034 54 0.08894319 Lucene_47
the mobile programming system  stage2 stage2 is the second <B>level</B> of a bootstrap sequence which is easily implemented on any computer  it is a flexible  provided by stage2 are summarized  and the implementation techniques which have made it possible to have stage2 running on a new machine with less independence  programming <B>languages</B>  implementation techniques 4.12 4.22 ca700703 jb february 13
11 Q0 1179 55 0.08587855 Lucene_47
 source language programs are processed at <B>very</B> <B>high</B> speeds  language compatibility has been maintained
11 Q0 3041 56 0.08587855 Lucene_47
  achieving both a space efficient representation of the tree and <B>high</B> search speed  unlike frequency ordered binary search trees  the cost of a successful search of an mst is log n bounded and <B>very</B> stable
11 Q0 1552 57 0.083515786 Lucene_47
 collection  and sharing of physical space between zones  the routines of the package perform <B>high</B> <B>level</B>
11 Q0 1676 58 0.083515786 Lucene_47
the lrltran compiler extensive software problems confront an organization which possesses a number of different computers and which frequently acquires new ones  to maintain cohesion  a system must be developed  written in a <B>high</B> <B>level</B> language  which minimizes machine dependencies and isolates those which are necessary  a language and a compiler for the language are discussed here  the language
11 Q0 2931 59 0.08230881 Lucene_47
logic and programming <B>languages</B> logic has been long in terested in whether answers to certain parts of computability theory  programming <B>languages</B> offer an obvious opportunity as their syntactic seem that the understanding of higher-<B>level</B> program features involves us with infinite objects <B>languages</B>  automata  denotational semantics  a-calculus models  computability  partial functions
11 Q0 321 60 0.07797688 Lucene_47
algol 60 confidential the algol 60 report   when first encountered  seems to describe a <B>very</B> the purpose of precisely specifying a language  but they are certainly not <B>very</B> readable for a beginner of problems  it is not hard to learn those parts of algol present in other compiler <B>languages</B>  how imposed by other compiling <B>languages</B> have finally been lifted  but algol also allows many unobvious
11 Q0 2651 61 0.073517315 Lucene_47
 routines  programmer control over type conversion  and <B>very</B> flexible data type behavior  in a context types  modes  mode unions  type conversion  coercion  generic functions  extensible <B>languages</B>  data
11 Q0 1425 62 0.07115456 Lucene_47
flow diagrams  turing machines and <B>languages</B> with only two formation rules in the first part of the paper  flow diagrams are introduced to represent inter al  mappings of a set into itself  although not every diagram is decomposable into a finite number of given base diagrams  this becomes true at a semantical <B>level</B> due to a suitable extension of the given set and of the basic mappings defined
11 Q0 2002 63 0.07115456 Lucene_47
amesplot-a higher <B>level</B> data plotting software system amesplot is an extensible software system designed to make the display of data as simple  painless  and neat as possible  the system described is hardware-independent and has been implemented on a variety of installations  of different written in most conventional higher <B>languages</B>  the functions of positioning  locating  and scaling
11 Q0 2957 64 0.07115456 Lucene_47
database abstractions  aggregation aggregation is in troduced as an abstraction which is important in conceptualizing the real world  aggregation transforms a relationship between objects into a higher-<B>level</B> object  a new data type  called aggregation  is developed which  under certain criteria implementation detail  should be incorporated into programming <B>languages</B>  cacm june  1977 smith  j  m
11 Q0 3101 65 0.07115456 Lucene_47
 and by decomposing procedure invocation into three separate components at the source-language <B>level</B>  in addition hanson  d  griswold  r  procedures  coroutines  programming <B>languages</B>  interpreters  snobol 4
11 Q0 2208 66 0.07045484 Lucene_47
 algorithm the utilization of storage is studied in a two-<B>level</B> memory hierarchy  the first storage <B>level</B>  if this particular area is full  then the entry will be placed into the slower second-<B>level</B> store  even though other areas in the first-<B>level</B> store may have space available  given the n entries have been filed in the first-<B>level</B> storehis expression gives a measure of how effectively the first-<B>level</B> store is being
11 Q0 1641 67 0.065747365 Lucene_47
a use of fast and slow memories in list-processing <B>languages</B> a scheme is described which permitting a substantial increase in memory space utilized to store list-structured data  it consists in reducing to one <B>level</B> a nonhomogeneous store composed of fast  core  and slow  disk or drum  memories words  the reduction to a one-<B>level</B> memory is performed by a program which leaves the most often called
11 Q0 198 68 0.06549077 Lucene_47
a <B>high</B>-speed multiplication process for digital computers cacm april  1960 gurzi  f  ca600413 jb march 22  1978 1 36 pm 198 5 198 198 5 198 198 5 198
11 Q0 81 69 0.06549077 Lucene_47
norc <B>high</B>-speed printer cacm june  1959 gleissner  g  h  ca590603 jb march 22  1978 6 36 pm 81 5 81 81 5 81 81 5 81
11 Q0 205 70 0.06432765 Lucene_47
macro instruction extensions of compiler <B>languages</B> macroinstruction compilers constructed from a small set of functions can be made extremely powerful  in particular  conditional assembly  nested definitions  and parenthetical notation serve to make a compiler capable of accepting <B>very</B> general extensions to its ground language  cacm april  1960 mcilroy  m  d  ca600406 jb march 22  1978 1 49 pm
11 Q0 1642 71 0.06040245 Lucene_47
 of secondary storage  <B>level</B> 1  several times larger than the main memory and quite fast  and <B>level</B> 2  many times larger and slower than <B>level</B> 1  cacm february  1967 fisher  r  o  shepard  c  d  ca670201
11 Q0 2842 72 0.05513798 Lucene_47
the denotational semantics of programming <B>languages</B> this paper is a tutorial introduction to the theory of programming language semantics developed by d  scott and c  strachey  the application of the theory to formal language specification is demonstrated and other applications are surveyed  the first language considered  loop  is <B>very</B> elementary and its definition merely introduces the notation
11 Q0 1472 73 0.05402713 Lucene_47
description of a <B>high</B> capacity  fast turnaround university computing center the operating system for the univac 1107 at case institute is reviewed  the system is of interest because of the low turnaround times achieved  the <B>high</B> throughput achieved and the lack of an operating staff  turnaround times below 5 minutes and job volume above 75,000 per quarter year one reported  cacm february  1966
11 Q0 1788 74 0.053365916 Lucene_47
toward a general processor for programming <B>languages</B> many efforts have been made to develop a better way of implementing a higher <B>level</B> programming language than by the construction of a whole new compiler  but so far none has proved generally satisfactory  in this paper  it is contended that a programming language is best described functionally as a body of macro instructions  and that the macro
11 Q0 731 75 0.053365916 Lucene_47
symmetric list processor a list processing system in which each list cell contains both a forward and a backward link as well as a datum is described  this system is intended for imbeding in higher <B>level</B> <B>languages</B> capable of calling functions and subroutines coded in machine language  the presentation is in the form of fortran programs depending on only a limited set of fortran programs depending
11 Q0 1358 76 0.052197367 Lucene_47
syntax macros and extended translation a translation approach is described which allows one to extended the syntax and semantics of a given <B>high</B>-<B>level</B> base language by the use of a new formalism called a syntax-macro  syntax-macros define string transformations based on syntactic elements of the base language  two types of macros are discussed  and examples are given of their use  the conditional
11 Q0 1860 77 0.052197367 Lucene_47
an algol-based associative language a <B>high</B> <B>level</B> programming language for large  complex associative structures has been designed and implemented  the underlying data structure has been implemented using a hash-coding technique  the discussion includes a comparison with other work and examples of applications of the language  cacm august  1969 feldman  j  a  algol  associative  programming
11 Q0 3057 78 0.048812553 Lucene_47
optimal his togram matching by monotone gray <B>level</B> transformation this paper investigates the problem of optimal his togram matching using monotone gray <B>level</B> transformation  which always assigns all picture points of a given gray <B>level</B> i to another gray <B>level</B> t i  such that if i  gt  j  then t i such that the sum of absolute errors between the gray <B>level</B> his togram of the transformed picture
11 Q0 1703 79 0.047917034 Lucene_47
accommodating standards and identification of programming <B>languages</B> the user public wants standardization and reliable identification of programming <B>languages</B> and related services  one way related family of <B>languages</B>  oppressive rigidity usually associated with standardization is avoided <B>languages</B> and computer services  cacm august  1968 mooers  c  n  standardization  programming
11 Q0 2603 80 0.047917034 Lucene_47
the equivalence of reducing transition <B>languages</B> and deterministic <B>languages</B> the class of reducing transition <B>languages</B> introduced by eickel  paul  bauer  and samelson was shown by morris to be a proper superclass of the simple precedence <B>languages</B>  in this paper this result is extended  showing that  in fact  the first class is equivalent to the class of deterministic context free <B>languages</B>
11 Q0 1459 81 0.047435436 Lucene_47
requirements for real-time <B>languages</B> real-time <B>languages</B> have different requirements from other programming <B>languages</B> because of the special nature of their applications  the environment in which their object programs are executed and the environment in which they may be compiled  it may not be the language extensions that ultimately advance developments in the field  progress may be made
11 Q0 2814 82 0.04694891 Lucene_47
roster of programming <B>languages</B> for 1974-75 cacm december  1976 sammet  j  e  ca761201 jb january 3  1978 2 38 pm 2814 5 2814 2814 5 2814 2814 5 2814
11 Q0 628 83 0.04694891 Lucene_47
on a floating-point number representation for use with algorithmic <B>languages</B> cacm march  1962 grau  a  a  ca620304 jb march 20  1978 3 09 pm 628 5 628 628 5 628 628 5 628
11 Q0 651 84 0.04694891 Lucene_47
a survey of <B>languages</B> and systems for information retrieval cacm january  1962 grems  m  ca620108 jb march 20  1978 4 36 pm 651 5 651 651 5 651 651 5 651
11 Q0 1223 85 0.04684986 Lucene_47
<B>high</B> speed compilation of efficient object code a three-pass compiler with the following properties is briefly described  the last two passes scan an intermediate language produced by the preceding pass in essentially the reverse of the order in which it was generated  so that the first pass algebraic <B>languages</B>  cacm august  1965 gear  c  w  ca650801 jb march 6  1978 8 45 pm 267 4 1223 1139 4 1223
11 Q0 2922 86 0.04455956 Lucene_47
two-<B>level</B> control structure for nondeterministic programming the basic ideas of nondeterministic the purity of the nondeterministic formulation of search processes on one <B>level</B>  the attempt <B>level</B>   deferring the coordination of problem solving efforts to another  the choice <B>level</B>   the feasibility at the choice <B>level</B> is a free of contexts  the leaves are computational environments  each holding
11 Q0 2295 87 0.044263855 Lucene_47
comment on the composition of semantics in algol 68 cacm august  1972 van der poel  w  l  programming primitives  programming <B>languages</B>  algol  semantics  recursive composition  design of programming <B>languages</B>  data structures 1.3 4.2 4.22 5.23 5.24 ca720807 jb january 30  1978 9 29 am 2295 5 2295 2295 5 2295 2295 5 2295
11 Q0 232 88 0.04366051 Lucene_47
a <B>high</B>-speed sorting procedure cacm january  1960 frank  r  m  lazarus  r  b  ca600104 jb march 22  1978 2 27 pm 232 5 232 232 5 232 232 5 232 852 5 232 864 5 232 232 6 232 232 6 232 309 6 232 74 6 232 74 6 232
11 Q0 2301 89 0.04314461 Lucene_47
generating parsers for affix grammars affix grammars are two-<B>level</B> grammars which are similar to van wijngaarden s two-<B>level</B> grammars used in the definition of algol 68  affix grammars are shown by koster to be equal in power to van wijngaarden grammars  they are much more suited to parsing than language  parsing  syntax directed compiling  translator writing systems  two-<B>level</B> grammars 3.42
11 Q0 2897 90 0.04314461 Lucene_47
a case study of a new code generation technique for compilers recent developments in optimizing techniques have allowed a new design for compilers to emerge  such a compiler translates the parsed source code into lower <B>level</B> code by a sequence of steps  each step expands higher <B>level</B> statements into blocks of lower <B>level</B> code and then performs optimizations on the result  each statement has only
11 Q0 2560 91 0.042272907 Lucene_47
a queuing model of a multiprogrammed computer with a two-<B>level</B> storage system the results are presented of an analysis of a probabilistic model of a multiprogrammed computer system with a two-<B>level</B> storage system in which there is sequential dependency of accesses between the devices  expressions are obtained for the long-run probability that both the cpu and each of the storage devices are busy
11 Q0 1115 92 0.04221804 Lucene_47
randomized binary searching with tree structure a more efficient method of using tree structures is proposed  which utilizers both plus and minus branches in the search path  <B>very</B> significant gains result when the search key includes alphabetic characters  cacm march  1964 clampett jr   h  a  ca640317 jb march 10  1978 2 30 am 1115 5 1115 1115 5 1115 1115 5 1115 1935 5 1115 849 6 1115 1115 6 1115
11 Q0 1182 93 0.04221804 Lucene_47
 that are <B>very</B> similar in meaning  cacm october  1965 rubenstein  h  goodenough  j  b  ca651013 jb march 6  1978
11 Q0 1183 94 0.04221804 Lucene_47
a note on the use of a digital computer for doing tedious algebra and programming a special purpose compiler was written with fortran ii language and made possible the writing of <B>very</B> long programs by the computer  the procedure is based on a straight-forward use of format statements for generating machine-written programs  cacm october  1965 veronis  g  ca651012 jb march 6  1978 6 31 pm 1183 5
11 Q0 1610 95 0.04221804 Lucene_47
a method for the solution of transportation problems with tall matrices a method is presented for the solution of the transportation problem having a cost matrix with few columns  the computer implementation of this method shows it to be <B>very</B> fast and efficient  application are indicted for the personnel classification problem as well as the classical transportation problem  an example is worked
11 Q0 1643 96 0.04221804 Lucene_47
an improvement to iterative methods of polynomial factorization methods of polynomial factorization which find the zeros one at a time require the division of the polynomial by the accepted factor  it is shown how the accuracy of this division may be increased by dividing in order of both ascending and descending powers of the variable and choosing a crossover point which minimizes a <B>very</B> simply
11 Q0 2305 97 0.040658947 Lucene_47
the  plankalkul  of konrad zuse  a forerunner of today s programming <B>languages</B> plankalkul was an attempt by korrad zuse in the 1940 s to devise a notational and conceptual system for writing what programming <B>languages</B>  the investigation is of historical interest  also  it may provide insights july  1972 bauer  f  l  wossner  h  higher programming <B>languages</B>  programming  theory of programming
11 Q0 2489 98 0.039855283 Lucene_47
number of multiply-restricted partitions  a1   algorithm a448  cacm june  1973 beyer  t  swinehart  d  f  partitions  enumeration  change making  energy-<B>level</B> degeneracies  molecular vibrational energy-levels 3.13 5.30 ca730611 jb january 23  1978 1 49 pm 2104 4 2489 2489 4 2489 2489 4 2489 1219 5 2489 2104 5 2489 2489 5 2489 2489 5 2489 2489 5 2489
11 Q0 1466 99 0.03912409 Lucene_47
discussion summary on graphical <B>languages</B> cacm march  1966 ca660306 jb march 3  1978 1 46 pm 1466 5 1466 1466 5 1466 1466 5 1466 2341 5 1466 990 6 1466 1468 6 1466 1466 6 1466 3184 6 1466
11 Q0 2661 100 0.03912409 Lucene_47
ideal teaching machines-a solution to the pedagogic language problem cacm april  1974 sterling  t  d  pollack  s  v  education  programming <B>languages</B>  simulators 1.52 4.2 ca740409 jb february 1  1978 10 38 am 2661 5 2661 2661 5 2661 2661 5 2661
*************Query 12*************************

12 Q0 3127 1 1.1755296 Lucene_47
thoth  a <B>portable</B> real-time <B>operating</B> system thoth isa real-time <B>operating</B> system which is designed to be <B>portable</B> over a large set of machines  it is currently running on two minicomputers  sager  g  portability  real time  <B>operating</B> <B>systems</B>  minicomputer 3.80 4.30 4.35 ca790206 dh april <B>portable</B>  thoth encourages structuring programs as networks of communicating processes by providing
12 Q0 1461 2 0.37982243 Lucene_47
discussion summary on <B>operating</B> <B>systems</B> cacm march  1966 ca660311 jb march 3  1978 1 26 pm 1461 5 1461 1461 5 1461 1461 5 1461
12 Q0 3068 3 0.340851 Lucene_47
a model for verification of data security in <B>operating</B> <B>systems</B> program verification applied <B>systems</B>  a precise definition of data security is developed here in terms of a general model for <B>operating</B> <B>systems</B>  this model is suitable as a basis for verifying many of those properties  d  <B>operating</B> <B>systems</B>  security  protection  program verification 4.35 5.24 ca780904 dh february 5
12 Q0 2246 4 0.3299833 Lucene_47
levels of language for <B>portable</B> software an increasing amount of software is being implemented in a <B>portable</B> form  a popular way of accomplishing this is to encode the software in a specially designed machine-independent language and then to map this language  often using a macro processor  p  j  <B>portable</B> software  level of language  machine independent  macro processor  efficiency 4.12
12 Q0 2621 5 0.27812147 Lucene_47
 to one-way ciphers derived from sannon codes  cacm august  1974 purdy  g  b  <B>operating</B> <B>systems</B>  time sharing <B>systems</B>  security  cryptography 4.35 ca740803 jb january 17  1978 10 10 am 2621 5 2621 2621a high security log-in procedure the protection of time sharing <B>systems</B> from unauthorized users is often achieved by the use of passwords  by using one-way ciphers to code the passwords  the risks
12 Q0 1930 6 0.27498606 Lucene_47
extremely <B>portable</B> random number generator extremely <B>portable</B> subroutines are sometimes needed for which moderate quality and efficiency suffice  typically  this occurs for library functions  like random number generation and in core sorting  which are not entirely universal or are not used that meets requirements of this sort  an extremely <B>portable</B> 8-line fortran program is provided which
12 Q0 1750 7 0.2741132 Lucene_47
 of the faster memory  cacm may  1968 fuchel  k  heller  s  multiple computer <B>systems</B>  extended core storage  multiprogrammed <B>operating</B> <B>systems</B>  multiprocessor <B>operating</B> <B>systems</B>  control data corporation 6600  <B>operating</B> system with ecs 4.30 4.32 ca680506 jb february 23  1978 9 27 am 1750 5 1750 1750 5
12 Q0 2372 8 0.26916727 Lucene_47
 existing <B>systems</B>  and serves as a framework for a proposal for general security system implementation within today s languages and <B>operating</B> <B>systems</B>  cacm april  1972 conway  r  w  maxwell  w  l  morgan  h  l  security  privacy  access control confidentiality  <B>operating</B> <B>systems</B>  access management  dataon the implementation of security measures in information <B>systems</B> the security of an information
12 Q0 1247 9 0.26857498 Lucene_47
an <B>operating</B> environment for dynamic-recursive computer programming <B>systems</B> presented in this paper is a brief nontechnical introduction to oedipus  a computer programming system which can serve as an <B>operating</B> environment for dynamic and or recursive programs and programming <B>systems</B>  the available services include dynamic allocation of storage for contiguous blocks of arbitrary size  input
12 Q0 2069 10 0.25321493 Lucene_47
comments on a paper by wallace and mason cacm april  1970 heess jr   w  f  page-on-demand  demand paging  time-sharing multiprogramming  markovian computer models  scheduling strategies  <B>operating</B> <B>systems</B>  memory management 2.44 4.32 4.39 6.20 6.21 ca700415 jb february 13  1978 2 36 pm 2069 5 2069 2069 5 2069 2069 5 2069
12 Q0 1680 11 0.24681911 Lucene_47
 instruction  tutorial <B>systems</B>  programming  simulation  modeling  information retrieval <B>operating</B> 40  and the ibm 2250 display unit under <B>operating</B> system 360  adept is a cataloged program that controls the standard <B>operating</B> system by terminating and rescheduling itself automatically  relinquishing computer resources allocated to it  and surrendering control to the <B>operating</B> system to perform
12 Q0 3025 12 0.24135262 Lucene_47
 the pdp-6  circa 1963  over five generations of implementations to presently include <B>systems</B> covering a price range of five to one  the origin and evolution of the hardware  <B>operating</B> system  and languages to time sharing computing <B>systems</B>  transferring hardware technology within dec  and elsewhere  and serving as a model for single user and timeshared interactive minicomputer microcomputer <B>systems</B>  cacm
12 Q0 322 13 0.23838985 Lucene_47
operational compatibility of <B>systems</B>-conventions the general standards committee of the share organization has devoted considerable effort to the problem of <B>operating</B> a computer efficiently in view of the growing number of programming <B>systems</B> available  each of these programming <B>systems</B> has been coded to utilize a fixed set of hardware components without recognizing the fact that others may
12 Q0 1747 14 0.23342077 Lucene_47
 criteria  computer <B>systems</B>  computer <B>systems</B> design  input equipment  input equipment design  <B>operating</B> <B>systems</B>  <B>operating</B> <B>systems</B> design  multiprogramming  multiprogrammed <B>systems</B>  multiprogrammed systemthree criteria for designing computing <B>systems</B> to facilitate debugging the designer of a computing clock  the synchronization of parallel processes  protection in multiprogrammed <B>systems</B>
12 Q0 2424 15 0.22735322 Lucene_47
 be modest  cacm november  1973 fabry  r  s  <B>operating</B> <B>systems</B>  data security  fault tolerancedynamic verification of <B>operating</B> system decisions dynamic verification of a decision implies independent hardware and software  the dynamic verification of <B>operating</B> system decisions is used  and cost effectiveness  the technique of dynamic verification allows the construction of an <B>operating</B>
12 Q0 2151 16 0.22647284 Lucene_47
 showing the system in use is presented  finally  it is shown how other time-sharing <B>systems</B> may provide similar measuring facilities  cacm october  1971 nemeth  a  g  rovner  p  d  <B>operating</B> <B>systems</B>  multiprogramming <B>systems</B>  time-sharing <B>systems</B>  software measurement  user program measurement of software <B>systems</B> is followed by a description of a hardware and software scheme for measuring user
12 Q0 2950 17 0.2238125 Lucene_47
 a framework for implementing flexible schedulers in real <B>operating</B> <B>systems</B>  the policy-driven scheduler  fabry  r  s  scheduling algorithms  scheduling models  priority  <B>operating</B> <B>systems</B> processor
12 Q0 3196 18 0.22226858 Lucene_47
the reactive typewriter program 84-character keyboard including alphabetical upper and lower case for good readability  if the machine is restricted to only a single case  the lower case is preferred  the reactive typewriter should be <B>portable</B>  the reactive typewriter should operate over any commercially used  dial-type telephone  voice  or telegraph  telex  line or over leased  nondial
12 Q0 1923 19 0.22156307 Lucene_47
pseudofiles an approach to system interfaces for high level languages using basic input output support facilities is described  it is shown that this technique can provide potentially inexpensive methods for programs to communicate with deeply embedded facilities such as command language processors  cacm march  1969 rosin  r  f  <B>operating</B> <B>systems</B>  interfaces input-output  high level languages
12 Q0 3137 20 0.22156307 Lucene_47
a methodology for the design of distributed information <B>systems</B> a macro model of a distributed information system in presented  the model describes the major costs of using an information system from the perspective of the end-user  the making evident the effect of various design and <B>operating</B> parameters on overall cost per transaction  the technique is illustrated by application to the design
12 Q0 1226 21 0.21734169 Lucene_47
the organization of structured files a data file is an integral part of a data processing system  in many <B>systems</B>  the selection of an organization for the data within the file can be critical to the system s <B>operating</B> efficiency  this paper provides the <B>systems</B> designer with an information source which describes ten techniques that may be employed for organizing structured data
12 Q0 3141 22 0.21734169 Lucene_47
  rather than o n2   cacm may  1979 chang  e  roberts  r  decentralized algorithms  distributed <B>systems</B>  <B>operating</B> <B>systems</B> 4.32 4.35 5.25 5.32 ca790502 dh june 5  1979 2 35 pm 3141 5 3141 3141 5 3141 3141 5
12 Q0 2740 23 0.21536428 Lucene_47
 structuring of <B>operating</B> <B>systems</B>  the project management and the performance are discussed  too  the <B>operating</B> system is the first large one using the rc 4000 multiprogramming system  cacm july  1975a large semaphore based <B>operating</B> system the paper describes the internal structure of a large <B>operating</B> system as a set of cooperating sequential processes  the processes synchronize by means
12 Q0 2111 24 0.2153338 Lucene_47
spelling correction in <B>systems</B> programs several specialized techniques are shown for efficiently incorporating spelling correction algorithms in to compilers and <B>operating</B> <B>systems</B>  these include morgan  h  l  spelling correction  error correction  debugging  compilers  <B>operating</B> <B>systems</B> spelling correction is presented  by using <B>systems</B> which perform spelling correction  the number
12 Q0 2522 25 0.21344522 Lucene_47
 rodriguez-rosell  j  dupuy  j  p  working set  dispatcher  scheduler  time-sharing <B>systems</B>  resource allocation  software evaluation  <B>operating</B> <B>systems</B>  supervisory <B>systems</B> 4.31 4.32 ca730406 jb to the processes competing for them  recent research in time-sharing paging <B>systems</B> has developed the working
12 Q0 2379 26 0.20906624 Lucene_47
 on the principles which guided the design  cacm march  1972 liskov  b  h  <B>operating</B> <B>systems</B>  system designthe design of the venus <B>operating</B> system the venus <B>operating</B> system is an experimental multiprogramming system which supports five or six concurrent users on a small computer  the system was produced architectural feature  the software exploits these features to define the <B>operating</B> system as simply
12 Q0 1462 27 0.20223016 Lucene_47
multilevel <B>operating</B> <B>systems</B> the basic software for all newer computers is built on the well-established need for standard <B>operating</B> <B>systems</B>  this implies that all applications-no matter how large  large applications require supervisory monitors which handle problems similar to those of the <B>operating</B> <B>systems</B>  but at a different level  sometimes  still a third or even a fourth such level is required
12 Q0 1236 28 0.20095375 Lucene_47
the smart automatic document retrieval system-an illustration a fully automatic document retrieval system <B>operating</B> on the ibm 7094 is described  the system is characterized by the fact that several to simulate an actual <B>operating</B> environment  but also to test the effectiveness of the various available as an example in the present report to illustrate <B>systems</B> operations and evaluation procedures  cacm
12 Q0 2184 29 0.20095375 Lucene_47
on the meaning of names in programming <B>systems</B> it is assumed that there is a similarity of function between the data names of a programming language and the file names of an <B>operating</B> system  the two functions are discussed in terms of the same basic concepts in order to identify the extent name list  value list  expression   cacm july  1971 fraser  a  g  file  <B>operating</B> system  programming
12 Q0 2777 30 0.20095375 Lucene_47
  1975 parnas  d  l  <B>operating</B> <B>systems</B>  co-<B>operating</B> processes process synchronization primitives 4.3
12 Q0 2624 31 0.1986582 Lucene_47
formal requirements for virtualizable third generation architectures virtual machine <B>systems</B> have been implemented on a limited number of third generation computer <B>systems</B>  e g  cp-67 on the ibm 360 67  from previous empirical studies  it is known that certain third generation computer <B>systems</B>  e g  goldberg  r  p  <B>operating</B> system  third generation architecture  sensitive instruction  formal
12 Q0 3026 32 0.1986582 Lucene_47
the evolution of the sperry univac 1100 series  a his tory  analysis  and projection the 1100 series <B>systems</B> are sperry univac s large-scale main frame computer <B>systems</B>  beginning with the 1107-speed register  or two operands from high-speed registers  the 1100 <B>operating</B> system is designed computer series  computer architecture  multiprocessing languages  data management <B>systems</B>  end
12 Q0 2840 33 0.1930821 Lucene_47
protection in <B>operating</B> <B>systems</B> a model of protection mechanisms in computing <B>systems</B> is presented and its appropriateness is argued  the  safety  problem for protection <B>systems</B> under this model is to determine in a given situation whether a subject can acquire a particular right to an object  <B>operating</B> system  decidability  turing machine 4.30 4.31 5.24 ca760804 jb january 4  1978 10 12 am
12 Q0 3174 34 0.18991122 Lucene_47
password security  a case history this paper describes the history of the design of the password security scheme on a remotely accessed time-sharing system  the present design was the result of countering observed attempts to penetrate the system  the result is a compromise between extreme security and ease of use  cacm november  1979 morris  r  thompson  k  <B>operating</B> <B>systems</B>  passwords  computer
12 Q0 2378 35 0.18697147 Lucene_47
  cacm march  1972 gaines  r  s  <B>operating</B> <B>systems</B>  supervisors  multiprogramming  time-sharingan <B>operating</B> system based on the concept of a supervisory computer an <B>operating</B> system which is organized as a small supervisor and a set of independent processes are described  the supervisor handles i o with external devices-the file and directory system-schedules active processes and manages
12 Q0 2541 36 0.18697147 Lucene_47
  it also suggested an important new concept for <B>operating</B> <B>systems</B>  separation of the scheduling froman overview of the ispl computer system design this paper explores the advantages of the concurrent design of the language  <B>operating</B> system  and machine  via microcode  to create an interactive performing the scheduling decisions   cacm february  1973 balzer  r  m  concurrent design  <B>operating</B>
12 Q0 2597 37 0.18697147 Lucene_47
  1974 hoare  c  a  r  monitors  <B>operating</B> <B>systems</B>  scheduling  mutual exclusion  synchronization  systemmonitors  an <B>operating</B> system structuring concept this paper develops brinch-hansen s concept of a monitor as a method of structuring an <B>operating</B> system  it introduces a form of synchronization  describes a possible method of implementation in terms of semaphores and gives a suitable proof rule
12 Q0 2629 38 0.18697147 Lucene_47
the unix time-sharing system unix is a general-purpose  multi-user  interactive <B>operating</B> system for the digital equipment corporation pdp-11 40 and 11 45 computers  it offers a number of features seldom found even in larger <B>operating</B> <B>systems</B>  including   1  a hierarchical file system incorporating-sharing  <B>operating</B> system  file system  command language  pdp-11 4.30 4.32 ca740702 jb january 17  1978 1
12 Q0 2319 39 0.18459795 Lucene_47
 impact on the way we go about modularizing <B>operating</B> and computer <B>systems</B>  cacm july  1972 lynch  w<B>operating</B> system performance an overview of the current and future positions with respect to <B>operating</B> system performance is given  while a great deal of information and a large number of models interactions between the various subsystems of an <B>operating</B> system  an overall model of the total system must
12 Q0 2138 40 0.18117827 Lucene_47
bliss  a language for <B>systems</B> programming a language  bliss  is described  this language is designed so as to be especially suitable for use in writing production software <B>systems</B> for a specific machine  the pdp-10   compilers  <B>operating</B> <B>systems</B>  etc  prime design goals of the design of <B>systems</B> programs  a major feature which contributes to the realization of these goals is a mechanism
12 Q0 2036 41 0.18111807 Lucene_47
 <B>systems</B> is given  cacm july  1970 grant  c  a  time-sharing  command languages  pseudo-teletype  interaction  conditional job control  <B>operating</B> <B>systems</B> 3.80 3.81 4.29 4.39 ca700701 jb february 13  1978 9
12 Q0 3028 42 0.18111807 Lucene_47
  paging  virtual storage  extra codes  compilers  <B>operating</B> <B>systems</B>  ferranti  manchester mark i  atlasthe manchester mark i and atlas  a his torical perspective in 30 years of computer design at manchester university two <B>systems</B> stand out  the mark i  developed over the period 1946-49  and the atlas  1955-62   this paper places each computer in its his torical context and then describes
12 Q0 2080 43 0.17905 Lucene_47
the nucleus of a multiprogramming system this paper describes the philosophy and structure of a multiprogramming system that can be extended with a hierarchy of <B>operating</B> <B>systems</B> to suit diverse requirements of program scheduling and resource allocation  the system nucleus simulates an environment  <B>operating</B> <B>systems</B>  parallel processes  process concept  process communication  message buffering  process
12 Q0 2320 44 0.17905 Lucene_47
 <B>operating</B> <B>systems</B> but also within user programs  cacm july  1972 hansen  p  b  structured multiprogramming  programming languages  <B>operating</B> <B>systems</B>  concurrent processes  shared data  mutual exclusion
12 Q0 2482 45 0.17905 Lucene_47
 allocation  <B>operating</B> <B>systems</B>  multiprogramming  hierarchical <B>systems</B> 4.30 4.32 ca730704 jb january <B>operating</B> system  for constructing appropriate mixtures and suggests appropriate subsystems for the most
12 Q0 2867 46 0.17905 Lucene_47
modularization and hierarchy in a family of <B>operating</B> <B>systems</B> this paper describes the design philosophy used in the construction of a family of <B>operating</B> <B>systems</B>  it is shown that the concepts of module and level do not coincide in a hierarchy of functions  family members can share much software as a result of the implementation of run-time modules at the lowest system level  cacm may  1976
12 Q0 1728 47 0.17334013 Lucene_47
 storage  <B>operating</B> system simulation  <B>operating</B> <B>systems</B>  supervisor simulation  machine language are summarized from an empirical study directed at the measurement of program <B>operating</B> behavior in those multiprogramming <B>systems</B> in which programs are organized into fixed length pages  the data collected from allocated to executing programs  cacm july  1968 coffman  e  g  varian  l  c  paging <B>systems</B>  paging
12 Q0 2317 48 0.17334013 Lucene_47
 for some programming system functions  cacm july  1972 rosen  s  languages  <B>operating</B> <B>systems</B>  programmingprogramming <B>systems</B> and languages 1965-1975 in spite of impressive gains by pl i  fortran and cobol  in the <B>operating</B> system area all major computer manufacturers set out to produce very ambitious multiprogramming <B>systems</B>  and they all ran into similar problems  a number of university projects
12 Q0 1324 49 0.17075616 Lucene_47
answering english questions by computer  a survey fifteen experimental english language question-answering <B>systems</B> which are programmed and <B>operating</B> are described and reviewed  the <B>systems</B> range from a conversation machine to programs which make sentences about pictures and <B>systems</B> which translate from english into logical calculi  <B>systems</B> are classified as list-structured data-based  graphic
12 Q0 1951 50 0.17075616 Lucene_47
 distribution by the exponential distribution are discussed for the <B>systems</B> studied  cacm december 1970 fuchs  e  jackson  p  e  computer communications  time-sharing  <B>operating</B> <B>systems</B>  optimization models <B>systems</B>  and the model is shown to be robust  that is each of the variables of the model has the same distribution independent of which of the four <B>systems</B> is being examined  it is shown
12 Q0 1752 51 0.160763 Lucene_47
  time-sharing  <B>operating</B> <B>systems</B>  resource management  task scheduling  paging  system simulationresource management for a medium scale time-sharing <B>operating</B> system task scheduling and resource balancing for a medium size virtual memory paging machine are discussed in relation to a combined batch processing and time-sharing environment  a synopsis is given of the task scheduling and paging
12 Q0 2297 52 0.160763 Lucene_47
  1972 oden  p  h  shedler  g  s  paging machines  demand paging  <B>operating</B> <B>systems</B> studies  queuinga model of memory contention in a paging machine this paper is concerned with certain aspects of contention for main memory resources in a multiprogrammed computer system <B>operating</B> under demand paging  in the model presented  the number of page-frames of main memory allocated to a problem program
12 Q0 2622 53 0.160763 Lucene_47
a user authentication scheme not requiring secrecy in the computer in many computer <B>operating</B> <B>systems</B> a user authenticates himself by entering a secret password known solely to himself and the system  the system compares this password with one recorded in a password table which is available to only are discussed  cacm august  1974 evans  a  jr  kantrowitz  w  weiss  e  <B>operating</B> system security
12 Q0 1517 54 0.15825933 Lucene_47
methods for analyzing data from computer simulation experiments this paper addresses itself to the problem of analyzing data generated by computer simulations of economic <B>systems</B>  we first turn to a hypothetical firm  whose operation is represented by single-channel  multistation queueing model <B>operating</B> plans  where each plan incorporates a certain marketing strategy  an allocation of productive
12 Q0 2535 55 0.15825933 Lucene_47
 communications  time-sharing  multiplexing  scheduling algorithms  <B>operating</B> <B>systems</B> 3.80 3.81 6.20 ca730304
12 Q0 2542 56 0.15825933 Lucene_47
  <B>operating</B> system development  language processing software evaluation  compilers  system programming  supervisory <B>systems</B>  debugging  program maintenance  modeling  system integration  simulation 4.0
12 Q0 3002 57 0.15825933 Lucene_47
 model and a mixed integer programming model  is a very general one  several types of file <B>systems</B> may in the optimization of library routines  storage at a large scale <B>operating</B> system  cacm january  1977
12 Q0 3050 58 0.15825933 Lucene_47
<B>systems</B> design education  a gaming approach one of the problems facing managers of computer installations is the problem of configuring the computer system to meet the demands made by the mix of jobs that the computer center must service  this paper presents a management game that allows the player choices and a simulated run of the center <B>operating</B> under his choices  cacm november  1978 lyons  n
12 Q0 696 59 0.15825933 Lucene_47
 over 200 remote input stations which collect and transmit company <B>operating</B> data to a central data processing center  two rca 301 edp <B>systems</B> are used to record and control the flow of data transmitted
12 Q0 2358 60 0.14481157 Lucene_47
the multics virtual memory  concepts and design as experience with use of on-line <B>operating</B> <B>systems</B> contemporary <B>systems</B> permit some degree of sharing  usually  sharing is accomplished by allowing  segmented main memory  since the size of main memory on contemporary <B>systems</B> is rather limited  c  t  daley  r  c  <B>operating</B> system  multics  virtual memory  segmentation  information sharing
12 Q0 2632 61 0.14022861 Lucene_47
hydra  the kernel of a multiprocessor <B>operating</B> system this paper describes the design philosophy of hydra-the kernel of an <B>operating</B> system for c mmp  the carnegie-mellon multi-mini-processor <B>systems</B>  cacm june  1974 wulf  w  cohen  e  corwin  w  jones  a  levin  r  pierson  c  pollack  f  <B>operating</B> system  kernel  nucleus  protection  security 4.3 6.2 ca740614 jb january 17  1978 2 40 pm
12 Q0 1892 62 0.13906074 Lucene_47
  markovian computer models  scheduling strategies  <B>operating</B> <B>systems</B>  memory management 2.44 4.32 4.39degree of multiprogramming in page-on-demand <B>systems</B> a simple stochastic model is described which offers a base for understanding the relationship between the number of programs permitted to share in page-on-demand  multiprogrammed  time-shared computer <B>systems</B>  the model preserves  as a key
12 Q0 1647 63 0.12660746 Lucene_47
watfor-the university of waterloo fortran iv compiler watfor is an in-core  load-and-go compiler which has been implemented within the ibm 7040 44 <B>operating</B> system  fortran iv was selected as the source language in order to achieve maximum language compatibility with other available compiling <B>systems</B>  in particular the ibm 7040 44 fortran iv system  the principal advantage of the watfor compiler
12 Q0 1810 64 0.12660746 Lucene_47
 under the conditions tested  even though it is <B>operating</B> across a memory-to-storage interface become a normal part of most computing <B>systems</B>  cacm december  1969 sayre  d  paging  automatic
12 Q0 2374 65 0.12660746 Lucene_47
a study of storage partitioning using a mathematical model of locality both fixed and dynamic storage partitioning procedures are examined for use in multiprogramming <B>systems</B>  the storage requirement of programs is modeled as a stationary gaussian process  experiments justifying this model in storage utilization and <B>operating</B> efficiency over fixed partitioning  cacm march  1972 coffman
12 Q0 2582 66 0.12660746 Lucene_47
improving locality by critical working sets a new approach to program locality improvement via restructuring is described  the method is particularly suited to those <B>systems</B> where primary memory is managed according to a working set strategy  it is based on the concept of critical working set to restructure an interactive text editor and the file system module of an <B>operating</B> system have shown its
12 Q0 2849 67 0.12660746 Lucene_47
ethernet  distributed packet switching for local computer networks ethernet is a branching broadcast communication system for carrying digital data packets among locally distributed computing stations  the packet transport mechanism provided by ethernet has been used to build <B>systems</B> which can and implementation are described  based on experience with an <B>operating</B> ethernet of 100 nodes along
12 Q0 2972 68 0.12660746 Lucene_47
 programs  such as <B>operating</B> <B>systems</B>  cacm april  1977 robinson  l  levitt  k  n  hierarchical structure
12 Q0 3105 69 0.12660746 Lucene_47
a language extension for expressing constraints on data access controlled sharing of information is needed and desirable for many applications and is supported in <B>operating</B> <B>systems</B> by access control mechanisms  this paper shows how to extend programming languages to provide controlled sharing  the extension permits expression of access constraints on shared data  access constraints can apply both
12 Q0 2625 70 0.119194925 Lucene_47
  shared addresses  information sharing  <B>operating</B> <B>systems</B>  computer utility  segmentation  tagged  these inadequacies are traced to the lack of an efficient absolute address for objects in these <B>systems</B>  the direct  a computer using capability-based addressing may be substantially superior to present <B>systems</B>
12 Q0 1751 71 0.11190625 Lucene_47
 against available equipment  cacm may  1968 denning  p  j  general <B>operating</B> system concepts  multiprocessing  multiprogramming  <B>operating</B> <B>systems</B>  program behavior  program models  resource allocationthe working set model for program behavior probably the most basic reason behind the absence of a general treatment of resource allocation in modern computer <B>systems</B> is an adequate model for program
12 Q0 1854 72 0.110781536 Lucene_47
  it is intended to serve as a basis for the construction of <B>operating</B> <B>systems</B>  which are prime examples
12 Q0 1877 73 0.110781536 Lucene_47
prevention of system deadlocks a well-known problem in the design of <B>operating</B> <B>systems</B> is the selection of a resource allocation policy that will prevent deadlock  deadlock is the situation in which resources have been allocated to various tasks in such a way that none of the tasks can continue  the various published solutions have been somewhat restrictive  either they do not handle the problem
12 Q0 2095 74 0.110781536 Lucene_47
measurements of segment size distributions of segment sizes measured under routine <B>operating</B> con ditions on a computer system which utilizes variable sized segments  the burroughs b5500  are discussed  the most striking feature of the measurements is the large number of small segments-about 60 system  they should be relevant to the design of new computer <B>systems</B>  especially with respect
12 Q0 2342 75 0.110781536 Lucene_47
  interference  mutual exclusion  <B>operating</B> <B>systems</B>  parallel processes 4.0 4.10 4.30 4.32 4.42 5.24
12 Q0 3006 76 0.110781536 Lucene_47
anomalies with variable partition paging algorithms five types of anomalous behavior which may occur in paged virtual memory <B>operating</B> <B>systems</B> a redefined  one type of anomaly  for example  concerns the fact that  with certain reference strings and paging algorithms  an increase in mean memory allocation may result in an increase in fault rate  two paging algorithms  are examined in terms
12 Q0 1755 77 0.10307345 Lucene_47
proceedings of the acm symposium on <B>operating</B> system principles cacm may  1968 acm special interest committee ca680501 jb february 23  1978 9 56 am 1755 5 1755 1755 5 1755 1755 5 1755
12 Q0 1472 78 0.10203751 Lucene_47
description of a high capacity  fast turnaround university computing center the <B>operating</B> system for the univac 1107 at case institute is reviewed  the system is of interest because of the low turnaround times achieved  the high throughput achieved and the lack of an <B>operating</B> staff  turnaround times below 5 minutes and job volume above 75,000 per quarter year one reported  cacm february  1966
12 Q0 1591 79 0.092191696 Lucene_47
 into an <B>operating</B> system of a large computer is described  the model transferred control to the <B>operating</B> teaching  the teaching system  abac-ii  was written to run under the <B>operating</B> system  ibsys  for the ibm student mode and programmer mode  during the latter  the full resources of the <B>operating</B> system by the <B>operating</B> system  a course could therefore include text material interleaved with programming
12 Q0 2357 80 0.08926423 Lucene_47
mux  a simple approach to on-line computing an on-line system <B>operating</B> as part of a normal batch system for the cdc 6600 computer is described  the system  which required one man-year for initial software implementation  although basically simple  provides the necessary elements to input  implementation effort  <B>operating</B> overhead  user reactions  remote terminals  <B>operating</B> system 3.79 3.89 4.39
12 Q0 2920 81 0.08926423 Lucene_47
  <B>operating</B> system  etc   of the  safe situations  which may be realized without endangering the smooth steps  a global approach to the phenomenon and its in terpretation as a game between the <B>operating</B> their properties  cacm october  1977 devillers  r  <B>operating</B> system  multiprogramming  time-sharing
12 Q0 1519 82 0.08746072 Lucene_47
george 3-a general purpose time sharing and <B>operating</B> system an <B>operating</B> system is described which will run on a wide variety of configurations of the i  1900  and can handle a large number of online console users while at the same time running several off line  background  jobs  the system is not oriented towards either mode and can be either a batch processing system  such as the atlas
12 Q0 1534 83 0.08746072 Lucene_47
dad  the c  <B>operating</B> system the design and implementation of the c  <B>operating</B> system  dad  is described in detail  this system is designed for the control data 3600 using a large drum backing store and is intended to allow the integration of a remote console  display  subsystem into a conventional job stack environment  the use of the drums  the buffering of input and output on slow peripherals
12 Q0 2283 84 0.08746072 Lucene_47
 that the algorithm <B>operating</B> with the triangular array is the most sensitive to image irregularities  it is concluded that the algorithm <B>operating</B> in conjunction with the hexagonal array has features which strike
12 Q0 2311 85 0.08637957 Lucene_47
  hardware <B>systems</B>  software <B>systems</B>  <B>systems</B> development process  functional <B>systems</B>  management <B>systems</B> 2.0 3.50 4.0 6.20 ca720717 jb january 30  1978 11 22 am 2311 5 2311 2311 5 2311 2311 5 2311
12 Q0 1069 86 0.082458764 Lucene_47
a method for comparing the internal <B>operating</B> speeds of computers cacm may  1964 raichelson  e  collins  g  ca640520 jb march 9  1978 11 35 pm 1069 5 1069 1069 5 1069 1069 5 1069 1653 5 1069 2989 5 1069 963 6 1069 1069 6 1069 1069 6 1069 1417 6 1069 2138 6 1069
12 Q0 2796 87 0.082458764 Lucene_47
monitors  an <B>operating</B> system structuring concept  corrigendum  cacm february  1975 hoare  c  a  r  ca750203 jb january 12  1978 8 45 am 2796 5 2796 2796 5 2796 2796 5 2796 2866 5 2796 2356 6 2796 2597 6 2796 2796 6 2796
12 Q0 1341 88 0.07726023 Lucene_47
levels of computer <B>systems</B> in building current computer <B>systems</B>  we tend to break them down into  levels  of control  command and communication  in using the system  we break our problems down on the usefulness of future <B>systems</B>  particularly with regard to such trends as time sharing  parallel programming  and  eventually  <B>systems</B> which learn  in this essay some of these questions are posed
12 Q0 1912 89 0.07726023 Lucene_47
simulation of outpatient appointment <B>systems</B> an experimental computer program is described which simulates appointment <B>systems</B> employed by outpatient departments of hospitals  both major kinds of appointment <B>systems</B>-individual and block-can be simulated  the purpose of the simulator is to enable the user to evaluate the effectiveness of alternative appointment <B>systems</B> in a given clinical
12 Q0 1264 90 0.072883934 Lucene_47
blnsys-a 1401 <B>operating</B> system with braille capabilities blnsys is an <B>operating</B> system designed for a 4k 1401 with common optional features and two attached tape drives  printed output of this system or of executing programs may be in either english or braille  even though this system was written for a small machine with minimal peripheral equipment  jobs may be batched  so that card handling
12 Q0 2536 91 0.072883934 Lucene_47
telecommunications using a front-end minicomputer the use of a front-end minicomputer to provide varied remote terminal access to a large scale computer is considered  the problems of embedding telecommunications i o within an <B>operating</B> system are discussed  and it is shown how the decentralization implementation  the effect of the main processor <B>operating</B> system  and an assessment of the advantages
12 Q0 1657 92 0.072151415 Lucene_47
implementation of the sharer2 time-sharing system a simple mechanism is described for the execution of part of a program with its own memory protection  this allows such a program to act as a suboperating system  an improved version of the sharer time-sharing system using this feature is described  cacm december  1968 harrison  m  c  <B>operating</B> system  memory protection  time-sharing
12 Q0 1735 93 0.072151415 Lucene_47
  1968 sutherland  i  e  computer scheduling  auction  time allocation  <B>operating</B> efficiency 2.40
12 Q0 698 94 0.072151415 Lucene_47
data-dial  two-way communication with computers from ordinary dial telephones an <B>operating</B> system is described which allows users to call up a remotely located computer from ordinary dial telephones  no special hardware or connections are required at the users  telephones  input to the computer is through the telephone dial output from the computer is in spoken form  results of a test
12 Q0 825 95 0.072151415 Lucene_47
pip  a photo-interpretive program for the analysis of spark-chamber data  an <B>operating</B> computer program that processes photographically recorded data is described  the input to the program consists of spark-chamber photographs on which tracks of high-energy particles are recorded  the program automatically scans  measures and performs the preliminary interpretation of these photographs
12 Q0 2219 96 0.071411386 Lucene_47
a policy-driven scheduler for a time-sharing system the service received by a process from a time-sharing <B>operating</B> system can be characterized by a resource count sum w i r ij   where r ij  the algorithm has been implemented in a general purpose <B>operating</B> system  and it has provided  1971 bernstein  a  j  sharp  j  c  scheduler  time-sharing  <B>operating</B> system  resource allocation
12 Q0 2868 97 0.071411386 Lucene_47
reflections on an <B>operating</B> system design the main features of a general purpose multiaccess <B>operating</B> system developed for the cdc 6400 at berkeley are presented  and its good and bad points are discussed as they appear in retrospect  distinctive features of the design were the use of capabilities  b  w  sturgis  h  e  <B>operating</B> system  protection  capabilities  layering domains  memory
12 Q0 1959 98 0.06758863 Lucene_47
an interrupt based organization for management information <B>systems</B> a programming structure shared data base <B>systems</B>  the bases for this organization are a generalized interrupt structure the new organization which is proposed for management information <B>systems</B>  cacm december  1970 morgan  h  l  management information <B>systems</B>  integrated data processing  supervisors  interrupts monitoring
12 Q0 2812 99 0.06758863 Lucene_47
computer-aided analysis and design of information <B>systems</B> this paper describes the use of computer  the statement of requirements was written in ads  accurately defined <B>systems</B>  and analyzed to the form necessary for use by the soda  <B>systems</B> optimization and design algorithm  program  information <B>systems</B>  logical system design  problem statement language  problem statement analyzer
12 Q0 2985 100 0.06758863 Lucene_47
effects of chargeout on user manager attitudes the relationship of in ternal pricing <B>systems</B> for computer services  chargeout <B>systems</B>  and user management attitudes about their computer-based information <B>systems</B> is investigated  evidence is provided that the relationship conforms to a general also indicate that the chargeout <B>systems</B> characteristic of advanced edp stage environments
*************Query 13*************************

13 Q0 1886 1 0.5050119 Lucene_47
generation of optimal <B>code</B> for expressions via factorization given a set of expressions which are to be compiled  methods are presented for increasing the <B>efficiency</B> of the object <B>code</B> produced by first factoring the expressions  i e  finding a set of subexpressions each of which occurs in two  1969 breuer  m  a  factorization algorithms  <B>code</B> <B>optimization</B>  sequencing of operations  detection
13 Q0 1947 2 0.46956262 Lucene_47
object <B>code</B> <B>optimization</B> methods of analyzing the control flow and data flow of programs during compilation are applied to transforming the program to improve object time <B>efficiency</B>  dominance flow analysis  dominance  <B>efficiency</B>  fortran  graph theory  loop structure  machine instructions  object <B>code</B>  <B>optimization</B>  redundancy elimination  register assignment  system 360 4.12 5.24 5.32
13 Q0 2897 3 0.44237217 Lucene_47
 of the concatenate statement  the <B>code</B> produced by a compiler using the expansion-<B>optimization</B> strategya case study of a new <B>code</B> generation technique for compilers recent developments in optimizing source <B>code</B> into lower level <B>code</B> by a sequence of steps  each step expands higher level statements into blocks of lower level <B>code</B> and then performs optimizations on the result  each statement has only
13 Q0 1795 4 0.42876518 Lucene_47
optimal <B>code</B> for serial and parallel computation cacm december  1969 fateman  r  j  <B>code</B> <B>optimization</B>  sequencing of operations  detection of common subexpressions 4.12 ca691217 jb february 15  1978 1 59 pm 1795 5 1795 1795 5 1795 1795 5 1795
13 Q0 2748 5 0.42711475 Lucene_47
indirect threaded <B>code</B> an efficient arrangement for interpretive <B>code</B> is described  it is related to bell s notion of threaded <B>code</B> but requires less <B>space</B> and is more amenable to machine independent implementations  cacm june  1975 dewar  r  b  k  threaded <B>code</B>  snobol4  interpretors  <B>code</B> generation 4.12 4.13 ca750605 jb january 9  1978 1 11 pm 2748 4 2748 3144 4 2748 2491 5 2748 2748 5 2748
13 Q0 2944 6 0.41503868 Lucene_47
 when the <B>code</B> is executed and those that can be grouped to achieve improved <B>efficiency</B>  cacm july  1977 barth  j  m  garbage collection  global flow analysis  list processing  <B>optimization</B>  reference
13 Q0 2495 7 0.38468048 Lucene_47
adapting optimal <B>code</B> generation for arithmetic expressions to the instruction sets available on present-day computers cacm june  1973 stockhausen  p  f  arithmetic expressions  <B>code</B> generation  compilers  object-<B>code</B> <B>optimization</B>  register assignment  trees 4.12 5.24 5.32 ca730605 jb january 23  1978 2 24 pm 2495 5 2495 2495 5 2495 2495 5 2495
13 Q0 2491 8 0.36061803 Lucene_47
threaded <B>code</B> the concept of  threaded <B>code</B>  is presented as an alternative to machine language <B>code</B>  hardware and software realizations of it are given  in software it is realized as interpretive <B>code</B> not needing an interpreter  extensions and optimizations are mentioned  cacm june  1973 bell  j  r  interpreter  machine <B>code</B>  time tradeoff  <B>space</B> tradeoff  compiled <B>code</B>  subroutine calls
13 Q0 2559 9 0.3559176 Lucene_47
the reallocation of hash-coded tables when the <B>space</B> allocation for a hash-coded table is altered  the table entries must be rescattered over the new <B>space</B>  a technique for accomplishing  or to change from one hashing method to another  the <B>efficiency</B> of the technique is discussed and theoretical statistics are given  cacm january  1973 bays  c  reallocation  dynamic storage  hash <B>code</B>
13 Q0 2680 10 0.34119862 Lucene_47
  disk analysis  disk <B>optimization</B>  disk files file systems  file scheduling  <B>space</B> allocation  memoryoptimal <B>space</B> allocation on disk storage devices when the amount of <B>space</B> required for file storage exceeds the amount which can be kept on-line  decisions must be made as to which files of mounts thus decreases turnaround time  an <B>optimization</B> model for the assignment of files to disk
13 Q0 2904 11 0.3097438 Lucene_47
 well into an integrated package of local <B>optimization</B> algorithms  cacm november  1977 cocke  j  compilers  <B>optimization</B> of compiled <B>code</B>  program analysis  operator strength reduction  test replacement
13 Q0 3171 12 0.2650668 Lucene_47
line numbers made cheap a technique is described for run-time line number administration to be used for implementations of high level languages  under suitable circumstances  this method requires absolutely no overhead  in either time or <B>space</B>  during execution of the program  cacm october  1979 klint  p  line number administration  diagnostic messages  abstract machine <B>code</B> 4.12 4.13 4.20 4.42
13 Q0 1195 13 0.26030082 Lucene_47
uplifts-university of pittsburgh linear file tandem system a series of computer programs has been developed and is now operational for processing the national aeronautics and <B>space</B> administration data  and format the output for <B>optimization</B> of processing on the ibm 7090 system  the programs by the national aeronautics and <B>space</B> administration  cacm september  1965 canter  j  d  donaghey  c
13 Q0 2253 14 0.25518507 Lucene_47
 calculi described by the authors in a previous paper  this scheme attempts program <B>optimization</B> by transforming the original algorithm rather than the machine <B>code</B>  the goal is to automatically generate <B>code</B> for handling the tedious address calculations necessitated by complicated data structures <B>optimization</B>  range operations  symbolic manipulation  syntactic analysis  well-formed expressions
13 Q0 3080 15 0.2500293 Lucene_47
 use of the system is as a post <B>optimization</B> step in <B>code</B> generation  the low level language programs of program and stack sizes  cacm july  1978 samet  h  compilers  correctness  <B>code</B> <B>optimization</B>  debuggingproving the correctness of heuristically optimized <B>code</B> a system for proving that programs written of errors in the low level language programs  the examples demonstrate that <B>optimization</B> of the genre
13 Q0 1651 16 0.23816876 Lucene_47
  use derives not at all from inherent limitations in the <B>code</B> itself  but from an <B>efficiency</B>an interpretive input routine for linear programming in this descriptive article an input <B>code</B> is presented which greatly simplifies data input to any linear programming solution routine handling than the input <B>code</B> described  from a user s standpoint  input appears almost exactly
13 Q0 2537 17 0.22746575 Lucene_47
  minimum <B>space</B>  text storage  <B>optimization</B>  dynamic programming 3.73 4.10 5.41 ca730302 jb january 24common phrases and minimum-<B>space</B> text storage a method for saving storage <B>space</B> for text strings  such as compiler diagnostic messages  is described  the method relies on hand selection of a set  the storage technique gives rise to a mathematical <B>optimization</B> problem  determine how each message
13 Q0 1564 18 0.21438259 Lucene_47
description of basic algorithm in detab 65 preprocessor the basic algorithm for the conversion of decision tables into cobol <B>code</B> is contained in the generator portion of the detab 65 preprocessor storage is saved by using queueing techniques and extensive indexing and also by outputting the <B>code</B> as it is generated  a line at a time  the only <B>optimization</B> attempted is the elimination of obviously
13 Q0 2701 19 0.21438259 Lucene_47
 are given of <B>code</B> improvement problems which can be solved using the algorithm  cacm december  1975 graham  s  l  wegman  m  global flow analysis  data flow  <B>code</B> <B>optimization</B>  common subexpression
13 Q0 2033 20 0.21250334 Lucene_47
<B>space</B> time trade-offs in hash coding with allowable errors in this paper trade-offs among certain of the hash area  <B>space</B>   the time required to identify a message as a nonmember of the given set of <B>space</B> required to contain the hash-coded information from that associated with conventional methods  the reduction in <B>space</B> is accomplished by exploiting the possibility that a small fraction
13 Q0 2929 21 0.20204353 Lucene_47
an analysis of inline substitution for a structured programming language an <B>optimization</B> technique known as inline substitution is analyzed  the <B>optimization</B> consists of replacing a procedure in the size of compiled <B>code</B> and a small savings in execution time  other conclusions based  open compilation  program <B>optimization</B>  compilers  structured programming languages  run-time
13 Q0 3005 22 0.19960627 Lucene_47
 is presented  which can reduce program size by a factor of 3  unlike a huffman <B>code</B>  which utilizes variable length fields  this method uses only fixed length  1-byte  op <B>code</B> and address fields  the most is minimized  and the machine is efficient with respect to both <B>space</B> and time  cacm march  1978
13 Q0 1901 23 0.198432 Lucene_47
dynamic <B>space</B>-sharing in computer systems a formalization of relationships between <B>space</B>-shading program behavior  and processor <B>efficiency</B> in computer systems is presented  concepts of value and cost of <B>space</B> allocation per task are defined and then value and cost are combined to develop a single to the investigation of the problems of <B>space</B>-sharing and to demonstrate the method on sample problems
13 Q0 2433 24 0.1804431 Lucene_47
 allocation rather than <B>code</B> structuring is the crucial illiac <B>optimization</B> problem  a satisfactory
13 Q0 2858 25 0.1804431 Lucene_47
  in which case the total <B>code</B> length is minimized  or minimizing the assigned address of a specified point of <B>optimization</B> criteria  cacm june  1976 frieder  g  saal  h  j  variable length addressing  assembler  paging
13 Q0 3054 26 0.17862955 Lucene_47
 of algorithms  <B>code</B> <B>optimization</B>  sorting 4.0 4.6 5.25 5.31 5.5 ca781007 dh january 29  1979 5 40 pmimplementing quicksort programs this paper is a practical study of how to implement the quicksort sorting algorithm and its best variants on real computers  including how to apply various <B>code</B> <B>optimization</B> techniques  a detailed implementation combining the most effective improvements to quicksort
13 Q0 2716 27 0.17843032 Lucene_47
 and <B>space</B> utilization by   1  performing global query <B>optimization</B>   2  exploiting disjoint  p  relational database  database <B>optimization</B>  inverted file  automatic programming  query
13 Q0 1807 28 0.17699645 Lucene_47
<B>optimization</B> of expressions in fortran a method of optimizing the computation of arithmetic and indexing expressions of a fortran program is presented  the method is based on a linear analysis excellent object <B>code</B> without significantly reducing the compilation speed  cacm december  1969 busam  v  a  england  d  e  fortran  <B>optimization</B>  expressions  compilers  compilation  subscripts
13 Q0 2423 29 0.17150608 Lucene_47
 to a  possibly empty   <B>code</B> generator  realizable as an assembly language  fortran or algol  subroutine memory of which 140 words are parsing table entries and 82 words are links to <B>code</B> generators  cacm  syntactic analysis  normal-form grammars  pushdown automata  translation grammars  translator <B>optimization</B>
13 Q0 2464 30 0.1706172 Lucene_47
the complex method for constrained <B>optimization</B>  e4   algorithm a454  cacm august  1973 richardson  j  a  kuester  j  l  <B>optimization</B>  constrained <B>optimization</B>  box s algorithm 5.41 ca730810 jb january 23  1978 10 34 am 2464 5 2464 2464 5 2464 2464 5 2464
13 Q0 1235 31 0.16566676 Lucene_47
a stochastic approach to the grammatical coding of english a computer program is described which will assign each word in an english text to its form class or part of speech  the program operates at relatively high speed in only a limited storage <B>space</B>  about half of the word-events in a corpus words  some suffix tests and logical-decision rules are employed to <B>code</B> additional words  finally
13 Q0 2722 32 0.14578834 Lucene_47
multidimensional binary search trees used for associative searching this paper develops the multidimensional binary search tree  or k-d tree  where k is the dimensionality of the search <B>space</B>  as a data structure for storage of information to be retrieved by associative searches  the k-d tree  log n   and <B>optimization</B>  guarantees logarithmic performance of searches   o  n log n   search
13 Q0 2374 33 0.14398311 Lucene_47
 in storage utilization and operating <B>efficiency</B> over fixed partitioning  cacm march  1972 coffman jr   e  g  ryan jr   t  a  storage partitioning  memory management  dynamic storage allocation  <B>space</B>
13 Q0 2524 34 0.14398311 Lucene_47
some approaches to best-match file searching the problem of searching the set of keys in a file to find a key which is closest to a given query key is discussed  after  closest   in terms of a metric on the the key <B>space</B>  is suitably defined  three file structures are presented together by metrics and by graph-theoretic concepts  some empirical results are presented which compare the <B>efficiency</B>
13 Q0 3083 35 0.14254925 Lucene_47
 overflow items in the table  the <B>efficiency</B> of the method is derived and a tradeoff analysis is given  cacm july  1978 halatsis  c  philokyprou  g  hash <B>code</B>  scatter storage  open addressing  chaining
13 Q0 1542 36 0.1325334 Lucene_47
 <B>space</B> required and compiler and interpreter performance obtained  the role of microprogramming is stressed  which opens a new dimension in the processing of interpretive <B>code</B>  the structure
13 Q0 1362 37 0.12955411 Lucene_47
<B>code</B> extension in ascii   an asa tutorial  the american standard <B>code</B> for information interchange  ascii  contains a number of control characters associated with the principle of <B>code</B> extension of the characters in the <B>code</B>  the manner of use of these characters has not previously been completely described  this paper presents a set of mutually consistent philosophies regarding <B>code</B> extension
13 Q0 48 38 0.12955411 Lucene_47
shift-register <B>code</B> for indexing applications in this communication the use of a shift-register <B>code</B> with n   10 is described for calling 64 wireless telemetering stations in a fixed cyclical order  a high degree of redundancy is used  permitting a single-error correcting <B>code</B>   minimum-distance-three  <B>code</B>  with 64 10-bit <B>code</B> words to be employed as the station identification <B>code</B>  embedding
13 Q0 1655 39 0.12825201 Lucene_47
<B>code</B> extension procedures for information interchange   proposed usa standard  cacm december  1968 standard <B>code</B>  <B>code</B>  information interchange  characters  shift out  shift in  escape  data link escape  control functions  standard procedures  <B>code</B> extension  <B>code</B> table  bit pattern 1.0 2.0 2.43 3.20 3.24 3.50 3.51 3.52 3.53 3.54 3.55 3.56 3.57 3.70 3.71 3.72 3.73  3.74  3.75  3.80  3.81  3.82
13 Q0 3053 40 0.12631017 Lucene_47
  <B>optimization</B>  although packing costs remain linear-o n -with table size n  the techniques are primarily suited  op-<B>code</B> tables spelling dictionaries  access arrays  introduction of frequency weights further
13 Q0 2734 41 0.12598522 Lucene_47
 of the request population had little effect on allocation <B>efficiency</B>  for exponential  sufficient contiguous <B>space</B> is thereby more likely to be available for relatively large requests
13 Q0 2856 42 0.12598522 Lucene_47
 condition  are created  an optimal program  with respect to average execution time or storage <B>space</B>  the <B>efficiency</B> of creating an optimal program is increased substantially  permitting generation of optimal
13 Q0 2711 43 0.123056814 Lucene_47
a vector <B>space</B> model for automatic indexing in a document retrieval  or other pattern matching  search requests   it appears that the best indexing  property  <B>space</B> is one where each entity lies be expressible as a function of the density of the object <B>space</B>  in particular  retrieval performance may correlate inversely with <B>space</B> density  an approach based on <B>space</B> density computations is used
13 Q0 2835 44 0.11820707 Lucene_47
recursion analysis for compiler <B>optimization</B> a relatively simple method for the detection of recursive use of procedures is presented for use in compiler <B>optimization</B>  implementation considerations are discussed  and a modification of the algorithm is given to further improve <B>optimization</B>  k  g  recursion  compiler <B>optimization</B> 4.12 ca760904 jb january 4  1978 9 36 am 2835 5 2835 2835 5
13 Q0 1756 45 0.11353553 Lucene_47
hollerith punched card <B>code</B>   proposed usa standard  cacm april  1968 usa standard  card <B>code</B>  punched card  punched card <B>code</B>  hole-patterns  hole-patterns assignment  punched card systems 1.4 2.0 2.2 2.43 2.9 3.15 3.24 3.50 3.57 3.7 3.80 3.81 3.82 4.11 4.12 ca680414 jb february 23  1978 10 14 am 1756 5 1756 1756 5 1756 1756 5 1756
13 Q0 1652 46 0.108392745 Lucene_47
a <B>code</B> for non-numeric information processing applications in online systems a <B>code</B> has been of the information channel linking the system and the system user  the <B>code</B> has direct application to problems  this <B>code</B>  called ipc  information processing <B>code</B>   is an 8-bit <B>code</B> set constructed so that 7  6  5 and 4-bit subsets can be easily derived from the basic set  the <B>code</B> set is organized so
13 Q0 1223 47 0.107191294 Lucene_47
high speed compilation of efficient object <B>code</B> a three-pass compiler with the following properties is briefly described  the last two passes scan an intermediate language produced by the preceding recognition  <B>optimization</B> such as the effective use of index registers  although as important  is not discussed since the object <B>code</B> which would be most efficient is highly machine dependent
13 Q0 1234 48 0.10691193 Lucene_47
 the generation of <B>code</B> for expressions which minimizes stores  fetches and stack-pointer motion <B>efficiency</B>  cacm july  1965 kanner  h  kosinski  p  robinson  c  l  ca650701 jb march 6  1978 9 29 pm 254
13 Q0 2745 49 0.10151668 Lucene_47
a linear <B>space</B> algorithm for computing maximal common subsequences the problem of finding a longest common subsequence of two strings has been solved in quadratic time and <B>space</B>  an algorithm is presented which will solve this problem in quadratic time and in linear <B>space</B>  cacm june  1975 hirschberg  d  s  subsequence  longest common subsequence  string correction  editing 3.63 3.73 3.79 4.22
13 Q0 2078 50 0.10047546 Lucene_47
representations for <B>space</B> planning problems involving the arrangement of objects in two- or three-<B>space</B> where the objective function primarily consists of derivatives of the distance between objects or their arrangement are called <B>space</B> planning problems  the representational requirements structures that allow automated <B>space</B> planning are described and compared  cacm april  1970 eastman
13 Q0 2892 51 0.10002524 Lucene_47
 of protocol hierarchy and the characteristics of each level are summarized  then the line <B>efficiency</B> for various models of system use is studied  some measurements of line <B>efficiency</B> for the arpanet  performance evaluation and <B>efficiency</B>  resource sharing 3.81 4.39 4.6 4.9 ca760101 jb january 5  1978 10 49
13 Q0 2611 52 0.098505884 Lucene_47
the complex method for constrained <B>optimization</B>  algorithm r454  cacm august  1974 shere  k  d  ca740813 jb january 17  1978 9 28 am 2611 5 2611 2611 5 2611 2611 5 2611
13 Q0 2964 53 0.098505884 Lucene_47
an approach to optimal design of storage parameters in databases cacm may  1977 milman  y  database organization  storage parameter <B>optimization</B>  resident  overflow storage 3.73 3.74 ca770508 jb december 29  1977 1 48 am 2964 5 2964 2964 5 2964 2964 5 2964
13 Q0 1064 54 0.09832466 Lucene_47
perforated tape <B>code</B> for information interchange  proposed american standard  cacm june  1964 ca640603 jb march 9  1978 9 46 pm 1064 5 1064 1064 5 1064 1064 5 1064
13 Q0 1289 55 0.09832466 Lucene_47
proposed revised american standard <B>code</B> for information interchange cacm april  1965 ca650402 jb march 7  1978 4 03 pm 1289 5 1289 1289 5 1289 1289 5 1289
13 Q0 195 56 0.09832466 Lucene_47
what is a <B>code</B>  cacm may  1960 patterson  g  w  ca600502 jb march 22  1978 1 33 pm 195 5 195 195 5 195 195 5 195
13 Q0 3066 57 0.09832466 Lucene_47
a controlled experiment in program testing and <B>code</B> walkthroughs inspections this paper describes an experiment in program testing  employing 59 highly experienced data processing professionals using seven methods to test a small pl i program  the results show that the popular <B>code</B> walk through  debugging  testing  <B>code</B> walkthroughs  <B>code</B> inspections  personnel selection 4.6 ca780906 dh february 5
13 Q0 31 58 0.09832466 Lucene_47
ibm 704 <B>code</B>-nundrums cacm march  1958 grumette  m  ca580301 jb march 22  1978 9 21 pm 31 5 31 31 5 31 31 5 31
13 Q0 1231 59 0.09751585 Lucene_47
peephole <B>optimization</B> redundant instructions may be discarded during the final stage of compilation by using a simple optimizing technique called peephole <B>optimization</B>  the method is described and examplesare given  cacm july  1965 mckeeman  w  m  ca650704 jb march 6  1978 9 05 pm 1160 5 1231 1231 5 1231 1231 5 1231 1231 5 1231 2034 5 1231 984 6 1231 1231 6 1231 1231 6 1231 1565 6 1231 1852 6
13 Q0 2836 60 0.09751585 Lucene_47
 probabilistic parsing or combinatorial <B>optimization</B>  cacm september  1976 loui  m  c  derivation tree  parse tree  probabilistic grammar  structural ambiguity  combinatorial <B>optimization</B> 5.23 5.49
13 Q0 117 61 0.09624934 Lucene_47
an estimation of the relative <B>efficiency</B> of two internal sorting methods cacm november  1960 nagler  h  ca601118 jb march 20  1978 6 51 pm 117 5 117 117 5 117 117 5 117
13 Q0 149 62 0.09624934 Lucene_47
a decision rule for improved <B>efficiency</B> in solving linear programming problems with the simplex algorithm cacm september  1960 dickson  j  c  frederick  f  p  ca600908 jb march 20  1978 8 43 pm 149 5 149 149 5 149 149 5 149
13 Q0 2508 63 0.09624934 Lucene_47
increasing the <B>efficiency</B> of quicksort  algorithm r402  cacm may  1973 wheeler  r  e  sorting  quicksort 3.73 4.49 5.31 5.6 ca730512 jb january 23  1978 4 35 pm 2508 5 2508 2508 5 2508 2508 5 2508
13 Q0 1465 64 0.09528198 Lucene_47
program translation viewed as a general data processing problem <B>efficiency</B> dictates that the overall effectiveness of a compiler be increased by all means available  for a compiler to have a substantial useful life it needs a clear logical structure  reliability and sound data processing techniques  a compiler must be based on fixed conventions to preserve <B>efficiency</B> and reliability  empty
13 Q0 2533 65 0.09270137 Lucene_47
gray <B>code</B> and the  - sign sequence when  -f   -f  -f     -f x        is ordered cacm march  1973 salzer  h  e  gray <B>code</B>  sign sequences  ordering  positive monotonic functions  binary system  galois sum 5.10 ca730306 jb january 24  1978 10 35 am 2533 4 2533 2394 5 2533 2533 5 2533 2533 5 2533 2533 5 2533
13 Q0 2344 66 0.08810634 Lucene_47
on the <B>optimization</B> of performance of time-sharing systems by simulation a simulation model  including the scheduling itself  require <B>optimization</B>  and which of the parameters not normally <B>optimization</B> whereas other parameters controllable by the scheduling algorithm affect system performance in a predictable manner and would not benefit from <B>optimization</B>  features not normally under
13 Q0 2389 67 0.087014295 Lucene_47
preliminary report on a system for general <B>space</B> planning a computer language and a set of programs within that language are described which allow the formulating and solving of a class of <B>space</B> planning problems  the language is an extension of algol and includes means to represent spaces  automated design  architecture  heuristic programs  <B>space</B> planning 3.20 3.40 3.64 3.66 ca720202 jb january
13 Q0 3129 68 0.08372955 Lucene_47
 reside on a direct-access storage device in which storage <B>space</B> is limited  records are added  generates a demand vector which designates the <B>space</B> required in each file for record addition  whenever one file runs out of <B>space</B>  the system must be reorganized  this paper considers several criteria for best allocating storage <B>space</B> to the files  cacm february  1979 mendelson  h  pliskin  j
13 Q0 1369 69 0.08288802 Lucene_47
half rotations in n-dimensional euclidean <B>space</B> an iterative procedure is described for determining half rotations in n-dimensional euclidean <B>space</B>  the method is a variant of the cyclic jacobi procedure and utilizers elementary plane rotations to obtain the half rotation matrix  numerical examples are given  cacm september  1966 mccamon  r  b  ca660910 jb march 2  1978 4 32 pm 1369 5 1369 1369 5
13 Q0 1065 70 0.08193721 Lucene_47
bit sequencing of the american standard <B>code</B> for information interchange  ascii  in serial-by-bit data transmission  proposed american standard  cacm june  1964 ca640602 jb march 9  1978 9 47 pm 1065 5 1065 1065 5 1065 1065 5 1065
13 Q0 1066 71 0.08193721 Lucene_47
growing applications of linear programming use of linear programming models has grown so extensively in recent years that the whole concept for organizing a computer <B>code</B> has undergone a radical  to a computer <B>code</B>  an advanced <B>code</B> must cope with such a variety of situations that the respective algorithm  an efficient and reliable <B>code</B> for solving the above-mentioned algorithm  and flexible means
13 Q0 1187 72 0.08193721 Lucene_47
note on an ascii-octal <B>code</B> table  standards  cacm october  1965 crosby  w  s  ca651008 jb march 6  1978 6 42 pm 1187 5 1187 1187 5 1187 1187 5 1187
13 Q0 1204 73 0.08193721 Lucene_47
character structure and character parity sense for serial-by-bit data communication in the american standard <B>code</B> for information interchange  proposed american standard  cacm september  1965 ca650902 jb march 6  1978 7 41 pm 1204 5 1204 1204 5 1204 1204 5 1204
13 Q0 1232 74 0.08193721 Lucene_47
representation of the standard ecma 7-bit <B>code</B> in punched cards  ecma standard  cacm july  1965 ca650703 jb march 6  1978 9 06 pm 1232 5 1232 1232 5 1232 1232 5 1232
13 Q0 1275 75 0.08193721 Lucene_47
<B>code</B> structures for protection and manipulation of variable length items  corrigendum  cacm april  1965 ramamoorthy  c  v  ca650416 jb march 7  1978 3 31 pm 1275 5 1275 1275 5 1275 1275 5 1275
13 Q0 1414 76 0.08193721 Lucene_47
twelve-row punched-card <B>code</B> for information interchange   proposed american standard  cacm june  1966 ca660607 jb march 3  1978 8 39 am 1414 5 1414 1414 5 1414 1414 5 1414
13 Q0 230 77 0.08193721 Lucene_47
a proposal for character <B>code</B> compatibility cacm february  1960 bemer  r  w  ca600202 jb march 22  1978 2 25 pm 230 5 230 230 5 230 230 5 230 333 5 230 230 6 230
13 Q0 2586 78 0.08193721 Lucene_47
adapting optimal <B>code</B> generation for arithmetic expressions to the instruction sets available on present-day computers  errata  cacm october  1974 stockhausen  p  f  ca741012 jb january 16  1978 11 05 am 2586 5 2586 2586 5 2586 2586 5 2586
13 Q0 2834 79 0.08193721 Lucene_47
efficient generation of the binary reflected gray <B>code</B> and its applications algorithms are presented to generate the n-bit binary reflected gray <B>code</B> and codewords of fixed weight in that <B>code</B>  both algorithms are efficient in that the time required to generate the next element from the current one bitner  j  r  ehrlich  g  reingold  e  m  gray <B>code</B>  combinations  subsets  compositions  combinatorial
13 Q0 66 80 0.08193721 Lucene_47
a proposal for a generalized card <B>code</B> for 256 characters cacm september  1959 bemer  r  w  ca590903 jb march 22  1978 4 50 pm 66 5 66 66 5 66 66 5 66
13 Q0 1670 81 0.081113696 Lucene_47
correspondences of 8-bit and hollerith codes for computer environments  a usasi tutorial standard  cacm november  1968 usa standard  card <B>code</B>  punched card  punched card <B>code</B>  hole-patterns  hole-patterns assignment  punched card systems 1.1 1.4 2.0 2.12 2.43 2.44 3.10 3.20 3.30 3.31 3.42 3.50 3.56 3.70 3.72 3.73 3.74  3.80  3.81  4.0  4.1  4.2  4.20  4.40  5.0 ca681109 jb february 21  1978 2 33
13 Q0 1757 82 0.081113696 Lucene_47
data <B>code</B> for calendar date for machine-to-machine data interchange   proposed usa standard  cacm april  1968 usa standard  data <B>code</B>  calendar date  machine-to-machine data interchange  recording calendar date  data group identifier 2.0 2.11 2.19 2.3 2.40 2.43 2.49 3.50 3.52 3.53 3.55 3.56 3.59 3.70 3.71 3.73 3.74  3.79  3.81  4.1  4.9 ca680413 jb february 23  1978 10 18 am 1757 5 1757 1757 5
13 Q0 3173 83 0.081113696 Lucene_47
 location   2  a prestatement is a set of transactions corresponding to a line of <B>code</B>   3  chunks are frequently occurring configurations of prestatements corresponding to several lines of <B>code</B>  cacm
13 Q0 2133 84 0.07880471 Lucene_47
algorithm for the assignment problem  rectangular matrices   h   algorithm 415  cacm december  1971 bourgeois  f  lassalle  j  c  operations research  <B>optimization</B> theory  assignment problem  rectangular matrices 5.39 5.40 ca711210 jb february 2  1978 9 38 am 2133 4 2133 2133 4 2133 2134 4 2133 124 5 2133 2133 5 2133 2133 5 2133 2133 5 2133 2134 5 2133
13 Q0 693 85 0.07880471 Lucene_47
an extension of fibonaccian search to several variables a technique which uses fibonaccian search concepts has been developed to solve <B>optimization</B> problems involving unimodal functions of several variables  the technique has not been proven to be optimal in the sense that the one-dimensional fibonaccian search is  however  it is valuable for certain kinds of calculations  cacm october  1963
13 Q0 164 86 0.07699947 Lucene_47
a short study of notation <B>efficiency</B> cacm august  1960 smith jr   h  j  ca600802 jb march 20  1978 9 02 pm 205 4 164 210 4 164 214 4 164 1982 4 164 398 4 164 642 4 164 669 4 164 100 4 164 123 4 164 164 4 164 164 5 164 164 5 164 164 5 164 1 5 164
13 Q0 598 87 0.07699947 Lucene_47
the cobol librarian - a key to object program <B>efficiency</B> many answers to the question  how may a cobol compiler be forced into the generation of an efficient object program   the purpose of this article is to present one possible answer  the creation and full utilization of a well-constructed cobol library  cacm may  1962 hicks  w  ca620507 jb march 20  1978 1 50 pm 598 5 598 598 5 598 598 5 598
13 Q0 2645 88 0.075327024 Lucene_47
two languages for estimating program <B>efficiency</B> two languages enabling their users to estimate the <B>efficiency</B> of computer programs are presented  the program whose <B>efficiency</B> one wishes to estimate estimating its <B>efficiency</B>  processors for the two languages are also described  the first processor <B>efficiency</B>  analysis of algorithms 4.12 4.20 5.24 5.25 ca740601 jb january 17  1978 3 48 pm 1086 4 2645
13 Q0 2794 89 0.07251191 Lucene_47
state-<B>space</B>  problem-reduction  and theorem proving-some relationships this paper suggests a bidirectional relationship between state-<B>space</B> and problem-reduction representations  it presents a formalism based on multiple-input and multiple-output operators which provides a basis for viewing the two  artificial intelligence  state-<B>space</B> representation  problem-reduction representation  theorem
13 Q0 2816 90 0.07251191 Lucene_47
optimal reorganization of distributed <B>space</B> disk files in most database organizations  the cost of accessing the database will increase due to structural changes caused by updates and insertions for distributed free <B>space</B> is described  a cost function describing the excess costs due to physical  1976 maruyama  k  smith  s  e  disk file  free <B>space</B> retrieval  insertion  deterioration
13 Q0 615 91 0.071046874 Lucene_47
addressing multidimensional arrays a useful method of representing a function of n variables is to consider the function to assume its values at selected points in n-dimensional <B>space</B>  although this picture is of value to the analyst  the elements of an n-dimensional array must exist of indices locating on array element in n-<B>space</B> to the location  address  of the element in its storage
13 Q0 824 92 0.071046874 Lucene_47
descriptran-automated descriptive geometry  descriptive geometry consists of procedures originally designed to solve 3-<B>space</B> geometry problems by graphical constructions and measurement instead of by computation  however  in addition to this it unifies and simplifies the approach to many it possible to program many problems in 3-<B>space</B> with a few statements  it consists of 15 subroutines
13 Q0 2195 93 0.06965418 Lucene_47
  the relation between the structure of the figure of merit and the complexity of the <B>optimization</B> process  interaction graph  secondary <B>optimization</B> problem 3.63 3.66 5.42 ca710504 jb february 3  1978 2 49 pm
13 Q0 2616 94 0.06965418 Lucene_47
on the conversion of programs to decision tables  method and objectives the problems of converting programs to decision tables are investigated  objectives of these conversions are mainly program debugging and <B>optimization</B> in practice  extensions to the theory of computation and computability are suggested  cacm august  1974 cavouras  j  c  decision tables  program <B>optimization</B>  debugging
13 Q0 2812 95 0.06965418 Lucene_47
 to the form necessary for use by the soda  systems <B>optimization</B> and design algorithm  program  physical system design  accurately defined systems  systems <B>optimization</B> and design algorithm 2.44
13 Q0 3018 96 0.06965418 Lucene_47
covering edges by cliques with regard to keyword conflicts and intersection graphs kellerman has presented a method for determining keyword conflicts and described a heuristic algorithm which solves a certain combinatorial <B>optimization</B> problem in connection with this method  this <B>optimization</B> problem is here shown to be equivalent to the problem of covering the edges of a graph by complete
13 Q0 3125 97 0.06965418 Lucene_47
global <B>optimization</B> by suppression of partial redundancies the elimination of redundant computations and the moving of invariant computations out of loops are often done separately  with invariants moved outward loop by loop  we propose to do both at once and to move each expression directly that requires less execution time  cacm february  1979 morel  e  renvoise  c  optimizer  <B>optimization</B>
13 Q0 1331 98 0.069526024 Lucene_47
<B>code</B> structures for protection and manipulation of variable-length items when items are made up of a variable number of characters  each containing the same number of bits  certain control information  partition symbols  is inserted to mark their separations  since errors in identification  a 6-bit <B>code</B> assignment of alphanumeric characters for fixed word-length computers is given and its
13 Q0 3175 99 0.069526024 Lucene_47
 problem  every <B>code</B> letter is assigned probabilities of representing plain text letters  these probabilities are updated in parallel for all <B>code</B> letters  using joint letter probabilities  iterating
13 Q0 2290 100 0.06895412 Lucene_47
immediate predominators in a directed graph  h   algorithm a430  cacm august  1972 purdom jr   p  w  moore  e  f  predominator  immediate predominator  graph theory  directed graph  shortest path  articulation  connectivity  program <B>optimization</B>  optimizing compiler 4.12 5.32 ca720812 jb january 30  1978 9 19 am 1807 4 2290 2034 4 2290 2290 4 2290 2579 4 2290 2923 4 2290 2945 4 2290 1947 5 2290
*************Query 14*************************

14 Q0 3164 1 0.1397686 Lucene_47
  list processing  data structures  topological <B>sort</B>  acyclic digraph  <B>database</B> integrity  networkprogressive acyclic digraphs-a tool for <B>database</B> integrity a progressive acyclic digraph  pad in certain areas of <B>database</B> implementation in which there are constraints on the permissible sequences of actions  two pad <B>algorithms</B> are presented  one uses a simple path matrix representation
14 Q0 3112 2 0.13344114 Lucene_47
  file or <B>database</B> <B>management</B>  storage <B>management</B>  storage allocation  lisp  cdr-coding  reference  and atom in lisp  is bounded by a  small  constant  classical <B>implementations</B> of list processing are simple extensions to our system  and reference counting is found to be inferior for many <B>applications</B>
14 Q0 2819 3 0.13171442 Lucene_47
 <B>algorithms</B> for encoding a string differ slightly from earlier proposals  the analysis program attempts to <B>find</B> an <B>optimal</B> set of codes for representing substrings of the file  four new <B>algorithms</B> for this operation are described and compared  various parameters in the <B>algorithms</B> are optimized to obtain file compaction  huffman codes  n-gram encoding  comparison of <B>algorithms</B> 3.7 3.73 4.33 ca761104 jb
14 Q0 3131 4 0.12749517 Lucene_47
 arithmetic for a mixture of operations  comparable in speed with hardware arithmetic for many <B>applications</B>  <B>algorithms</B> for 8-bit and 16-bit <B>implementations</B> of focus are included  cacm march  1979 edgarfocus microcomputer number system focus is a number system and supporting computational <B>algorithms</B> especially useful for microcomputer control and other signal processing <B>applications</B>  focus has
14 Q0 3058 5 0.118934445 Lucene_47
 <B>applications</B> are discussed and performance is evaluated  cacm october  1978 shneiderman  b  jump searching  sequential files  file <B>management</B>  search strategies  <B>database</B> structures  index searching
14 Q0 2289 6 0.117783256 Lucene_47
 <B>algorithms</B> for these problems require about n steps  and noncellular <B>implementations</B> require from n is the determination of <B>algorithms</B> that exploit the possibilities for parallelism  especially for problems whose solutions appear to be inherently serial  in particular  several parallelized <B>algorithms</B> <B>applications</B> to wire routing  pert chart analysis  and the analysis of many types of networks
14 Q0 3132 7 0.111948855 Lucene_47
experiments with some <B>algorithms</B> that <B>find</B> central solutions for pattern classification in two separates the two classes in a linearly separable training set  the traditional methods <B>find</B> a hyperplane which separates <B>all</B> points in the other  but such a hyperplane is not necessarily centered a noncentral hyperplane  six <B>algorithms</B> for finding central hyperplanes are tested on three data sets
14 Q0 2716 8 0.11181487 Lucene_47
optimizing the performance of a relational algebra <B>database</B> interface an approach for implementing and pipelined concurrency   3  coordinating <B>sort</B> orders in temporary relations   4  employing directory analysis  and  5  maintaining locality in page references  <B>algorithms</B> for implementing the operators  p  relational <B>database</B>  <B>database</B> optimization  inverted file  automatic programming  query
14 Q0 2890 9 0.1113184 Lucene_47
on quadratic adaptive routing <B>algorithms</B> two analytic models of a store-and-forward communications network are constructed  one to <B>find</B> the <B>optimal</B> message routing and the other to illustrate that adaptive routing does not satisfy the necessary conditions for an <B>optimal</B> routing  adaptive routing analysis for a simple network  cacm january  1976 agnew  c  e  routing <B>algorithms</B>  adaptive routing
14 Q0 2674 10 0.104246385 Lucene_47
 <B>applications</B>  the <B>algorithms</B> were implemented in fortran on the cdc 6400 computer  results obtained from the <B>implementations</B> show that the noninteractive <B>algorithms</B> can significantly reduce displayscan conversion <B>algorithms</B> for a cell organized raster display raster scan computer graphics  two fundamentally different scan conversion <B>algorithms</B> which have been developed to support
14 Q0 2964 11 0.10054787 Lucene_47
an approach to <B>optimal</B> design of storage parameters in databases cacm may  1977 milman  y  <B>database</B> organization  storage parameter optimization  resident  overflow storage 3.73 3.74 ca770508 jb december 29  1977 1 48 am 2964 5 2964 2964 5 2964 2964 5 2964
14 Q0 3087 12 0.100543715 Lucene_47
an english language question answering system for a large relational <B>database</B> by typing requests in english  casual users will be able to obtain explicit answers from a large relational <B>database</B> for the relational <B>database</B>  and optimize the order of searching relations  methods are discussed for handling vague or complex questions and for providing browsing ability  also included are <B>discussions</B>
14 Q0 2812 13 0.09911203 Lucene_47
computer-aided analysis and design of information systems this paper describes the use of computer-aided analysis for the design and development of an integrated financial <B>management</B> system of procedures and computer programs specifically designed to aid in the process of <B>applications</B> software design for the generation of alternative specifications of program modules and logical <B>database</B> structures  cacm
14 Q0 1886 14 0.09851505 Lucene_47
generation of <B>optimal</B> code for expressions via factorization given a set of expressions which or more other expressions or subexpressions  once <B>all</B> the factors have been ascertained  a sequencing procedure is applied which orders the factors and expressions such that <B>all</B> information is computed feasible  heuristic procedures are applied  and hence global <B>optimal</B> results are not necessarily
14 Q0 3057 15 0.09830127 Lucene_47
<B>optimal</B> his togram matching by monotone gray level transformation this paper investigates the problem of <B>optimal</B> his togram matching using monotone gray level transformation  which always assigns <B>all</B>   gt  t j   the objective is to <B>find</B> a transformed digital picture of a given picture  which ensures a polynomial time solution to this problem  a tree search algorithm for <B>optimal</B> his
14 Q0 2679 16 0.095159315 Lucene_47
 are presented for six acm <B>algorithms</B>  quicksort  no  64   shellsort  no  201   stringsort  no  207    treesort3   no  245   quickersort  no  271   and qsort  no  402   <B>algorithms</B> 271 and 402 are refinements of algorithm 64  and <B>all</B> three are discussed in some detail  the evidence given here demonstrates that qsort  no  402  requires many more comparisons than its author claims  of <B>all</B> these <B>algorithms</B>
14 Q0 2750 17 0.09246305 Lucene_47
 be desirable to obtain an <B>optimal</B> solution to this allocation problem  it is clear that the number <B>find</B> a set of assumptions which simplify the problem greatly  but which still provide a basis for considering <B>all</B> significant cost elements  this paper presents such a first  quantitative allocation
14 Q0 3037 18 0.08934751 Lucene_47
 elegant  it is also easily extended to <B>find</B> the prime factorization of <B>all</B> integers between 2 and n in time proportional to n  cacm december  1978 gries  d  misra  j  primes  <B>algorithms</B>  dataa linear sieve algorithm for finding prime numbers a new algorithm is presented for finding <B>all</B> primes between 2 and n  the algorithm executes in time proportional to n  assuming that multiplication
14 Q0 2142 19 0.08870559 Lucene_47
 determined and the problem is to <B>find</B> the  most representative  picture  three <B>algorithms</B> are described  <B>all</B> using monte carlo methods  which were designed to solve this problem  the <B>algorithms</B>
14 Q0 2931 20 0.08647665 Lucene_47
 through the developments in complexity theory  these  however  are <B>applications</B> to logic  and a big simulation on a real machine  these levels can be made mathematically exact if we can <B>find</B> the right definitions and proofs  which are clean and without undue dependence on <B>implementations</B>  nevertheless
14 Q0 1412 21 0.08523667 Lucene_47
 where their major accounting <B>applications</B> have been automated and more sophisticated usage of data and providing more complex combinations of information for <B>management</B> use  both kinds of processing draw indexes which facilitate cross referencing of account information so that <B>all</B> relationships between bank interface with other computer <B>applications</B> already existing within the bank  cacm july  1966 head  r
14 Q0 3067 22 0.08136395 Lucene_47
  <B>database</B> referencing  memory <B>management</B>  <B>optimal</B> memory policies  paging  program behavior  program inclusion property  a generalized <B>optimal</B> policy  gopt  is also defined  at its operating points
14 Q0 2816 23 0.08027219 Lucene_47
<B>optimal</B> reorganization of distributed space disk files in most <B>database</B> organizations  the cost of accessing the <B>database</B> will increase due to structural changes caused by updates and insertions  by reorganizing the <B>database</B> the access costs can be reduced  a basic problem is to establish the optimum points at which to reorganize a <B>database</B>  a disk file organization which allows
14 Q0 3032 24 0.077468045 Lucene_47
reverse path forwarding of broadcast packets a broadcast packet is for delivery to <B>all</B> nodes of a network  <B>algorithms</B> for accomplishing this delivery through a store-and-forward packet switching  to this list of <B>algorithms</B> we add  6  reverse path forwarding  a broadcast routing method which exploits networks  the algorithm is described as being practical because it is not <B>optimal</B> according to metrics
14 Q0 2181 25 0.076988526 Lucene_47
 education for <B>management</B>  supported by a national science foundation grant  is established to appraise for <B>management</B>  to provide the committee with material for its study of curricular needs  five regional and economic issues  this presentation gives a summary of the <B>discussions</B>  a condensation involved  preliminary to the committee s recommendations for improving computer education for <B>management</B>
14 Q0 1752 26 0.07675417 Lucene_47
resource <B>management</B> for a medium scale time-sharing operating system task scheduling and resource <B>algorithms</B> that were implemented  and the results of comparative simulation are given by tracing the development of the <B>algorithms</B> through six predecessor versions  throughout the discussion particular emphasis is placed on balancing the system performance relative to the characteristics of <B>all</B>
14 Q0 2924 27 0.07294355 Lucene_47
  the method is a synthesis of spline theory and <B>algorithms</B>  an in teractive means for man-machine are <B>algorithms</B> which enable in teractive modification of the b-spline representation of the sectional curves  at <B>all</B> stages of the process  the spatial information is graphically displayed to the user of analytical routines for structural  medical and graphical <B>applications</B>  cacm october  1977 wu  sheng-chuan
14 Q0 2900 28 0.071242146 Lucene_47
  the problem of finding the <B>optimal</B> set of network sites at which to locate copies of a file-is known to be  in general  polynomial complete  heuristics and other aids to finding <B>optimal</B>  or near-<B>optimal</B> a priori to indicate that certain sites should  or should not  be included in an <B>optimal</B> allocation <B>management</B> 4.33 ca771116 jb december 27  1977 8 45 am 2900 5 2900 2900 5 2900 2900 5 2900
14 Q0 3085 29 0.06831877 Lucene_47
  a sufficient condition about the association of the matrices in the <B>optimal</B> order is presented  an o n  algorithm to <B>find</B> an order of computation which takes less than 25 percent longer than the <B>optimal</B> time topt is also presented  in most cases  the algorithm yields the <B>optimal</B> order or an order which takesan o n  algorithm for determining a near-<B>optimal</B> computation order of matrix chain products
14 Q0 3075 30 0.06740223 Lucene_47
fast parallel sorting <B>algorithms</B> a parallel bucket-<B>sort</B> algorithm is presented that requires time o log n  and the use of n processors  the algorithm makes use of a technique that requires more space processing  sorting  <B>algorithms</B>  bucket <B>sort</B> 3.74 4.34 5.25 5.31 ca780803 dh february 7  1979 10 25 am contention is permitted  a procedure is also presented to <B>sort</B> n numbers in time o k log n  using n
14 Q0 1961 31 0.067326345 Lucene_47
an efficient search algorithm to <B>find</B> the elementary circuits of a graph a theoretically most efficient search algorithm is presented which uses an exhaustive search to <B>find</B> <B>all</B> of the elementary circuits of a graph  the algorithm can be easily modified to <B>find</B> <B>all</B> of the elementary circuits with a particular attribute such as length  a rigorous proof of the algorithm is given as well
14 Q0 1423 32 0.065136164 Lucene_47
a simple algorithm for computing the generalized inverse of a matrix the generalized inverse of a matrix is important in analysis because it provides an extension of the concept of an inverse which applies to <B>all</B> matrices  it also has many <B>applications</B> in numerical analysis  but it is not widely used because the existing <B>algorithms</B> are fairly complicated and require considerable storage space
14 Q0 3011 33 0.06373483 Lucene_47
<B>management</B> utilization of computers in american local governments traditional concepts of <B>management</B> information systems  mis  bear little relation to the information systems currently in use by top <B>management</B> in most us local governments  what exists is <B>management</B>-oriented computing  involving the use of relatively unsophisticated <B>applications</B>  despite the unsophisticated nature of these systems
14 Q0 2174 34 0.06158575 Lucene_47
the stable marriage problem the original work of gale and shapley on an assignment method using the stable marriage criterion has been extended to <B>find</B> <B>all</B> the stable marriage assignments  the algorithm derived for finding <B>all</B> the stable marriage assignments is proved to satisfy <B>all</B> the conditions of the problem  algorithm 411 applies to this paper  cacm july  1971 mcvitie  d  g  wilson l  b
14 Q0 2959 35 0.059683293 Lucene_47
 their <B>applications</B> on a computer  the user of sba views his application as manipulation of information in two the information  the query-by-example <B>database</B> language is a subset of the sba programming language  cacm  forms flow  data abstraction  <B>database</B>  query  data processing  business system specification
14 Q0 2263 36 0.058748644 Lucene_47
the conversion of limited-entry decision tables to <B>optimal</B> and near-<B>optimal</B> flowcharts  two new <B>algorithms</B> two new <B>algorithms</B> for deriving <B>optimal</B> and near-<B>optimal</B> flowcharts from limited entry conditions  one of the <B>algorithms</B>  called the optimum-finding algorithm  leads to a flowchart which truly but does not necessarily produce the optimum flowchart  the <B>algorithms</B> are first derived for treating
14 Q0 3033 37 0.058484167 Lucene_47
optimizing decision trees through heuristically guided search <B>optimal</B> decision table conversion has  easy  the given table is  furthermore  it cannot be used to produce good  quasi <B>optimal</B> solutions algorithm which  like dynamic programming  recognizes identical subproblems but which can be used to <B>find</B> both <B>optimal</B> and quasi <B>optimal</B> solutions  the heuristic search method introduced in this paper
14 Q0 3017 38 0.056709137 Lucene_47
b-trees re-examined the b-tree and its variants have  with increasing frequency  been proposed as a basic storage structure for multiuser <B>database</B> <B>applications</B>  here  three potential problems which must be dealt with in such a structure that do not arise in more traditional static directory structures are indicated  one problem is a possible performance penalty  cacm february  1978 held  g
14 Q0 1873 39 0.056048136 Lucene_47
accelerating lp <B>algorithms</B> it is shown how a novel method for computing  related  inner products can accelerate the pricing phase of lp <B>algorithms</B>  other lp <B>applications</B> are indicated  cacm july  1969 fox  b  l  linear programming  revised simplex method  multiple pricing  inner product 5.19 5.41 ca690707 jb february 17  19789 08 am 1873 5 1873 1873 5 1873 1873 5 1873
14 Q0 1724 40 0.054368585 Lucene_47
a generalized partial pass block <B>sort</B> the design of a partial pass block <B>sort</B> with arbitrary range column <B>sort</B> by ashenhurst and the amphisbaenic <B>sort</B> by nagler  the power of the <B>sort</B> is tabulated of combining a block <B>sort</B> with internal sorts  and to the best use of direct access storage devices  cacm july  1968 bayes  a  block <B>sort</B>  partial pass <B>sort</B>  direct access devices  column <B>sort</B>  chaining
14 Q0 2324 41 0.053258505 Lucene_47
<B>management</B> science  a view from nonlinear programming a brief history of integer and continuous of user oriented software  and comparisons of currently known <B>algorithms</B> to demonstrate which  linear programming  mathematical programming  nonlinear programming  quadratic programming  <B>management</B> science  operations research  <B>algorithms</B> 5.41 8.3 ca720704 jb january 30  1978 3 14 pm 2324 5 2324
14 Q0 2337 42 0.052546382 Lucene_47
a sorting problem and its complexity a technique for proving min-max norms of sorting <B>algorithms</B> is given  one new algorithm for finding the minimum and maximum elements of a set with fewest comparisons is proved <B>optimal</B> with this technique  cacm june  1972 pohl  i  sorting  computational complexity  computational combinatorics 5.29 5.31 ca720608 jb january 30  1978 4 15 pm 2337 5 2337 2337 5
14 Q0 2308 43 0.051870596 Lucene_47
computers and urban society this brief survey of the use of computers in urban society covers the broad range of activities found in any city  the future scope of <B>applications</B> is limited only  cacm july  1972 sturman  g  m  urban systems  urban <B>applications</B>  data acquisition  data <B>management</B>  engineering analysis  information systems 3.23 3.39 3.53 3.72 3.82 3.89 ca720720 jb january 30
14 Q0 630 44 0.051865637 Lucene_47
an evaluation of autocode readability of the many requirements of an autocode  the pair of requirements  easy to read  and  easy to write  are not often compatible  this paper argues that readability can be added automatically in the translation process so that the programmer can enjoy the utmost economy of expression  while for <B>management</B> a full and valid cobol version is printed to give <B>all</B>
14 Q0 3156 45 0.051834818 Lucene_47
computing connected components on parallel computers we present a parallel algorithm which uses n2 processors to <B>find</B> the connected components of an undirected graph with n vertices in time o log2n be used to <B>find</B> the transitive closure of a symmetric boolean matrix  we assume that the processors  graph theory  parallel processing  <B>algorithms</B>  transitive closure  connected component 5.25 5.32 6.22
14 Q0 2314 46 0.05107435 Lucene_47
  rather than focusing just on language features  since <B>algorithms</B> must be not only coded in a language of <B>applications</B>  three aspects of programming systems are highlighted  good interactive facilities condition  the need for extended data forms  storage <B>management</B>  and extensibility are stressed
14 Q0 717 47 0.050567817 Lucene_47
partitioning <B>algorithms</B> for finite sets the partitions of a set with n elements are represented by certain n-tuples of positive integers  algorithm are described which generate without repetitions the n-tuples corresponding to   1  <B>all</B> partitions of the given set   2  <B>all</B> partitions of the given set into m or fewer sets  1  lt   m  lt   n   and  3  <B>all</B> partitions of the given set into exactly m
14 Q0 2997 48 0.05043876 Lucene_47
  the time complexity of the proposed <B>algorithms</B> is <B>optimal</B> within a multiplicative constant  cacm february  1977 preparata  f  p  hong  s  j  computational complexity  convex hull  <B>optimal</B> <B>algorithms</B> <B>algorithms</B> use the  divide and conquer  technique and recursively apply a merge procedure for two nonin
14 Q0 2522 49 0.049897764 Lucene_47
the design  implementation  and evaluation of a working set dispatcher the behavior of a computer system is largely dependent upon the <B>algorithms</B> employed to allocate the system resources to the processes competing for them  recent research in time-sharing paging systems has developed the working proposed  two <B>implementations</B> along these principles have been reported  but it seems that in neither
14 Q0 655 50 0.049373295 Lucene_47
comit as an ir language many of the features that make comit a good <B>all</B> around symbol manipulation language also render it well suited to various types of information retrieval programs  presented here is a general discussion of this unique and different programming language and an examination of some of its <B>applications</B>  cacm january  1962 yngve  v  h  ca620104 jb march 20  1978 4 46 pm 1145 5
14 Q0 2272 51 0.04904212 Lucene_47
sorting by natural selection a family of sorting <B>algorithms</B> is proposed  the members of which make fuller use of the memory space and thus yield longer sorted strings  extensive simulation results are presented  and various implications and further <B>applications</B> are discussed  cacm october  1972 frazer  w  d  wong  c  k  <B>algorithms</B>  sorting by replacement selection  expected string length 5.31
14 Q0 2967 52 0.04881532 Lucene_47
 evaluation  parallel processing  <B>database</B> <B>management</B> 3.71 3.72 3.73 3.74 4.34 4.6 6.22 8.2 ca770505
14 Q0 3177 53 0.048252374 Lucene_47
 olutely no information about d  this technique enables the construction of robust key <B>management</B> half the pieces and security breaches expose <B>all</B> but one of the remaining pieces  cacm november  1979 shamir  a  cryptography  key <B>management</B>  interpolation 5.39 5.6 ca791105 db january 23  1980 11 48
14 Q0 2051 54 0.047886577 Lucene_47
  the program tabulates the correspondences  and uses list processing techniques to <B>sort</B> and count in the data of each correspondence found in that pair of words  the output is a list of <B>all</B> correspondence with <B>all</B> word-pairs showing that correspondence  unless their relative value is below
14 Q0 2833 55 0.047230918 Lucene_47
  and a linearizing  compacting  copying scheme to reorganize <B>all</B> storage at the users discretion are proposed  the <B>algorithms</B> are designed to work well in systems which use multiple levels of storage <B>management</B>  garbage collection  lisp 4.19 ca760906 jb january 4  1978 8 58 am 1708 4 2833 1781 4 2833 1826
14 Q0 1197 56 0.046999205 Lucene_47
finding zeros of a polynomial by the q-d algorithm a method which finds simultaneously <B>all</B> the zeros of a polynomial  developed by h  rutishauser  has been tested on a number of polynomials with real roundoff may result in errors which spoil the scheme  even if the q-d algorithm does not give <B>all</B> the zeros  it will usually <B>find</B> a majority of them  cacm september  1965 henrich  p  watkins  b  o
14 Q0 2481 57 0.046911318 Lucene_47
the distribution of a program in primary and fast buffer storage a virtual memory computer system with a fast buffer  cache  memory between primary memory and the central processing unit is considered  the <B>optimal</B> distribution of a program between the buffer and primary memory is studied using and nonswapping buffer <B>management</B> policies  cacm july 1973 gelenbe  e  cache  virtual memory  lifetime
14 Q0 2944 58 0.046584465 Lucene_47
 the reference counts of cells can be deduced  this information is used to <B>find</B> actions that cancel counts  storage <B>management</B> 3.80 4.12 4.20 4.34 ca770708 jb december 28  1977 8 38 am 2855 4 2944
14 Q0 2973 59 0.045655698 Lucene_47
sorting on a mesh-connected parallel computer two <B>algorithms</B> are presented for sorting n 2 elements on an n x n mesh-connected processor array that require o n  routing and comparison steps  the best previous algorithm takes time o n log n   the <B>algorithms</B> of this paper are shown to be <B>optimal</B> in time within small constant factors  extensions to higher-dimensional arrays are also given  cacm
14 Q0 3151 60 0.045655698 Lucene_47
an <B>optimal</B> real-time algorithm for planar convex hulls an algorithm is described for the construction in real-time of the convex hull of a set of n points in the plane  using an appropriate data structure  the algorithm constructs the convex hull by successive updates  each taking time o log n geometry  convex hull  planar set of points  real-time <B>algorithms</B>  on-line <B>algorithms</B>  4.49 5.25 5.32
14 Q0 2627 61 0.04540729 Lucene_47
 <B>algorithms</B>  <B>optimal</B> scheduling <B>algorithms</B>  deterministic scheduling models 4.32 5.39 ca740704 jb january 17 the <B>algorithms</B> known for minimizing mean finishing time  in addition to presenting and analyzing new <B>algorithms</B>
14 Q0 2146 62 0.045402195 Lucene_47
optimizing the polyphase <B>sort</B> various dispersion <B>algorithms</B> for the polyphase sorting procedure  the logic of this algorithm is rather complicated  hence  several other new dispersion <B>algorithms</B> with more straightforward logic are presented  of the simple dispersion <B>algorithms</B> discussed and writing than most <B>algorithms</B> in use today  an additional two and one-fourth to three percent improvement
14 Q0 2902 63 0.04436035 Lucene_47
 dynamic memory allocation <B>algorithms</B> when used to service simulation programs as represented by 18 test memory fragmentation  <B>algorithms</B> main taining separate free space lists for each size of memory block used tended to perform quite well compared with other <B>algorithms</B>  simple <B>algorithms</B> operating on memory ordered lists  without any free list  performed surprisingly well  <B>algorithms</B> employing power
14 Q0 724 64 0.043225497 Lucene_47
 of their organizations  turnover among themselves is attributed primarily to poor <B>management</B>-salary is seen to vary with function  systems programmers differing from <B>applications</B> programmers  four principal specific <B>applications</B> and techniques  and building programming as a profession  cacm october  1963
14 Q0 3157 65 0.042294372 Lucene_47
 throughout the computation  <B>all</B> too often  the termination functions required are difficult to <B>find</B>proving termination with multiset orderings a common tool for proving the termination of programs is the well-founded set  a set ordered in such a way as to admit no infinite descending sequences  the basic approach is to <B>find</B> a termination function that maps the values of the program variables
14 Q0 2834 66 0.04217915 Lucene_47
efficient generation of the binary reflected gray code and its <B>applications</B> <B>algorithms</B> are presented to generate the n-bit binary reflected gray code and codewords of fixed weight in that code  both <B>algorithms</B> are efficient in that the time required to generate the next element from the current one is constant  <B>applications</B> to the generation of the combinations of n things taken k at a time
14 Q0 2976 67 0.041566797 Lucene_47
approximating block accesses in <B>database</B> organizations cacm april  1977 yao  s  b  <B>database</B>  inverted file organization  <B>database</B> performance and measurement  information retrieval  query answering 3.70 3.72 4.33 ca770406 jb december 29  1977 5 06 am 2976 4 2976 2976 4 2976 2976 4 2976 2688 5 2976 2765 5 2976 2882 5 2976 2976 5 2976 2976 5 2976 2976 5 2976
14 Q0 2106 68 0.041459154 Lucene_47
computer education in a graduate school of <B>management</B> several years of experience have led to the belief that the creative design and evaluation of <B>management</B> information systems requires a thorough undue effort  the solution of interesting problems   3  be capable of exposing <B>all</B> outstanding issues of significance  capable of exposing <B>all</B> outstanding issues of significance  within the chosen
14 Q0 2856 69 0.04125574 Lucene_47
 condition  are created  an <B>optimal</B> program  with respect to average execution time or storage space  for example  is located only through implicit enumeration of <B>all</B> possible decision trees using to synthesize an <B>optimal</B> decision tree from which a program can be created  using this approach  the efficiency of creating an <B>optimal</B> program is increased substantially  permitting generation of <B>optimal</B>
14 Q0 1594 70 0.040813427 Lucene_47
 generates <B>all</B> permutations of k elements  only the previously generated permutation  the constant k by rotating the k-2 lowest elements  by continuing in this manner  <B>applications</B> of the algorithm will generate <B>all</B>  k-1   circular orderings  or since each circular ordering yields k permutations the algorithm generates <B>all</B> k  permutations  cacm may  1967 langdon jr   g  g  ca670508 jb february 28
14 Q0 3163 71 0.04035101 Lucene_47
an <B>optimal</B> insertion algorithm for one-sided height-balanced binary search trees an algorithm an improvement over the best previous ly known insertion <B>algorithms</B> of hirschberg and kosaraju  which require time o log 2n   moreover  the o log n  complexity is <B>optimal</B>  earlier results have shown  the insertion and deletion <B>algorithms</B> for oshb trees appear much more complicated than the corresponding
14 Q0 1433 72 0.04033319 Lucene_47
 timeo cut down this expense  an ever increasing effort is made to design more efficient <B>algorithms</B>  this paper is meant to support the effort  it is attempted to <B>find</B> some characteristics of the way
14 Q0 2081 73 0.04033319 Lucene_47
 and cumulative operators  <B>algorithms</B> are given which use symbol manipulation of matrix expressions so as to <B>find</B> the forms best suited for computation  these forms are called normal forms  several
14 Q0 2450 74 0.04033319 Lucene_47
empirical working set behavior the working set model for program behavior has been proposed in recent years as a basis for the design of scheduling and paging <B>algorithms</B>  although the words  working set  are now commonly encountered in the literature dealing with resource allocation  there is a dearth of published data on program measurements  in the hope that workers in the field might <B>find</B>
14 Q0 2500 75 0.040210307 Lucene_47
 is to be maintained  a resource <B>management</B> program is described which uses linked lists along but does not detect or prevent <B>all</B> deadlocks in its implemented state  certain changes  which would  d  j  deadlock  resource allocation  scheduling  resource <B>management</B>  multiprogramming  time
14 Q0 2570 76 0.039409786 Lucene_47
 times are random variables are analyzed  it is shown that different <B>algorithms</B> suggested-<B>optimal</B>  a dynamic programming solution for the case in which execution times are random variables
14 Q0 2691 77 0.039409786 Lucene_47
comments on the <B>algorithms</B> of verhelst for the conversion of limited-entry decision tables to flowcharts cacm january  1974 king  p  j  h  johnson  r  g  decision table  flowcharting  preprocessor  <B>optimal</B> programs  search 3.50 3.59 4.19 4.29 4.49 5.31 ca740108 jb january 18  1978 1 45 pm 2598 4 2691 2691 4 2691 2726 4 2691 3113 4 2691 2263 5 2691 2598 5 2691 2691 5 2691 2691 5 2691 2691 5 2691
14 Q0 3049 78 0.03905226 Lucene_47
 and output functional capabilities  sembegs is built around a basic graphical data <B>management</B> system structures  graphic display  graphic input  graphical <B>database</B>  device independent graphics 4.33 4.34 8.2
14 Q0 2266 79 0.038157143 Lucene_47
a highly parallel algorithm for approximating <B>all</B> zeros of a polynomial with only real zeros an algorithm is described based on newton s method which simultaneously approximates <B>all</B> zeros of a polynomial with only real zeros  the algorithm  which is conceptually suitable for parallel computation  cacm november  1972 patrick  m  l  parallel numerical <B>algorithms</B>  real polynomials  real zeros
14 Q0 2877 80 0.038157143 Lucene_47
 determines <B>all</B> the definitions which can possibly  reach  each node of the control flow graph of the program and <B>all</B> the definitions that are  live  on each edge of the graph  the procedure uses  <B>algorithms</B>  compilers 4.12 5.24 ca760303 jb january 5  1978 8 33 am 2877 5 2877 2877 5 2877 2877 5
14 Q0 3153 81 0.038046416 Lucene_47
 is examined in the context of a paged computer system  two parameterized <B>algorithms</B> which partition of a process or and paging and file devices  with fixed numbers of jobs  is studied to determine <B>optimal</B> alocation parameters on the expected response times under the two <B>algorithms</B>  numerical solutions
14 Q0 2863 82 0.03766403 Lucene_47
 memory systems  virtual memory  working set  page replacement <B>algorithms</B>  <B>optimal</B> page replacementvmin-an <B>optimal</B> variable-space page replacement algorithm a criterion for comparing variable space page replacement <B>algorithms</B> is presented  an optimum page replacement algorithm  called vmin  denning s working set  and the page partitioning replacement <B>algorithms</B> on five virtual memory programs
14 Q0 3038 83 0.037659448 Lucene_47
using encryption for authentication in large networks of computers use of encryption to achieve authenticated communication in computer networks is discussed  example protocols are presented for the establishment of authenticated connections  for the <B>management</B> of authenticated mail <B>algorithms</B> are considered as the basis for protocols  cacm december  1978 needham  r  schroeder  m
14 Q0 2368 84 0.037643608 Lucene_47
  the program is a good example of the implementation of graph <B>algorithms</B>  the two players in a shannon is valid in <B>all</B> three cases  in fact  the major routines never need to know whether the computer is connect or cut  cacm april  1972 chase  s  m  graph <B>algorithms</B>  graph processing  shannon switching
14 Q0 867 85 0.037535053 Lucene_47
 successive approximations to <B>optimal</B> fits for any type of closed area  finally  <B>applications</B>
14 Q0 1506 86 0.03702997 Lucene_47
the laconiq monitor  time sharing for online dialogues the laconiq  laboratory computer online inquiry  monitor was developed primarily to support non-numerical <B>applications</B> such as retrieval from very large files by means of a  dialogue  between a system user and a retrieval application facilities  and input-output were <B>all</B> scheduled  an unusual feature of the system
14 Q0 2484 87 0.0365878 Lucene_47
 an element from the given set of objects  the use of different relations and <B>algorithms</B> results organization and storage is reduced to that of defining relations and formulating <B>algorithms</B> under a given  data base  data-base <B>management</B>  information retrieval  information structure  file organization
14 Q0 2692 88 0.036285877 Lucene_47
reentrant polygon clipping a new family of clipping <B>algorithms</B> is described  these <B>algorithms</B> the parts of the polygon which lie outside the volume  in two dimensions the <B>algorithms</B> permit clipping vertices introduced in sequence to describe any newly-cut edge or edges  the <B>algorithms</B> easily handle of the clipping window  the <B>algorithms</B> described achieve considerable simplicity by clipping separately
14 Q0 2065 89 0.036076438 Lucene_47
a programming system for the on-line analysis of biomedical images a preliminary description of the software for a computer-display system is given with special emphasis on the man-machine interaction  this system is intended for a wide variety of biomedical <B>applications</B>  as an example  the methods  picture transformations  file maintenance  picture structuring  and display <B>management</B>  picture
14 Q0 2188 90 0.0360214 Lucene_47
 <B>applications</B>  the optimum configurations are in turn used to <B>find</B> general display system design
14 Q0 2650 91 0.0360214 Lucene_47
 proportional to  a   the number of characters in a  the method should <B>find</B> <B>applications</B>
14 Q0 2017 92 0.035604615 Lucene_47
 memory machines  descriptions of the experimental <B>sort</B> programs and analysis of the performance is used to arrive at a set of broad guidelines for writing <B>sort</B> programs for a paging environment  cacm  memory <B>management</B> 4.32 4.49 4.9 5.31 ca700804 jb february 10  1978 3 51 pm 1050 4 2017 1117 4 2017
14 Q0 3166 93 0.035502996 Lucene_47
 it will be accurate  we conclude that <B>all</B> four <B>algorithms</B> will provide accurate answers for many problemscomputing standard deviations  accuracy four <B>algorithms</B> for the numerical computation of the standard deviation of  unweighted  sampled data are analyzed  two of the <B>algorithms</B> are well-known in the statistical and computational literature  the other two are new <B>algorithms</B> specifically intended
14 Q0 2406 94 0.035096582 Lucene_47
 as in advanced data <B>management</B> systems and distributed data bases  this paper reviews past work in the data definition language for describing both logical and physical aspects of data  <B>applications</B> <B>management</B> systems  file translation 3.51 3.70 3.73 4.29 4.82 ca731202 jb january 19  1978 2 58 pm 2155 4
14 Q0 2963 95 0.035030086 Lucene_47
a fast algorithm for computing longest common subsequences previously published <B>algorithms</B> for finding the longest common subsequence of two sequences of length n have had a best-case running time in the worst case the algorithm has a running time of o n 2 log n   however  for those <B>applications</B> where subsequence  efficient <B>algorithms</B> 3.73 3.63 5.25 ca770509 jb december 29  1977 1 46 am 2963 4 2963 3114 4 2963
14 Q0 1135 96 0.034912195 Lucene_47
 compute programming language which covers a wide class of business and file processing <B>applications</B> common to <B>all</B> processes of such class  permits writing extremely compact programs  even for comparatively complex <B>applications</B>  in terms of tables of control expressions which express only information as characteristic of the class of <B>all</B> batch file processes  this new philosophy has the potential
14 Q0 132 97 0.03438571 Lucene_47
math <B>sort</B>  algorithm 23  cacm november  1960 feurzeig  w  ca601103 jb march 20  1978 8 03 pm 132 5 132 132 5 132 132 5 132
14 Q0 2397 98 0.03438571 Lucene_47
optimizing the polyphase <B>sort</B>  corrigendum  cacm january  1972 shell  d  l  ca720106 jb february 1  1978 9 21 am 2397 5 2397 2397 5 2397 2397 5 2397
14 Q0 662 99 0.03438571 Lucene_47
shuttle <B>sort</B>  algorithm 175  cacm december  1963 juelich  o  c  ca631212 jb march 13  1978 2 52 pm 662 5 662 662 5 662 662 5 662
14 Q0 701 100 0.03438571 Lucene_47
shuttle <B>sort</B>  algorithm 175  cacm october  1963 schubert  g  r  ca631024 jb march 13  1978 5 29 pm 701 5 701 701 5 701 701 5 701
*************Query 15*************************

15 Q0 3125 1 0.2774306 Lucene_47
<B>global</B> <B>optimization</B> by suppression of partial redundancies the elimination of redundant computations and the moving of invariant computations out of <B>loops</B> are often done separately  with invariants moved outward loop by loop  we propose to do both at once and to move each expression directly that requires less execution time  cacm february  1979 morel  e  renvoise  c  optimizer  <B>optimization</B>
15 Q0 2701 2 0.2751468 Lucene_47
 graham  s  l  wegman  m  <B>global</B> flow analysis  data flow  code <B>optimization</B>  common subexpressiona fast and usually linear algorithm for <B>global</B> flow analysis  abstract only--complete paper jacm 23,1 january  1976  a new algorithm for <B>global</B> flow analysis on reducible graphs is presented that in programming terms  the number of operations is proportional to e plus the number of exits from program <B>loops</B>
15 Q0 2877 3 0.24646883 Lucene_47
a program data flow analysis procedure the <B>global</B> data relationships in a program can be exposed determines <B>all</B> the definitions which can possibly  reach  each node of the control flow graph of the program and <B>all</B> the definitions that are  live  on each edge of the graph  the procedure uses indistinguishably  cacm march  1976 allen  j  e  cocke  j  program <B>optimization</B>  data flow analysis  flow graphs
15 Q0 2944 4 0.24513961 Lucene_47
  1977 barth  j  m  garbage collection  <B>global</B> flow analysis  list processing  <B>optimization</B>  reference of which are summarized  implementing the described optimizations requires <B>global</B> flow analysis the reference counts of cells can be deduced  this information is used to <B>find</B> actions that cancel
15 Q0 2464 5 0.23240867 Lucene_47
the complex method for constrained <B>optimization</B>  e4   algorithm a454  cacm august  1973 richardson  j  a  kuester  j  l  <B>optimization</B>  constrained <B>optimization</B>  box s algorithm 5.41 ca730810 jb january 23  1978 10 34 am 2464 5 2464 2464 5 2464 2464 5 2464
15 Q0 1886 6 0.20539068 Lucene_47
 or more other expressions or subexpressions  once <B>all</B> the factors have been ascertained  a sequencing procedure is applied which orders the factors and expressions such that <B>all</B> information is computed feasible  heuristic procedures are applied  and hence <B>global</B> optimal results are not necessarily  1969 breuer  m  a  factorization algorithms  code <B>optimization</B>  sequencing of operations  detection
15 Q0 2195 7 0.19455883 Lucene_47
 to the <B>global</B> approach  greater flexibility and adequacy in the particular problem is achieved  the relation between the structure of the figure of merit and the complexity of the <B>optimization</B> process optimal detection  heuristic methods  <B>global</B> recognition  parallel processing  dynamic programming  interaction graph  secondary <B>optimization</B> problem 3.63 3.66 5.42 ca710504 jb february 3  1978 2 49 pm
15 Q0 2142 8 0.18370904 Lucene_47
 determined and the problem is to <B>find</B> the  most representative  picture  three algorithms are described  <B>all</B> using monte carlo methods  which were designed to solve this problem  the algorithms  <B>optimization</B>  picture compression  picture description  picture processing  stereology  x-ray analysis 3.12
15 Q0 2897 9 0.18086044 Lucene_47
 one possible expansion-the task of tailoring this code to take advantage of any <B>special</B> cases of the concatenate statement  the code produced by a compiler using the expansion-<B>optimization</B> strategy  concatenation  program <B>optimization</B>  <B>optimization</B> techniques  data flow analysis 4.12 4.13 4.22
15 Q0 2344 10 0.1751461 Lucene_47
on the <B>optimization</B> of performance of time-sharing systems by simulation a simulation model  including the scheduling itself  require <B>optimization</B>  and which of the parameters not normally is based upon the mean cost of delay to <B>all</B> jobs processed  it is shown that significant improvements <B>optimization</B> whereas other parameters controllable by the scheduling algorithm affect system performance
15 Q0 3069 11 0.16431254 Lucene_47
 are quite large  cacm september  1978 barth  j  data flow analysis  <B>global</B> flow analysis  <B>optimization</B> by a call on the procedure  and <B>all</B> of its subcalls  the algorithm is sufficiently powerful to be used parameters  the algorithm is unique in that it can compute <B>all</B> of this information in a single pass
15 Q0 2835 12 0.16101745 Lucene_47
recursion analysis for compiler <B>optimization</B> a relatively simple method for the detection of recursive use of procedures is presented for use in compiler <B>optimization</B>  implementation considerations are discussed  and a modification of the algorithm is given to further improve <B>optimization</B>  k  g  recursion  compiler <B>optimization</B> 4.12 ca760904 jb january 4  1978 9 36 am 2835 5 2835 2835 5
15 Q0 1807 13 0.15473945 Lucene_47
<B>optimization</B> of expressions in fortran a method of optimizing the computation of arithmetic to common subexpression values   2  to remove invariant calculations from do <B>loops</B>   3  to efficiently  v  a  england  d  e  fortran  <B>optimization</B>  expressions  compilers  compilation  subscripts  register allocation  do <B>loops</B>  common subexpressions  invariant calculations 4.12 ca691205 jb february 15
15 Q0 1947 14 0.13970159 Lucene_47
object code <B>optimization</B> methods of analyzing the control flow and data flow of programs during compilation are applied to transforming the program to improve object time efficiency  dominance relationships  indicating which statements are necessarily executed before others  are used to do <B>global</B>  object code  <B>optimization</B>  redundancy elimination  register assignment  system 360 4.12 5.24 5.32
15 Q0 2716 15 0.13970159 Lucene_47
 and space utilization by   1  performing <B>global</B> query <B>optimization</B>   2  exploiting disjoint  p  relational database  database <B>optimization</B>  inverted file  automatic programming  query
15 Q0 2929 16 0.13907698 Lucene_47
an analysis of inline substitution for a structured programming language an <B>optimization</B> technique known as inline substitution is analyzed  the <B>optimization</B> consists of replacing a procedure degree of recursion  over 90 percent of <B>all</B> procedure calls can be eliminated  with little increase  open compilation  program <B>optimization</B>  compilers  structured programming languages  run-time
15 Q0 1795 17 0.1341812 Lucene_47
optimal code for serial and parallel computation cacm december  1969 fateman  r  j  code <B>optimization</B>  sequencing of operations  detection of common subexpressions 4.12 ca691217 jb february 15  1978 1 59 pm 1795 5 1795 1795 5 1795 1795 5 1795
15 Q0 2611 18 0.1341812 Lucene_47
the complex method for constrained <B>optimization</B>  algorithm r454  cacm august  1974 shere  k  d  ca740813 jb january 17  1978 9 28 am 2611 5 2611 2611 5 2611 2611 5 2611
15 Q0 2964 19 0.1341812 Lucene_47
an approach to optimal design of storage parameters in databases cacm may  1977 milman  y  database organization  storage parameter <B>optimization</B>  resident  overflow storage 3.73 3.74 ca770508 jb december 29  1977 1 48 am 2964 5 2964 2964 5 2964 2964 5 2964
15 Q0 1231 20 0.13283262 Lucene_47
peephole <B>optimization</B> redundant instructions may be discarded during the final stage of compilation by using a simple optimizing technique called peephole <B>optimization</B>  the method is described and examplesare given  cacm july  1965 mckeeman  w  m  ca650704 jb march 6  1978 9 05 pm 1160 5 1231 1231 5 1231 1231 5 1231 1231 5 1231 2034 5 1231 984 6 1231 1231 6 1231 1231 6 1231 1565 6 1231 1852 6
15 Q0 2836 21 0.13283262 Lucene_47
 probabilistic parsing or combinatorial <B>optimization</B>  cacm september  1976 loui  m  c  derivation tree  parse tree  probabilistic grammar  structural ambiguity  combinatorial <B>optimization</B> 5.23 5.49
15 Q0 2904 22 0.13283262 Lucene_47
 well into an integrated package of local <B>optimization</B> algorithms  cacm november  1977 cocke  j  compilers  <B>optimization</B> of compiled code  program analysis  operator strength reduction  test replacement
15 Q0 2923 23 0.12600458 Lucene_47
 several aspects of recent work on advanced methods of program certification and <B>optimization</B> flow information to reflect program changes  and derives new <B>global</B> information helpful in solving many familiar <B>global</B> flow analysis problems  an illustrative application to live variable analysis
15 Q0 2680 24 0.11385653 Lucene_47
 of mounts thus decreases turnaround time  an <B>optimization</B> model for the assignment of files to disk  disk analysis  disk <B>optimization</B>  disk files file systems  file scheduling  space allocation  memory
15 Q0 2388 25 0.1100591 Lucene_47
 from binary trees  <B>global</B> and local <B>optimization</B>  sorting  recursion 3.74 5.31 ca720203 jb january 31
15 Q0 2133 26 0.10734497 Lucene_47
algorithm for the assignment problem  rectangular matrices   h   algorithm 415  cacm december  1971 bourgeois  f  lassalle  j  c  operations research  <B>optimization</B> theory  assignment problem  rectangular matrices 5.39 5.40 ca711210 jb february 2  1978 9 38 am 2133 4 2133 2133 4 2133 2134 4 2133 124 5 2133 2133 5 2133 2133 5 2133 2133 5 2133 2134 5 2133
15 Q0 2495 27 0.10734497 Lucene_47
adapting optimal code generation for arithmetic expressions to the instruction sets available on present-day computers cacm june  1973 stockhausen  p  f  arithmetic expressions  code generation  compilers  object-code <B>optimization</B>  register assignment  trees 4.12 5.24 5.32 ca730605 jb january 23  1978 2 24 pm 2495 5 2495 2495 5 2495 2495 5 2495
15 Q0 693 28 0.10734497 Lucene_47
an extension of fibonaccian search to several variables a technique which uses fibonaccian search concepts has been developed to solve <B>optimization</B> problems involving unimodal functions of several variables  the technique has not been proven to be optimal in the sense that the one-dimensional fibonaccian search is  however  it is valuable for certain kinds of calculations  cacm october  1963
15 Q0 3054 29 0.10670002 Lucene_47
 <B>optimization</B> techniques  a detailed implementation combining the most effective improvements to quicksort describing the performance of the programs are summarized  a variety of <B>special</B> situations of algorithms  code <B>optimization</B>  sorting 4.0 4.6 5.25 5.31 5.5 ca781007 dh january 29  1979 5 40 pm
15 Q0 2188 30 0.102448106 Lucene_47
 with an <B>optimization</B>  the best graphics system configuration  subject to a cost constraint  is found for several applications  the optimum configurations are in turn used to <B>find</B> general display system design
15 Q0 2253 31 0.09488044 Lucene_47
index ranges for matrix calculi the paper describes a scheme for symbolic manipulation of index expressions which arise as a by-product of the symbolic manipulation of expressions in the matrix calculi described by the authors in a previous paper  this scheme attempts program <B>optimization</B> <B>optimization</B>  range operations  symbolic manipulation  syntactic analysis  well-formed expressions
15 Q0 2616 32 0.09488044 Lucene_47
on the conversion of programs to decision tables  method and objectives the problems of converting programs to decision tables are investigated  objectives of these conversions are mainly program debugging and <B>optimization</B> in practice  extensions to the theory of computation and computability are suggested  cacm august  1974 cavouras  j  c  decision tables  program <B>optimization</B>  debugging
15 Q0 2812 33 0.09488044 Lucene_47
 to the form necessary for use by the soda  systems <B>optimization</B> and design algorithm  program  physical system design  accurately defined systems  systems <B>optimization</B> and design algorithm 2.44
15 Q0 3018 34 0.09488044 Lucene_47
covering edges by cliques with regard to keyword conflicts and intersection graphs kellerman has presented a method for determining keyword conflicts and described a heuristic algorithm which solves a certain combinatorial <B>optimization</B> problem in connection with this method  this <B>optimization</B> problem is here shown to be equivalent to the problem of covering the edges of a graph by complete
15 Q0 2290 35 0.09392685 Lucene_47
immediate predominators in a directed graph  h   algorithm a430  cacm august  1972 purdom jr   p  w  moore  e  f  predominator  immediate predominator  graph theory  directed graph  shortest path  articulation  connectivity  program <B>optimization</B>  optimizing compiler 4.12 5.32 ca720812 jb january 30  1978 9 19 am 1807 4 2290 2034 4 2290 2290 4 2290 2579 4 2290 2923 4 2290 2945 4 2290 1947 5 2290
15 Q0 1676 36 0.092963465 Lucene_47
 blocking table   pass i to pass iii   machine-independent <B>optimization</B> occurs in pass ii and do-loop and machine-dependent <B>optimization</B> in pass iii  cacm november  1968 mendicino  s  f  martin  j  t technique  polish processor  common subsegments  tree representation  <B>optimization</B> 4.12 4.20 ca681103
15 Q0 3080 37 0.092963465 Lucene_47
 use of the system is as a post <B>optimization</B> step in code generation  the low level language programs of errors in the low level language programs  the examples demonstrate that <B>optimization</B> of the genre of program and stack sizes  cacm july  1978 samet  h  compilers  correctness  code <B>optimization</B>  debugging
15 Q0 104 38 0.080508724 Lucene_47
  with the objective being <B>optimization</B> of parameters such as storage capacities and processing rates  in the other
15 Q0 1195 39 0.080508724 Lucene_47
 data  and format the output for <B>optimization</B> of processing on the ibm 7090 system  the programs
15 Q0 1658 40 0.080508724 Lucene_47
  cacm december  1968 gue  r  l  liggett  j  c  cain  k  c  operations research  <B>optimization</B> theory
15 Q0 2000 41 0.080508724 Lucene_47
  optimal control  <B>optimization</B>  ordinary differential equations  secant method  interpolative solution
15 Q0 2134 42 0.080508724 Lucene_47
 bourgeois  f  lassalle  j  operations research  <B>optimization</B> theory  assignment problem  rectangular
15 Q0 2321 43 0.080508724 Lucene_47
on the interface between computers and data communications systems future systems that combine computers  digital terminals  and communications equipment present design <B>optimization</B> problems that require reconsideration of the traditional functional responsibilities of the respective subsystems  several  standard  interfaces  by means of which computers and digital terminals connect
15 Q0 2411 44 0.080508724 Lucene_47
tree-structured programs cacm november  1973 wegner  e  control structures  flowcharts  goto statements  inductive assertion  least fix points  <B>optimization</B> in compilers  program documentation  program flow graphs  programming language design  proof of programs  semantics of programming languages  structured programming  4.12 4.22 5.24 ca731115 jb january 19  1978 4 19 pm 2411 4 2411 2411 4 2411
15 Q0 2570 45 0.080508724 Lucene_47
  precedence graphs  scheduling  list scheduling  <B>optimization</B>  dynamic programming 4.3 4.32 4.34 4.35 5.3
15 Q0 2953 46 0.080508724 Lucene_47
 of their running time  cacm june  1977 bird  r  s  recursion elimination  <B>optimization</B> of programs  stacks  trees
15 Q0 2969 47 0.080508724 Lucene_47
optimal program and data locations in computer networks an <B>optimization</B> procedure for the allocation of program and data files in a computer network is presented  this algorithm takes into account the dependencies between files and programs such as occur in real heterogeneous computer networks  insights into whether or not to convert programs from one computer to another can also be gained from
15 Q0 2537 48 0.075904354 Lucene_47
  the storage technique gives rise to a mathematical <B>optimization</B> problem  determine how each message  minimum space  text storage  <B>optimization</B>  dynamic programming 3.73 4.10 5.41 ca730302 jb january 24
15 Q0 1223 49 0.068385825 Lucene_47
 and recursively calculable expressions from <B>loops</B> and to do the important part of common subexpression recognition  <B>optimization</B> such as the effective use of index registers  although as important
15 Q0 1410 50 0.0670906 Lucene_47
interarrival statistics for time sharing systems the <B>optimization</B> of time-shared system performance requires the description of the stochastic processes governing the user inputs and the program activity  this paper provides a statistical description of the user input process in the sdc-arpa general-purpose time-sharing system  tss   the input process is assumed to be stationary
15 Q0 1564 51 0.0670906 Lucene_47
 as it is generated  a line at a time  the only <B>optimization</B> attempted is the elimination of obviously
15 Q0 1719 52 0.0670906 Lucene_47
 is illustrated by carrying out a portion of the performance calculation and the <B>optimization</B> of a drum-oriented
15 Q0 1974 53 0.0670906 Lucene_47
  this feature is expected to provide a major aid in <B>optimization</B> of pl i programs  cacm november  1970 conrow
15 Q0 2433 54 0.0670906 Lucene_47
 allocation rather than code structuring is the crucial illiac <B>optimization</B> problem  a satisfactory
15 Q0 2579 55 0.0670906 Lucene_47
 november  1974 freiburghouse  r  a  <B>optimization</B>  redundant computations  common subexpressions
15 Q0 2699 56 0.0670906 Lucene_47
  cacm december  1975 schwartz  j  t  program <B>optimization</B>  automatic programming  high-level languages
15 Q0 2858 57 0.0670906 Lucene_47
 of <B>optimization</B> criteria  cacm june  1976 frieder  g  saal  h  j  variable length addressing  assembler  paging
15 Q0 2883 58 0.0670906 Lucene_47
  edge detection  contour detection  contour following  <B>optimization</B> problems  dynamic programming
15 Q0 2903 59 0.0670906 Lucene_47
 stack algorithm  cacm november  1977 bird  r  s  program transformation  <B>optimization</B> of programs
15 Q0 3002 60 0.0670906 Lucene_47
 in the <B>optimization</B> of library routines  storage at a large scale operating system  cacm january  1977
15 Q0 3020 61 0.0670906 Lucene_47
  recursion removal  recursion elimination  <B>optimization</B>  procedure linkage  procedure integration 4.19
15 Q0 2851 62 0.062211078 Lucene_47
 correctness conditions can be expressed without enumeration of the set of <B>all</B> possible control states exclusion  it is shown that assertions-oriented proof methods are <B>special</B> cases of the induction principle  a <B>special</B> case of the assertions method  which is called parallel place assertions  is shown local variables and permits shared <B>global</B> variables  correctness of certain forms of implementation
15 Q0 1951 63 0.053672485 Lucene_47
  e  jackson  p  e  computer communications  time-sharing  operating systems  <B>optimization</B> models
15 Q0 2015 64 0.053672485 Lucene_47
  floyd-evans productions  precedence grammars  translator <B>optimization</B>  merger algorithm  minimum cost
15 Q0 2423 65 0.053672485 Lucene_47
  syntactic analysis  normal-form grammars  pushdown automata  translation grammars  translator <B>optimization</B>
15 Q0 2451 66 0.053672485 Lucene_47
design of tree structures for efficient querying a standard information retrieval operation is to determine which records in a data collection satisfy a given query expressed in terms of data values  the process of locating the desired responses can be represented by a tree search model  this paper poses an <B>optimization</B> problem in the design of such trees to serve a well-specified application
15 Q0 2715 67 0.053672485 Lucene_47
 to an arbitrary query  the <B>optimization</B> algorithms designed for this purpose are described  cacm
15 Q0 2722 68 0.053672485 Lucene_47
  log n   and <B>optimization</B>  guarantees logarithmic performance of searches   o  n log n   search
15 Q0 2314 69 0.046963423 Lucene_47
 features are described to facilitate program composition  entry  testing  debugging  editing  <B>optimization</B>
15 Q0 3053 70 0.046963423 Lucene_47
  <B>optimization</B>  although packing costs remain linear-o n -with table size n  the techniques are primarily suited
15 Q0 1961 71 0.046803113 Lucene_47
an efficient search algorithm to <B>find</B> the elementary circuits of a graph a theoretically most efficient search algorithm is presented which uses an exhaustive search to <B>find</B> <B>all</B> of the elementary circuits of a graph  the algorithm can be easily modified to <B>find</B> <B>all</B> of the elementary circuits with a particular attribute such as length  a rigorous proof of the algorithm is given as well
15 Q0 1808 72 0.04516913 Lucene_47
advanced cryptographic techniques for computers cryptographic techniques which can be used to maintain the confidentiality of information processed by computers are dealt with  <B>special</B> <B>emphasis</B> is paid to the unique characteristics of computer files that make many cryptographic methods of little use  relative security  costs  and preferred methods are included in this paper  cacm december  1969
15 Q0 2174 73 0.042812437 Lucene_47
the stable marriage problem the original work of gale and shapley on an assignment method using the stable marriage criterion has been extended to <B>find</B> <B>all</B> the stable marriage assignments  the algorithm derived for finding <B>all</B> the stable marriage assignments is proved to satisfy <B>all</B> the conditions of the problem  algorithm 411 applies to this paper  cacm july  1971 mcvitie  d  g  wilson l  b
15 Q0 2827 74 0.038606 Lucene_47
a parametric algorithm for drawing pictures of solid objects composed of quadric surfaces an algorithm for drawing pictures of three-dimensional objects  with surfaces made up of patches of quadric surfaces  is described  the <B>emphasis</B> of this algorithm is on calculating the intersections of quadric at most two points  and these may easily be distinguished  this scheme can <B>find</B> the coordinates of points
15 Q0 2940 75 0.037135355 Lucene_47
 that for common <B>special</B> cases of these <B>loops</B> are essentially identical to the corresponding constructs data and the control structure of the language itself  a means of specializing alphard s <B>loops</B>
15 Q0 3132 76 0.036752112 Lucene_47
experiments with some algorithms that <B>find</B> central solutions for pattern classification in two-class pattern recognition  it is a standard technique to have an algorithm finding hyperplanes which separates the two classes in a linearly separable training set  the traditional methods <B>find</B> a hyperplane which separates <B>all</B> points in the other  but such a hyperplane is not necessarily centered
15 Q0 1197 77 0.032672342 Lucene_47
finding zeros of a polynomial by the q-d algorithm a method which finds simultaneously <B>all</B> the zeros of a polynomial  developed by h  rutishauser  has been tested on a number of polynomials with real roundoff may result in errors which spoil the scheme  even if the q-d algorithm does not give <B>all</B> the zeros  it will usually <B>find</B> a majority of them  cacm september  1965 henrich  p  watkins  b  o
15 Q0 3037 78 0.032672342 Lucene_47
 elegant  it is also easily extended to <B>find</B> the prime factorization of <B>all</B> integers between 2 and na linear sieve algorithm for finding prime numbers a new algorithm is presented for finding <B>all</B> primes between 2 and n  the algorithm executes in time proportional to n  assuming that multiplication of integers not larger than n can be performed in unit time   the method has the same arithmetic
15 Q0 1710 79 0.032263666 Lucene_47
asp-a ring implemented associative structure package asp is a general purpose associative data structure package in which an arbitrary number of data items and an arbitrary number of the relationships between these data items may be represented  a <B>special</B> picture language is described which has by means of a series of macro calls  which are outlined in the appendix  <B>emphasis</B> is on the philosophy
15 Q0 1750 80 0.032263666 Lucene_47
 of such a design  <B>special</B> <B>emphasis</B> is placed on estimating expected gains when compared
15 Q0 2065 81 0.032263666 Lucene_47
a programming system for the on-line analysis of biomedical images a preliminary description of the software for a computer-display system is given with <B>special</B> <B>emphasis</B> on the man-machine interaction  this system is intended for a wide variety of biomedical applications  as an example  the methods are applied to the karyotyping of chromosomes  the system is separated into four programming tasks
15 Q0 2081 82 0.032263666 Lucene_47
some complete calculi for matrices a matrix calculus is introduced with the intention of developing data structures suitable for a high level algorithmic language for mathematical programming  the paper investigates how the <B>special</B> structure of matrices can be described and utilized for efficient as to <B>find</B> the forms best suited for computation  these forms are called normal forms  several
15 Q0 695 83 0.032263666 Lucene_47
use of the disk file on stretch the paper begins by briefly describing the stretch  ibm 7030  computer with <B>special</B> <B>emphasis</B> given to the organization and operation of its input-output equipment  physical characteristics of the two-disk system  4,194,304 72-bit words  8 usec-per-word transmission rate  etc   are noted  timing limitations due to arm motion and disk rotation are discussed
15 Q0 3157 84 0.02940169 Lucene_47
 throughout the computation  <B>all</B> too often  the termination functions required are difficult to <B>find</B>proving termination with multiset orderings a common tool for proving the termination of programs is the well-founded set  a set ordered in such a way as to admit no infinite descending sequences  the basic approach is to <B>find</B> a termination function that maps the values of the program variables
15 Q0 2943 85 0.029295538 Lucene_47
 of inference for the <B>special</B> lucid functions  as a programming language  lucid is unconventional because structured programming language using assignment and conditional statements and <B>loops</B>  cacm july  1977
15 Q0 2750 86 0.02875655 Lucene_47
 <B>find</B> a set of assumptions which simplify the problem greatly  but which still provide a basis for considering <B>all</B> significant cost elements  this paper presents such a first  quantitative allocation
15 Q0 820 87 0.028390503 Lucene_47
checking for <B>loops</B> in networks cacm july  1963 gordon  r  m  ca630704 jb march 14  1978 8 47 am 820 5 820 820 5 820 820 5 820
15 Q0 2880 88 0.026495915 Lucene_47
a fast division technique for constant divisors a fast algorithm for division by constant divisors is presented  the method has proved very useful implemented as <B>microcode</B> ona binary machine  and can be adapted directly into hardware  the mathematical foundations of the algorithm are presented as well as some performance measures  cacm february  1976 artzy  e  hinds  j  a  saal  h  j  constant
15 Q0 2396 89 0.025810933 Lucene_47
 a simplified semantic intersection procedure to <B>find</B> a valid interpretation of the input  while and <B>special</B> purpose rules  the  relational triple  notation used during interpretation of input
15 Q0 1737 90 0.024059862 Lucene_47
a <B>global</B> parser for context-free phrase structure grammars cacm june  1968 unger  s  h  ca680608 jb february 22  1978 4 08 pm 1737 5 1737 1737 5 1737 1737 5 1737
15 Q0 2685 91 0.02342097 Lucene_47
the parallel execution of do <B>loops</B> methods are developed for the parallel execution of different iterations of a do loop  both asynchronous multiprocessor computers and array computers are considered  practical application to the design of compilers for such computers is discussed  cacm february  <B>loops</B> 4.12 5.24 ca740204 jb january 18  1978 1 14 pm 2685 5 2685 2685 5 2685 2685 5 2685 2785 5 2685
15 Q0 3118 92 0.02342097 Lucene_47
permutation of data blocks in a bubble memory a common internal organization of bubble memories consists of a set of  minor  <B>loops</B>  connected through another  major  loop  the problem of obtaining any give n permutation of the minor loop contents in minimum time is studied in this paper  a lower algorithms is identified  cacm january  1979 bongiovanni  g  luccio  f  bubble memory  memory <B>loops</B>
15 Q0 1752 93 0.02300524 Lucene_47
 <B>emphasis</B> is placed on balancing the system performance relative to the characteristics of <B>all</B>
15 Q0 2003 94 0.02300524 Lucene_47
an interactive software system for computers-aided design  an application to circuit project the characteristics of an interactive software system  intended to constitute an interface between designer and computer during various steps of the design process  are presented  the main <B>emphasis</B> is given <B>all</B> the functions needed in computer-aided circuit design  the second one is coif  a circuit oriented
15 Q0 3057 95 0.02300524 Lucene_47
optimal his togram matching by monotone gray level transformation this paper investigates the problem of optimal his togram matching using monotone gray level transformation  which always assigns <B>all</B> picture points of a given gray level i to another gray level t i  such that if i  gt  j  then t i   gt  t j   the objective is to <B>find</B> a transformed digital picture of a given picture
15 Q0 3166 96 0.02300524 Lucene_47
 for automatic computation  our discussion is expository  with <B>emphasis</B> on reaching a suitable it will be accurate  we conclude that <B>all</B> four algorithms will provide accurate answers for many problems
15 Q0 972 97 0.02300524 Lucene_47
 permit the system to be most sensitive to the console inputs and permit the operators at <B>all</B> transitions of control among the programming system components  the major <B>emphasis</B> of the paper
15 Q0 1409 98 0.022414219 Lucene_47
nebula  a digital computer using a 20 mc glass delay line memory oregon state university has designed and constructed a medium-speed serial digital computer using glass delay lines circulating at 22 mc as memory  the design objectives as originally conceived in a <B>special</B> seminar were   1 arithmetic and control registers throughout  <B>all</B> hardware development has been aimed toward the concept
15 Q0 1423 99 0.022414219 Lucene_47
a simple algorithm for computing the generalized inverse of a matrix the generalized inverse of a matrix is important in analysis because it provides an extension of the concept of an inverse which applies to <B>all</B> matrices  it also has many applications in numerical analysis  but it is not widely the <B>special</B> case when m n and a is non-singular and the case when m gt n and rank a    n
15 Q0 278 100 0.022414219 Lucene_47
  if there is a mapping underwhich p and its effective data referents are <B>all</B> located in the direct address set of m of interludes  an existence proof in terms of a completely interpretive m program as indicated  some <B>special</B>
*************Query 16*************************

16 Q0 3141 1 0.22061133 Lucene_47
  <B>operating</B> <B>systems</B> 4.32 4.35 5.25 5.32 ca790502 dh june 5  1979 2 35 pm 3141 5 3141 3141 5 3141 3141 5an improved algorithm for decentralized extrema-finding in circular configurations of <B>processes</B> of uniquely numbered <B>processes</B> arranged in a circle  in which no central controller exists and the number of <B>processes</B> is not known a priori  this decentralized algorithm uses a technique of selective
16 Q0 1135 2 0.21070224 Lucene_47
 as characteristic of the class of <B>all</B> batch <B>file</B> <B>processes</B>  this new philosophy has the potential common to <B>all</B> <B>processes</B> of such class  permits writing extremely compact programs  even for comparativelya general business-oriented language <B>based</B> on decision expressions  the structure of a digital compute programming language which covers a wide class of business and <B>file</B> processing applications
16 Q0 243 3 0.18426141 Lucene_47
n-dimensional codes for detecting and correcting <B>multiple</B> errors the paper introduces a new family of codes for detecting and correcting <B>multiple</B> errors in a binary-coded <B>message</B>  the <B>message</B> itself is arranged  conceptually  into a multidimensional rectangular array  the <B>processes</B> of encoding and error detection are <B>based</B> upon parity evaluations along prescribed dimensions of the array
16 Q0 2378 4 0.16690758 Lucene_47
an <B>operating</B> system <B>based</B> on the concept of a supervisory computer an <B>operating</B> system which is organized as a small supervisor and a set of independent <B>processes</B> are described  the supervisor handles i o with external devices-the <B>file</B> and directory system-schedules active <B>processes</B> and manages  cacm march  1972 gaines  r  s  <B>operating</B> <B>systems</B>  supervisors  multiprogramming  time-sharing
16 Q0 2184 5 0.14420965 Lucene_47
on the meaning of names in programming <B>systems</B> it is assumed that there is a similarity of function between the data names of a programming language and the <B>file</B> names of an <B>operating</B> system  the two name list  value list  expression   cacm july  1971 fraser  a  g  <B>file</B>  <B>operating</B> system  programming to which they overlap  it is suggested that there is some similarity between the idea of a <B>file</B> directory
16 Q0 1750 6 0.14418323 Lucene_47
 of the faster memory  cacm may  1968 fuchel  k  heller  s  <B>multiple</B> computer <B>systems</B>  extended core storage  multiprogrammed <B>operating</B> <B>systems</B>  multiprocessor <B>operating</B> <B>systems</B>  control data corporationconsiderations in the design of a <B>multiple</B> computer system with extended core storage the use arrangement and the software components and functions of such a system are <B>based</B> on a planned
16 Q0 2080 7 0.12911007 Lucene_47
 of <B>processes</B> as well as the communication among them  cacm april  1970 hansen  p  b  multiprogramming  <B>operating</B> <B>systems</B>  parallel <B>processes</B>  process concept  process communication  <B>message</B> buffering  processthe nucleus of a multiprogramming system this paper describes the philosophy and structure of a multiprogramming system that can be extended with a hierarchy of <B>operating</B> <B>systems</B> to suit diverse
16 Q0 3021 8 0.12848242 Lucene_47
 applications in  electronic mail  and  electronic funds transfer  <B>systems</B>  a <B>message</B> is encrypted means are not needed to transmit keys  since a <B>message</B> can be enciphered using an encryption key publicly revealed by the intended recipient  only he can decipher the <B>message</B>  since only he knows the corresponding decryption key   2  a <B>message</B> can be  signed  using a privately held decryption key
16 Q0 409 9 0.12786053 Lucene_47
 and or programmers has been developed and realized on the ibm 709 7090 computer  the system is <B>based</B> on a master <B>file</B> concept and has provisions for accepting  storing  and retrieving both <B>descriptions</B> of distinct data <B>descriptions</B> and the content and use of such <B>descriptions</B> are discussed in some detail
16 Q0 1854 10 0.12511973 Lucene_47
  it is intended to serve as a basis for the construction of <B>operating</B> <B>systems</B>  which are prime examples organization  <B>file</B> <B>handling</B>  pl360 4.21 4.22 4.32 4.41 6.21 ca690901 jb february 15  1978 5 14 pm 1380 4 for the generation  termination  and synchronization of parallel <B>processes</B>  a set of routines representing
16 Q0 2740 11 0.12322321 Lucene_47
a large semaphore <B>based</B> <B>operating</B> system the paper describes the internal structure of a large <B>operating</B> system as a set of cooperating sequential <B>processes</B>  the <B>processes</B> synchronize by means structuring of <B>operating</B> <B>systems</B>  the project management and the performance are discussed  too lauesen  s  cooperating <B>processes</B>  <B>operating</B> system  semaphores  semaphore applications  queue semaphores
16 Q0 3157 12 0.12033129 Lucene_47
 throughout the computation  <B>all</B> too often  the termination functions required are difficult to <B>find</B>  the basic approach is to <B>find</B> a termination function that maps the values of the program variables a given well-founded set s are sets that admit <B>multiple</B> occurrences of elements taken from s  the given to prove the termination of production <B>systems</B>  programs defined in terms of sets of rewriting rules
16 Q0 2522 13 0.12020447 Lucene_47
 to the <B>processes</B> competing for them  recent research in time-sharing paging <B>systems</B> has developed the working set model for program behavior  and are source allocation strategy <B>based</B> on this model has been allocation  software evaluation  <B>operating</B> <B>systems</B>  supervisory <B>systems</B> 4.31 4.32 ca730406 jb of a dispatcher <B>based</B> on the working set principle  presents data to permit analysis of its behavior
16 Q0 2438 14 0.11918222 Lucene_47
 processor is assumed  and the implementation assumes <B>multiple</B>-<B>processes</B> coordinate by <B>passing</B> controla model and stack implementation of <B>multiple</B> environments many control and access environment structures require that storage for a procedure activation exist at times when control is not nested  multiprocessor <B>systems</B>  extensible control structures 4.1 4.2 4.22 4.3 4.32 5.24 ca731002 jb january 23
16 Q0 2629 15 0.11809831 Lucene_47
 seldom found even in larger <B>operating</B> <B>systems</B>  including   1  a hierarchical <B>file</B> system incorporating demountable volumes   2  compatible <B>file</B>  device  and inter-process i o   3  the ability-sharing  <B>operating</B> system  <B>file</B> system  command language  pdp-11 4.30 4.32 ca740702 jb january 17  1978 1the unix time-sharing system unix is a general-purpose  multi-user  interactive <B>operating</B> system
16 Q0 2217 16 0.11147769 Lucene_47
 for pp  a <B>multiple</B> regression program was used to produce optimal coefficients for linear polynomial functions in terms of the features  also  automatic data-<B>handling</B> routines were written for <B>passing</B> capability has been developed and implemented for use with the <B>multiple</B>  multipurpose program that learns in predicate calculus  <B>multiple</B> s proving program  pp  uses two evaluation functions to guide its
16 Q0 1747 17 0.105260655 Lucene_47
 clock  the synchronization of parallel <B>processes</B>  protection in multiprogrammed <B>systems</B> criteria  computer <B>systems</B>  computer <B>systems</B> design  input equipment  input equipment design  <B>operating</B> <B>systems</B>  <B>operating</B> <B>systems</B> design  multiprogramming  multiprogrammed <B>systems</B>  multiprogrammed systemthree criteria for designing computing <B>systems</B> to facilitate debugging the designer of a computing
16 Q0 2750 18 0.10418917 Lucene_47
a cost oriented algorithm for data set allocation in storage hierarchies data set allocation in today s multilevel storage <B>systems</B> is usually <B>based</B> on qualitative  ad hoc decisions  while it would <B>find</B> a set of assumptions which simplify the problem greatly  but which still provide a basis for considering <B>all</B> significant cost elements  this paper presents such a first  quantitative allocation
16 Q0 2688 19 0.098836765 Lucene_47
attribute <B>based</B> <B>file</B> organization in a paged memory environment the high cost of page accessing  retrieval algorithm  inverted <B>file</B>  <B>multiple</B> key hashing 3.70 3.73 3.74 3.79 ca740201 jb january 18  1978 1 <B>file</B> and similar approaches to multi-key retrieval  this article analyses that cost and proposes a method called <B>multiple</B> key hashing which attempts to minimize it  since this approach is not always
16 Q0 2002 20 0.09427385 Lucene_47
  in the layout of <B>multiple</B> subplots  of axes  labels  and <B>all</B> other elements of the plot are handled manufacturers  having diverse configurations  the elements common to <B>all</B> types of data plots are outlined and the way in which these elements may be combined into a system <B>based</B> on simple modules is demonstrated  these modules are specified independently and are independent of the axis <B>systems</B> or other
16 Q0 1846 21 0.09254949 Lucene_47
on simulating networks of parallel <B>processes</B> in which simultaneous events may occur some of the problems of simulating discrete event <B>systems</B>  particularly computer <B>systems</B>  on a conventional digital computer are dealt with  the <B>systems</B> are assumed to be described as a network of interconnected sequential <B>processes</B>  briefly reviewed are the common techniques used to handle such simulations when
16 Q0 2622 22 0.0908533 Lucene_47
a user authentication scheme not requiring secrecy in the computer in many computer <B>operating</B> <B>systems</B> a user authenticates himself by entering a secret password known solely to himself and the system  in this paper a password scheme is presented which does not require secrecy in the computer  <B>all</B> aspects of the system  including <B>all</B> relevant code and data bases  may be known by anyone attempting
16 Q0 696 23 0.090620205 Lucene_47
 over 200 remote input stations which collect and transmit company <B>operating</B> data to a central data processing center  two rca 301 edp <B>systems</B> are used to record and control the flow of data transmitted to the data processing center  a large capacity rca 366 data disc <B>file</B> is used to store information <B>all</B> incoming and outgoing data on magnetic tape to be used as input to the company s conventional off
16 Q0 3002 24 0.0880318 Lucene_47
 model and a mixed integer programming model  is a very general one  several types of <B>file</B> <B>systems</B> maya record and <B>file</B> partitioning model one of the main objectives in the design of a <B>file</B> system requests access the <B>file</B> system  and each request requires information from one or more variable length to be known  and to be mutually independent  the <B>file</B> system uses one or more storage devices
16 Q0 2542 25 0.08609136 Lucene_47
 evaluation with design and implementation is described  this system is <B>based</B> on a simple  high level language which is used to describe the evolving system at <B>all</B> stages of its development  the source  <B>operating</B> system development  language processing software evaluation  compilers  system programming  supervisory <B>systems</B>  debugging  program maintenance  modeling  system integration  simulation 4.0
16 Q0 3134 26 0.085931644 Lucene_47
 a method for the organization and retrieval of attribute <B>based</B> information <B>systems</B>  using the normal requesting a group of information items  <B>all</B> of which possess a particular set of attributes  and possibly of information <B>systems</B>  the normal multiplication table method yields far more rapid retrieval with a more economical space requirement than conventional <B>systems</B>  moreover this method incorporates
16 Q0 1226 27 0.08465858 Lucene_47
the organization of structured files a data <B>file</B> is an integral part of a data processing system  in many <B>systems</B>  the selection of an organization for the data within the <B>file</B> can be critical to the system s <B>operating</B> efficiency  this paper provides the <B>systems</B> designer with an information source with a reference which allows him to limit the number of <B>file</B> organizations he must consider for his system
16 Q0 1517 28 0.08402142 Lucene_47
 to the problem of analyzing data generated by computer simulations of economic <B>systems</B>  we first turn <B>operating</B> plans  where each plan incorporates a certain marketing strategy  an allocation of productive-test  two <B>multiple</B> comparison methods  and a <B>multiple</B> ranking method  we illustrate  compare experimental objective  the f-test tests the homogeneity of the plans  <B>multiple</B> comparison methods quantify
16 Q0 2266 29 0.07986213 Lucene_47
a highly parallel algorithm for approximating <B>all</B> zeros of a polynomial with only real zeros an algorithm is described <B>based</B> on newton s method which simultaneously approximates <B>all</B> zeros of a polynomial with only real zeros  the algorithm  which is conceptually suitable for parallel computation  determines its own starting values so that convergence to the zeros is guaranteed  <B>multiple</B> zeros
16 Q0 2949 30 0.07934671 Lucene_47
 be implemented on any computer network  it is <B>based</B> on baran s  hot potato heuristic routing doctrine  network topology  routing problem in networks  distributed <B>operating</B> system  store and forward packet switching  store and forward <B>message</B> switching  traffic control 3.81 4.32 ca770703 jb december 28
16 Q0 2833 31 0.07923324 Lucene_47
  and a linearizing  compacting  copying scheme to reorganize <B>all</B> storage at the users discretion are proposed  the algorithms are designed to work well in <B>systems</B> which use <B>multiple</B> levels of storage <B>file</B> stores changes to reference counts  and a <B>multiple</B> reference table stores the count for items
16 Q0 858 32 0.07775244 Lucene_47
 computer time by varying the power of the merge cycles  so as to use <B>all</B> the available tape drives  with its characteristic of assigning one drive to a single-reel <B>file</B> and two drives to each <B>multiple</B>-reel <B>file</B>  cacm may  1963 cooke  w  s  ca630509 jb march 14  1978 11 21 am 2017 5 858 851 5 858 858 5 858a tape <B>file</B> merge pattern generator a routine is presented which specifies the sequence of merge
16 Q0 1032 33 0.07696295 Lucene_47
 organization are discussed  one is self-organization of the <B>file</B> <B>based</B> on its history and pasttheoretical considerations in information retrieval <B>systems</B> information storage and retrieval <B>systems</B> are composed of three major components   a  identification of information and tagging it for effective retrieval   b  searching strategy  how to enter the <B>file</B> to circumvent the scanning
16 Q0 1264 34 0.076936394 Lucene_47
blnsys-a 1401 <B>operating</B> system with braille capabilities blnsys is an <B>operating</B> system designed for a 4k 1401 with common optional features and two attached tape drives  printed output of this system for a small machine with minimal peripheral equipment  jobs may be batched  so that card <B>handling</B> and lost processing time is at a minimum  this system will perform any or <B>all</B> of the following users
16 Q0 1928 35 0.074793234 Lucene_47
 networks of large and active digital <B>systems</B> is described  essential objectives sought are improved for <B>handling</B> simultaneous activities  the main results obtained are a clear and useful separation into a structural model  the elimination of manual <B>processes</B> in achieving exclusive simulation of activity activities  the passage of time is simulated in a precise  quantitative fashion and <B>systems</B>
16 Q0 2342 36 0.073127374 Lucene_47
  interference  mutual exclusion  <B>operating</B> <B>systems</B>  parallel <B>processes</B> 4.0 4.10 4.30 4.32 4.42 5.24interference between communicating parallel <B>processes</B> various kinds of interference between communicating parallel <B>processes</B> have been examined by dijkstra  knuth  and others  solutions have been of parallel <B>processes</B> is regarded as a machine which proceeds from one state s  i e  a collection
16 Q0 1514 37 0.07302327 Lucene_47
on the expected gain from adjust ing matched term retrieval <B>systems</B> a <B>file</B> adjustment procedure <B>based</B> on maximizing the bayes expected gain proposed for matched term retrieval <B>systems</B>  the expected gain and its probability distribution are derived as a function of   1  the prior proportion of omitted terms  and  2  the coefficient of separation between two distributions corresponding to values
16 Q0 1199 38 0.07276237 Lucene_47
a computer center simulation project today s computation centers are <B>based</B> on rapidly changing technologies of hardware and software <B>systems</B>  it is difficult  therefore  to base decisions on experience  in most instances  the benefits of comparable experience for a given problem situation <B>processes</B>  and control functions  experiments performed with this model  the results of the experiments
16 Q0 2582 39 0.07254571 Lucene_47
 to restructure an interactive text editor and the <B>file</B> system module of an <B>operating</B> system have shown itsimproving locality by critical working sets a new approach to program locality improvement via restructuring is described  the method is particularly suited to those <B>systems</B> where primary memory is managed according to a working set strategy  it is <B>based</B> on the concept of critical working set
16 Q0 2357 40 0.07197076 Lucene_47
mux  a simple approach to on-line computing an on-line system <B>operating</B> as part of a normal batch for parts and fabrication  <B>all</B> aspects of the system are described  including design criteria computing  on-line access  on-line computing  remote <B>file</B> manager  real time  multiplexer  implementation effort  <B>operating</B> overhead  user reactions  remote terminals  <B>operating</B> system 3.79 3.89 4.39
16 Q0 1003 41 0.071660295 Lucene_47
a computer analysis method for thermal diffusion in biochemical <B>systems</B> in the thermal detection  as well as the heat produced by this reaction  the program is <B>based</B> on a direct statement of fourier of a process are used explicitly in the program  usually this results in by <B>passing</B> much biochemical reaction  the construction of computer programs <B>based</B> on the direct statement of the physical
16 Q0 3039 42 0.07149602 Lucene_47
 sequential <B>processes</B> with very little mutual interference despite frequent manipulations of a large shared data space  a technique is developed which allows nearly <B>all</B> of the activity needed for garbage detection and collection to be performed by an additional processor <B>operating</B> con-currently-grained interleaving  cooperation between sequential <B>processes</B> with minimized mutual exclusion
16 Q0 2947 43 0.07079034 Lucene_47
 text <B>handling</B> and text analysis system for nontechnical users  is in many ways comparable to in teractive bibliographical search and retrieval <B>systems</B>  but has several additional features  it uses a simple command language designating a function  a <B>file</B>  and a search template consisting  circular <B>file</B> structure  a crt with local memory  and conversational computing produce a system much
16 Q0 3127 44 0.07058431 Lucene_47
  sager  g  portability  real time  <B>operating</B> <B>systems</B>  minicomputer 3.80 4.30 4.35 ca790206 dh aprilthoth  a portable real-time <B>operating</B> system thoth isa real-time <B>operating</B> system which is designed to be portable over a large set of machines  it is currently running on two minicomputers portable  thoth encourages structuring programs as networks of communicating <B>processes</B> by providing
16 Q0 1844 45 0.070568025 Lucene_47
  rittenhouse  l  e  <B>multiple</B> terminal <B>systems</B>  terminal oriented <B>systems</B>  <B>multiple</B> processor <B>systems</B>  high availability  conversational <B>systems</B>  general purpose time-sharing <B>systems</B>  real-time response system  modular constructed <B>systems</B>  modular computer-sharing <B>systems</B>  graphics  <B>file</B> switch  economic configurations are possible for a range of <B>systems</B> sizes that span at least one order of magnitude
16 Q0 2320 46 0.06919013 Lucene_47
 competing <B>processes</B> to any degree desired  these concepts are sufficiently safe to use not only within <B>operating</B> <B>systems</B> but also within user programs  cacm july  1972 hansen  p  b  structured multiprogramming  programming languages  <B>operating</B> <B>systems</B>  concurrent <B>processes</B>  shared data  mutual exclusion by concurrent <B>processes</B> with operations defined on it  this clarifies the meaning of programs
16 Q0 2931 47 0.06905328 Lucene_47
  programs naturally enter in giving <B>descriptions</B> of <B>processes</B>  the definition of the precise simulation on a real machine  these levels can be made mathematically exact if we can <B>find</B> the right
16 Q0 1210 48 0.06893118 Lucene_47
<B>file</B>-<B>handling</B> within fortran this note describes some fortran subroutines to facilitate <B>handling</B> of tape files  they allow symbolic naming of information files  without violating the casual scientific programmer s idea of simplicity  some comments on two years use of these subroutines are given  cacm august  1965 harrison  m  c  ca650814 jb march 6  1978 7 59 pm 1210 5 1210 1210 5 1210 1210 5
16 Q0 1677 49 0.066995926 Lucene_47
 protection  addressing mechanisms  paging  segmentation  <B>file</B> <B>handling</B> 4.30 4.40 6.20 ca681102 jb february 21storage organization in programming <B>systems</B> the system of program and data representation that has been in use on the rice university computer for five years is described  each logical entity arrangement is discussed with its realized advantages or programming <B>systems</B>  simplicity
16 Q0 2424 50 0.06602821 Lucene_47
 be modest  cacm november  1973 fabry  r  s  <B>operating</B> <B>systems</B>  data security  fault tolerancedynamic verification of <B>operating</B> system decisions dynamic verification of a decision implies independent hardware and software  the dynamic verification of <B>operating</B> system decisions is used  and cost effectiveness  the technique of dynamic verification allows the construction of an <B>operating</B>
16 Q0 2777 51 0.06411013 Lucene_47
  1975 parnas  d  l  <B>operating</B> <B>systems</B>  co-<B>operating</B> <B>processes</B> process synchronization primitives 4.3
16 Q0 1959 52 0.06345009 Lucene_47
an interrupt <B>based</B> organization for management information <B>systems</B> a programming structure shared data base <B>systems</B>  the bases for this organization are a generalized interrupt structure and the newly introduced concept of  <B>file</B> tagging   which is the process of associating program the new organization which is proposed for management information <B>systems</B>  cacm december  1970 morgan  h
16 Q0 1350 53 0.06320735 Lucene_47
 be constructed  which generates the same languages as is generated by g and whose rules are <B>all</B> of the form z <B>descriptions</B> sd gs x  assigned to a given sentence x by the predictive analyzer  however  are usually different from the structural <B>descriptions</B> sd g x  assigned to the same sentence by the original context for normal grammars  the comparison is <B>based</B> upon several criteria of efficiency  covering core
16 Q0 2890 54 0.06251639 Lucene_47
on quadratic adaptive routing algorithms two analytic models of a store-and-forward communications network are constructed  one to <B>find</B> the optimal <B>message</B> routing and the other to illustrate the equilibrium  stationary state  maintained by an adaptive routing algorithm  these models show  <B>message</B> switching 3.81 8.0 8.1 8.3 ca760103 jb january 5  1978 10 37 am 2890 5 2890 2890 5 2890
16 Q0 1680 55 0.062075336 Lucene_47
 instruction  tutorial <B>systems</B>  programming  simulation  modeling  information retrieval <B>operating</B> 40  and the ibm 2250 display unit under <B>operating</B> system 360  adept is a cataloged program that controls the standard <B>operating</B> system by terminating and rescheduling itself automatically  relinquishing computer resources allocated to it  and surrendering control to the <B>operating</B> system to perform
16 Q0 2307 56 0.06113365 Lucene_47
 and of the mechanization of documentation <B>processes</B> has not been fulfilled  a new dynamic document environment an interactive user-controlled search process  methods are described for an automatic query modification <B>based</B> of earlier <B>file</B> processing and of normal collection growth  the proposed procedures provide powerful tools
16 Q0 2950 57 0.060899854 Lucene_47
 a framework for implementing flexible schedulers in real <B>operating</B> <B>systems</B>  the policy-driven scheduler  fabry  r  s  scheduling algorithms  scheduling models  priority  <B>operating</B> <B>systems</B> processora unifying approach to scheduling this paper presents a scheme for classifying scheduling algorithms <B>based</B> on an abstract model of a scheduling system which formalizes the notion of priority  various
16 Q0 2379 58 0.06083384 Lucene_47
 on the principles which guided the design  cacm march  1972 liskov  b  h  <B>operating</B> <B>systems</B>  system designthe design of the venus <B>operating</B> system the venus <B>operating</B> system is an experimental architectural feature  the software exploits these features to define the <B>operating</B> system as simply  virtual machines  <B>processes</B>  process communication  virtual devices  data sharing  resource
16 Q0 2396 59 0.060008056 Lucene_47
muse  a model to understand simple english muse is a computer model for natural language processing  <B>based</B> on a semantic memory network like that of quillian s tlc  muse  from a model to understand simple english  <B>processes</B> english sentences of unrestricted content but somewhat restricted format a simplified semantic intersection procedure to <B>find</B> a valid interpretation of the input  while
16 Q0 1753 60 0.059951276 Lucene_47
virtual memory  <B>processes</B>  and sharing in multics some basic concepts involved in the design of the multics <B>operating</B> system are introduced  multics concepts of <B>processes</B>  address space  and virtual memory are defined and the use of paging and segmentation is explained  the means by which users may  segmentation  paging  multiprogramming  storage management  storage hierarchies  <B>file</B> maintenance
16 Q0 3081 61 0.059423536 Lucene_47
  in addition  <B>multiple</B> <B>processes</B> can be active in the same environment structure  so long as rerooting leaves assoc  v  a  invariant  for <B>all</B> variables v and <B>all</B> environments a  the programmer can have access
16 Q0 1385 62 0.057690572 Lucene_47
computer technology in communist china  1956-1965 <B>based</B> on information from translations of communist chinese news items and periodical literature for the 1965 period  computer technology in china  then presumably <B>all</B>-chinese-made machines from 1965 to the present   3  computer applications   4  the trend of automation  control of production <B>processes</B> rather than data processing  and  5  the  yun ch ou hsueh
16 Q0 2421 63 0.057627983 Lucene_47
 buffer area are slow because they require <B>multiple</B> passes through the xy display <B>file</B>  the scana scan conversion algorithm with reduced storage requirements most graphics <B>systems</B> using a raster scan output device  crt or hardcopy  maintain a display <B>file</B> in the xy or random scan format  scan  only a single pass through the xy display <B>file</B> is required when generating the binary image
16 Q0 1962 64 0.05734534 Lucene_47
 of those generated by human beings  <B>multiple</B> functions  up to 14  are produced for long periods of time on a small computer  ddp-224   functions are stored on a disk <B>file</B>  functions may be created by real  interactive software  hybrid <B>systems</B>  conductor program 3.44 3.8 7.3 ca701201 jb february 9  1978 4
16 Q0 1324 65 0.056843355 Lucene_47
-answering <B>systems</B> which are programmed and <B>operating</B> are described and reviewed  the <B>systems</B> range from a conversation machine to programs which make sentences about pictures and <B>systems</B> which translate from english into logical calculi  <B>systems</B> are classified as list-structured data-<B>based</B>  graphic data-<B>based</B>  text-<B>based</B> and inferential  principles and methods of operations are detailed
16 Q0 1462 66 0.056421213 Lucene_47
multilevel <B>operating</B> <B>systems</B> the basic software for <B>all</B> newer computers is built on the well-established need for standard <B>operating</B> <B>systems</B>  this implies that <B>all</B> applications-no matter how large  large applications require supervisory monitors which handle problems similar to those of the <B>operating</B> <B>systems</B>  but at a different level  sometimes  still a third or even a fourth such level is required
16 Q0 3026 67 0.055928838 Lucene_47
 series <B>systems</B> are sperry univac s large-scale main frame computer <B>systems</B>  beginning with the 1107 to the latest system  the 1100 80  introduced in 1977  the 1100 series hardware architecture is <B>based</B>-speed register  or two operands from high-speed registers  the 1100 <B>operating</B> system is designed computer series  computer architecture  multiprocessing languages  data management <B>systems</B>  end
16 Q0 3148 68 0.055906493 Lucene_47
high level programming for distributed computing programming for distributed and other loosely coupled <B>systems</B> is a problem of growing interest  this paper describes an approach to distributed computing at the level of general purpose programming languages  <B>based</B> on primitive notions of module  <B>message</B>  and transaction key  the methodology is shown to be independent of particular languages
16 Q0 1698 69 0.055899225 Lucene_47
 to characterize the entire user community  <B>based</B> on the properties of this community we have postulated the model we answer questions like  how many <B>processes</B> are suspended waiting for console input  what  answers to these and similar questions are needed in certain aspects of <B>operating</B> system design  cacm september  1968 denning  p  j  statistical models for input-output  <B>operating</B> system design
16 Q0 2188 70 0.055601757 Lucene_47
an approach to the optimum design of computer graphics <B>systems</B> display system designers are faced from large numbers of alternatives  the selection is <B>based</B> on considerations such as system  quantitative design procedure and helps give a better understanding of now to configure display <B>systems</B> applications  the optimum configurations are in turn used to <B>find</B> general display system design
16 Q0 2819 71 0.05495913 Lucene_47
 to <B>find</B> an optimal set of codes for representing substrings of the <B>file</B>  four new algorithmsexperiments in text <B>file</B> compression a system for the compression of data files  viewed as strings of characters  is presented  the method is general  and applies equally well to english  to pl i <B>file</B> compaction  huffman codes  n-gram encoding  comparison of algorithms 3.7 3.73 4.33 ca761104 jb
16 Q0 1961 72 0.054866463 Lucene_47
an efficient search algorithm to <B>find</B> the elementary circuits of a graph a theoretically most efficient search algorithm is presented which uses an exhaustive search to <B>find</B> <B>all</B> of the elementary circuits of a graph  the algorithm can be easily modified to <B>find</B> <B>all</B> of the elementary circuits with a particular attribute such as length  a rigorous proof of the algorithm is given as well
16 Q0 2160 73 0.054642465 Lucene_47
canonical structure in attribute <B>based</B> <B>file</B> organization a new <B>file</B> structure for attribute <B>based</B> of a single value is permitted  the <B>file</B> organization being proposed is <B>based</B> on the atoms of a boolean dependent on the way in which the <B>file</B> is to be used and is uniquely determined by the specification  and <B>file</B> maintenance questions are discussed  cacm september  1971 wong  e  chiang  t  c  address
16 Q0 2138 74 0.054611817 Lucene_47
bliss  a language for <B>systems</B> programming a language  bliss  is described  this language is designed so as to be especially suitable for use in writing production software <B>systems</B> for a specific machine  the pdp-10   compilers  <B>operating</B> <B>systems</B>  etc  prime design goals of the design are the ability to produce highly efficient object code  to allow access to <B>all</B> relevant hardware features
16 Q0 1976 75 0.054426707 Lucene_47
multi-attribute retrieval with combined indexes in this paper a <B>file</B> organization scheme designed to retrieve <B>all</B> keys satisfying any input query derived from a subset of fields by a single access to an index <B>file</B>  although each bucket may be used for many combinations of values and a combination  the elimination of <B>multiple</B> accesses in many cases   2  the elimination of false drops   3  the elimination
16 Q0 2390 76 0.053359564 Lucene_47
a proposal for a computer-<B>based</B> interactive scientific community because of the problems created by the explosion of papers in the mathematical sciences and the drawbacks that this places on research  it is suggested that a tree of <B>all</B> mathematical results and terminology be maintained in a multiterminal computer system  users of the system can store in the computer an updated <B>file</B>
16 Q0 1066 77 0.052159477 Lucene_47
 to the underlying principles upon which future linear programming <B>systems</B> must be <B>based</B> on such <B>systems</B>  some of the components of such a system are  translation of problem statement entry  data <B>file</B> at the computer center  data processing and editing prior to solving the simplex
16 Q0 2339 78 0.051379673 Lucene_47
computer-assigned codes from verbal responses it is often desirable to convert verbal responses to multidigit codes  this conversion is generally accomplished by clerk-coders  a study was conducted to test the feasibility of translating verbal <B>descriptions</B> to numerical codes in a computer program  primary emphasis was placed on computerized construction of a reference <B>file</B> of verbal <B>descriptions</B>
16 Q0 2174 79 0.050188266 Lucene_47
the stable marriage problem the original work of gale and shapley on an assignment method using the stable marriage criterion has been extended to <B>find</B> <B>all</B> the stable marriage assignments  the algorithm derived for finding <B>all</B> the stable marriage assignments is proved to satisfy <B>all</B> the conditions of the problem  algorithm 411 applies to this paper  cacm july  1971 mcvitie  d  g  wilson l  b
16 Q0 1461 80 0.05004061 Lucene_47
discussion summary on <B>operating</B> <B>systems</B> cacm march  1966 ca660311 jb march 3  1978 1 26 pm 1461 5 1461 1461 5 1461 1461 5 1461
16 Q0 2482 81 0.048719883 Lucene_47
 allocation  <B>operating</B> <B>systems</B>  multiprogramming  hierarchical <B>systems</B> 4.30 4.32 ca730704 jb january to prevent deadlocks  this paper presents a method  <B>based</B> on the concept of the hierarchical <B>operating</B> system  for constructing appropriate mixtures and suggests appropriate subsystems for the most
16 Q0 2376 82 0.048587896 Lucene_47
synchronization of communicating <B>processes</B> formalization of a well-defined synchronization mechanism can be used to prove that concurrently running <B>processes</B> of a system communicate correctly  this is demonstrated for a system consisting of many sending <B>processes</B> which deposit messages in a buffer and many receiving <B>processes</B> which remove messages from that buffer  the formal description
16 Q0 2317 83 0.04836104 Lucene_47
  in the <B>operating</B> system area <B>all</B> major computer manufacturers set out to produce very ambitious multiprogramming <B>systems</B>  and they <B>all</B> ran into similar problems  a number of university projects for some programming system functions  cacm july  1972 rosen  s  languages  <B>operating</B> <B>systems</B>  programmingprogramming <B>systems</B> and languages 1965-1975 in spite of impressive gains by pl i  fortran and cobol
16 Q0 2535 84 0.04794517 Lucene_47
 communications  time-sharing  multiplexing  scheduling algorithms  <B>operating</B> <B>systems</B> 3.80 3.81 6.20 ca730304  analytical and simulation results are <B>based</B> on the model of the computer-communications system being an m d
16 Q0 1749 85 0.047550257 Lucene_47
the structure of the  the -multiprogramming system a multiprogramming system is described in which <B>all</B> activities are divided over a number of sequential <B>processes</B>  these sequential <B>processes</B>  <B>operating</B> system  multiprogramming system  system hierarchy  system structure  real-time debugging  program verification  synchronizing primitives  cooperating sequential <B>processes</B>  system levels  input
16 Q0 3049 86 0.04720497 Lucene_47
a simply extended and modified batch environment graphical system  sembegs  sembegs is a complete batch environment graphical system containing components for <B>handling</B> graphical data files  bagdams  which provides a common means of communicating the <B>descriptions</B> of graphical entities between  and manipulating the <B>descriptions</B> of graphical entities provided by  and received by application programs
16 Q0 1878 87 0.04706519 Lucene_47
recovery of reentrant list structures in slip one consequence of the reference-count-<B>based</B> space-recovery system employed by slip is that reentrant list structures are not recovered even when explicitly erased  lisp-like garbage-collection schemes are free of this impediment  they however  depend on being able to <B>find</B> and mark nodes that are reachable from program variables  by tracing <B>all</B>
16 Q0 2920 88 0.046522778 Lucene_47
 informally as the determination  from some a priori information about the <B>processes</B>  resources  <B>operating</B> system  etc   of the  safe situations  which may be realized without endangering the smooth steps  a global approach to the phenomenon and its in terpretation as a game between the <B>operating</B> system and the <B>processes</B> allows formalization of risk and safety concepts  the bipartite graph
16 Q0 1752 89 0.045068838 Lucene_47
  time-sharing  <B>operating</B> <B>systems</B>  resource management  task scheduling  paging  system simulationresource management for a medium scale time-sharing <B>operating</B> system task scheduling and resource balancing for a medium size virtual memory paging machine are discussed in relation to a combined emphasis is placed on balancing the system performance relative to the characteristics of <B>all</B>
16 Q0 3068 90 0.04490623 Lucene_47
a model for verification of data security in <B>operating</B> <B>systems</B> program verification applied <B>systems</B>  a precise definition of data security is developed here in terms of a general model for <B>operating</B> <B>systems</B>  this model is suitable as a basis for verifying many of those properties  d  <B>operating</B> <B>systems</B>  security  protection  program verification 4.35 5.24 ca780904 dh february 5
16 Q0 2452 91 0.044385385 Lucene_47
 access time of several <B>file</B> organizations  given a specific data base  query characterization and device-related specifications  <B>based</B> on these estimates  an appropriate <B>file</B> structure may be selectedevaluation and selection of <B>file</B> organization-a model and system this work first discusses the factors that affect <B>file</B>  data base  organization performance  an elusive subject  and then presents
16 Q0 3023 92 0.04436996 Lucene_47
 <B>systems</B>  architecture  instruction sets  virtual storage  error <B>handling</B> 6.0 6.21 ca780107 jb march <B>handling</B>  and input output operations  a final section tabulates some of the important parameters
16 Q0 2794 93 0.044113338 Lucene_47
 a formalism <B>based</B> on <B>multiple</B>-input and <B>multiple</B>-output operators which provides a basis for viewing the two is <B>based</B> on the cocke parsing algorithm is used as an illustration  a method for representing problems in first-order logic in such a way that the inference system employed by a resolution-<B>based</B>
16 Q0 3058 94 0.04380098 Lucene_47
jump searching  a fast sequential search technique when sequential <B>file</B> structures must be used and binary searching is not feasible  jump searching becomes an appealing alternative  this paper of the number of records  <B>multiple</B> level and variable size jump strategies are explored  appropriate searching  sequential files  <B>file</B> management  search strategies  database structures  index searching
16 Q0 1709 95 0.043136343 Lucene_47
a modification of efroymson s technique for stepwise regression analysis the computational technique conventionally used for stepwise <B>multiple</B> linear regression requires the storage of an n x n of problems containing the same number of variables but with <B>all</B> computations performed in double precision  cacm august  1968 breaux  h  j  <B>multiple</B> linear regression  statistical recurrence formulas
16 Q0 2407 96 0.043129057 Lucene_47
curriculum recommendations for undergraduate programs in information <B>systems</B> the need for education related to information <B>systems</B> in organizations is discussed  and a curriculum is proposed it are specifiedetailed course <B>descriptions</B> are presented  program organization and a problems  management <B>systems</B>  information <B>systems</B>  information analysis  system design  <B>systems</B> analysis 1.52
16 Q0 3132 97 0.043083858 Lucene_47
experiments with some algorithms that <B>find</B> central solutions for pattern classification in two-class pattern recognition  it is a standard technique to have an algorithm finding hyperplanes which separates the two classes in a linearly separable training set  the traditional methods <B>find</B> a hyperplane which separates <B>all</B> points in the other  but such a hyperplane is not necessarily centered
16 Q0 2003 98 0.042930104 Lucene_47
 to the description of the features of the two high level user oriented languages  <B>operating</B> at different levels  on which the interaction is <B>based</B>  the first one is imol  an interactive monitor <B>all</B> the functions needed in computer-aided circuit design  the second one is coif  a circuit oriented
16 Q0 2358 99 0.042723197 Lucene_47
the multics virtual memory  concepts and design as experience with use of on-line <B>operating</B> <B>systems</B> contemporary <B>systems</B> permit some degree of sharing  usually  sharing is accomplished by allowing and system programs of <B>all</B> information  independent of its physical storage location  information and sharing in multics are first discussed under the assumption that <B>all</B> information resides in large
16 Q0 1745 100 0.04257066 Lucene_47
 and so that the cost of their construction is reasonable  and  3  the development of public  <B>message</B>  1968 dennis  j  b  information networks  information <B>systems</B>  computing and free enterprise
*************Query 17*************************

17 Q0 1658 1 0.6009658 Lucene_47
 experience is summarized  the <B>machine</B> time and storage requirements of several of the algorithms are compared over several test problems of small and <B>intermediate</B> size  computer experiments still provide little hope of solving problems with over 100 variables with a reasonable amount of <B>machine</B> time  cacm december  1968 gue  r  l  liggett  j  c  cain  k  c  operations research  <B>optimization</B> theory
17 Q0 2253 2 0.45102784 Lucene_47
 calculi described by the authors in a previous paper  this scheme attempts program <B>optimization</B> by transforming the original algorithm rather than the <B>machine</B> <B>code</B>  the goal is to automatically generate <B>code</B> for handling the tedious address calculations necessitated by complicated data structures <B>optimization</B>  range operations  symbolic manipulation  syntactic analysis  well-formed expressions
17 Q0 1223 3 0.41676128 Lucene_47
 recognition  <B>optimization</B> such as the effective use of index registers  although as important  is not discussed since the object <B>code</B> which would be most efficient is highly <B>machine</B> dependenthigh speed compilation of efficient object <B>code</B> a three-pass compiler with the following properties is briefly described  the last two passes scan an <B>intermediate</B> language produced by the preceding
17 Q0 2897 4 0.4141451 Lucene_47
 of the concatenate statement  the <B>code</B> produced by a compiler using the expansion-<B>optimization</B> strategya case study of a new <B>code</B> generation technique for compilers recent developments in optimizing source <B>code</B> into lower level <B>code</B> by a sequence of steps  each step expands higher level statements into blocks of lower level <B>code</B> and then performs optimizations on the result  each statement has only
17 Q0 1795 5 0.40140635 Lucene_47
optimal <B>code</B> for serial and parallel computation cacm december  1969 fateman  r  j  <B>code</B> <B>optimization</B>  sequencing of operations  detection of common subexpressions 4.12 ca691217 jb february 15  1978 1 59 pm 1795 5 1795 1795 5 1795 1795 5 1795
17 Q0 2748 6 0.37329522 Lucene_47
indirect threaded <B>code</B> an efficient arrangement for interpretive <B>code</B> is described  it is related to bell s notion of threaded <B>code</B> but requires less space and is more amenable to <B>machine</B> independent implementations  cacm june  1975 dewar  r  b  k  threaded <B>code</B>  snobol4  interpretors  <B>code</B> generation 4.12 4.13 ca750605 jb january 9  1978 1 11 pm 2748 4 2748 3144 4 2748 2491 5 2748 2748 5 2748
17 Q0 1947 7 0.36082226 Lucene_47
object <B>code</B> <B>optimization</B> methods of analyzing the control flow and data flow of programs during compilation are applied to transforming the program to improve object time efficiency  dominance flow analysis  dominance  efficiency  fortran  graph theory  loop structure  <B>machine</B> instructions  object <B>code</B>  <B>optimization</B>  redundancy elimination  register assignment  system 360 4.12 5.24 5.32
17 Q0 2495 8 0.3601346 Lucene_47
adapting optimal <B>code</B> generation for arithmetic expressions to the instruction sets available on present-day computers cacm june  1973 stockhausen  p  f  arithmetic expressions  <B>code</B> generation  compilers  object-<B>code</B> <B>optimization</B>  register assignment  trees 4.12 5.24 5.32 ca730605 jb january 23  1978 2 24 pm 2495 5 2495 2495 5 2495 2495 5 2495
17 Q0 2491 9 0.34839272 Lucene_47
threaded <B>code</B> the concept of  threaded <B>code</B>  is presented as an alternative to <B>machine</B> language <B>code</B>  hardware and software realizations of it are given  in software it is realized as interpretive <B>code</B> not needing an interpreter  extensions and optimizations are mentioned  cacm june  1973 bell  j  r  interpreter  <B>machine</B> <B>code</B>  time tradeoff  space tradeoff  compiled <B>code</B>  subroutine calls
17 Q0 1757 10 0.32486868 Lucene_47
data <B>code</B> for calendar date for <B>machine</B>-to-<B>machine</B> data interchange   proposed usa standard  cacm april  1968 usa standard  data <B>code</B>  calendar date  <B>machine</B>-to-<B>machine</B> data interchange  recording calendar date  data group identifier 2.0 2.11 2.19 2.3 2.40 2.43 2.49 3.50 3.52 3.53 3.55 3.56 3.59 3.70 3.71 3.73 3.74  3.79  3.81  4.1  4.9 ca680413 jb february 23  1978 10 18 am 1757 5 1757 1757 5
17 Q0 2904 11 0.28997952 Lucene_47
 well into an integrated package of local <B>optimization</B> algorithms  cacm november  1977 cocke  j  compilers  <B>optimization</B> of compiled <B>code</B>  program analysis  operator strength reduction  test replacement
17 Q0 1154 12 0.2592697 Lucene_47
 or the unrestricted turing machines  <B>intermediate</B> machines can be created by adjoining on infinite-state memory to a finite-state <B>machine</B> and then performing any or all of the following   1  restrict
17 Q0 1134 13 0.24444182 Lucene_47
some effects of the 6600 computer on language structures  the problem of compiling efficient 6600 codes prompted the development of an <B>intermediate</B> language reflecting the structure of the <B>machine</B> is the <B>intermediate</B> language and methods of manipulating it  compilations of a series of arithmetic the assumptions are violated in the actual <B>machine</B>  cacm february  1964 allard  r  w  wolf  k  a  zemlin  r
17 Q0 3080 14 0.23407531 Lucene_47
 use of the system is as a post <B>optimization</B> step in <B>code</B> generation  the low level language programs of program and stack sizes  cacm july  1978 samet  h  compilers  correctness  <B>code</B> <B>optimization</B>  debuggingproving the correctness of heuristically optimized <B>code</B> a system for proving that programs written of errors in the low level language programs  the examples demonstrate that <B>optimization</B> of the genre
17 Q0 3005 15 0.23204908 Lucene_47
implications of structured programming for <B>machine</B> architecture based on an empirical study of more than 10,000 lines of program text written in a goto-less language  a <B>machine</B> architecture is presented  which can reduce program size by a factor of 3  unlike a huffman <B>code</B>  which utilizes variable length fields  this method uses only fixed length  1-byte  op <B>code</B> and address fields  the most
17 Q0 1676 16 0.2266373 Lucene_47
 blocking table   pass i to pass iii   <B>machine</B>-independent <B>optimization</B> occurs in pass ii and do-loop and <B>machine</B>-dependent <B>optimization</B> in pass iii  cacm november  1968 mendicino  s  f  martin  j  t  ranelletti  j  e  zwakenberg  r  g  compiler  compiler-compiler  <B>machine</B> independence  scatter storage be developed  written in a high level language  which minimizes <B>machine</B> dependencies and isolates
17 Q0 1886 17 0.22508413 Lucene_47
  1969 breuer  m  a  factorization algorithms  <B>code</B> <B>optimization</B>  sequencing of operations  detectiongeneration of optimal <B>code</B> for expressions via factorization given a set of expressions which are to be compiled  methods are presented for increasing the efficiency of the object <B>code</B> produced by first factoring the expressions  i e  finding a set of subexpressions each of which occurs in two
17 Q0 3171 18 0.2215873 Lucene_47
line numbers made cheap a technique is described for run-time line number administration to be used for implementations of high level languages  under suitable circumstances  this method requires absolutely no overhead  in either time or space  during execution of the program  cacm october  1979 klint  p  line number administration  diagnostic messages  abstract <B>machine</B> <B>code</B> 4.12 4.13 4.20 4.42
17 Q0 1564 19 0.20070317 Lucene_47
description of basic algorithm in detab 65 preprocessor the basic algorithm for the conversion of decision tables into cobol <B>code</B> is contained in the generator portion of the detab 65 preprocessor storage is saved by using queueing techniques and extensive indexing and also by outputting the <B>code</B> as it is generated  a line at a time  the only <B>optimization</B> attempted is the elimination of obviously
17 Q0 2701 20 0.20070317 Lucene_47
 are given of <B>code</B> improvement problems which can be solved using the algorithm  cacm december  1975 graham  s  l  wegman  m  global flow analysis  data flow  <B>code</B> <B>optimization</B>  common subexpression
17 Q0 2929 21 0.18915144 Lucene_47
an analysis of inline substitution for a structured programming language an <B>optimization</B> technique known as inline substitution is analyzed  the <B>optimization</B> consists of replacing a procedure in the size of compiled <B>code</B> and a small savings in execution time  other conclusions based  open compilation  program <B>optimization</B>  compilers  structured programming languages  run-time
17 Q0 2433 22 0.16892931 Lucene_47
 allocation rather than <B>code</B> structuring is the crucial illiac <B>optimization</B> problem  a satisfactory
17 Q0 2858 23 0.16892931 Lucene_47
  in which case the total <B>code</B> length is minimized  or minimizing the assigned address of a specified point of <B>optimization</B> criteria  cacm june  1976 frieder  g  saal  h  j  variable length addressing  assembler  paging
17 Q0 2944 24 0.16892931 Lucene_47
 when the <B>code</B> is executed and those that can be grouped to achieve improved efficiency  cacm july  1977 barth  j  m  garbage collection  global flow analysis  list processing  <B>optimization</B>  reference
17 Q0 3054 25 0.16723147 Lucene_47
 of algorithms  <B>code</B> <B>optimization</B>  sorting 4.0 4.6 5.25 5.31 5.5 ca781007 dh january 29  1979 5 40 pmimplementing quicksort programs this paper is a practical study of how to implement the quicksort sorting algorithm and its best variants on real computers  including how to apply various <B>code</B> <B>optimization</B> techniques  a detailed implementation combining the most effective improvements to quicksort
17 Q0 1807 26 0.16570258 Lucene_47
<B>optimization</B> of expressions in fortran a method of optimizing the computation of arithmetic and indexing expressions of a fortran program is presented  the method is based on a linear analysis excellent object <B>code</B> without significantly reducing the compilation speed  cacm december  1969 busam  v  a  england  d  e  fortran  <B>optimization</B>  expressions  compilers  compilation  subscripts
17 Q0 2423 27 0.16056255 Lucene_47
 to a  possibly empty   <B>code</B> generator  realizable as an assembly language  fortran or algol  subroutine memory of which 140 words are parsing table entries and 82 words are links to <B>code</B> generators  cacm  syntactic analysis  normal-form grammars  pushdown automata  translation grammars  translator <B>optimization</B>
17 Q0 2464 28 0.15973037 Lucene_47
the complex method for constrained <B>optimization</B>  e4   algorithm a454  cacm august  1973 richardson  j  a  kuester  j  l  <B>optimization</B>  constrained <B>optimization</B>  box s algorithm 5.41 ca730810 jb january 23  1978 10 34 am 2464 5 2464 2464 5 2464 2464 5 2464
17 Q0 1523 29 0.13621275 Lucene_47
 execution  it uses a simple scheme for system extension for a <B>machine</B> with only one relocation and memory bound register  no attempt was made to use reentrant <B>code</B>  or to simulate segmentation or paging  implementation time was approximately six man-years  with the majority of the <B>code</B> being written
17 Q0 1726 30 0.13126677 Lucene_47
preliminary investigation of techniques for automated reading of unformatted text methods for converting unstructured printed material into computer <B>code</B> are experimentally investigated  an operator-<B>machine</B> operation  and the facsimile reproduction of illustrations  are discussed  cacm july  1968  unformatted text operator-controlled reader  online reader  text-image discrimination  reading <B>machine</B> 3.63
17 Q0 2138 31 0.13126677 Lucene_47
 <B>machine</B>  the pdp-10   compilers  operating systems  etc  prime design goals of the design are the ability to produce highly efficient object <B>code</B>  to allow access to all relevant hardware features of the host <B>machine</B>  and to provide a rational means by which to cope with the evolutionary nature
17 Q0 1665 32 0.12891613 Lucene_47
 by the regular expressions  each output item is identified by a <B>code</B> number together with a pointer produced by the system are based on finite-state machines  each state of a  <B>machine</B>  corresponds  and the <B>machine</B> changes to a new state  at each transition appropriate actions are taken based string  compiler  finite-state automata  finite-state <B>machine</B>  lexical processor  nondeterministic
17 Q0 1402 33 0.12341997 Lucene_47
partial step integration a partial step integration equation is derived for use with the adams or adams-bashforth method of integration of differential equations  this method of obtaining functional values at points <B>intermediate</B> to the integration points yields accuracy comparable to the integration and does not require storing of additional information as in interpolation methods  cacm july
17 Q0 1362 34 0.121287465 Lucene_47
<B>code</B> extension in ascii   an asa tutorial  the american standard <B>code</B> for information interchange  ascii  contains a number of control characters associated with the principle of <B>code</B> extension of the characters in the <B>code</B>  the manner of use of these characters has not previously been completely described  this paper presents a set of mutually consistent philosophies regarding <B>code</B> extension
17 Q0 48 35 0.121287465 Lucene_47
shift-register <B>code</B> for indexing applications in this communication the use of a shift-register <B>code</B> with n   10 is described for calling 64 wireless telemetering stations in a fixed cyclical order  a high degree of redundancy is used  permitting a single-error correcting <B>code</B>   minimum-distance-three  <B>code</B>  with 64 10-bit <B>code</B> words to be employed as the station identification <B>code</B>  embedding
17 Q0 1655 36 0.12006846 Lucene_47
<B>code</B> extension procedures for information interchange   proposed usa standard  cacm december  1968 standard <B>code</B>  <B>code</B>  information interchange  characters  shift out  shift in  escape  data link escape  control functions  standard procedures  <B>code</B> extension  <B>code</B> table  bit pattern 1.0 2.0 2.43 3.20 3.24 3.50 3.51 3.52 3.53 3.54 3.55 3.56 3.57 3.70 3.71 3.72 3.73  3.74  3.75  3.80  3.81  3.82
17 Q0 2233 37 0.11918615 Lucene_47
 of cryptanalysts have expended untold man-years  thus far without success  attempting tode <B>code</B> them  vast  the sequence of numbers corresponding to these matches is then written down as the final <B>code</B>  while over to the <B>machine</B> and analyzed the signatures of these synthetic codes  we have also encoded various
17 Q0 3053 38 0.118250504 Lucene_47
  <B>optimization</B>  although packing costs remain linear-o n -with table size n  the techniques are primarily suited  op-<B>code</B> tables spelling dictionaries  access arrays  introduction of frequency weights further
17 Q0 1389 39 0.11079365 Lucene_47
a programmer s description of l 6 bell telephone laboratories  low-linked list language l 6  pronounced  l-six   is a new programming language for list structure manipulations  it contains many of the facilities which underlie such list processors as ipl  lisp  comit ad snobol  but permits the user to get much closer to <B>machine</B> <B>code</B> in order to write faster-running programs  to use storage more
17 Q0 1542 40 0.11079365 Lucene_47
 <B>machine</B> language  the system is described and results are given in terms of microprogram and main storage is stressed  which opens a new dimension in the processing of interpretive <B>code</B>  the structure
17 Q0 2968 41 0.11079365 Lucene_47
  and implementation independent and <B>machine</B> algorithm-dependent measures  e g  run time   a detailed analysis of <B>code</B> is also presented at a level believed to be language-and compiler-independent
17 Q0 3150 42 0.11079365 Lucene_47
 of a <B>machine</B> s order <B>code</B>  higher level programming systems can provide the means to understand
17 Q0 2835 43 0.11066444 Lucene_47
recursion analysis for compiler <B>optimization</B> a relatively simple method for the detection of recursive use of procedures is presented for use in compiler <B>optimization</B>  implementation considerations are discussed  and a modification of the algorithm is given to further improve <B>optimization</B>  k  g  recursion  compiler <B>optimization</B> 4.12 ca760904 jb january 4  1978 9 36 am 2835 5 2835 2835 5
17 Q0 252 44 0.10799247 Lucene_47
 on the same inputs and continually cross-check the <B>intermediate</B> and final results  cacm november  1961
17 Q0 1756 45 0.106291 Lucene_47
hollerith punched card <B>code</B>   proposed usa standard  cacm april  1968 usa standard  card <B>code</B>  punched card  punched card <B>code</B>  hole-patterns  hole-patterns assignment  punched card systems 1.4 2.0 2.2 2.43 2.9 3.15 3.24 3.50 3.57 3.7 3.80 3.81 3.82 4.11 4.12 ca680414 jb february 23  1978 10 14 am 1756 5 1756 1756 5 1756 1756 5 1756
17 Q0 1652 46 0.10147637 Lucene_47
a <B>code</B> for non-numeric information processing applications in online systems a <B>code</B> has been of the information channel linking the system and the system user  the <B>code</B> has direct application to problems  this <B>code</B>  called ipc  information processing <B>code</B>   is an 8-bit <B>code</B> set constructed so that 7  6  5 and 4-bit subsets can be easily derived from the basic set  the <B>code</B> set is organized so
17 Q0 2117 47 0.098853014 Lucene_47
representation for calen dar date for <B>machine</B>-to-<B>machine</B> data interchange   proposed american national standard  cacm january  1970 calendar date  <B>machine</B>-to-<B>machine</B> interchange  month  year  day  representation coded 3.70 3.73 3.74 3.9 ca700114 jb february 14  1978 1 42 pm 2117 5 2117 2117 5 2117 2117 5 2117
17 Q0 1783 48 0.09256498 Lucene_47
in-and-out conversions byan in-and-out conversion we mean that a floating-point number in one base is converted into a floating-point number in another base and then converted back to a floating-point number in the original base  for all combinations of rounding and truncation conversions the question is considered of how many significant digits are needed in the <B>intermediate</B> base to allow
17 Q0 2611 49 0.09222037 Lucene_47
the complex method for constrained <B>optimization</B>  algorithm r454  cacm august  1974 shere  k  d  ca740813 jb january 17  1978 9 28 am 2611 5 2611 2611 5 2611 2611 5 2611
17 Q0 2964 50 0.09222037 Lucene_47
an approach to optimal design of storage parameters in databases cacm may  1977 milman  y  database organization  storage parameter <B>optimization</B>  resident  overflow storage 3.73 3.74 ca770508 jb december 29  1977 1 48 am 2964 5 2964 2964 5 2964 2964 5 2964
17 Q0 1064 51 0.09205071 Lucene_47
perforated tape <B>code</B> for information interchange  proposed american standard  cacm june  1964 ca640603 jb march 9  1978 9 46 pm 1064 5 1064 1064 5 1064 1064 5 1064
17 Q0 1289 52 0.09205071 Lucene_47
proposed revised american standard <B>code</B> for information interchange cacm april  1965 ca650402 jb march 7  1978 4 03 pm 1289 5 1289 1289 5 1289 1289 5 1289
17 Q0 195 53 0.09205071 Lucene_47
what is a <B>code</B>  cacm may  1960 patterson  g  w  ca600502 jb march 22  1978 1 33 pm 195 5 195 195 5 195 195 5 195
17 Q0 3066 54 0.09205071 Lucene_47
a controlled experiment in program testing and <B>code</B> walkthroughs inspections this paper describes an experiment in program testing  employing 59 highly experienced data processing professionals using seven methods to test a small pl i program  the results show that the popular <B>code</B> walk through  debugging  testing  <B>code</B> walkthroughs  <B>code</B> inspections  personnel selection 4.6 ca780906 dh february 5
17 Q0 31 55 0.09205071 Lucene_47
ibm 704 <B>code</B>-nundrums cacm march  1958 grumette  m  ca580301 jb march 22  1978 9 21 pm 31 5 31 31 5 31 31 5 31
17 Q0 1231 56 0.09129351 Lucene_47
peephole <B>optimization</B> redundant instructions may be discarded during the final stage of compilation by using a simple optimizing technique called peephole <B>optimization</B>  the method is described and examplesare given  cacm july  1965 mckeeman  w  m  ca650704 jb march 6  1978 9 05 pm 1160 5 1231 1231 5 1231 1231 5 1231 1231 5 1231 2034 5 1231 984 6 1231 1231 6 1231 1231 6 1231 1565 6 1231 1852 6
17 Q0 2836 57 0.09129351 Lucene_47
 probabilistic parsing or combinatorial <B>optimization</B>  cacm september  1976 loui  m  c  derivation tree  parse tree  probabilistic grammar  structural ambiguity  combinatorial <B>optimization</B> 5.23 5.49
17 Q0 2527 58 0.0908023 Lucene_47
implementation of high level language <B>machine</B> computing machines which directly execute implementation of such a <B>machine</B>  it is a computer whose  <B>machine</B> language  is apl  the <B>machine</B> is fully  the <B>machine</B> automatically allocates memory  executes statements  calls functions  converts numbers language <B>machine</B>  emulators  microprogramming  interpreters  execution speed  apl 4.1 6.2 ca730401 jb
17 Q0 3115 59 0.087271094 Lucene_47
orderly enumeration of nonsingular binary matrices applied to text encryption nonsingular binary matrices of order n  i e   nonsingular over the field  0  1   and an initial segment of the natural numbers are placed in one-to-one correspondence  each natural number corresponds to two <B>intermediate</B> of all 2 x 2 and 3 x 3 nonsingular binary matrices were produced by mapping the <B>intermediate</B> vectors
17 Q0 2533 60 0.08678624 Lucene_47
gray <B>code</B> and the  - sign sequence when  -f   -f  -f     -f x        is ordered cacm march  1973 salzer  h  e  gray <B>code</B>  sign sequences  ordering  positive monotonic functions  binary system  galois sum 5.10 ca730306 jb january 24  1978 10 35 am 2533 4 2533 2394 5 2533 2533 5 2533 2533 5 2533 2533 5 2533
17 Q0 123 61 0.08309524 Lucene_47
compilation for two computers with neliac neliac  a compiler based on algol  was developed at the u  navy electronics laboratory  san diego california  as a boot-strap  compiler for the remington rand univac countess computer  this compiler was used to generate a version of itself which  running as a countess program  generated <B>machine</B> <B>code</B> for the control data corporation cdc-1604  all three
17 Q0 2344 62 0.08248441 Lucene_47
on the <B>optimization</B> of performance of time-sharing systems by simulation a simulation model  including the scheduling itself  require <B>optimization</B>  and which of the parameters not normally <B>optimization</B> whereas other parameters controllable by the scheduling algorithm affect system performance in a predictable manner and would not benefit from <B>optimization</B>  features not normally under
17 Q0 2680 63 0.07825158 Lucene_47
 of mounts thus decreases turnaround time  an <B>optimization</B> model for the assignment of files to disk  disk analysis  disk <B>optimization</B>  disk files file systems  file scheduling  space allocation  memory
17 Q0 2871 64 0.077137485 Lucene_47
logical analysis of programs most present systems for verification of computer programs are incomplete in that <B>intermediate</B> inductive assertions must be provided manually by the user  termination is not proven  and incorrect programs are not treated  as a unified solution to these problems  this paper suggests conducting a logical analysis of programs by using invariants which express what
17 Q0 3130 65 0.077137485 Lucene_47
 of elementary level topics and courses  and <B>intermediate</B> level courses  elective courses  used to round out
17 Q0 1065 66 0.07670893 Lucene_47
bit sequencing of the american standard <B>code</B> for information interchange  ascii  in serial-by-bit data transmission  proposed american standard  cacm june  1964 ca640602 jb march 9  1978 9 47 pm 1065 5 1065 1065 5 1065 1065 5 1065
17 Q0 1066 67 0.07670893 Lucene_47
growing applications of linear programming use of linear programming models has grown so extensively in recent years that the whole concept for organizing a computer <B>code</B> has undergone a radical  to a computer <B>code</B>  an advanced <B>code</B> must cope with such a variety of situations that the respective algorithm  an efficient and reliable <B>code</B> for solving the above-mentioned algorithm  and flexible means
17 Q0 1187 68 0.07670893 Lucene_47
note on an ascii-octal <B>code</B> table  standards  cacm october  1965 crosby  w  s  ca651008 jb march 6  1978 6 42 pm 1187 5 1187 1187 5 1187 1187 5 1187
17 Q0 1204 69 0.07670893 Lucene_47
character structure and character parity sense for serial-by-bit data communication in the american standard <B>code</B> for information interchange  proposed american standard  cacm september  1965 ca650902 jb march 6  1978 7 41 pm 1204 5 1204 1204 5 1204 1204 5 1204
17 Q0 1232 70 0.07670893 Lucene_47
representation of the standard ecma 7-bit <B>code</B> in punched cards  ecma standard  cacm july  1965 ca650703 jb march 6  1978 9 06 pm 1232 5 1232 1232 5 1232 1232 5 1232
17 Q0 1275 71 0.07670893 Lucene_47
<B>code</B> structures for protection and manipulation of variable length items  corrigendum  cacm april  1965 ramamoorthy  c  v  ca650416 jb march 7  1978 3 31 pm 1275 5 1275 1275 5 1275 1275 5 1275
17 Q0 1414 72 0.07670893 Lucene_47
twelve-row punched-card <B>code</B> for information interchange   proposed american standard  cacm june  1966 ca660607 jb march 3  1978 8 39 am 1414 5 1414 1414 5 1414 1414 5 1414
17 Q0 230 73 0.07670893 Lucene_47
a proposal for character <B>code</B> compatibility cacm february  1960 bemer  r  w  ca600202 jb march 22  1978 2 25 pm 230 5 230 230 5 230 230 5 230 333 5 230 230 6 230
17 Q0 2586 74 0.07670893 Lucene_47
adapting optimal <B>code</B> generation for arithmetic expressions to the instruction sets available on present-day computers  errata  cacm october  1974 stockhausen  p  f  ca741012 jb january 16  1978 11 05 am 2586 5 2586 2586 5 2586 2586 5 2586
17 Q0 2834 75 0.07670893 Lucene_47
efficient generation of the binary reflected gray <B>code</B> and its applications algorithms are presented to generate the n-bit binary reflected gray <B>code</B> and codewords of fixed weight in that <B>code</B>  both algorithms are efficient in that the time required to generate the next element from the current one bitner  j  r  ehrlich  g  reingold  e  m  gray <B>code</B>  combinations  subsets  compositions  combinatorial
17 Q0 66 76 0.07670893 Lucene_47
a proposal for a generalized card <B>code</B> for 256 characters cacm september  1959 bemer  r  w  ca590903 jb march 22  1978 4 50 pm 66 5 66 66 5 66 66 5 66
17 Q0 1670 77 0.07593796 Lucene_47
correspondences of 8-bit and hollerith codes for computer environments  a usasi tutorial standard  cacm november  1968 usa standard  card <B>code</B>  punched card  punched card <B>code</B>  hole-patterns  hole-patterns assignment  punched card systems 1.1 1.4 2.0 2.12 2.43 2.44 3.10 3.20 3.30 3.31 3.42 3.50 3.56 3.70 3.72 3.73 3.74  3.80  3.81  4.0  4.1  4.2  4.20  4.40  5.0 ca681109 jb february 21  1978 2 33
17 Q0 3173 78 0.07593796 Lucene_47
 location   2  a prestatement is a set of transactions corresponding to a line of <B>code</B>   3  chunks are frequently occurring configurations of prestatements corresponding to several lines of <B>code</B>  cacm
17 Q0 2079 79 0.07413976 Lucene_47
on multiprogramming  <B>machine</B> coding  and computer organization cacm april  1970 wirth  n  ca700405 jb february 13  1978 3 05 pm 2079 5 2079 2079 5 2079 2079 5 2079
17 Q0 2246 80 0.07413976 Lucene_47
 designed <B>machine</B>-independent language and then to map this language  often using a macro processor  into the assembly language of each desired object <B>machine</B>  the design of the <B>machine</B>-independent language  p  j  portable software  level of language  <B>machine</B> independent  macro processor  efficiency 4.12
17 Q0 593 81 0.07413976 Lucene_47
an introduction to a <B>machine</B>-independent data division cacm may  1962 mullin  j  p  ca620512 jb march 20  1978 1 39 pm 593 5 593 593 5 593 593 5 593
17 Q0 2133 82 0.0737763 Lucene_47
algorithm for the assignment problem  rectangular matrices   h   algorithm 415  cacm december  1971 bourgeois  f  lassalle  j  c  operations research  <B>optimization</B> theory  assignment problem  rectangular matrices 5.39 5.40 ca711210 jb february 2  1978 9 38 am 2133 4 2133 2133 4 2133 2134 4 2133 124 5 2133 2133 5 2133 2133 5 2133 2133 5 2133 2134 5 2133
17 Q0 693 83 0.0737763 Lucene_47
an extension of fibonaccian search to several variables a technique which uses fibonaccian search concepts has been developed to solve <B>optimization</B> problems involving unimodal functions of several variables  the technique has not been proven to be optimal in the sense that the one-dimensional fibonaccian search is  however  it is valuable for certain kinds of calculations  cacm october  1963
17 Q0 1167 84 0.06989963 Lucene_47
on the translation of <B>machine</B> language programs automatic translation of <B>machine</B> language programs is becoming a highly desirable goal with the advent of new large-scale computers  the pitfalls that make it difficult to achieve completely automatic translations are analyzed  and it is shown that these are primarily of a semantic nature  a semi-automatic procedure for resolving semantic problems
17 Q0 1651 85 0.06643188 Lucene_47
an interpretive input routine for linear programming in this descriptive article an input <B>code</B> is presented which greatly simplifies data input to any linear programming solution routine  use derives not at all from inherent limitations in the <B>code</B> itself  but from an efficiency handling than the input <B>code</B> described  from a user s standpoint  input appears almost exactly
17 Q0 2195 86 0.06520965 Lucene_47
  the relation between the structure of the figure of merit and the complexity of the <B>optimization</B> process  interaction graph  secondary <B>optimization</B> problem 3.63 3.66 5.42 ca710504 jb february 3  1978 2 49 pm
17 Q0 2616 87 0.06520965 Lucene_47
on the conversion of programs to decision tables  method and objectives the problems of converting programs to decision tables are investigated  objectives of these conversions are mainly program debugging and <B>optimization</B> in practice  extensions to the theory of computation and computability are suggested  cacm august  1974 cavouras  j  c  decision tables  program <B>optimization</B>  debugging
17 Q0 2812 88 0.06520965 Lucene_47
 to the form necessary for use by the soda  systems <B>optimization</B> and design algorithm  program  physical system design  accurately defined systems  systems <B>optimization</B> and design algorithm 2.44
17 Q0 3018 89 0.06520965 Lucene_47
covering edges by cliques with regard to keyword conflicts and intersection graphs kellerman has presented a method for determining keyword conflicts and described a heuristic algorithm which solves a certain combinatorial <B>optimization</B> problem in connection with this method  this <B>optimization</B> problem is here shown to be equivalent to the problem of covering the edges of a graph by complete
17 Q0 3125 90 0.06520965 Lucene_47
global <B>optimization</B> by suppression of partial redundancies the elimination of redundant computations and the moving of invariant computations out of loops are often done separately  with invariants moved outward loop by loop  we propose to do both at once and to move each expression directly that requires less execution time  cacm february  1979 morel  e  renvoise  c  optimizer  <B>optimization</B>
17 Q0 1331 91 0.06508968 Lucene_47
<B>code</B> structures for protection and manipulation of variable-length items when items are made up of a variable number of characters  each containing the same number of bits  certain control information  partition symbols  is inserted to mark their separations  since errors in identification  a 6-bit <B>code</B> assignment of alphanumeric characters for fixed word-length computers is given and its
17 Q0 3175 92 0.06508968 Lucene_47
 problem  every <B>code</B> letter is assigned probabilities of representing plain text letters  these probabilities are updated in parallel for all <B>code</B> letters  using joint letter probabilities  iterating
17 Q0 2290 93 0.06455426 Lucene_47
immediate predominators in a directed graph  h   algorithm a430  cacm august  1972 purdom jr   p  w  moore  e  f  predominator  immediate predominator  graph theory  directed graph  shortest path  articulation  connectivity  program <B>optimization</B>  optimizing compiler 4.12 5.32 ca720812 jb january 30  1978 9 19 am 1807 4 2290 2034 4 2290 2290 4 2290 2579 4 2290 2923 4 2290 2945 4 2290 1947 5 2290
17 Q0 1162 94 0.061783135 Lucene_47
  that is  from assembly language to <B>machine</B> language  the meta-language presented here can be used stream of bits  this bit stream may be treated as a <B>machine</B> language program  a character stream language into another or from the assembly language for one <B>machine</B> into the <B>machine</B> language of another
17 Q0 2624 95 0.061783135 Lucene_47
formal requirements for virtualizable third generation architectures virtual <B>machine</B> systems have been implemented on a limited number of third generation computer systems  e g  cp-67 on the ibm 360  the dec pdp-10  cannot support a virtual <B>machine</B> system  in this paper  model of a third requirements  abstract model  proof  virtual <B>machine</B>  virtual memory  hypervisor  virtual <B>machine</B> monitor
17 Q0 35 96 0.061783135 Lucene_47
a <B>machine</B> method for square-root computation cacm january  1958 bemer  r  w  ca580101 jb march 22  1978 9 27 pm 35 5 35 35 5 35 35 5 35 848 5 35 26 6 35 35 6 35
17 Q0 537 97 0.061783135 Lucene_47
a <B>machine</B> program for theorem-proving the program of a proof procedure is discussed in connection with trial runs and possible improvements  cacm july  1962 davis  m  logemann  g  loveland  d  ca620724 jb march 17  1978 8 11 pm 537 5 537 537 5 537 537 5 537
17 Q0 79 98 0.061783135 Lucene_47
programming for a <B>machine</B> with an extended address calculational mechanism cacm june  1959 schecher  h  ca590605 jb march 22  1978 6 31 pm 67 5 79 79 5 79 79 5 79 79 5 79 79 6 79
17 Q0 1029 99 0.061709985 Lucene_47
a simple automatic derivative evaluation program a procedure for automatic evaluation of total partial derivatives of arbitrary algebraic functions is presented  the technique permits computation of numerical values of derivatives without developing analytical expressions for the derivatives  the key to the method is the decomposition of the given function  by introduction of <B>intermediate</B>
17 Q0 1062 100 0.061709985 Lucene_47
symbol manipulation in fortran-sasp i subroutines a set of subroutines for use in fortran are described whose purpose is to synthesize output strings from  i  input strings which have been analyzed by the shadow general syntactic analysis subroutine reported earlier  and or  ii  packed bcd strings formed in any way  function-type subroutines are included for <B>intermediate</B> manipulations  which
*************Query 18*************************

18 Q0 2138 1 0.1837191 Lucene_47
 is designed so as to be <B>especially</B> suitable for use in writing production software systems for a specific machine  the pdp-10   <B>compilers</B>  operating systems  etc  prime design goals of the design are the ability to produce <B>highly</B> efficient object <B>code</B>  to allow access to all relevant hardware features for elements of the structure  cacm december  1971 wulf  w  a  russell  d  b  programming <B>languages</B>
18 Q0 1988 2 0.10671559 Lucene_47
a formalism for translator interactions a formalism is presented for describing the actions of <B>processors</B> for programming <B>languages</B>-<B>compilers</B>  interpreters  assemblers-and their interactions in complex systems such as compiler-<B>compilers</B> or extendible <B>languages</B>  the formalism here might be used can be produced from a given set of component <B>processors</B>  cacm october  1970 earley  j  translator
18 Q0 2175 3 0.10194369 Lucene_47
  <B>parallel</B> processing  cache  arithmetic expressions  subexpression ordering  computational trees  <B>compilers</B> the expression is to be executed  these subexpressions can be evaluated in serials  in <B>parallel</B> with a  cache  buffer memory  if the number of subexpressions which can be executed in <B>parallel</B> exceeds the number of available <B>processors</B>  then execution of some of these subexpressions must
18 Q0 3110 4 0.097175226 Lucene_47
assembling <B>code</B> for <B>machines</B> with span-dependent instructions many modern computers contain instructions whose lengths depend on the distance from a given instance of such an instruction instructions  variable-length addressing  <B>code</B> generation  assemblers  <B>compilers</B>  np-complete for such <B>machines</B>  an efficient solution is presented for the case in which the operand of every
18 Q0 1852 5 0.090031125 Lucene_47
 as the base of an implementation  by bootstrapping  of <B>processors</B> for programming <B>languages</B> is described  this algorithm can be easily implemented on contemporary computing <B>machines</B>  experience with programming <B>languages</B> whose implementation is based on this algorithm indicates that such a language can  programming <B>languages</B>  implementation techniques 4.12 4.22 ca690903 jb february 15  1978 4 54 pm 1530 4 1852
18 Q0 2112 6 0.08964849 Lucene_47
 to describe the syntax and left-context sensitive semantics for context-free <B>languages</B>  a formal cases of the translation problem  cacm february  1970 vere  s  automata  turing <B>machines</B>  regular expression  transduction expression  context-free <B>languages</B>  translation  recognizers  parsing  meta-<B>compilers</B>  pushdown transducer  syntax directed <B>compilers</B>  finite state automata 4.10 4.12 4.20 5.22
18 Q0 670 7 0.08527758 Lucene_47
 at this very early stage  the industry is <B>highly</B> regulated by government and  hence  is subject of computerization in the banking business are <B>especially</B> diverse  in some states  there might be the basic cooperatives  more challenging are questions relating to off-premises <B>processors</B>  particularly
18 Q0 1665 8 0.081762016 Lucene_47
automatic generation of efficient lexical <B>processors</B> using finite state techniques the practical application of the theory of finite-state automata to automatically generate lexical <B>processors</B> by the regular expressions  each output item is identified by a <B>code</B> number together with a pointer to a block of storage containing the characters and character count in the item  the <B>processors</B>
18 Q0 1811 9 0.08152136 Lucene_47
a case study in programming for <B>parallel</B>-<B>processors</B> an affirmative partial answer is provided to the question of whether it is possible to program <B>parallel</B>-processor computing systems to efficiently decrease execution time for useful problems  <B>parallel</B>-processor systems are multiprocessor systems in which several of the <B>processors</B> can simultaneously execute separate tasks of a single job  thus
18 Q0 2921 10 0.07257341 Lucene_47
  rrp grammars have production right parts  which are nondeterministic finite state <B>machines</B>  fsms describe the syntax of programming <B>languages</B> more concisely and more understandably than is possible of the handle  cacm october  1977 lalonde  w  r  finite state <B>machines</B>  automata   regular expressions  syntax diagrams lr k  grammars  parser construction  parsing  programming <B>languages</B>  language generation
18 Q0 1795 11 0.07250126 Lucene_47
optimal <B>code</B> for serial and <B>parallel</B> computation cacm december  1969 fateman  r  j  <B>code</B> optimization  sequencing of operations  detection of common subexpressions 4.12 ca691217 jb february 15  1978 1 59 pm 1795 5 1795 1795 5 1795 1795 5 1795
18 Q0 2897 12 0.071275584 Lucene_47
a case study of a new <B>code</B> generation technique for <B>compilers</B> recent developments in optimizing techniques have allowed a new design for <B>compilers</B> to emerge  such a compiler translates the parsed source <B>code</B> into lower level <B>code</B> by a sequence of steps  each step expands higher level statements into blocks of lower level <B>code</B> and then performs optimizations on the result  each statement has only
18 Q0 2495 13 0.06693756 Lucene_47
adapting optimal <B>code</B> generation for arithmetic expressions to the instruction sets available on present-day computers cacm june  1973 stockhausen  p  f  arithmetic expressions  <B>code</B> generation  <B>compilers</B>  object-<B>code</B> optimization  register assignment  trees 4.12 5.24 5.32 ca730605 jb january 23  1978 2 24 pm 2495 5 2495 2495 5 2495 2495 5 2495
18 Q0 3075 14 0.066230506 Lucene_47
fast <B>parallel</B> sorting algorithms a <B>parallel</B> bucket-sort algorithm is presented that requires time o log n  and the use of n <B>processors</B>  the algorithm makes use of a technique that requires more space than the product of <B>processors</B> and time  a realistic model is used model is used in which no memory 1   1 k <B>processors</B>  for k an arbitrary integer  the model of computation for this procedure permits
18 Q0 3156 15 0.066230506 Lucene_47
computing connected components on <B>parallel</B> computers we present a <B>parallel</B> algorithm which uses n2 <B>processors</B> to find the connected components of an undirected graph with n vertices in time o log2n   an o log2n  time bound also can be achieved using only n n  log2n   <B>processors</B>  the algorithm can be used to find the transitive closure of a symmetric boolean matrix  we assume that the <B>processors</B>
18 Q0 2714 16 0.06504485 Lucene_47
merging with <B>parallel</B> <B>processors</B> consider two linearly ordered sets a  b   a  m   b  n  m lt  n  and p  p lt  m  <B>parallel</B> <B>processors</B> working synchronously  the paper presents an algorithm for merging a and b with the p <B>parallel</B> <B>processors</B>  which requires at most 2 log2  2m 1    3m p     m p  log2 favorably with the previous best <B>parallel</B> merging algorithm  batcher s algorithm  which requires n p     m
18 Q0 2685 17 0.064713195 Lucene_47
the <B>parallel</B> execution of do loops methods are developed for the <B>parallel</B> execution of different iterations of a do loop  both asynchronous multiprocessor computers and array computers are considered  practical application to the design of <B>compilers</B> for such computers is discussed  cacm february  1974 lamport  l  <B>parallel</B> computing  multiprocessor computers  array computers  vector computers
18 Q0 2266 18 0.061511584 Lucene_47
a <B>highly</B> <B>parallel</B> algorithm for approximating all zeros of a polynomial with only real zeros an algorithm is described based on newton s method which simultaneously approximates all zeros of a polynomial with only real zeros  the algorithm  which is conceptually suitable for <B>parallel</B> computation  cacm november  1972 patrick  m  l  <B>parallel</B> numerical algorithms  real polynomials  real zeros
18 Q0 950 19 0.061511584 Lucene_47
<B>parallel</B> methods for integrating ordinary differential equations this paper is dedicated to the proposition that  in order to take full advantage for real-time computations of <B>highly</B> <B>parallel</B> computers as can be expected to be available in the near future  much of numerical analysis will have to be recast in a more  <B>parallel</B>  form  by this is meant that serial algorithms ought to be replaced
18 Q0 3066 20 0.060736973 Lucene_47
a controlled experiment in program testing and <B>code</B> walkthroughs inspections this paper describes an experiment in program testing  employing 59 <B>highly</B> experienced data processing professionals using seven methods to test a small pl i program  the results show that the popular <B>code</B> walk through  debugging  testing  <B>code</B> walkthroughs  <B>code</B> inspections  personnel selection 4.6 ca780906 dh february 5
18 Q0 2661 21 0.06057362 Lucene_47
ideal teaching <B>machines</B>-a solution to the pedagogic language problem cacm april  1974 sterling  t  d  pollack  s  v  education  programming <B>languages</B>  simulators 1.52 4.2 ca740409 jb february 1  1978 10 38 am 2661 5 2661 2661 5 2661 2661 5 2661
18 Q0 2570 22 0.054086994 Lucene_47
a comparison of list schedules for <B>parallel</B> processing systems the problem of scheduling two or more <B>processors</B> to minimize the execution time of a program which consists of a set of partially ordered tasks is studied  cases where task execution times are deterministic and others in which execution is presented  cacm december  1974 adam  t  l  chandy  k  m  dickson  j  r  <B>parallel</B> processing
18 Q0 1163 23 0.053765446 Lucene_47
philco ibm translation at problem-oriented  symbolic and binary levels a translation system has been developed to eliminate most of the effort formerly required to reprogram philco 2000 series codes for ibm 7094 operation  experience with this system is limited but <B>highly</B> successful encouraging application of the techniques to other source and object <B>languages</B>  cacm december  1965 olsen  t  m
18 Q0 1159 24 0.053147953 Lucene_47
machine independence  its technology and economics a survey is offered of techniques for transferring programs  and <B>especially</B> <B>compilers</B>  from one computer to another  of the methods examined  the  bootstrap  technique is singled out for detailed discussion  with emphasis on its economics  the considerations that determine the applicability of bootstrapping in any specific case are discussed
18 Q0 1923 25 0.052057993 Lucene_47
pseudofiles an approach to system interfaces for high level <B>languages</B> using basic input output support facilities is described  it is shown that this technique can provide potentially inexpensive methods for programs to communicate with deeply embedded facilities such as command language <B>processors</B>  cacm march  1969 rosin  r  f  operating systems  interfaces input-output  high level <B>languages</B>
18 Q0 2929 26 0.05104038 Lucene_47
  open compilation  program optimization  <B>compilers</B>  structured programming <B>languages</B>  run-time in the size of compiled <B>code</B> and a small savings in execution time  other conclusions based
18 Q0 243 27 0.05061224 Lucene_47
 evaluations along the <B>horizontal</B>  the vertical  and one main diagonal  however  the family of codes <B>code</B>  correcting three and detecting four errors  has been developed  the extension to higher
18 Q0 2567 28 0.049325902 Lucene_47
 but to be <B>especially</B> efficient when dealing with stiff systems of differential equations for some <B>highly</B> stiff systems  cacm december  1974 chu  s  c  berman  m  numerical solution
18 Q0 2785 29 0.047399435 Lucene_47
glypnir-a programming language for illiac iv glypnir is one of the earliest existing <B>languages</B> designed for programming the illiac iv computer  the syntax of the language is based on algol 60 of the language  and discusses some of the problems associated with <B>parallel</B> computer architectures  cacm march  <B>parallel</B> computation  <B>parallel</B> architecture 4.2 4.21 4.22 ca750303jb january 9  1978 4 57 pm 2785 4 2785
18 Q0 1099 30 0.046009302 Lucene_47
 rehabilitation planning  also of immediate interest is the fact that the blind may be <B>especially</B> to be developed that can mediate between <B>machines</B> and programmer  this paper describes the techniques and aids
18 Q0 2644 31 0.04507893 Lucene_47
a theorem-proving language for experimentation because of the large number of strategies and inference rules presently under consideration in automated theorem proving  there is a need for developing a language <B>especially</B> oriented toward automated theorem proving  this paper discusses some <B>languages</B> 3.60 4.22 5.21 ca740602 jb january 17  1978 3 37 pm 2644 5 2644 2644 5 2644 2644 5 2644
18 Q0 637 32 0.04432013 Lucene_47
a neliac-generated 7090-1401 compiler neliac systems for several different <B>machines</B> have been generated using the original neliac system developed at the naval electronics laboratory  san diego  in 1958  a basic  bootstrap  process was used to generate all but the first  i e  the systems were there is no inherent difficulty in  building <B>compilers</B> with <B>compilers</B>   indeed  it pointed out many
18 Q0 2904 33 0.04425682 Lucene_47
  <B>compilers</B>  optimization of compiled <B>code</B>  program analysis  operator strength reduction  test replacement
18 Q0 2896 34 0.04417762 Lucene_47
an exercise in proving <B>parallel</B> programs correct a <B>parallel</B> program  dijkstra s on-the-fly garbage collector  is proved correct using a proof method developed by owicki  the fine degree of in terleaving in this program makes it <B>especially</B> difficult to understand  and complicates the proof greatly  difficulties with proving such <B>parallel</B> programs correct are discussed  cacm december  1977 gries  d
18 Q0 3175 35 0.04350075 Lucene_47
 problem  every <B>code</B> letter is assigned probabilities of representing plain text letters  these probabilities are updated in <B>parallel</B> for all <B>code</B> letters  using joint letter probabilities  iterating
18 Q0 2497 36 0.043321654 Lucene_47
synchronizing <B>processors</B> with memory-content-generated interrupts implementations of the  lock-unlock  method of synchronizing <B>processors</B> in a multiprocessor system usually require uninterruptable of the <B>processors</B> and a special  read-interlock  cycle in the repertoire of the memory modules  when  debugging  <B>parallel</B> processing  associative memories  microprogramming 4.32 6.29 ca730603 jb january
18 Q0 3005 37 0.04243294 Lucene_47
 that these statements can be implemented efficiently  a <B>highly</B> compact instruction encoding scheme is presented  which can reduce program size by a factor of 3  unlike a huffman <B>code</B>  which utilizes variable length fields  this method uses only fixed length  1-byte  op <B>code</B> and address fields  the most
18 Q0 3127 38 0.042046934 Lucene_47
thoth  a portable real-time operating system thoth isa real-time operating system which is designed to be portable over a large set of <B>machines</B>  it is currently running on two minicomputers with quite different architectures  both the system and application programs which use it are written  it has the same interface to user programs  hence  application programs which use thoth are <B>highly</B>
18 Q0 2298 39 0.041103918 Lucene_47
an environment for research in microprogramming and emulation the development of the research project in microprogramming and emulation at state university of new york at buffalo consisted of three phases  the evaluation of various possible <B>machines</B> to support this research  the decision  eckhouse jr   r  h  microprogramming  emulation  computer systems  language <B>processors</B>  input-output
18 Q0 2886 40 0.04040049 Lucene_47
semantic evaluation from left to right this paper describes attribute grammars and their use for the definition of programming <B>languages</B> and <B>compilers</B>  a formal definition of attribute grammars are discussed  cacm february  1976 bochmann  g  v  attribute grammars  semantics of programming <B>languages</B>  semantic attributes  left-to-right parsing  multipass <B>compilers</B>  semantic evaluation  semantic
18 Q0 1223 41 0.040015936 Lucene_47
  is not discussed since the object <B>code</B> which would be most efficient is <B>highly</B> machine dependenthigh speed compilation of efficient object <B>code</B> a three-pass compiler with the following properties is briefly described  the last two passes scan an intermediate language produced by the preceding algebraic <B>languages</B>  cacm august  1965 gear  c  w  ca650801 jb march 6  1978 8 45 pm 267 4 1223 1139 4 1223
18 Q0 2289 42 0.039982308 Lucene_47
 in speed achieved by virtue of the possibilities for <B>parallel</B> processing  in this paper it is shown is the determination of algorithms that exploit the possibilities for parallelism  <B>especially</B> for problems-in-memory arrays  <B>parallel</B> processing  special purpose computers  algorithms for distance and spanning tree
18 Q0 3171 43 0.03982053 Lucene_47
line numbers made cheap a technique is described for run-time line number administration to be used for implementations of high level <B>languages</B>  under suitable circumstances  this method requires absolutely no overhead  in either time or space  during execution of the program  cacm october  1979 klint  p  line number administration  diagnostic messages  abstract machine <B>code</B> 4.12 4.13 4.20 4.42
18 Q0 1425 44 0.039721582 Lucene_47
flow diagrams  turing <B>machines</B> and <B>languages</B> with only two formation rules in the first part of turing <B>machines</B>  with every turing machine provided with a two-way half-tape  there is associated  generated by composition and iteration from the two <B>machines</B> l and r  that family is a proper subfamily of the whole family of turing <B>machines</B>  cacm may  1966 bohm  c  jacopini  g  ca660512 jb march 3
18 Q0 303 45 0.039192468 Lucene_47
some basic terminology connected with mechanical <B>languages</B> and their <B>processors</B> the suggestions in this paper are part of the terminology used in work for the university of pennsylvania s office of computer research and education  the work is jointly supported by the national science foundation and the air force office of scientific research  cacm august  1961 gorn  s  ca610801 jb march 16  1978
18 Q0 2064 46 0.03892115 Lucene_47
operations on generalized arrays with the genie compiler operations on vectors  matrices  and higher dimensional storage arrays are standard features of most <B>compilers</B> today  the elements is described by a codeword which can be interpreted by the system  <B>code</B> words may describe arrays  subscripting  <B>compilers</B> 4.12 4.29 ca700502 jb february 13  1978 2 18 pm 2064 4 2064 1677 5 2064 2064 5
18 Q0 2514 47 0.03838953 Lucene_47
an array grammar programming system a package of fortran programs has been developed that permits a user to interactively design and test array grammars  the user can control the rule selection procedure in a derivation or parse  using weighted programming matrices  he also has a choice of instance selection schemes  raster random  <B>parallel</B>   examples are given involving array <B>languages</B>
18 Q0 2433 48 0.03729994 Lucene_47
 allocation rather than <B>code</B> structuring is the crucial illiac optimization problem  a satisfactory and express <B>parallel</B> algorithms are described  cacm october  1973 millstein  r  e  array processing  parallelism detection  explicit parallelism  array allocation  <B>parallel</B> control structures  illiac iv
18 Q0 1409 49 0.03586462 Lucene_47
  the arithmetic unit has a command structure similar to large <B>parallel</B> <B>machines</B>  and uses flip-flop
18 Q0 1603 50 0.03586462 Lucene_47
a multiprogramming monitor for small <B>machines</B> int  a combination hardware software monitor designed to control a wide variety of real-time input output devices  is described  the simple hardware additions provide a uniform device to machine interface for such elements as keyboards graphic input timing  buffering  and task scheduling and provides <B>parallel</B> processing capability  user programs
18 Q0 2423 51 0.03576491 Lucene_47
a parser-generating system for constructing compressed <B>compilers</B> this paper describes a parser to a  possibly empty   <B>code</B> generator  realizable as an assembly language  fortran or algol  subroutine <B>compilers</B> constructed by the pgs translate source programs at speeds approaching 14,000 cards per minute memory of which 140 words are parsing table entries and 82 words are links to <B>code</B> generators  cacm
18 Q0 2411 52 0.034280956 Lucene_47
tree-structured programs cacm november  1973 wegner  e  control structures  flowcharts  goto statements  inductive assertion  least fix points  optimization in <B>compilers</B>  program documentation  program flow graphs  programming language design  proof of programs  semantics of programming <B>languages</B>  structured programming  4.12 4.22 5.24 ca731115 jb january 19  1978 4 19 pm 2411 4 2411 2411 4 2411
18 Q0 2706 53 0.033764113 Lucene_47
a note on the set basis problem related to the <B>compaction</B> of character sets this note discusses the reduction of the set basis problem to the clique cover problem  cacm november  1975 kou  l  t  wong  c  k  <B>compaction</B> of character sets  set basis  set covering  computational complexity  polynomial completeness  clique cover 4.9 5.25 5.39 ca751106 jb january 6  1978 8 55 am 2706 4 2706 2643 5 2706
18 Q0 2939 54 0.033671733 Lucene_47
 that three kinds of abstractions-procedural  control  and <B>especially</B> data abstractions-are useful <B>languages</B>  through the procedure or subroutine  clu provides  in addition to procedures  novel linguistic liskov  b  snyder  a  atkinson  r  schaffert  c  programming <B>languages</B>  data types  data
18 Q0 1844 55 0.033637546 Lucene_47
 the size and power of the <B>machines</B> used and the computation requirements of the particular mix-sharing computers and has the potential of a <B>highly</B> available system at relatively low cost
18 Q0 1738 56 0.033603404 Lucene_47
 that the program be simple  flexible  and <B>highly</B> efficient to use  communication between the user  p  t  debugging  utility program  programming <B>languages</B> 4.42 ca680607 jb february 22  1978 4 14 pm
18 Q0 3080 57 0.03346878 Lucene_47
 of program and stack sizes  cacm july  1978 samet  h  <B>compilers</B>  correctness  <B>code</B> optimization  debuggingproving the correctness of heuristically optimized <B>code</B> a system for proving that programs written in a high level language are correctly translated to a low level language is described  a primary use of the system is as a post optimization step in <B>code</B> generation  the low level language programs
18 Q0 2645 58 0.032312192 Lucene_47
 estimating its efficiency  <B>processors</B> for the two <B>languages</B> are also described  the first processortwo <B>languages</B> for estimating program efficiency two <B>languages</B> enabling their users to estimate on the formula produced by the first processor  examples of the usage of the two <B>languages</B>  zuckerman  c  programming <B>languages</B>  syntax-directed translation  symbolic manipulation  program
18 Q0 2820 59 0.032262072 Lucene_47
the design and implementation of a table driven  interactive diagnostic programming system caps is a <B>highly</B> interactive diagnostic compiler interpreter that allows beginning programmers to prepare  debug  and execute fairly simple programs at a graphics display terminal  complete syntax checking  1976 wilcox  t  r  davis  a  m  tindall  m  h  interactive programming  table driven <B>compilers</B>
18 Q0 1747 60 0.031599622 Lucene_47
 clock  the synchronization of <B>parallel</B> processes  protection in multiprogrammed systems design  virtual computers  programming <B>languages</B>  programming language design  program semantics  debugging  program debugging  program testing  <B>parallel</B> processing  <B>parallel</B> programming
18 Q0 1591 61 0.03150766 Lucene_47
  language <B>processors</B>  <B>compilers</B>  library and user s programs  were at his disposal  he could for example
18 Q0 1680 62 0.03150766 Lucene_47
  of the operating system  language <B>processors</B> and <B>compilers</B>  simulation models  mathematical solution
18 Q0 1807 63 0.031136923 Lucene_47
 backward  it has been used in the development of several fortran <B>compilers</B> that have proved to produce excellent object <B>code</B> without significantly reducing the compilation speed  cacm december  1969 busam  v  a  england  d  e  fortran  optimization  expressions  <B>compilers</B>  compilation  subscripts
18 Q0 2253 64 0.030672817 Lucene_47
 by transforming the original algorithm rather than the machine <B>code</B>  the goal is to automatically generate <B>code</B> for handling the tedious address calculations necessitated by complicated data structures  index domain  index map  index range  matrix expressions  normal form  programming <B>languages</B>  program
18 Q0 3148 65 0.030625604 Lucene_47
 computing at the level of general purpose programming <B>languages</B>  based on primitive notions of module  message  and transaction key  the methodology is shown to be independent of particular <B>languages</B> and <B>machines</B>  it appears to be useful for programming a wide range of tasks  this is part of an ambitious program of development in advanced programming <B>languages</B>  and relations with other aspects
18 Q0 2717 66 0.030501835 Lucene_47
 and <B>highly</B> flexible data restructuring capabilities  its design is based on the simple underlying  database reorganization  translation definition  utility program  programming <B>languages</B>  nonprocedural <B>languages</B> 3.50 3.75 4.29 4.4 4.9 ca751002 jb january 6  1978 1 45 pm 2155 4 2717 2406 4 2717 2710 4
18 Q0 2034 67 0.03028681 Lucene_47
 than one man-week of effort are discussed  the approach has been successful on over 15 <B>machines</B> independence  programming <B>languages</B>  implementation techniques 4.12 4.22 ca700703 jb february 13
18 Q0 2767 68 0.030052619 Lucene_47
  the algorithms are tested with a set of typical stochastic scheduling distributions <B>especially</B> <B>languages</B>  the most promising algorithm uses the indexed list concept  it will require an adaptive routine
18 Q0 2998 69 0.030052619 Lucene_47
an empirical study of list structure in lisp static measurements of the list structure of five large lisp programs are reported and analyzed in this paper  these measurements reveal substantial regularity  or predictability  among poin ters to atoms and <B>especially</B> among poin ters to lists  pointers <B>languages</B>  poin ters to lists usually poin t to a location physically nearby in memory  the use
18 Q0 1947 70 0.029917598 Lucene_47
object <B>code</B> optimization methods of analyzing the control flow and data flow of programs during compilation are applied to transforming the program to improve object time efficiency  dominance optimizations in os 360 fortran h are described  cacm january  1969 lowry  e  s  medlock  c  w  <B>compilers</B>  data  object <B>code</B>  optimization  redundancy elimination  register assignment  system 360 4.12 5.24 5.32
18 Q0 2252 71 0.029462766 Lucene_47
a method for incrementally compiling <B>languages</B> with nested statement structure a method of incremental compilation is presented which applies <B>especially</B> to programming <B>languages</B> in which statements can be nested  such as algol and pl i   the method permits editing of the source language using a general purpose text editor  and incremental processing of changes without frequent recompilation
18 Q0 1135 72 0.029250126 Lucene_47
 preparation of loading-speed <B>compilers</B> which translate the source programs into efficient machine codes  it stresses the structural analysis of the class of processes to be represented in the <B>languages</B>  as opposed to overcome well-known deficiencies of other business-oriented <B>languages</B> and fully meets the requirements set by codasyl for such <B>languages</B>  including machine-independence  cacm february  1964 lombardi  l
18 Q0 2692 73 0.029000502 Lucene_47
 against each clipping plane or window boundary  <B>code</B> capable of clipping the polygon against a single from the proceeding stage is ready  because the same <B>code</B> is reentered for clipping against subsequent additional planes <B>parallel</B> to the projection screen serve to limit the range of depth preserved through
18 Q0 3150 74 0.028647576 Lucene_47
beyond programming <B>languages</B> as computer technology matures  our growing ability to create large for by the tasks we attempt  just as high level <B>languages</B> enabled the programmer to escape from the intricacies of a machine s order <B>code</B>  higher level programming systems can provide the means to understand of programming <B>languages</B> as they now exist  and lays out some possible directions for future research  cacm
18 Q0 2579 75 0.028567461 Lucene_47
  register allocation  <B>compilers</B>  programming <B>languages</B>  virtual memory  demand paging 4.12 4.2 4.39
18 Q0 1389 76 0.028563952 Lucene_47
a programmer s description of l 6 bell telephone laboratories  low-linked list language l 6  pronounced  l-six   is a new programming language for list structure manipulations  it contains many of the facilities which underlie such list <B>processors</B> as ipl  lisp  comit ad snobol  but permits the user to get much closer to machine <B>code</B> in order to write faster-running programs  to use storage more
18 Q0 2989 77 0.028563952 Lucene_47
empirical evaluation of some features of instruction set processor architectures this paper presents methods for empirical evaluation of features of instruction set <B>processors</B>  isps   isp features are evaluated in terms of the time used or saved by having or not having the feature  the methods  1977 lunde  a  computer architecture  program behavior  instruction sets  op <B>code</B> utilization
18 Q0 2723 78 0.027076034 Lucene_47
 garbage collector are presented and discussed  the simple case of two <B>processors</B>  one performing lisp  the more complex cases involving several list <B>processors</B> and one or more garbage collection <B>processors</B> are also briefly discussed  cacm september  1975 steele  g  l  jr  garbage collection  storage reclamation  reclaimer  storage allocation  multiprocessing  synchronization  semaphores  <B>parallel</B>
18 Q0 1463 79 0.026815686 Lucene_47
more on extensible <B>machines</B> one of the most salient characteristics of extensible <B>machines</B>  em  is the facility for providing system control over program-to-program and program-to-data linkage  e g   address connection   it is the intent of this paper to expand and clarify the remarks concerning of programming <B>languages</B>  cacm march  1966 leonard  g  f  goodroe  j  r  ca660309 jb march 3  1978 1
18 Q0 2341 80 0.026296042 Lucene_47
 purpose device-independent output formation mechanism <B>especially</B> suitable for nonnumerical work of specialized syntax and could readily be absorbed into the external structure of most programming <B>languages</B>
18 Q0 1324 81 0.026128313 Lucene_47
 of general-purpose language <B>processors</B> are seen to be concerned with measuring  dealing with ambiguities  translating into formal <B>languages</B> and searching large tree structures  cacm january  1965 simmons
18 Q0 2740 82 0.026109956 Lucene_47
  asynchronous structuring  buffering  <B>parallel</B> processes  synchronizing primitives  reentrant <B>code</B>  rca large semaphore based operating system the paper describes the internal structure of a large operating system as a set of cooperating sequential processes  the processes synchronize by means of semaphores and extended semaphores  queue semaphores   the number of <B>parallel</B> processes is carefully
18 Q0 1154 83 0.025981102 Lucene_47
multi-tape and infinite-state automata -- a survey a survey of <B>machines</B> which are more powerful than finite automata and less powerful than general turing <B>machines</B> is presented  it is felt that the <B>machines</B> in this category are as closely related to digital computers as either the finite automata or the unrestricted turing <B>machines</B>  intermediate <B>machines</B> can be created by adjoining on infinite
18 Q0 2748 84 0.024983482 Lucene_47
indirect threaded <B>code</B> an efficient arrangement for interpretive <B>code</B> is described  it is related to bell s notion of threaded <B>code</B> but requires less space and is more amenable to machine independent implementations  cacm june  1975 dewar  r  b  k  threaded <B>code</B>  snobol4  interpretors  <B>code</B> generation 4.12 4.13 ca750605 jb january 9  1978 1 11 pm 2748 4 2748 3144 4 2748 2491 5 2748 2748 5 2748
18 Q0 2684 85 0.023163948 Lucene_47
production systems  or can we do better than bnf  since the development of bnf  the definition of the syntax of programming <B>languages</B> has been almost universally associated with context-free and translations between <B>languages</B>  is given in a previous paper by the author  cacm february  1974 ledgard  h  f  syntax  translation  context-sensitive grammars  <B>compilers</B>  formal definition  pl i
18 Q0 3093 86 0.02285397 Lucene_47
  programming <B>languages</B>  error correction  automatic correction  parsing  lr  syntax errors  <B>compilers</B> 4.12
18 Q0 249 87 0.022310568 Lucene_47
specification <B>languages</B> for mechanical <B>languages</B> and their <B>processors</B> -a baker s dozen cacm december  1961 gorn  s  ca611201 jb march 15  1978 10 32 pm 249 4 249 249 4 249 249 4 249 254 4 249 272 4 249 1102 4 249 1109 4 249 1140 4 249 1188 4 249 1306 4 249 1464 4 249 1491 4 249 1767 4 249 1781 4 249 1787 4 249 1949 4 249 321 4 249 2059 4 249 2126 4 249 435 4 249 437 4 249 438 4 249 463 4 249 483
18 Q0 2491 88 0.02217064 Lucene_47
threaded <B>code</B> the concept of  threaded <B>code</B>  is presented as an alternative to machine language <B>code</B>  hardware and software realizations of it are given  in software it is realized as interpretive <B>code</B> not needing an interpreter  extensions and optimizations are mentioned  cacm june  1973 bell  j  r  interpreter  machine <B>code</B>  time tradeoff  space tradeoff  compiled <B>code</B>  subroutine calls
18 Q0 1362 89 0.022082487 Lucene_47
<B>code</B> extension in ascii   an asa tutorial  the american standard <B>code</B> for information interchange  ascii  contains a number of control characters associated with the principle of <B>code</B> extension of the characters in the <B>code</B>  the manner of use of these characters has not previously been completely described  this paper presents a set of mutually consistent philosophies regarding <B>code</B> extension
18 Q0 48 90 0.022082487 Lucene_47
shift-register <B>code</B> for indexing applications in this communication the use of a shift-register <B>code</B> with n   10 is described for calling 64 wireless telemetering stations in a fixed cyclical order  a high degree of redundancy is used  permitting a single-error correcting <B>code</B>   minimum-distance-three  <B>code</B>  with 64 10-bit <B>code</B> words to be employed as the station identification <B>code</B>  embedding
18 Q0 2231 91 0.021987628 Lucene_47
the reconstruction of binary patterns from their projections given the <B>horizontal</B> and vertical projections of a finite binary pattern f  can we construct the original pattern f  in this paper we give a characterization of patterns that are reconstructable from their projection  three algorithms are developed to reconstruct both unambiguous and ambiguous patterns  it is shown that an unambiguous
18 Q0 1655 92 0.021860547 Lucene_47
<B>code</B> extension procedures for information interchange   proposed usa standard  cacm december  1968 standard <B>code</B>  <B>code</B>  information interchange  characters  shift out  shift in  escape  data link escape  control functions  standard procedures  <B>code</B> extension  <B>code</B> table  bit pattern 1.0 2.0 2.43 3.20 3.24 3.50 3.51 3.52 3.53 3.54 3.55 3.56 3.57 3.70 3.71 3.72 3.73  3.74  3.75  3.80  3.81  3.82
18 Q0 2534 93 0.02152596 Lucene_47
  <B>compilers</B>  debugging  pl i  programming <B>languages</B> 1.5 4.12 4.42 ca730305 jb january 24  1978 10 45 am and efficient processor  it effectively demonstrates that <B>compilers</B> can provide better diagnostic
18 Q0 82 94 0.021520263 Lucene_47
handling identifiers as internal symbols in language <B>processors</B> substitution of computer-oriented symbols for programmer-oriented symbols in language <B>processors</B> is examined and a feasible method for doing so is presented  cacm june  1959 williams  f  a  ca590602 jb march 22  1978 6 38 pm 222 5 82 82 5 82 82 5 82 82 5 82 799 5 82 945 6 82 399 6 82 44 6 82 82 6 82 82 6 82 404 6 82
18 Q0 1824 95 0.021470971 Lucene_47
 purpose <B>languages</B> such as snobol4 and tmg  this capability is provided through parse-requests stated rules  upon successfully completing a parse-request  an associated piece of pl i <B>code</B> is executed  this <B>code</B> has available for use  as normal pl i strings the various pieces  at all levels
18 Q0 2316 96 0.020722354 Lucene_47
programming <B>languages</B>  history and future this paper discusses both the history and future of programming <B>languages</B>    higher level <B>languages</B>   some of the difficulties in writing such a history are indicated  a key part of the paper is a tree showing the chronological development of <B>languages</B> and their interrelationships  reasons for the proliferation of <B>languages</B> are given  the major <B>languages</B>
18 Q0 3073 97 0.020553231 Lucene_47
communicating sequential processes this paper suggests that input and output are basic primitives of programming and that <B>parallel</B> composition of communicating sequential processes is a fundamental of familiar programming exercises  cacm august  1978 hoare  c  programming  programming <B>languages</B>  programming primitives  program structures  <B>parallel</B> programming  concurrency  input  output  guarded
18 Q0 2633 98 0.020464143 Lucene_47
 transmission  remote terminal  data <B>compaction</B> 4.41 5.13 ca740613 jb january 17  1978 2 48 pm 2633 4 2633
18 Q0 2681 99 0.020464143 Lucene_47
 <B>compaction</B> storage fragmentation  multiprogramming system model  probabilistic model  central processor
18 Q0 2819 100 0.020464143 Lucene_47
 file <B>compaction</B>  huffman codes  n-gram encoding  comparison of algorithms 3.7 3.73 4.33 ca761104 jb
*************Query 19*************************

19 Q0 2973 1 1.0088185 Lucene_47
sorting on a mesh-connected <B>parallel</B> computer two <B>algorithms</B> are presented for sorting n 2 elements on an n x n mesh-connected processor array that require o n  routing and comparison steps  the best previous algorithm takes time o n log n   the <B>algorithms</B> of this paper are shown to be optimal april  1977 thompson  c  d  kung  h  t  <B>parallel</B> computer  <B>parallel</B> sorting  <B>parallel</B> merge  routing
19 Q0 2266 2 0.8261164 Lucene_47
  cacm november  1972 patrick  m  l  <B>parallel</B> numerical <B>algorithms</B>  real polynomials  real zerosa highly <B>parallel</B> algorithm for approximating all zeros of a polynomial with only real zeros an algorithm is described based on newton s method which simultaneously approximates all zeros of a polynomial with only real zeros  the algorithm  which is conceptually suitable for <B>parallel</B> computation
19 Q0 950 3 0.8261164 Lucene_47
<B>parallel</B> methods for integrating ordinary differential equations this paper is dedicated to the proposition that  in order to take full advantage for real-time computations of highly <B>parallel</B> computers as can be expected to be available in the near future  much of numerical analysis will have to be recast in a more  <B>parallel</B>  form  by this is meant that serial <B>algorithms</B> ought to be replaced
19 Q0 3075 4 0.7614547 Lucene_47
fast <B>parallel</B> sorting <B>algorithms</B> a <B>parallel</B> bucket-sort algorithm is presented that requires time o log n  and the use of n processors  the algorithm makes use of a technique that requires more space simultaneous fetches from the same memory location  cacm august  1978 hirschberg  d  <B>parallel</B> processing  sorting  <B>algorithms</B>  bucket sort 3.74 4.34 5.25 5.31 ca780803 dh february 7  1979 10 25 am
19 Q0 2557 5 0.71334237 Lucene_47
 to evaluate such products on ordinary serial computers as well as <B>parallel</B> computers is discussed  <B>algorithms</B> are presented which properly parse such matrix sequences subject to the constraints multiplication  operation minimization  <B>parallel</B> machine  time minimization 4.22 5.14 ca730104 jb january
19 Q0 2570 6 0.71334237 Lucene_47
a comparison of list schedules for <B>parallel</B> processing systems the problem of scheduling two or more processors to minimize the execution time of a program which consists of a set of partially times are random variables are analyzed  it is shown that different <B>algorithms</B> suggested is presented  cacm december  1974 adam  t  l  chandy  k  m  dickson  j  r  <B>parallel</B> processing
19 Q0 3156 7 0.68843037 Lucene_47
  graph theory  <B>parallel</B> processing  <B>algorithms</B>  transitive closure  connected component 5.25 5.32 6.22computing connected components on <B>parallel</B> computers we present a <B>parallel</B> algorithm which uses n2 processors to find the connected components of an undirected graph with n vertices in time o log2n   an o log2n  time bound also can be achieved using only n n  log2n   processors  the algorithm can
19 Q0 2289 8 0.6498929 Lucene_47
-in-memory arrays  <B>parallel</B> processing  special purpose computers  <B>algorithms</B> for distance and spanning tree in speed achieved by virtue of the possibilities for <B>parallel</B> processing  in this paper it is shown is the determination of <B>algorithms</B> that exploit the possibilities for parallelism  especially for problems whose solutions appear to be inherently serial  in particular  several parallelized <B>algorithms</B>
19 Q0 2433 9 0.594452 Lucene_47
 and express <B>parallel</B> <B>algorithms</B> are described  cacm october  1973 millstein  r  e  array processing  parallelism detection  explicit parallelism  array allocation  <B>parallel</B> control structures  illiac iv
19 Q0 2692 10 0.55191296 Lucene_47
reentrant polygon clipping a new family of clipping <B>algorithms</B> is described  these <B>algorithms</B> the parts of the polygon which lie outside the volume  in two dimensions the <B>algorithms</B> permit clipping vertices introduced in sequence to describe any newly-cut edge or edges  the <B>algorithms</B> easily handle of the clipping window  the <B>algorithms</B> described achieve considerable simplicity by clipping separately
19 Q0 1601 11 0.5373604 Lucene_47
<B>parallel</B> numerical methods for the solution of equations classical iterative procedures iteration are computationally independent  making the methods of interest in a <B>parallel</B> processing families of numerical procedures which use the technique of the procedures in a <B>parallel</B> processing are interpreted in a <B>parallel</B> processing environment  in such an environment the procedures obtained
19 Q0 2114 12 0.47197703 Lucene_47
 such as inverted files  index-sequential files  and multilist files are derived  two <B>algorithms</B> which retrieve  directory search  serial processing of lists  prime keyword  <B>parallel</B> processing of lists 3.70 3.73 3.74
19 Q0 2838 13 0.46723342 Lucene_47
 normally requires by performing garbage collection on a second processor in <B>parallel</B> with list processing operations  or on a single processor time-shared with them  <B>algorithms</B> for recovering discarded list  time-sharing  multiprocessing  <B>parallel</B> processing  real time  data structures  analysis of <B>algorithms</B> 3.69 3.89 4.19 4.29 4.32 4.34 4.9 5.25 ca760901 jb january 4  1978 9 57 am 1024 4 2838 1051 4 2838
19 Q0 1468 14 0.4130582 Lucene_47
syntax-directed interpretation of classes of pictures a descriptive scheme for classes of pictures based on labeling techniques using <B>parallel</B> processing <B>algorithms</B> was proposed by the author some  the <B>parallel</B> processing simulator  originally written for an ibm 7094 system  has now been rewritten for a cdc outputs using this grammar and the <B>parallel</B> processing simulator mentioned earlier  cacm march  1966
19 Q0 1957 15 0.37758163 Lucene_47
the list set generator  a construct for evaluating set expressions the list set generator is defined and <B>algorithms</B> for its use are given  the list set generator is a construct which may be added to a list processing system or any system that handles sets  it efficiently generates the set which the expression as a whole and in <B>parallel</B>  rather than evaluating subexpressions and then using those
19 Q0 2685 16 0.35849383 Lucene_47
the <B>parallel</B> execution of do loops methods are developed for the <B>parallel</B> execution of different iterations of a do loop  both asynchronous multiprocessor computers and array computers are considered  practical application to the design of compilers for such computers is discussed  cacm february  1974 lamport  l  <B>parallel</B> computing  multiprocessor computers  array computers  vector computers
19 Q0 1262 17 0.35481688 Lucene_47
procedure-oriented language statements to facilitate <B>parallel</B> processing two statements are suggested which allow a programmer writing in a procedure-oriented language to indicate sections of program which are to be executed in <B>parallel</B>  the statements are do together and hold  these serve partly as brackets in establishing a range of <B>parallel</B> operation and partly to define each <B>parallel</B> path
19 Q0 141 18 0.35481688 Lucene_47
some thoughts on <B>parallel</B> processing cacm october  1960 yarbrough  l  d  ca601007 jb march 20  1978 8 16 pm 141 5 141 141 5 141 141 5 141
19 Q0 2700 19 0.35481688 Lucene_47
reduction  a method of proving properties of <B>parallel</B> programs when proving that a <B>parallel</B> program has a given property it is often convenient to assume that a statement is indivisible  i e properties such as halting  thus correctness proofs of a <B>parallel</B> system can often be greatly simplified  cacm december  1975 lipton  r  j  deadlock free  reduction  interruptible  indivisible  <B>parallel</B>
19 Q0 392 20 0.35481688 Lucene_47
comment on a paper on <B>parallel</B> processing cacm february  1961 nekora  m  r  ca610206 jb march 17  1978 12 58 am 392 5 392 392 5 392 392 5 392
19 Q0 1158 21 0.33452457 Lucene_47
program structures for <B>parallel</B> processing constructs for organizing and explicating <B>parallel</B> program segments are discussed as extensions to algol 60  the constructs serve as meta-commands and are motivated by equipment having multiprocessing capability  cacm december  1965 anderson  j  p  ca651211 jb march 6  1978 3 39 pm 1158 4 1158 1158 5 1158 1158 5 1158 1158 5 1158 1262 5 1158
19 Q0 2714 22 0.31291908 Lucene_47
merging with <B>parallel</B> processors consider two linearly ordered sets a  b   a  m   b  n  m lt  n  and p  p lt  m  <B>parallel</B> processors working synchronously  the paper presents an algorithm for merging a and b with the p <B>parallel</B> processors  which requires at most 2 log2  2m 1    3m p     m p  log2 favorably with the previous best <B>parallel</B> merging algorithm  batcher s algorithm  which requires n p     m
19 Q0 2785 23 0.30728042 Lucene_47
 of the language  and discusses some of the problems associated with <B>parallel</B> computer architectures  cacm march  <B>parallel</B> computation  <B>parallel</B> architecture 4.2 4.21 4.22 ca750303jb january 9  1978 4 57 pm 2785 4 2785
19 Q0 1302 24 0.29568073 Lucene_47
<B>parallel</B> signaling speeds for data transmission  proposed american stand ard  cacm march  1965 ca650305 jb march 7  1978 6 08 pm 1302 5 1302 1302 5 1302 1302 5 1302
19 Q0 1795 25 0.29568073 Lucene_47
optimal code for serial and <B>parallel</B> computation cacm december  1969 fateman  r  j  code optimization  sequencing of operations  detection of common subexpressions 4.12 ca691217 jb february 15  1978 1 59 pm 1795 5 1795 1795 5 1795 1795 5 1795
19 Q0 1811 26 0.2897068 Lucene_47
a case study in programming for <B>parallel</B>-processors an affirmative partial answer is provided to the question of whether it is possible to program <B>parallel</B>-processor computing systems to efficiently decrease execution time for useful problems  <B>parallel</B>-processor systems are multiprocessor systems in an electrical network was written for a <B>parallel</B>-processor computing system  and execution
19 Q0 2851 27 0.2644649 Lucene_47
formal verification of <B>parallel</B> programs two formal models for <B>parallel</B> computation are presented  an abstract conceptual model and a <B>parallel</B>-program model  the former model does not distinguish principle  a special case of the assertions method  which is called <B>parallel</B> place assertions  is shown on the satisfiability of certain logical formulas  cacm july  1976 keller  r  m  <B>parallel</B> program  correctness
19 Q0 2175 28 0.25606704 Lucene_47
 the expression is to be executed  these subexpressions can be evaluated in serials  in <B>parallel</B> with a  cache  buffer memory  if the number of subexpressions which can be executed in <B>parallel</B>  <B>parallel</B> processing  cache  arithmetic expressions  subexpression ordering  computational trees  compilers
19 Q0 2195 29 0.25606704 Lucene_47
 is then discussed  the method described is suitable for <B>parallel</B> processing because the operations relative to each state can be computed in <B>parallel</B>  and the number of stages is equal to the length n optimal detection  heuristic methods  global recognition  <B>parallel</B> processing  dynamic programming
19 Q0 2401 30 0.25606704 Lucene_47
on shrinking binary picture patterns a <B>parallel</B> processing algorithm for shrinking binary patterns to obtain single isolated elements  one for each pattern  is presented  this procedure may be used employed  two-by-two elements   the <B>parallel</B> nature of the process  and the possibility of shrinking january  1972 levialdi  s  counting binary patterns  shrinking  <B>parallel</B> processing  multiple connected
19 Q0 3059 31 0.25606704 Lucene_47
models for <B>parallel</B> processing within programs  application to cpu i o and i o i o overlap approximate queueing models for internal <B>parallel</B> processing by individual programs in a multiprogrammed system are developed in this paper  the solution technique is developed by network decomposition  multiprogramming  <B>parallel</B> processing  queueing network models  multiprocessing of computation and i o 4.32
19 Q0 2895 32 0.2508934 Lucene_47
a language for formal problem specification a language for specifying the in tended behavior of communicating <B>parallel</B> processes is described  the specifications are constrain ts on the order in which events of a computation can occur  the language is used to write specifications of the readers greif  i  formal specifications program correctness  <B>parallel</B> processing  synchronization  readers
19 Q0 371 33 0.2493206 Lucene_47
remarks on <B>algorithms</B> 2 and 3  algorithm 15 and <B>algorithms</B> 25 and 26 cacm march  1961 wilkinson  j  h  ca610311 jb march 17  1978 12 35 am 371 5 371 371 5 371 371 5 371
19 Q0 2226 34 0.2468148 Lucene_47
further evidence for the analysis of <B>algorithms</B> for the zero-one programming problem the purpose  with two <B>algorithms</B> for the zero-one linear programming problem  an error in gue s paper is corrected  the utility of one of the <B>algorithms</B> as a suboptimizer is indicated  cacm january  1971 proll  l  g  operations research  integer programming  zero-one variables  <B>algorithms</B> 5.39 5.41 ca710108 jb
19 Q0 1367 35 0.2365446 Lucene_47
character structure and character parity sense for <B>parallel</B>-by-bit data communication in ascii   proposed american standard  cacm september  1966 ca660912 jb march 2  1978 4 26 pm 1367 4 1367 2772 4 1367 2787 4 1367 1116 5 1367 1367 5 1367 1367 5 1367 1367 5 1367
19 Q0 1569 36 0.2365446 Lucene_47
implementing phrase-structure productions in pl i a method is described for implementing the productions of a context-free phrase structure grammar in a pl i procedure whose structure and statements <B>parallel</B> the structure and notation of the grammar  cacm july  1967 irwin  l  ca670704 jb february 28  1978 9 01 am 1569 5 1569 1569 5 1569 1569 5 1569
19 Q0 1828 37 0.2365446 Lucene_47
synchronization in a <B>parallel</B>-accessed data base the following problem is considered  given a data for synchronization which will maximize the amount of <B>parallel</B> activity allowed  it is assumed that the data is discussed and their performance compared  cacm november  1969 shoshani  a  bernstein  a  j  <B>parallel</B> accessing  <B>parallel</B> search  file search  data base  synchronization  locking  deadlock 3.73 3.74 4.32
19 Q0 2283 38 0.23652628 Lucene_47
thinning <B>algorithms</B> on rectangular  hexagonal  and triangular arrays in this report three thinning <B>algorithms</B> are developed  one each for use with rectangular  hexagonal  and triangular arrays of the <B>algorithms</B> are presented and the relative performances of the <B>algorithms</B> are compared  it is found <B>algorithms</B>  rectangular  hexagonal  triangular arrays  image processing  skeleton 3.64 ca720907 jb january
19 Q0 2723 39 0.23598851 Lucene_47
multiprocessing compactifying garbage collection <B>algorithms</B> for a multiprocessing compactifying garbage collector are presented and discussed  the simple case of two processors  one performing lisp-like list operations and the other performing garbage collection continuously  is thoroughly examined reclamation  reclaimer  storage allocation  multiprocessing  synchronization  semaphores  <B>parallel</B>
19 Q0 2342 40 0.23140681 Lucene_47
interference between communicating <B>parallel</B> processes various kinds of interference between communicating <B>parallel</B> processes have been examined by dijkstra  knuth  and others  solutions have been given for the mutual exclusion problem and associated subproblems  in the form of <B>parallel</B> programs of <B>parallel</B> processes is regarded as a machine which proceeds from one state s  i e  a collection
19 Q0 2950 41 0.21591799 Lucene_47
 <B>algorithms</B> based on an abstract model of a scheduling system which formalizes the notion of priority  various classes of scheduling <B>algorithms</B> are defined and related to existing <B>algorithms</B>  a criterion-invariant <B>algorithms</B>  which include most of the commonly implemented ones  for time-invariant <B>algorithms</B>  fabry  r  s  scheduling <B>algorithms</B>  scheduling models  priority  operating systems processor
19 Q0 1342 42 0.21155554 Lucene_47
transportation problem  <B>algorithms</B> 293  h   cacm december  1966 bayer  g  ca661207a jb march 2  1978 2 30 pm 1342 5 1342 1342 5 1342 1342 5 1342
19 Q0 1658 43 0.21155554 Lucene_47
analysis of <B>algorithms</B> for the zero-one programming problem this paper is concerned with a review and examination of several existing <B>algorithms</B> for the zero-one programming problem  computational experience is summarized  the machine time and storage requirements of several of the <B>algorithms</B>  integer programming  zero-one variables  <B>algorithms</B> 5.39 5.41 ca681208 jb february 21  1978 1 31 pm
19 Q0 1660 44 0.21155554 Lucene_47
index by subject to <B>algorithms</B>  1960-1968 cacm december  1968 ca681206 jb february 21  1978 1 39 pm 1660 5 1660 1660 5 1660 1660 5 1660
19 Q0 1952 45 0.21155554 Lucene_47
index by subject to <B>algorithms</B>  1970 cacm december  1970 ca701211 jb february 9  1978 2 50 pm 1952 5 1952 1952 5 1952 1952 5 1952
19 Q0 2007 46 0.21155554 Lucene_47
<B>algorithms</B> policy revised august 1970 cacm august  1970 ca700814 jb february 10  1978 3 12 pm 2007 5 2007 2007 5 2007 2007 5 2007
19 Q0 2819 47 0.21155554 Lucene_47
 <B>algorithms</B> for encoding a string differ slightly from earlier proposals  the analysis program attempts to find an optimal set of codes for representing substrings of the file  four new <B>algorithms</B> for this operation are described and compared  various parameters in the <B>algorithms</B> are optimized to obtain file compaction  huffman codes  n-gram encoding  comparison of <B>algorithms</B> 3.7 3.73 4.33 ca761104 jb
19 Q0 804 48 0.21155554 Lucene_47
exponentiation of series  <B>algorithms</B> 134  cacm july  1963 thacher jr   h  c  ca630720 jb march 14  1978 8 19 am 804 5 804 804 5 804 804 5 804
19 Q0 1008 49 0.20697652 Lucene_47
scheduling meetings with a computer computer scheduling of papers as it was developed for the 1960 meeting of the federation of american societies for experimental biology  faseb  is described  the faseb meeting is the largest scientific meeting held in the united states each year  the technique developed for faseb can be applied to schedule any meeting with <B>parallel</B> sessions  cacm september
19 Q0 1341 50 0.20697652 Lucene_47
levels of computer systems in building current computer systems  we tend to break them down into  levels  of control  command and communication  in using the system  we break our problems down correspondingly  the continued use of such a structure raises questions about its effects on the usefulness of future systems  particularly with regard to such trends as time sharing  <B>parallel</B> programming
19 Q0 2182 51 0.20697652 Lucene_47
interrupt driven programming cacm july  1971 zelkowitz  m  interrupts  supervisors  monitors  debugging  <B>parallel</B> processing  associative memories  microprogramming 3.51 4.32 4.42 ca710608 jb february 3  1978 9 49 am 2182 4 2182 2534 4 2182 1959 5 2182 2182 5 2182 2182 5 2182 2182 5 2182 2497 5 2182 2534 5 2182 830 6 2182 1471 6 2182 1787 6 2182 1959 6 2182 1973 6 2182 2111 6 2182 2182 6 2182
19 Q0 2514 52 0.20697652 Lucene_47
an array grammar programming system a package of fortran programs has been developed that permits a user to interactively design and test array grammars  the user can control the rule selection procedure in a derivation or parse  using weighted programming matrices  he also has a choice of instance selection schemes  raster random  <B>parallel</B>   examples are given involving array languages
19 Q0 1747 53 0.20485362 Lucene_47
 clock  the synchronization of <B>parallel</B> processes  protection in multiprogrammed systems  debugging  program debugging  program testing  <B>parallel</B> processing  <B>parallel</B> programming
19 Q0 1846 54 0.20485362 Lucene_47
on simulating networks of <B>parallel</B> processes in which simultaneous events may occur some of the problems of simulating discrete event systems  particularly computer systems  on a conventional digital problems  the technique will either find a method of simulating the <B>parallel</B> events or report  l  simulation  <B>parallel</B> processes  simultaneous events  picture processing  computer system
19 Q0 2865 55 0.20485362 Lucene_47
verifying properties of <B>parallel</B> programs  an axiomatic approach an axiomatic method for proving a number of properties of <B>parallel</B> programs is presented  hoare has given a set of axioms for partial correctness  but they are not strong enough in most cases  this paper defines a more powerful for the use of auxiliary variables  which are added to a <B>parallel</B> program as an aid to proving it correct
19 Q0 2896 56 0.20485362 Lucene_47
an exercise in proving <B>parallel</B> programs correct a <B>parallel</B> program  dijkstra s on-the-fly garbage collector  is proved correct using a proof method developed by owicki  the fine degree of in terleaving in this program makes it especially difficult to understand  and complicates the proof greatly  difficulties with proving such <B>parallel</B> programs correct are discussed  cacm december  1977 gries  d
19 Q0 1529 57 0.19945648 Lucene_47
decomposition programming an analysis of matrix substructure a petroleum blending problem was analyzed in order to compare the primal and primal-dual decomposition <B>algorithms</B>  in the course of the analysis  a substructure was discovered which has relevance to the relative performance of the two <B>algorithms</B> and to their absolute performance as compared with a standard primal-simplex solution
19 Q0 1796 58 0.19945648 Lucene_47
index by subject to <B>algorithms</B>  1969 cacm december  1969 this 1969 index is the first supplement to the index by subject to <B>algorithms</B>  1960 1968  comm  acm 11  12  dec  1968   827 830   ca691216 jb february 15  1978 2 03 pm 1796 5 1796 1796 5 1796 1796 5 1796
19 Q0 1873 59 0.19945648 Lucene_47
accelerating lp <B>algorithms</B> it is shown how a novel method for computing  related  inner products can accelerate the pricing phase of lp <B>algorithms</B>  other lp applications are indicated  cacm july  1969 fox  b  l  linear programming  revised simplex method  multiple pricing  inner product 5.19 5.41 ca690707 jb february 17  19789 08 am 1873 5 1873 1873 5 1873 1873 5 1873
19 Q0 2903 60 0.19710524 Lucene_47
  called  recursion in troduction   is described and applied to two <B>algorithms</B> which solve pattern matching problems  by using recursion in troduction  <B>algorithms</B> which manipulate a stack are first translated into recursive <B>algorithms</B> in which no stack operations occur  these <B>algorithms</B> are then subjected  recursion elimination  pattern matching <B>algorithms</B>  stacks  computational induction 4.0 4.2 5.20 5.24
19 Q0 2884 61 0.18657444 Lucene_47
permutation enumeration  four new permutation <B>algorithms</B> classical permutation enumeration <B>algorithms</B> encounter special cases requiring additional computation every nth permutation when generating the n  permutations on n marks  four new <B>algorithms</B> have the attribute that special cases occur every n n-1 permutations  two of the <B>algorithms</B> produce the next permutation with a single exchange of two
19 Q0 1551 62 0.18321247 Lucene_47
on compiling <B>algorithms</B> for arithmetic expressions this paper deals with <B>algorithms</B> concerning arithmetic expressions used in a fortran iv compiler for a hitac-5020 computer having n accumulators  the <B>algorithms</B> generate an object code which minimizes the frequency of storing and recovering the partial results of the arithmetic expressions in cases where there are several accumulators  cacm
19 Q0 2490 63 0.18321247 Lucene_47
efficient <B>algorithms</B> for graph manipulation  h   algorithm a447  efficient <B>algorithms</B> are presented for partitioning a graph into connected components  biconnected components and simple paths  the algorithm for partitioning of a graph into simple paths is iterative and each iteration produces a new  r  graphs analysis of <B>algorithms</B>  graph manipulation 5.32 ca730610 jb january 23  1978 1 55 pm 2490
19 Q0 1325 64 0.17740844 Lucene_47
 matched filters  the development of three dimensional pattern analysis  the analysis of <B>parallel</B>
19 Q0 1536 65 0.17740844 Lucene_47
dynamic computation of derivatives it is shown how wengert s procedure for computation of derivatives can be implemented conveniently by use of compiler-generated complex addition  subtraction  and linkage to complex arithmetic subroutines  evaluation of a function and derivative proceed in <B>parallel</B>  as in wengert s procedure  but with the  imaginary  parts of variables declared complex bearing
19 Q0 1554 66 0.17740844 Lucene_47
a computer technique for displaying n-dimensional hyperobjects a digital computer and automatic plotter have been used to generate three-dimensional stereoscopic movies of the three-dimensional <B>parallel</B> and perspective projections of four-dimensional hyperobjects rotating in four-dimensional space  the observed projections and their motions were a direct extension of three-dimensional experience
19 Q0 2727 67 0.17740844 Lucene_47
multiple byte processing with full-word instructions a method is described which allows <B>parallel</B> processing of packed data items using only ordinary full-word computer instructions  even though the processing requires operations whose execution is contingent upon the value of a datum  it provides a useful technique for processing small data items such as alphanumeric characters  cacm august  1975
19 Q0 2952 68 0.17740844 Lucene_47
functions realizable with word-<B>parallel</B> logical and two s-complement addition instructions cacm june  1977 warren  h  s  jr  boolean functions  two s-complement  sign propagation 4.0 6.32 ca770611 jb december 28  1977 12 45 pm 362 4 2952 2296 4 2952 2952 4 2952 2952 4 2952 2952 4 2952 2952 4 2952 2952 4 2952 2952 4 2952 142 4 2952 142 4 2952 142 4 2952 142 5 2952 162 5 2952 163 5 2952 192 5 2952
19 Q0 3044 69 0.17740844 Lucene_47
a note on conditional expressions evaluation of a conditional expression may succeed even when the  deciding predicate  diverges and the alternatives are records  or nodes  whose fields have different content  cacm november  1978 friedman  d  wise  d  <B>parallel</B> evaluation  suspending cons  lisp  conditional forms  if-then-else  ambiguous function  infinite structures 4.2 4.13 4.32 5.24 ca781107 dh
19 Q0 3175 70 0.17740844 Lucene_47
  these probabilities are updated in <B>parallel</B> for all code letters  using joint letter probabilities  iterating
19 Q0 320 71 0.17740844 Lucene_47
 to fully express and consider both the sequential and <B>parallel</B> aspects of logic  they can be compiled
19 Q0 1374 72 0.1762963 Lucene_47
evaluation of determinant  determinant evaluation  <B>algorithms</B> 41 f3   269 f3   cacm september  1966 bergson  a  ca660909e jb march 23  1978 4 29 pm 1374 5 1374 1374 5 1374 1374 5 1374
19 Q0 1851 73 0.1762963 Lucene_47
generator of spanning trees  <B>algorithms</B> 354  h   cacm september  1969 mcilroy  m  d  spanning trees  trees  graphs 5.32 ca690904 jb february 15  1978 4 50 pm 1851 5 1851 1851 5 1851 1851 5 1851
19 Q0 1953 74 0.1762963 Lucene_47
exponential integral ei x   <B>algorithms</B> 385  s13   cacm december  1970 redish  k  a  ansi fortran standard 4.0 4.22 ca701210 jb february 9  1978 3 04 pm 1953 5 1953 1953 5 1953 1953 5 1953
19 Q0 2426 75 0.1762963 Lucene_47
<B>algorithms</B> scale1  scale2  and scale3 for determination of scales on computer generated plots  j6   algorithm a463  cacm october  1973 lewart  c  r  plotting  scaling for plotting 4.41 ca731014 jb january 20  1978 11 01 am 2426 5 2426 2426 5 2426 2426 5 2426
19 Q0 2627 76 0.1762963 Lucene_47
 the <B>algorithms</B> known for minimizing mean finishing time  in addition to presenting and analyzing new <B>algorithms</B> <B>algorithms</B>  optimal scheduling <B>algorithms</B>  deterministic scheduling models 4.32 5.39 ca740704 jb january 17
19 Q0 270 77 0.1762963 Lucene_47
techniques for storage allocation <B>algorithms</B> cacm october  1961 kelley jr   j  e  ca611011 jb march 16  1978 12 50 pm 270 5 270 270 5 270 270 5 270 678 5 270 270 6 270
19 Q0 2725 78 0.1762963 Lucene_47
a comparison of simulation event list <B>algorithms</B>  corrigendum  cacm august  1975 vaucher  j  c  duval  p  ca750810 jb january 6  1978 3 43 pm 2725 5 2725 2725 5 2725 2725 5 2725
19 Q0 2830 79 0.1762963 Lucene_47
a practitioner s guide to addressing <B>algorithms</B>  corrigendum  cacm september  1976 severance  d  g  duhne  r  a  ca760909 jb january 4  1978 8 43 am 2830 5 2830 2830 5 2830 2830 5 2830
19 Q0 2272 80 0.17452443 Lucene_47
sorting by natural selection a family of sorting <B>algorithms</B> is proposed  the members of which make fuller use of the memory space and thus yield longer sorted strings  extensive simulation results are presented  and various implications and further applications are discussed  cacm october  1972 frazer  w  d  wong  c  k  <B>algorithms</B>  sorting by replacement selection  expected string length 5.31
19 Q0 2904 81 0.17452443 Lucene_47
an algorithm for reduction of operator strength a simple algorithm which uses an indexed temporary table to perform reduction of operator strength in strongly connected regions is presented  several extensions  including linear function test replacement  are discussed  these <B>algorithms</B> should fit well into an integrated package of local optimization <B>algorithms</B>  cacm november  1977 cocke  j
19 Q0 3166 82 0.1727344 Lucene_47
computing standard deviations  accuracy four <B>algorithms</B> for the numerical computation of the standard deviation of  unweighted  sampled data are analyzed  two of the <B>algorithms</B> are well-known in the statistical and computational literature  the other two are new <B>algorithms</B> specifically intended definition of  accuracy   each of the four <B>algorithms</B> is analyzed for the conditions under which
19 Q0 2080 83 0.16726229 Lucene_47
 in which program execution and input output are handled uniformly as <B>parallel</B>  cooperating process  operating systems  <B>parallel</B> processes  process concept  process communication  message buffering  process
19 Q0 1924 84 0.15768419 Lucene_47
 system  it is shown that carefully designed matrix <B>algorithms</B> can lead to enormous savings in the number time  examination of addition  multiplication  and inversion <B>algorithms</B> shows that a partitioned matrix <B>algorithms</B> is also studied as a function of the number of pages of main memory available to the algorithm  cacm march  1969 mckellar  a  c  coffman jr   e  g  matrix <B>algorithms</B>  array processing  paging
19 Q0 2146 85 0.15768419 Lucene_47
optimizing the polyphase sort various dispersion <B>algorithms</B> for the polyphase sorting procedure  the logic of this algorithm is rather complicated  hence  several other new dispersion <B>algorithms</B> with more straightforward logic are presented  of the simple dispersion <B>algorithms</B> discussed and writing than most <B>algorithms</B> in use today  an additional two and one-fourth to three percent improvement
19 Q0 2263 86 0.15768419 Lucene_47
 <B>algorithms</B> two new <B>algorithms</B> for deriving optimal and near-optimal flowcharts from limited entry conditions  one of the <B>algorithms</B>  called the optimum-finding algorithm  leads to a flowchart which truly but does not necessarily produce the optimum flowchart  the <B>algorithms</B> are first derived for treating to be equally valid for tables including such a rule  both <B>algorithms</B> are compared with existing ones
19 Q0 2273 87 0.15768419 Lucene_47
conversion of decision tables by rule mask method without rule mask two <B>algorithms</B> for generating computer programs from decision tables are described  the <B>algorithms</B> allow handling limited entry  extended entry  and mixed entry tables  the <B>algorithms</B> are based on the rule mask method but need rules which are not applicable  <B>algorithms</B> 1 and 2  or conditions which are already tested  algorithm
19 Q0 2767 88 0.15768419 Lucene_47
a comparison of simulation event list <B>algorithms</B> four <B>algorithms</B> are considered which can be used to schedule events in a general purpose discrete simulation system  two of the <B>algorithms</B> are new  the <B>algorithms</B> are tested with a set of typical stochastic scheduling distributions especially chosen to show the advantages and limitations of the <B>algorithms</B>  the end-order tree algorithm is shown
19 Q0 2936 89 0.15267706 Lucene_47
an efficient data structure for the simulation event set recently <B>algorithms</B> have been presented for the realization of event scheduling routines suitable for general purpose discrete event <B>algorithms</B>  in this paper a new event scheduling algorithm is presented which improves on two aspects of the best of the previously published <B>algorithms</B>  first  the new algorithm s performance is quite
19 Q0 2997 90 0.15267706 Lucene_47
 <B>algorithms</B> use the  divide and conquer  technique and recursively apply a merge procedure for two nonin  the time complexity of the proposed <B>algorithms</B> is optimal within a multiplicative constant  cacm february  1977 preparata  f  p  hong  s  j  computational complexity  convex hull  optimal <B>algorithms</B>
19 Q0 3132 91 0.15267706 Lucene_47
experiments with some <B>algorithms</B> that find central solutions for pattern classification in two-class pattern recognition  it is a standard technique to have an algorithm finding hyperplanes which a noncentral hyperplane  six <B>algorithms</B> for finding central hyperplanes are tested on three data sets  although frequently used practice  the modified relaxation algorithm is very poor  three <B>algorithms</B>
19 Q0 2902 92 0.1511426 Lucene_47
 dynamic memory allocation <B>algorithms</B> when used to service simulation programs as represented by 18 test memory fragmentation  <B>algorithms</B> main taining separate free space lists for each size of memory block used tended to perform quite well compared with other <B>algorithms</B>  simple <B>algorithms</B> operating on memory ordered lists  without any free list  performed surprisingly well  <B>algorithms</B> employing power
19 Q0 1171 93 0.14959237 Lucene_47
a comparison of the primal-simplex and primal-dual <B>algorithms</B> for linear programming a statistical comparison of the primal-dual and the more commonly used primal-simplex algorithm for solving linear programming problems has been made under the assumption of starting with a full artificial basis parameters in determining the difference in the number of iterations between the <B>algorithms</B> is not only
19 Q0 2094 94 0.14959237 Lucene_47
on an algorithm for nonlinear minimax approximation certain nonlinear minimax approximation problems are characterize d by properties which permit the application of special <B>algorithms</B>  mainly based on the exchange <B>algorithms</B> of remes  1934  1935   for their solution  in this paper the application to problems of this type of a general nonlinear algorithm due to osborne and watson  1969
19 Q0 2267 95 0.14959237 Lucene_47
<B>algorithms</B> to reveal properties of floating-point arithmetic two <B>algorithms</B> are presented in the form of fortran subroutines  each subroutine computes the radix and number of digits of the floating-point numbers and whether rounding or chopping is done by the machine on which it is run  the methods are shown to work on any  reasonable  floating-point computer  cacm november  1972 malcolm  m
19 Q0 2324 96 0.14959237 Lucene_47
 of user oriented software  and comparisons of currently known <B>algorithms</B> to demonstrate which science  operations research  <B>algorithms</B> 5.41 8.3 ca720704 jb january 30  1978 3 14 pm 2324 5 2324
19 Q0 2368 97 0.14959237 Lucene_47
an implemented graph algorithm for winning shannon switching games in this tutorial paper a computer program which wins shannon switching games is described  since these games are played on graphs  the program is a good example of the implementation of graph <B>algorithms</B>  the two players in a shannon is connect or cut  cacm april  1972 chase  s  m  graph <B>algorithms</B>  graph processing  shannon switching
19 Q0 2389 98 0.14959237 Lucene_47
 of constraints  the <B>algorithms</B> used to solve problems expressed in this language rely on heuristic programming  both the language and the search <B>algorithms</B> are detailed  cacm february  1972 eastman  c  m
19 Q0 2630 99 0.14959237 Lucene_47
on computing sets of shortest paths in a graph two <B>algorithms</B> are presented that construct the k shortest paths between every pair of vertices in a directed graph  these <B>algorithms</B> generalize the floyd algorithm and the dantzig algorithm for finding the shortest path between every pair of vertices in a directed graph  cacm june  1974 minieka  e  graph  network  shortest path  algorithm 5.32
19 Q0 2832 100 0.14959237 Lucene_47
faster retrieval from context trees  corrigendum  context trees provide a convenient way of storing data which is to be viewed as a hierarchy of contexts  this note presents an algorithm which improves on previous context tree retrieval <B>algorithms</B>  it is based on the observation that in typical are built up to make the search rapid  <B>algorithms</B> for addition and deletion of data and for garbage
*************Query 20*************************

20 Q0 2695 1 0.6361396 Lucene_47
tridiagonalization by permutations tridiagonalizing a matrix by similarity transformations is an important computational tool in numerical linear algebra  consider the class of <B>sparse</B> <B>matrices</B> which compared with standard transformations  a <B>graph</B> <B>theoretic</B> algorithm which examines an arbitrary n x n matrix  permutation  algorithm  eigenvalues  <B>graph</B>  bandwidth  <B>sparse</B> matrix 5.14 5.32 ca740104 jb
20 Q0 2986 2 0.3652222 Lucene_47
operations on <B>sparse</B> relations various computations on relations  boolean <B>matrices</B>  or directed complexity  <B>sparse</B> relation  boolean matrix  directed <B>graph</B>  wirth-weber precedence relation  linear precedence functions in o n  steps  where n is the size of a grammer  the heart of the <B>algorithms</B> is a general theorem giving sufficient conditions under which an expression whose operands are <B>sparse</B>
20 Q0 2769 3 0.31383306 Lucene_47
a modification of warshall s algorithm for the transitive closure of binary relations an algorithm is given for computing the transitive closure of a binary relation that is represented by a boolean matrix  the algorithm is similar to warshall s although it executes faster for <B>sparse</B> <B>matrices</B> algorithm  transitive closure  reachability matrix  directed <B>graph</B>  digraph  boolean matrix  binary
20 Q0 1563 4 0.25200242 Lucene_47
a method for finding hamilton paths and knight s tours the use of warnsdorff s rule for finding a knight s tour is generalized and applied to the problem of finding a hamilton path in a <B>graph</B>  a <B>graph</B>-<B>theoretic</B> justification for the method is given  cacm july  1967 pohl  i  ca670710 jb february 28  1978 8 28 am 1563 5 1563 1563 5 1563 1563 5 1563
20 Q0 2780 5 0.22479557 Lucene_47
 march  1975 erisman  e  m  tinney  w  f  <B>sparse</B> <B>matrices</B>  triangular factorization  elements of inverseon computing certain elements of the inverse of a <B>sparse</B> matrix a recursive algorithm for computing the inverse of a matrix from the lu factors based on relationships in takahashi  et al   is examined  the formulas for the algorithm are given  the dependency relationships are derived
20 Q0 2524 6 0.19758976 Lucene_47
 by metrics and by <B>graph</B>-<B>theoretic</B> concepts  some empirical results are presented which compare the efficiency with their corresponding search <B>algorithms</B>  which are intended to reduce the number of comparisons required
20 Q0 2368 7 0.17314816 Lucene_47
  the program is a good example of the implementation of <B>graph</B> <B>algorithms</B>  the two players in a shannon is connect or cut  cacm april  1972 chase  s  m  <B>graph</B> <B>algorithms</B>  <B>graph</B> processing  shannon switching games  game playing  <B>graph</B> theory  positional games  demonstration programs  game theory  spinningan implemented <B>graph</B> algorithm for winning shannon switching games in this tutorial paper
20 Q0 2490 8 0.16992024 Lucene_47
efficient <B>algorithms</B> for <B>graph</B> manipulation  h   algorithm a447  efficient <B>algorithms</B> are presented for partitioning a <B>graph</B> into connected components  biconnected components and simple paths  the algorithm for partitioning of a <B>graph</B> into simple paths is iterative and each iteration produces a new  r  graphs analysis of <B>algorithms</B>  <B>graph</B> manipulation 5.32 ca730610 jb january 23  1978 1 55 pm 2490
20 Q0 2630 9 0.15967914 Lucene_47
on computing sets of shortest paths in a <B>graph</B> two <B>algorithms</B> are presented that construct the k shortest paths between every pair of vertices in a directed <B>graph</B>  these <B>algorithms</B> generalize the floyd algorithm and the dantzig algorithm for finding the shortest path between every pair of vertices in a directed <B>graph</B>  cacm june  1974 minieka  e  <B>graph</B>  network  shortest path  algorithm 5.32
20 Q0 2232 10 0.15449888 Lucene_47
 the word description can be made precise so that computer <B>algorithms</B> for feature extraction may be obtained  the focus is on the theoretical subject matter  the results consist of a set-<B>theoretic</B> conclusion is that the set-<B>theoretic</B> width-at-angle is a useful pattern feature when it can
20 Q0 1457 11 0.1521663 Lucene_47
data manipulation and programming problems in automatic information retrieval automatic information retrieval programs require the manipulation of a variety of different data structures  including linear text  <B>sparse</B> <B>matrices</B>  and tree or list structures  the main data manipulations to be performed in automatic information systems are first briefly reviewed  a variety of data representations
20 Q0 2289 12 0.14120418 Lucene_47
cellular arrays for the solution of <B>graph</B> problems a cellular array is a two-dimensional that cellular arrays are inherently well suited for the solution of many <B>graph</B> problems  for example  the adjacency matrix of a <B>graph</B> is easily mapped onto an array  each matrix element is stored in one  a major challenge in the effective use of cellular arrays for the solution of <B>graph</B> problems
20 Q0 2484 13 0.13306594 Lucene_47
 be represented by a tree or <B>graph</B>  it is quite natural for us to view the process of designing a data base as that of constructing a tree or a <B>graph</B>  a general method for constructing such a tree or a <B>graph</B> is provided  there are three important elements in this general construction method  namely  a set an element from the given set of objects  the use of different relations and <B>algorithms</B> results
20 Q0 3152 14 0.12813184 Lucene_47
 known <B>algorithms</B> which leave the <B>matrices</B> stored in row- or column- oriented form  an efficient method to multiply <B>matrices</B> while minimizing the number of page fetches required  it is often more efficient of an asymptotically better bound for multiplication of <B>matrices</B> given in row-oriented form by adapting to be advantageous for <B>matrices</B> and pages of realistic size  the strassen adaptation
20 Q0 2081 15 0.11743932 Lucene_47
some complete calculi for <B>matrices</B> a matrix calculus is introduced with the intention of developing  the paper investigates how the special structure of <B>matrices</B> can be described and utilized for efficient computing by saving memory space and superfluous operations  sequences of <B>matrices</B>  and sequences of sequences of <B>matrices</B>  are considered  and matrix operators areext ended to sequence operators
20 Q0 2199 16 0.115274094 Lucene_47
a <B>sparse</B> matrix package  part i   f4   algorithm 408  cacm april  1971 mcnamee  j  m  matrix  <B>sparse</B> matrix  matrix manipulation 5.14 ca710406 jb february 3  1978 3 20 pm 2199 5 2199 2199 5 2199 2199 5 2199
20 Q0 2877 17 0.1129102 Lucene_47
 determines all the definitions which can possibly  reach  each node of the control flow <B>graph</B> of the program and all the definitions that are  live  on each edge of the <B>graph</B>  the procedure uses  <B>algorithms</B>  compilers 4.12 5.24 ca760303 jb january 5  1978 8 33 am 2877 5 2877 2877 5 2877 2877 5
20 Q0 2883 18 0.10920387 Lucene_47
 of merit  this problem can be represented as a shortest path problem on a <B>graph</B> and can be solved using well-known <B>graph</B> search <B>algorithms</B>  the relations between this representation of the minimization problem and a dynamic programming approach are discussed  showing that the <B>graph</B> search method can
20 Q0 2905 19 0.10749346 Lucene_47
  this method can give rather <B>sparse</B> tables  the second method  the  remainder reduction  method kind of set  the two techniques are <B>applicable</B> directly to small sets  some methods to extend
20 Q0 3018 20 0.10521388 Lucene_47
 this edge-clique-cover problem and the <B>graph</B> coloring problem is established which allows <B>algorithms</B> problem is here shown to be equivalent to the problem of covering the edges of a <B>graph</B> by complete-complete  and if p  np then they do not admit polynomial-time approximation <B>algorithms</B> which always
20 Q0 2167 21 0.102586985 Lucene_47
  we describe several positive results about the existence of powerful simplification <B>algorithms</B> and the number-<B>theoretic</B> conjectures on which they rely  results about the nonexistence of <B>algorithms</B>
20 Q0 2442 22 0.09781332 Lucene_47
a <B>sparse</B> matrix package  algorithm r408  cacm september  1973 lawrence  e  e  ca730913 jb january 23  1978 8 37 am 2442 5 2442 2442 5 2442 2442 5 2442
20 Q0 1504 23 0.09409183 Lucene_47
<B>algorithms</B> for finding a fundamental set of cycles for an undirected linear <B>graph</B> given the adjacency matrix of the <B>graph</B>  the algorithm presented in this paper finds a spanning tree and then constructs the set of fundamental cycles  our algorithm is slower than an algorithm presented by welch by a ratio of n 3  n is the number of nodes  but requires less storage  for graphs with a large number
20 Q0 3156 24 0.09409183 Lucene_47
  <B>graph</B> theory  parallel processing  <B>algorithms</B>  transitive closure  connected component 5.25 5.32 6.22computing connected components on parallel computers we present a parallel algorithm which uses n2 processors to find the connected components of an undirected <B>graph</B> with n vertices in time o log2n   an o log2n  time bound also can be achieved using only n n  log2n   processors  the algorithm can
20 Q0 1423 25 0.09090662 Lucene_47
 applies to all <B>matrices</B>  it also has many applications in numerical analysis  but it is not widely used because the existing <B>algorithms</B> are fairly complicated and require considerable storage space-singular <B>matrices</B>  which gives the generalized inverse with little extra effort and with no additional
20 Q0 1886 26 0.09082879 Lucene_47
 generated  the factorization <B>algorithms</B> are also <B>applicable</B> to the problem of factoring boolean  1969 breuer  m  a  factorization <B>algorithms</B>  code optimization  sequencing of operations  detection
20 Q0 2142 27 0.09082879 Lucene_47
 determined and the problem is to find the  most representative  picture  three <B>algorithms</B> are described  all using monte carlo methods  which were designed to solve this problem  the <B>algorithms</B> are <B>applicable</B> in a large and varied number of fields  the most important uses may be the reconstruction
20 Q0 2273 28 0.09031712 Lucene_47
 rules which are not <B>applicable</B>  <B>algorithms</B> 1 and 2  or conditions which are already tested  algorithmconversion of decision tables by rule mask method without rule mask two <B>algorithms</B> for generating computer programs from decision tables are described  the <B>algorithms</B> allow handling limited entry  extended entry  and mixed entry tables  the <B>algorithms</B> are based on the rule mask method but need
20 Q0 3040 29 0.08927694 Lucene_47
  backtrack  combinatorial <B>algorithms</B>  constraint networks  constraint satisfaction  <B>graph</B> coloring  network
20 Q0 2557 30 0.0865742 Lucene_47
on the time required for a sequence of matrix products this paper discusses the multiplication of conformable sequences of row vectors  column vectors  and square <B>matrices</B>  the minimum time required to evaluate such products on ordinary serial computers as well as parallel computers is discussed  <B>algorithms</B> are presented which properly parse such matrix sequences subject to the constraints
20 Q0 3124 31 0.08551949 Lucene_47
 are given and illustrated through <B>graph</B> representations  one of the approaches is used to define an apl in the construction of data-driven <B>algorithms</B>  cacm february  1979 gull w  jenkins  m  nested arrays  apl arrays  recursive data structures  trees  data-driven <B>algorithms</B>  theory of arrays 4.22 5.29
20 Q0 1924 32 0.08426787 Lucene_47
organizing <B>matrices</B> and matrix operations for paged memory systems matrix representations system  it is shown that carefully designed matrix <B>algorithms</B> can lead to enormous savings in the number time  examination of addition  multiplication  and inversion <B>algorithms</B> shows that a partitioned matrix <B>algorithms</B> is also studied as a function of the number of pages of main memory available
20 Q0 2405 33 0.081511095 Lucene_47
linear systems with almost tridiagonal matrix  f4   algorithm a470  cacm december  1973 kubicek  m  system of linear equations  almost tridiagonal matrix  <B>sparse</B> matrix 5.14 ca731203 jb january 19  1978 2 50 pm 2405 5 2405 2405 5 2405 2405 5 2405
20 Q0 661 34 0.081511095 Lucene_47
indexing and the lambda-notation some methods of indexing sequentially stored elements of <B>sparse</B> multi-dimensional arrays are described in the scheme a notation  cacm december  1963 barnett  m  p  ca631213 jb march 13  1978 2 51 pm 661 5 661 661 5 661 661 5 661
20 Q0 2506 35 0.08069187 Lucene_47
a <B>sparse</B> matrix package  algorithm r408  cacm may  1973 sale  r  h  j  matrix  <B>sparse</B> matrix  matrix manipulation  fortran standards 5.14 ca730514 jb january 23  1978 4 30 pm 1613 4 2506 1646 4 2506 1900 4 2506 1955 4 2506 2025 4 2506 2154 4 2506 2365 4 2506 2506 4 2506 3060 4 2506 987 5 2506 2506 5 2506 2506 5 2506 2506 5 2506
20 Q0 2189 36 0.07527347 Lucene_47
 complete <B>graph</B> with n vertices  hamitonian circuits equivalent to  5 n - 1   specific permutations of n is determined by  e k    two <B>algorithms</B> treating the same example for five vertices are presented fairly efficiently by computer  cacm june  1971 harada  k  permutation  <B>graph</B> theory  scheduling
20 Q0 1145 37 0.074397445 Lucene_47
 in areas such as game-playing and theorem-proving  where practical <B>algorithms</B> are unknown  git-<B>graph</B> isomorphism tester-incorporates a variety of processes that attempt to narrow down
20 Q0 3164 38 0.074397445 Lucene_47
progressive acyclic digraphs-a tool for database integrity a progressive acyclic digraph  pad  algorithm accepts are requests and maintains a <B>graph</B> in an acyclic state  when a request creates a cycle  nodes are   detached  until the new are can be entered acyclically this process is important of actions  two pad <B>algorithms</B> are presented  one uses a simple path matrix representation
20 Q0 1727 39 0.07427249 Lucene_47
 a variant of this algorithm is derived  avoiding the necessity of computation involving large <B>matrices</B>  cacm  program <B>graph</B>  one-entry subgraph  locally estimated jump frequencies  supervisor overhead
20 Q0 2216 40 0.07266303 Lucene_47
 does not assume uniformly distributed branching ratios  and therefore is <B>applicable</B> to a family of sorting <B>algorithms</B> discussed by hoare  singleton  and van emden  the solution to the integral equation indicates that using more advanced <B>algorithms</B> in the family makes only minor reductions
20 Q0 3094 41 0.07266303 Lucene_47
analyses of deterministic parsing <B>algorithms</B> this paper describes an approach for determining the minimum  maximum  and average times to parse sentences acceptable by a deterministic parser estimates for the relative efficiencies of the two parsers  the estimates <B>applicable</B> to a specific machine  1978 cohen  j  roth  m  syntactic analysis  analysis of <B>algorithms</B> top-down and bottom-up parsing
20 Q0 3176 42 0.07059068 Lucene_47
storing a <B>sparse</B> table the problem of storing and searching large <B>sparse</B> tables is ubiquitous in computer science  the standard technique for storing such tables is hashing  but hashing has poor worst-case performance  we propose a good worst-case method for storing a static table of n entries  r  yao  a  gaussian elimination  parsing  searching  <B>sparse</B> matrix  table compression  table lookup
20 Q0 2172 43 0.067240834 Lucene_47
<B>graph</B> plotter  j6   algorithm 412  cacm july  1971 cermak  j  plot  <B>graph</B>  line printer plot 4.41 ca710710 jb february 2  1978 4 32 pm 2172 5 2172 2172 5 2172 2172 5 2172
20 Q0 2752 44 0.067240834 Lucene_47
generation of all the cycles of a <B>graph</B> from a set of basic cycles  h   algorithm 492  cacm june 1975 gibbs  n  e  basic cycle  cycle  <B>graph</B> 5.32 3.24 ca750601 jb january 9  1978 1 55 pm 2752 5 2752 2752 5 2752 2752 5 2752
20 Q0 2758 45 0.06405562 Lucene_47
a note on the lu factorization of a symmetric matrix cacm may  1975 evans  d  j  hatzopoulos  m  symmetric <B>matrices</B>  factorization  test <B>matrices</B>  matrix inversion  separable systems 5.14 ca750509 jb january 9  1978 2 26 pm 2758 5 2758 2758 5 2758 2758 5 2758
20 Q0 3139 46 0.063790254 Lucene_47
new methods to color the vertices of a <B>graph</B> this paper describes efficient new heuristic methods to color the vertices of a <B>graph</B> which rely upon the comparison of the degrees and structure of a <B>graph</B>  a method is developed which is exact for bipartite graphs and is an important part of heuristic-complete  <B>graph</B> structure  balancing  <B>graph</B> coloring  scheduling  comparison of the methods 5.25 5.32
20 Q0 2766 47 0.06376539 Lucene_47
copying cyclic list structures in linear time using bounded workspace a bounded workspace copying algorithm for arbitrary list structures is given  this algorithm operates in linear time and does not require tag bits  the best previous bounded workspace copying <B>algorithms</B> achieved n 2 time without is that the copy must be placed into a contiguous section of memory  the method is <B>applicable</B> to fixed
20 Q0 1047 48 0.06341183 Lucene_47
generation of test <B>matrices</B> by similarity transformations a method for obtaining test <B>matrices</B> with a prescribed distribution of characteristic roots is given  the process consists of using particularly simple similarity transformations to generate full <B>matrices</B> from canonical forms  the <B>matrices</B> generated also have known characteristic vectors  inverses and determinants  cacm june  1964 ortega
20 Q0 2805 49 0.06341183 Lucene_47
perturbations of eigenvalues of non-normal <B>matrices</B> the problem considered is to give bounds for finite perturbations of simple and multiple eigenvalues of nonnormal <B>matrices</B>  where these bounds attainable for any set of <B>matrices</B>  cacm january  1975 van der sluis  a  perturbation of eigenvalues  non-normal <B>matrices</B>  departure from normality  gershgorin circles 5.14 ca750106 jb january 12
20 Q0 1963 50 0.06276143 Lucene_47
condition numbers of pei <B>matrices</B> cacm november  1970 rokne  j  <B>matrices</B>  condition numbers  pei <B>matrices</B>  eigenvectors  eigenvalues 5.14 ca701116 jb february 9  1978 4 21 pm 1963 4 1963 1963 4 1963 1963 4 1963 909 5 1963 1963 5 1963 1963 5 1963 1963 5 1963 475 5 1963 750 5 1963
20 Q0 2290 51 0.057647005 Lucene_47
immediate predominators in a directed <B>graph</B>  h   algorithm a430  cacm august  1972 purdom jr   p  w  moore  e  f  predominator  immediate predominator  <B>graph</B> theory  directed <B>graph</B>  shortest path  articulation  connectivity  program optimization  optimizing compiler 4.12 5.32 ca720812 jb january 30  1978 9 19 am 1807 4 2290 2034 4 2290 2290 4 2290 2579 4 2290 2923 4 2290 2945 4 2290 1947 5 2290
20 Q0 1481 52 0.057055738 Lucene_47
<B>graph</B> plotter  algorithm 278  j6   cacm february  1966 lloyd  p  ca660206d jb march 23  1978 7 30 pm 1481 5 1481 1481 5 1481 1481 5 1481
20 Q0 2161 53 0.057055738 Lucene_47
an algorithm for the blocks and cutnodes of a <B>graph</B>  corrigendum  cacm september  1971 paton  k  ca710903 jb february 2  1978 2 24 pm 2161 5 2161 2161 5 2161 2161 5 2161
20 Q0 2461 54 0.057055738 Lucene_47
<B>graph</B> plotter  algorithm r412  cacm august  1973 watkins  r  p  ca730813 jb january 23  1978 10 30 am 2461 5 2461 2461 5 2461 2461 5 2461
20 Q0 2790 55 0.057055738 Lucene_47
the elementary circuits of a <B>graph</B>  algorithm r459  cacm february  1975 syslo  m  m  ca750209 jb january 12  1978 2 54 pm 2790 5 2790 2790 5 2790 2790 5 2790
20 Q0 2314 56 0.055794716 Lucene_47
  rather than focusing just on language features  since <B>algorithms</B> must be not only coded in a language the requirements specified are <B>applicable</B> to the design of advanced programming systems for a wide range
20 Q0 2453 57 0.055794716 Lucene_47
  the method is <B>applicable</B> to any limited entry decision table and does not require that actions have single published heuristic <B>algorithms</B>  compared to the optimal algorithm of reinwald and soland
20 Q0 1876 58 0.054916255 Lucene_47
generation of test <B>matrices</B> having certain sign patterns and prescribed positive spectra a class of orthogonal transformations is presented whose members transform a given positive diagonal matrix into a matrix having one of four special sign patterns  cacm july  1969 schneider  a  j  test <B>matrices</B>  positive <B>matrices</B>  sign patterns  orthogonal transformations  positive eigenvalues 5.1 5.14
20 Q0 2134 59 0.054352995 Lucene_47
an extension of the munkres algorithm for the assignment problem to rectangular <B>matrices</B> the assignment problem  together with munkres proposed algorithm for its solution in square <B>matrices</B> for rectangular <B>matrices</B>  timing results obtained by using an adapted version of silver s algol procedure <B>matrices</B>  algorithm 5.39 5.40 ca711209 jb february 2  1978 9 46 am 2133 4 2134 2134 4 2134 124 5 2134
20 Q0 256 60 0.054352995 Lucene_47
a set of test <B>matrices</B>  algorithm 52  cacm november  1961 dubay  g  h  ca611112 jb march 15  1978 10 46 pm 256 5 256 256 5 256 256 5 256
20 Q0 2778 61 0.054352995 Lucene_47
perturbations of eigenvalues of non-normal <B>matrices</B>  corrigendum  cacm march  1975 sluis  a  ca750310 jb january 9  1978 4 26 pm 2778 5 2778 2778 5 2778 2778 5 2778
20 Q0 285 62 0.054352995 Lucene_47
solution of tridiagonal <B>matrices</B> cacm september  1961 wenrick  r  c  houghton  a  v  ca610909 jb march 16  1978 9 39 pm 285 5 285 285 5 285 285 5 285
20 Q0 301 63 0.054352995 Lucene_47
a set of test <B>matrices</B>  algorithm 52  cacm august  1961 gilbert  h  e  ca610803 jb march 16  1978 10 13 pm 301 5 301 301 5 301 301 5 301
20 Q0 315 64 0.054352995 Lucene_47
solution of tridiagonal <B>matrices</B> cacm july  1961 wenrick  r  c  ca610702 jb march 16  1978 10 28 pm 315 5 315 315 5 315 315 5 315
20 Q0 349 65 0.054352995 Lucene_47
a set of test <B>matrices</B> cacm april  1961 herndon  j  r  ca610419 jb march 16  1978 11 47 pm 349 5 349 349 5 349 349 5 349
20 Q0 749 66 0.054352995 Lucene_47
note onstochastic <B>matrices</B> cacm september  1963 dumey  a  i  ca630909 jb march 13  1978 7 35 pm 749 5 749 749 5 749 749 5 749
20 Q0 751 67 0.054352995 Lucene_47
a note on a set of test <B>matrices</B> for inversion cacm september  1963 rodman  r  d  ca630907 jb march 13  1978 7 38 pm 751 5 751 751 5 751 751 5 751
20 Q0 777 68 0.054352995 Lucene_47
a set of test <B>matrices</B>  algorithm 52  cacm august  1963 naur  p  ca630821 jb march 13  1978 8 24 pm 777 5 777 777 5 777 777 5 777
20 Q0 896 69 0.054352995 Lucene_47
characteristic values and vectors of defective <B>matrices</B> cacm march  1963 thompson  g  t  ca630324 jb march 14  1978 12 58 pm 896 5 896 896 5 896 896 5 896
20 Q0 936 70 0.054352995 Lucene_47
a set of test <B>matrices</B>  algorithm 52  cacm january  1963 naur  p  ca630112 jb march 14  1978 2 35 pm 936 5 936 936 5 936 936 5 936
20 Q0 955 71 0.054352995 Lucene_47
a class of <B>matrices</B> to test inversion procedures cacm december  1964 cline  r  e  ca641216 jb march 9  1978 3 16 pm 955 5 955 955 5 955 955 5 955
20 Q0 956 72 0.054352995 Lucene_47
a family of test <B>matrices</B> cacm december  1964 newbery  a  c  r  ca641215 jb march 9  1978 3 17 pm 956 5 956 956 5 956 956 5 956
20 Q0 2177 73 0.053792667 Lucene_47
an algorithm for the blocks and cutnodes of a <B>graph</B> an efficient method is presented for finding blocks and cutnodes of an arbitrary undirected <B>graph</B>  the <B>graph</B> may be represented either  i of the machine employed  the storage  in machine words  required for a <B>graph</B> with n nodes and m edges increases  for both representations the time required to analyze a <B>graph</B> on n nodes increases as n g where g depends
20 Q0 2430 74 0.053792667 Lucene_47
the elementary circuits of a <B>graph</B>  h   algorithm a459  cacm october  1973 syslo m  m  algorithm  <B>graph</B> theory  circuit search algorithm  path search algorithm  searching 3.74 4.22 5.32 ca731010 jb january 20  1978 11 11 am 2430 4 2430 1961 5 2430 2430 5 2430 2430 5 2430 2430 5 2430
20 Q0 828 75 0.052855738 Lucene_47
incompressible flow network calculations a general method for the calculation of flows and pressures in fluid flow networks is presented  the method is <B>applicable</B> to computer use  cacm june  1963 cantrell  h  n  ca630621 jb march 14  1978 10 03 am 828 5 828 828 5 828 828 5 828
20 Q0 1501 76 0.051244494 Lucene_47
eigenvectors of a 2n x 2n matrix it has been known that the eigenvalues of a certain 2n x 2n matrix can be obtained by use of two smaller <B>matrices</B> of order n which can be easily constructed  an algorithm is given to obtain the eigenvectors of the 2n x 2n matrix by use of the eigenvectors of the smaller <B>matrices</B>  cacm december  1967 charmonman  s  ca671207 jb february 26  1978 2 22 pm 1501 5 1501
20 Q0 2133 77 0.051244494 Lucene_47
algorithm for the assignment problem  rectangular <B>matrices</B>   h   algorithm 415  cacm december  1971 bourgeois  f  lassalle  j  c  operations research  optimization theory  assignment problem  rectangular <B>matrices</B> 5.39 5.40 ca711210 jb february 2  1978 9 38 am 2133 4 2133 2133 4 2133 2134 4 2133 124 5 2133 2133 5 2133 2133 5 2133 2133 5 2133 2134 5 2133
20 Q0 2335 78 0.051244494 Lucene_47
eigenvalues and eigenvectors of a real general matrix  algorithm r343  cacm june  1972 niessner  h  eigenvalues  eigenvectors  qr-algorithm  nonsymmetric <B>matrices</B>  general <B>matrices</B> 5.14 ca720610 jb january 30  1978 4 11 pm 1968 4 2335 2099 4 2335 2335 4 2335 1662 5 2335 2335 5 2335 2335 5 2335 2335 5 2335
20 Q0 70 79 0.051244494 Lucene_47
construction of a set of test <B>matrices</B> this paper develops the equations and properties of a set of test <B>matrices</B> which are useful in the determination of the accuracy of routines for finding the inverse  determinant and or eigenvalues of a matrix  cacm august  1959 aegerter  m  j  ca590803 jb march 22  1978 6 09 pm 70 5 70 70 5 70 70 5 70
20 Q0 2052 80 0.04941172 Lucene_47
scheduling to reduce conflict in meetings conflicts in scheduling can be treated as defining an undirected linear <B>graph</B> independently of the relation of the activities in conflict to additional constraints of time and space  each connected component of such a <B>graph</B>  which can be found  scheduling  spanning tree  undirected linear <B>graph</B> 1.90 3.51 3.59 5.32 ca700603 jb february 13  1978 11 55 am
20 Q0 2980 81 0.04941172 Lucene_47
 eliminations on the basis of local properties of the region adjacency <B>graph</B>  the scheme is based on definitions of <B>graph</B> properties which are satisfied when a spurious region is present  then editing is equivalent to fast <B>graph</B> operations  a number of examples are shown  cacm april  1977 tanimoto  s  l
20 Q0 144 82 0.04890666 Lucene_47
do it by the numbers-digital shorthand present communications systems transmit single characters in groups of coded pulses between simple terminal equipments  since english words form only a <B>sparse</B> set of all possible alphabetic combinations  present methods are inefficient when computer systems are substituted for these terminals  using numeric representations of entire words or common phrases
20 Q0 1822 83 0.047546446 Lucene_47
shortest-path forest with topological ordering  algorithm  h   cacm november  1969 dial  r  b  shortest path  tree  network  directed <B>graph</B> 5.32 5.42 ca691108 jb february 15  1978 12 21 pm 1822 5 1822 1822 5 1822 1822 5 1822
20 Q0 1961 84 0.047546446 Lucene_47
an efficient search algorithm to find the elementary circuits of a <B>graph</B> a theoretically most circuits of a <B>graph</B>  the algorithm can be easily modified to find all of the elementary circuits in the <B>graph</B> to give a relation between speed and complexity  extensions to undirected and s-graphs are discussed  cacm december  1970 tiernan  j  c  algorithm  <B>graph</B> theory  circuit search algorithm  path
20 Q0 1983 85 0.047546446 Lucene_47
spanning tree  h   algorithm 399  cacm october  1970 seppanen  j  j  <B>graph</B>  tree  spanning tree 5.32 ca701007 jb february 10  1978 9 24 am 1983 5 1983 1983 5 1983 1983 5 1983
20 Q0 1707 86 0.047071077 Lucene_47
generation of positive test <B>matrices</B> with known positive spectra sufficient conditions are given for a real matrix to be similar to a positive matrix  this result is used to construct a similarity with a preassigned positive spectrum  cacm august  1968 hall  c  a  porsching  t  a  test <B>matrices</B>  positive <B>matrices</B>  similarity transformation  positive eigenvalues 5.1 5.14 ca680807 jb february 22
20 Q0 1847 87 0.04658582 Lucene_47
an algorithm for finding a fundamental set of cycles of a <B>graph</B> a fast method is presented for finding a fundamental set of cycles for an undirected finite <B>graph</B>  a spanning tree is grown  inspect all those edges  v z  of the <B>graph</B> for which z has not yet been examined  if z is already one such stage for each of the n vertices of the <B>graph</B>  for large n  the store required in creases
20 Q0 1151 88 0.045294162 Lucene_47
a note on multiplying boolean <B>matrices</B> ii cacm january  1964 comstock  d  r  ca640103 jb march 10  1978 5 38 am 1151 4 1151 1265 4 1151 2769 4 1151 1151 5 1151 1151 5 1151 1151 5 1151 635 5 1151
20 Q0 1791 89 0.045294162 Lucene_47
triangular factors of modified <B>matrices</B>  algorithm 319  f1   cacm january  1968 green  d  r  matrix decomposition  matrix factors  matrix modifier  matrix perturbation 5.14 ca680102 jb february 23  1978 2 50 pm 1791 5 1791 1791 5 1791 1791 5 1791
20 Q0 2281 90 0.045294162 Lucene_47
the eigen problem of block tridiagonal <B>matrices</B> cacm september  1972 khalil  h  m  linear algebra  eigenvalues and eigenvectors  partial differential equations 5.14 5.17 ca720909 jb january 27  1978 4 18 pm 2281 5 2281 2281 5 2281 2281 5 2281
20 Q0 2554 91 0.045294162 Lucene_47
 are symmetric band <B>matrices</B> with b positive definite  if n is the order of the matrix and m the bandwidth  the <B>matrices</B> a and b are partitioned into m-by-m blocks  and the algorithm is described in terms of rutishauser and schwartz for the reduction of symmetric <B>matrices</B> to band form  the calculation c eigenvalues  symmetric band <B>matrices</B> 5.14 ca730107 jb january 24  1978 4 26 pm 2554 5 2554 2554 5
20 Q0 494 92 0.045294162 Lucene_47
a finite sequentially compact process for the adjoints of <B>matrices</B> over arbitrary integral domains cacm august  1962 luther  h  a  guseman jr   l  f  ca620834 jb march 17  1978 9 04 pm 494 5 494 494 5 494 494 5 494
20 Q0 496 93 0.045294162 Lucene_47
a set of <B>matrices</B> for testing computer programs cacm august  1962 brenner  j  l  ca620832 jb march 17  1978 9 10 pm 1047 5 496 496 5 496 496 5 496 496 5 496 496 6 496
20 Q0 511 94 0.045294162 Lucene_47
a set of test <B>matrices</B>  algorithm 52  cacm august  1962 hillmore  j  s  ca620817 jb march 17  1978 9 35 pm 1707 5 511 511 5 511 511 5 511 511 5 511 1047 6 511 511 6 511
20 Q0 660 95 0.045294162 Lucene_47
more test <B>matrices</B> for determinants and inverses  pracnique  cacm december  1963 englar  t  s  ca631214 jb march 13  1978 2 46 pm 660 5 660 660 5 660 660 5 660
20 Q0 1630 96 0.045130342 Lucene_47
 whether points are inside or outside the region  or to perform set-<B>theoretic</B> operations on regions
20 Q0 2631 97 0.045130342 Lucene_47
an information-<B>theoretic</B> approach to text searching in direct access systems using direct access computer files of bibliographic information  an attempt is made to overcome one of the problems often associated with information retrieval  namely  the maintenance and use of large dictionaries  the greater part of which is used only infrequently  a novel method is presented  which maps
20 Q0 2699 98 0.045130342 Lucene_47
  set-<B>theoretic</B> languages  data structure choice 4.12 4.20 4.22 ca751208 jb january 5  1978 3 53 pm
20 Q0 2806 99 0.04483893 Lucene_47
two hadamard numbers for <B>matrices</B> a discussion is given of two functions of the entries of a square matrix  both related to hadamard s determinant theorem  which have some merits as alternatives to norm-bound  condition numbers   one  for linear systems  is known  the other  for eigen systems  seems to be new  cacm january  1975 birkhoff  g  <B>matrices</B>  eigenvalues  norms  condition numbers  error
20 Q0 3115 100 0.044379037 Lucene_47
orderly enumeration of nonsingular binary <B>matrices</B> applied to text encryption nonsingular binary <B>matrices</B> of order n  i e   nonsingular over the field  0  1   and an initial segment of the natural of all 2 x 2 and 3 x 3 nonsingular binary <B>matrices</B> were produced by mapping the intermediate vectors to the <B>matrices</B>  the mapping has application to the vernam encipherment method using pseudorandom
*************Query 21*************************

21 Q0 2337 1 0.2582229 Lucene_47
a sorting problem and its <B>complexity</B> a technique for proving min-max norms of sorting <B>algorithms</B> is given  one new algorithm for finding the minimum and maximum elements of a set with fewest comparisons is proved optimal with this technique  cacm june  1972 pohl  i  sorting  <B>computational</B> <B>complexity</B>  <B>computational</B> combinatorics 5.29 5.31 ca720608 jb january 30  1978 4 15 pm 2337 5 2337 2337 5
21 Q0 3018 2 0.24341473 Lucene_47
  <B>computational</B> <B>complexity</B>  np-<B>complete</B> problems  polynomial-time heuristics 4.12 5.25 5.32 ca780205-<B>complete</B>  and if p  np then they do not admit polynomial-time approximation <B>algorithms</B> which always problem is here shown to be equivalent to the problem of covering the edges of a graph by <B>complete</B> subgraphs with the objective of minimizing the number of <B>complete</B> subgraphs  a relationship between
21 Q0 3086 3 0.22977762 Lucene_47
 of the <B>computational</B> model on the ease of analysis and on the results produced  cacm july  1978 fredman  m  weide  b  analysis of <B>algorithms</B>  combinatorial problems  <B>computational</B> <B>complexity</B>  <B>computational</B> modelson the <B>complexity</B> of computing the measure of u ai  bi  the decision tree <B>complexity</B> of computing the measure of the union of n  possibly overlapping  intervals is shown to be  n log n   even
21 Q0 2702 4 0.18742488 Lucene_47
  <B>computational</B> <B>complexity</B>  context-free grammars  parsing  lr k  grammars  np-<B>complete</B> problems 4.12 5.23 5.25on the <B>complexity</B> of lr k  testing the problem of determining whether an arbitrary context-free  the time <B>complexity</B> of this problem is analyzed both when k is considered to be a fixed integer  then the <B>complexity</B> of the problem depends very strongly on the representation chosen for k  more
21 Q0 2837 5 0.17161527 Lucene_47
 favorably with a recent algorithm by hyafil  cacm september  1976 yap  c  k  selection problem  <B>algorithms</B>  comparison problems  concrete <B>computational</B> <B>complexity</B>  upper bounds  worst-case analysis 5.25new upper bounds for selection the worst-case minimum number of comparisons <B>complexity</B> vi n  of the i-th selection problem is considered  a new upper bound for vi n  improves the bound given
21 Q0 2997 6 0.16314052 Lucene_47
  the time <B>complexity</B> of the proposed <B>algorithms</B> is optimal within a multiplicative constant  cacm february  1977 preparata  f  p  hong  s  j  <B>computational</B> <B>complexity</B>  convex hull  optimal <B>algorithms</B> <B>algorithms</B> use the  divide and conquer  technique and recursively apply a merge procedure for two nonin
21 Q0 2932 7 0.13666141 Lucene_47
<B>complexity</B> of computations the framework for research in the theory of <B>complexity</B> of computations is described  emphasizing the in terrelation between seemingly diverse problems and methods are discussed  cacm september  1977 rabin  m  o  <B>complexity</B> of computations  algebraic <B>complexity</B>  in tractable problems  probabilistic <B>algorithms</B> 5.25 ca770901 jb december 28  1977 6 54 am 2932 5 2932
21 Q0 2110 8 0.13484266 Lucene_47
 and bottom-up <B>algorithms</B> studied by griffiths and petrick  cacm february  1970 earley  j  syntax analysis  parsing  context-free grammar  compilers  <B>computational</B> <B>complexity</B> 4.12 5.22 5.23 ca700205 jb in linear time on a large <B>class</B> of grammars  which seems to include most practical context-free
21 Q0 3110 9 0.12932545 Lucene_47
 expressions  then the problem is shown to be np-<B>complete</B>  cacm april  1978 szymanski  t  span-dependent instructions  variable-length addressing  code generation  assemblers  compilers  np-<B>complete</B>  <B>computational</B> <B>complexity</B>  4.11 4.12 5.25 ca780406 dh february 26  1979 3 49 pm 2626 4 3110 2786 4 3110 2840
21 Q0 2325 10 0.11973417 Lucene_47
 of continuous <B>algorithms</B>  four of the components of numerical mathematics are discussed  these are  foundations  finite precision number systems  <B>computational</B> <B>complexity</B>   synthesis and analysis of <B>algorithms</B>  analysis of error  programs and program libraries  cacm july  1972 traub  j  f  numerical mathematics  computer science  mathematics of computation  <B>algorithms</B>  continuous <B>algorithms</B> 1.3 5.0 5.1
21 Q0 2743 11 0.10098935 Lucene_47
sorting x   y cacm june  1975 harper  l  h  payne  t  h  savage  j  e  straus  e  merge sorting  <B>computational</B> <B>complexity</B>  data modeling  computing models  binary comparisons 5.25 5.31 ca750610 jb january 9  1978 12 45 pm 2743 5 2743 2743 5 2743 2743 5 2743
21 Q0 2771 12 0.094161786 Lucene_47
the synthesis of solids bounded by many faces a technique is presented which allows a <B>class</B> of solid objects to be synthesized and stored using a computer  synthesis begins with primitive solids like together or subtracted  two <B>algorithms</B> to perform addition are described  for practical designers bounded by many faces  cacm april  1975 braid  i  c  <B>computational</B> geometry  computer-aided design
21 Q0 3165 13 0.094161786 Lucene_47
 <B>class</B> labels identify the regions bordering each segment on either side  the approximation algorithm illustrated by the outline of <B>algorithms</B> for area computation and point inclusion  the algorithm is applied structures  <B>computational</B> geometry  computer cartography  automated cartography 3.14 4.34 8.2 ca790906 db
21 Q0 2226 14 0.09273155 Lucene_47
further evidence for the analysis of <B>algorithms</B> for the zero-one programming problem the purpose of this note is to report <B>computational</B> experience additional to that recently summarized by gue et al  with two <B>algorithms</B> for the zero-one linear programming problem  an error in gue s paper is corrected  the utility of one of the <B>algorithms</B> as a suboptimizer is indicated  cacm january  1971 proll
21 Q0 1309 15 0.09044329 Lucene_47
a computer user-oriented system a computer language system has been developed which makes possible fast preparation of management reports  regardless of <B>computational</B> <B>complexity</B> or format variety  costs are sufficiently low so that individually tailored reports can be prepared for every manager  efficient processing through any <B>computational</B> sequence  and flexible presentation of results in either
21 Q0 2216 16 0.08912496 Lucene_47
 of sorting <B>algorithms</B> discussed by hoare  singleton  and van emden  the solution to the integral equation indicates that using more advanced <B>algorithms</B> in the family makes only minor <B>reductions</B>
21 Q0 2706 17 0.08836568 Lucene_47
a note on the set basis problem related to the compaction of character sets this note discusses the reduction of the set basis problem to the clique cover problem  cacm november  1975 kou  l  t  wong  c  k  compaction of character sets  set basis  set covering  <B>computational</B> <B>complexity</B>  polynomial completeness  clique cover 4.9 5.25 5.39 ca751106 jb january 6  1978 8 55 am 2706 4 2706 2643 5 2706
21 Q0 3162 18 0.08836568 Lucene_47
on improving the worst case running time of the boyer-moore string matching algorithm it is shown how to modify the boyer-moore string matching algorithm so that its worst case running time is linear even when multiple occurrences of the pattern are present in the text  cacm september  1979 galil  z  <B>computational</B> <B>complexity</B>  linear time  worst case  string matching  periodicity 3.74 4.40 5.25
21 Q0 2950 19 0.08812917 Lucene_47
 <B>algorithms</B> based on an abstract model of a scheduling system which formalizes the notion of priority  various classes of scheduling <B>algorithms</B> are defined and related to existing <B>algorithms</B>  a criterion for the implementation <B>efficiency</B> of an algorithm is developed and results in the definition of time-invariant <B>algorithms</B>  which include most of the commonly implemented ones  for time-invariant <B>algorithms</B>
21 Q0 2927 20 0.087128855 Lucene_47
 is the <B>computational</B> <B>complexity</B> of finding all the primes less than n  a modified sieve of eratosthenes using doubly linked lists yields an algorithm of o n  arithmetic <B>complexity</B>  this upper bound is shown n log logn  and the bit <B>complexity</B> to o n logn log log logn   a storage requirement is described using o n logn log logn  bits as well  cacm september  1977 mairson  h  g  <B>computational</B> <B>complexity</B>
21 Q0 2986 21 0.085520834 Lucene_47
 precedence functions in o n  steps  where n is the size of a grammer  the heart of the <B>algorithms</B> efficiently  cacm march  1977 hunt  h  b  iii szymanski  t  g  ullman  j  d  <B>computational</B> <B>complexity</B>  sparse relation  boolean matrix  directed graph  wirth-weber precedence relation  linear
21 Q0 2931 22 0.08446513 Lucene_47
 of formalization  more recently  precise comparisons in the <B>efficiency</B> of decision methods have become available through the developments in <B>complexity</B> theory  these  however  are applications to logic  and a big formalization is well advanced  however  the semantical theory can hardly be said to be <B>complete</B>
21 Q0 1658 23 0.07948418 Lucene_47
analysis of <B>algorithms</B> for the zero-one programming problem this paper is concerned with a review and examination of several existing <B>algorithms</B> for the zero-one programming problem  <B>computational</B> experience is summarized  the machine time and storage requirements of several of the <B>algorithms</B>  integer programming  zero-one variables  <B>algorithms</B> 5.39 5.41 ca681208 jb february 21  1978 1 31 pm
21 Q0 2936 24 0.07918367 Lucene_47
an efficient data structure for the simulation event set recently <B>algorithms</B> have been presented <B>algorithms</B>  in this paper a new event scheduling algorithm is presented which improves on two aspects of the best of the previously published <B>algorithms</B>  first  the new algorithm s performance is quite insensitive to skewed distributions  and second  its worst-case <B>complexity</B> is o  n   where n
21 Q0 3131 25 0.07715094 Lucene_47
focus microcomputer number system focus is a number system and supporting <B>computational</B> <B>algorithms</B> especially useful for microcomputer control and other signal processing applications  focus has  <B>algorithms</B> for 8-bit and 16-bit implementations of focus are included  cacm march  1979 edgar  a  lee  s  number representation  logarithmic arithmetic  <B>computational</B> speed  <B>computational</B> accuracy
21 Q0 2703 26 0.07701175 Lucene_47
  <B>computational</B> <B>complexity</B>  exponential time  semantics 4.12 5.25 ca751204 jb january 5  1978 4 38 pmthe intrinsically exponential <B>complexity</B> of the circularity problem for attribute grammars attribute grammars are an extension of context-free grammars devised by knuth as a mechanism for including the semantics of a context-free language with the syntax of the language  the circularity problem
21 Q0 3055 27 0.071357146 Lucene_47
an analysis of <B>algorithms</B> for the dutch national flag problem solutions to the dutch national flag problem have been given by dijkstra  1  and meyer  3   dijkstra starts with a simple program and arrives at an improved program by refinement  both of the <B>algorithms</B> given by dijkstra are shown <B>complexity</B> 5 9n  cacm october  1978 mcmaster  c  algorithmic analysis  dutch national flag problem
21 Q0 2903 28 0.07056396 Lucene_47
  recursion elimination  pattern matching <B>algorithms</B>  stacks  <B>computational</B> induction 4.0 4.2 5.20 5.24  called  recursion in troduction   is described and applied to two <B>algorithms</B> which solve pattern matching problems  by using recursion in troduction  <B>algorithms</B> which manipulate a stack are first translated into recursive <B>algorithms</B> in which no stack operations occur  these <B>algorithms</B> are then subjected
21 Q0 2454 29 0.06775038 Lucene_47
<B>computational</B> <B>algorithms</B> for closed queueing networks with exponential servers methods are presented for computing the equilibrium distribution of customers in closed queueing networks with exponential servers  expressions for various marginal distributions are also derived  the <B>computational</B> <B>algorithms</B> are based on two-dimensional iterative techniques which are highly efficient and quite simple
21 Q0 1619 30 0.067069456 Lucene_47
error-free methods for statistical computations neely has discussed <B>computational</B> error generated by some <B>algorithms</B> used to compute various statistics  in the present paper methods are described which are error-free  simple in concept  and usually less costly in machine time than those mentioned by neely  cacm march  1967 rodden  b  e  ca670310 jb february 28  1978 1 02 pm 1619 4 1619 3166 4
21 Q0 2953 31 0.066599175 Lucene_47
  sorting <B>algorithms</B>  <B>computational</B> induction 4.0 4.2 5.20 5.24 5.25 5.31 ca770610 jb december 28notes on recursion elimination various methods of recursion elimination are applied to the schematic recursive procedure  proc s x   px then n x   s fx   s gx   m x  fi  procedures with this general form arise in connection with tree traversal and sorting <B>algorithms</B>  each method of recursion
21 Q0 3151 32 0.066599175 Lucene_47
   thereby achieving a total processing time o n log n   cacm july  1979 preparata  f  <B>computational</B> geometry  convex hull  planar set of points  real-time <B>algorithms</B>  on-line <B>algorithms</B>  4.49 5.25 5.32
21 Q0 2645 33 0.065992534 Lucene_47
 <B>efficiency</B>  analysis of <B>algorithms</B> 4.12 4.20 5.24 5.25 ca740601 jb january 17  1978 3 48 pm 1086 4 2645two languages for estimating program <B>efficiency</B> two languages enabling their users to estimate the <B>efficiency</B> of computer programs are presented  the program whose <B>efficiency</B> one wishes to estimate estimating its <B>efficiency</B>  processors for the two languages are also described  the first processor
21 Q0 1650 34 0.06492638 Lucene_47
a unifying <B>computational</B> method for the analysis of <B>complete</B> factorial experiments a <B>computational</B> method which may be used for the calculation of sums of squares in the analysis of variance of <B>complete</B> factorial experiments and in the computation of main effect or interaction means is described  the method is elucidated as unifying since one method can be used for a variety of purposes each
21 Q0 2189 35 0.064585604 Lucene_47
generation of rosary permutations expressed in hamiltonian circuits systematic generation of a specific <B>class</B> of permutations fundamental to scheduling problems is described  in a nonoriented <B>complete</B> graph with n vertices  hamitonian circuits equivalent to  5 n - 1   specific permutations of n is determined by  e k    two <B>algorithms</B> treating the same example for five vertices are presented
21 Q0 3163 36 0.06334694 Lucene_47
 an improvement over the best previous ly known insertion <B>algorithms</B> of hirschberg and kosaraju  which require time o log 2n   moreover  the o log n  <B>complexity</B> is optimal  earlier results have shown of their kind  where deletion has a smaller time <B>complexity</B> than insertion  furthermore  it can now be concluded  the insertion and deletion <B>algorithms</B> for oshb trees appear much more complicated than the corresponding
21 Q0 2784 37 0.063118346 Lucene_47
 formula is also derived  cacm march  1975 floyd  r  w  rivest  r  l  selection  <B>computational</B> <B>complexity</B>  medians  tournaments  quantiles 5.30 5.39 ca750304 jb january 9  1978 4 52 pm 1919 4 2784 2191
21 Q0 2828 38 0.062891126 Lucene_47
hierarchical geometric models for visible surface <B>algorithms</B> the geometric structure inherent  the range of <B>complexity</B> of an environment is greatly increased while the visible <B>complexity</B> of any given grows linearly with the visible <B>complexity</B> of the scene  cacm october  1976 clark  j  h  visible surface <B>algorithms</B>  hidden surface <B>algorithms</B>  hierarchical data structures  geometric models 5.31 8.2
21 Q0 2749 39 0.06014482 Lucene_47
 that the significant event method can be of value in the simulation of some systems when <B>computational</B> <B>efficiency</B> is of sufficient importance  cacm june  1975 babich  a  f  grason  j  parnas  d  l
21 Q0 3070 40 0.06014482 Lucene_47
  and a central-server queueing network models the use of system processors  the accuracy and <B>efficiency</B> of the hybrid technique are demonstrated by comparing the result and <B>computational</B> costs of the hybrid
21 Q0 3166 41 0.059580795 Lucene_47
computing standard deviations  accuracy four <B>algorithms</B> for the numerical computation of the standard deviation of  unweighted  sampled data are analyzed  two of the <B>algorithms</B> are well-known in the statistical and <B>computational</B> literature  the other two are new <B>algorithms</B> specifically intended definition of  accuracy   each of the four <B>algorithms</B> is analyzed for the conditions under which
21 Q0 2033 42 0.05954033 Lucene_47
 <B>computational</B> factors a given set of messages  two new hash-coding methods are examined and compared with a particular conventional hash-coding method  the <B>computational</B> factors considered are the size  scatter storage  searching  storage layout  retrieval trade-offs  retrieval <B>efficiency</B>  storage <B>efficiency</B> 3.73 3.74 3.79 ca700704 jb february 13  1978 9 18 am 1676 4 2033 1682 4 2033 1728 4 2033 1860 4
21 Q0 3032 43 0.059464287 Lucene_47
reverse path forwarding of broadcast packets a broadcast packet is for delivery to all nodes of a network  <B>algorithms</B> for accomplishing this delivery through a store-and-forward packet switching  to this list of <B>algorithms</B> we add  6  reverse path forwarding  a broadcast routing method which exploits with less <B>complexity</B> than that required for the known alternatives  cacm december  1978 dalal  y
21 Q0 3040 44 0.058677834 Lucene_47
 tree search <B>efficiency</B>  an algorithm is developed that can achieve any level of consistency desired  backtrack  combinatorial <B>algorithms</B>  constraint networks  constraint satisfaction  graph coloring  network
21 Q0 1886 45 0.05649076 Lucene_47
generation of optimal code for expressions via factorization given a set of expressions which are to be compiled  methods are presented for increasing the <B>efficiency</B> of the object code produced generated  the factorization <B>algorithms</B> are also applicable to the problem of factoring boolean  1969 breuer  m  a  factorization <B>algorithms</B>  code optimization  sequencing of operations  detection
21 Q0 2289 46 0.05645117 Lucene_47
 in the array  the chief <B>computational</B> advantage offered by cellular arrays is the improvement is the determination of <B>algorithms</B> that exploit the possibilities for parallelism  especially for problems whose solutions appear to be inherently serial  in particular  several parallelized <B>algorithms</B>  these <B>algorithms</B> exhibit a computation time that in many cases grows at a rate not exceeding log2 n  where n
21 Q0 2169 47 0.056281596 Lucene_47
the altran system for rational function manipulation-a survey altran is a <B>complete</B> system for symbolic computation with rational functions in several variables with integer coefficients  it has been designed and implemented to handle large problems with ease and <B>efficiency</B>  considerable effort has been spent to ensure a minimum amount of machine dependence in the implementation  thus permitting
21 Q0 2499 48 0.055321995 Lucene_47
 executive might dynamically adjust its allocation <B>algorithms</B> to gain <B>efficiency</B>  allocation weightings may depend on allocation <B>algorithms</B>  these are not arbitrary accounting parameters  often  <B>efficiency</B>  resource allocation  resource accounting 4.32 ca730601 jb january 23  1978 3 51 pm 1892 4
21 Q0 2313 49 0.054567862 Lucene_47
the evolution of storage structures data base management systems have grown rapidly in their power and <B>complexity</B> over the 15-year history of data processing on commercially available computers  the original concepts have split  and new terms have been adopted to name and refer to these concepts  logical record  track  volume  entity  set  entity <B>class</B>  set <B>class</B>  data structure diagram  storage
21 Q0 2627 50 0.05299333 Lucene_47
 the <B>algorithms</B> known for minimizing mean finishing time  in addition to presenting and analyzing new <B>algorithms</B> <B>complete</B>  and hence unlikely to admit of a non-enumerative solution cacm july  1974 bruno  j  coffman <B>algorithms</B>  optimal scheduling <B>algorithms</B>  deterministic scheduling models 4.32 5.39 ca740704 jb january 17
21 Q0 3132 51 0.052774806 Lucene_47
experiments with some <B>algorithms</B> that find central solutions for pattern classification in two-<B>class</B> pattern recognition  it is a standard technique to have an algorithm finding hyperplanes which in the empty space between the two classes  since a central hyperplane does not favor one <B>class</B> a noncentral hyperplane  six <B>algorithms</B> for finding central hyperplanes are tested on three data sets
21 Q0 3037 52 0.05187173 Lucene_47
 <B>complexity</B> as the algorithm presented by mairson  6   however  our version is perhaps simpler and more in time proportional to n  cacm december  1978 gries  d  misra  j  primes  <B>algorithms</B>  data
21 Q0 2746 53 0.050494675 Lucene_47
  finite state machines  <B>computational</B> <B>complexity</B>  3.74 3.71 5.22 5.25 ca750607 jb january 9  1978 1 03
21 Q0 2916 54 0.050494675 Lucene_47
 the size of the alphabet  cacm october  1977 boyer  r  s  bibliographic search  <B>computational</B> <B>complexity</B>  information retrieval  linear time bound  pattern matching  text editing 3.74 4.40 5.25 ca771010
21 Q0 2389 55 0.048948478 Lucene_47
preliminary report on a system for general space planning a computer language and a set of programs within that language are described which allow the formulating and solving of a <B>class</B> of space of constraints  the <B>algorithms</B> used to solve problems expressed in this language rely on heuristic programming  both the language and the search <B>algorithms</B> are detailed  cacm february  1972 eastman  c  m
21 Q0 2365 56 0.048898198 Lucene_47
matrix computations with fortran and paging the <B>efficiency</B> of conventional fortran programs for matrix computations can often be improved by reversing the order of nested loops  such modifications produce modest savings in many common situations and very significant savings for large problems run under an operating system which uses paging  cacm april  1972 moler  c  b  matrix <B>algorithms</B>  linear
21 Q0 3153 57 0.04694883 Lucene_47
the control of response times in multi-<B>class</B> systems by memory allocations the possibility is examined in the context of a paged computer system  two parameterized <B>algorithms</B> which partition degrees of multiprogramming and the proportion of processor time devoted to each <B>class</B>  applying alocation parameters on the expected response times under the two <B>algorithms</B>  numerical solutions
21 Q0 3118 58 0.04647697 Lucene_47
 bound to the number of steps required buy a permutation algorithm is derived  and the <B>class</B> of optimum <B>algorithms</B> is identified  cacm january  1979 bongiovanni  g  luccio  f  bubble memory  memory loops
21 Q0 2035 59 0.04519261 Lucene_47
 are logically similar to a disk  priority was given to the design of efficient tape <B>algorithms</B> access  display editing  display oriented system  filing <B>algorithms</B>  lap6  layering  linc  man-machine communication  on-line editing  on-line <B>efficiency</B>  on-line environment  scroll editing  small
21 Q0 1462 60 0.04487685 Lucene_47
  but different horizontally  proper division of responsibility between levels leads to greater <B>efficiency</B> and less logical <B>complexity</B>  while actually enhancing capability  cacm march  1966 orchard-hays  w
21 Q0 2251 61 0.04487685 Lucene_47
weighted increment linear search for scatter tables a new linear search for hash tables whose increment step is a function of the key being addressed is presented  comparisons with known methods are given  in terms of <B>efficiency</B> and computation <B>complexity</B>  in particular  the new method applies to tables of size n   2 r  it allows full table searching  and practically eliminates primary clustering
21 Q0 2695 62 0.044444457 Lucene_47
tridiagonalization by permutations tridiagonalizing a matrix by similarity transformations is an important <B>computational</B> tool in numerical linear algebra  consider the <B>class</B> of sparse matrices which can be tridiagonalized using only row and corresponding column permutations  the advantages of using such a transformation include the absence of round-off errors and improved computation time when
21 Q0 2679 63 0.04362171 Lucene_47
 are presented for six acm <B>algorithms</B>  quicksort  no  64   shellsort  no  201   stringsort  no  207    treesort3   no  245   quickersort  no  271   and qsort  no  402   <B>algorithms</B> 271 and 402 are refinements that qsort  no  402  requires many more comparisons than its author claims  of all these <B>algorithms</B>  in-place sorting  sorting <B>efficiency</B>  sorting performance tests  quicksort  quickersort  qsort
21 Q0 1350 64 0.04309195 Lucene_47
the augmented predictive analyzer for context-free languages-its relative <B>efficiency</B> it has been proven by greibach that for a given context-free grammar g  a standard-form grammar gs can other parsing <B>algorithms</B>  a selective top-to-bottom algorithm similar to irons   error correcting for normal grammars  the comparison is based upon several criteria of <B>efficiency</B>  covering core
21 Q0 2030 65 0.042255826 Lucene_47
context-sensitive parsing this paper presents a canonical form for context-sensitive derivations and a parsing algorithm which finds each context-sensitive analysis once and only once  the amount of memory required by the algorithm is essentially no more than the required to store a single <B>complete</B> grammars  formal language theory  parsing  parsing <B>algorithms</B>  recognition <B>algorithms</B> 3.42 5.22 5.23
21 Q0 895 66 0.04182775 Lucene_47
a <B>computational</B> extension of the variate difference method presented here is a <B>computational</B> extension of the variate difference method as developed by g  tintner  1   cacm march  1963 scheinok  p  a  ca630325 jb march 14  1978 12 57 pm 895 5 895 895 5 895 895 5 895
21 Q0 2665 67 0.041497376 Lucene_47
copying list structures using bounded workspace two new <B>algorithms</B> are presented for list structure copying using bounded workspace  the first  of primarily theoretical interest  shows that without cell tag bits the task can be performed in time n 2  the second algorithm  assuming one tag bit processing  copying  marking  space <B>complexity</B> 4.34 5.25 ca740405 jb january 18  1978 9 55 am 1869 4 2665
21 Q0 2766 68 0.041497376 Lucene_47
copying cyclic list structures in linear time using bounded workspace a bounded workspace copying algorithm for arbitrary list structures is given  this algorithm operates in linear time and does not require tag bits  the best previous bounded workspace copying <B>algorithms</B> achieved n 2 time without or variable size nodes  cacm may  1975 fisher  d  a  list processing  copying  linear time  space <B>complexity</B>
21 Q0 3150 69 0.041497376 Lucene_47
beyond programming languages as computer technology matures  our growing ability to create large systems is leading to basic changes in the nature of programming  current programming language concepts will not be adequate for building and maintaining systems of the <B>complexity</B> called attention away from the detailed specification of <B>algorithms</B>  towards the description of the properties
21 Q0 2081 70 0.041428696 Lucene_47
some <B>complete</B> calculi for matrices a matrix calculus is introduced with the intention of developing data structures suitable for a high level algorithmic language for mathematical programming and cumulative operators  <B>algorithms</B> are given which use symbol manipulation of matrix expressions so form can be found within a specified calculus  cacm april  1970 bayer  r  witzgall  c  <B>complete</B>
21 Q0 3007 71 0.04024999 Lucene_47
<B>complexity</B> of computations  corrigendum  cacm march  1978 rabin  m  ca780306 jb march 28  1978 1 02 pm 3007 5 3007 3007 5 3007 3007 5 3007
21 Q0 3057 72 0.039899882 Lucene_47
 togram matching is presented which has time <B>complexity</B> o k1 x k2   if the monotone property is dropped  then the problem becomes np-<B>complete</B>  even if it is restricted to k2   2  cacm october  1978 chang
21 Q0 2135 73 0.039837405 Lucene_47
rapid computation of general interpolation formulas and mechanical quadrature rules let f have n continuous on a closed interval  a b  and let l be a linear functional  the attempt is made to approximate l  f  with l  q  where q is a polynomial  approximating f  <B>algorithms</B> are developed for rapid computation of l  q  for a wide <B>class</B> of selections of q which includes the lagrangian and hermitian
21 Q0 719 74 0.039837405 Lucene_47
 operations can be made the basis of compiler decoding <B>algorithms</B> the proper use of machines of this <B>class</B> for compilation has advantages over machines with fixed-length words  cacm october  1963
21 Q0 1572 75 0.039118554 Lucene_47
 time-sharing <B>algorithms</B> or techniques  for the sake of <B>efficiency</B> and greater applicability
21 Q0 1957 76 0.039118554 Lucene_47
the list set generator  a construct for evaluating set expressions the list set generator is defined and <B>algorithms</B> for its use are given  the list set generator is a construct which may be added to a list processing system or any system that handles sets  it efficiently generates the set which results from any expression involving sets and set operators  the <B>efficiency</B> derives from evaluating
21 Q0 2524 77 0.039118554 Lucene_47
 with their corresponding search <B>algorithms</B>  which are intended to reduce the number of comparisons required by metrics and by graph-theoretic concepts  some empirical results are presented which compare the <B>efficiency</B>
21 Q0 2092 78 0.0383254 Lucene_47
 structures and the <B>algorithms</B> used for question answering  cacm march  1970 schwarcz  r  m  burger  j  artificial intelligence  <B>computational</B> linguistics  language processing  fact retrieval 3.42 3.61 ca700306
21 Q0 2628 79 0.0383254 Lucene_47
 the sltf discipline  the <B>computational</B> requirements of an algorithm that implements the mtpt scheduling discipline are shown to be comparable to sltf <B>algorithms</B>  in both cases  the sorting procedure
21 Q0 2855 80 0.036310207 Lucene_47
 to the original  the algorithm is superior in execution speed to previous <B>algorithms</B> for the same problem  some  list copying  lisp  space <B>complexity</B>  constant workspace 4.34 4.49 5.25 ca760607 jb january 4  1978 1
21 Q0 1706 81 0.035555564 Lucene_47
 are to be used to provide alternative <B>computational</B> patterns  arrays of strings are processed using quantifiers  the <B>class</B> of things which may be assigned to an identifier can be restricted by a procedure
21 Q0 1811 82 0.035555564 Lucene_47
 cooperating to decrease the solution time of a <B>computational</B> problem  the processors have independent of this problem  typical of a large <B>class</B> of important problems  it is shown that  with proper programming
21 Q0 1659 83 0.0334622 Lucene_47
<B>computational</B> linguistics in a ph  computer science program this report contains recommendations for a course curriculum on <B>computational</B> linguistics in a ph  computer science program  a classification of the subject areas contained in <B>computational</B> linguistics is presented  and ten courses in these areas are described  a basic bibliography in <B>computational</B> linguistics is appended  cacm december
21 Q0 3065 84 0.03319784 Lucene_47
right brother trees insertion and deletion are provided for the <B>class</B> of right  or one-sided  brother trees which have o  log n  performance  the importance of these results stems from the close relationship of right brother trees which have an insertion algorithm operating in o  log2 n   further trees  insertion and deletion <B>algorithms</B> 3.73 3.74 5.31 ca780807 dh january 29  1979 7 08 pm 3009 4
21 Q0 3134 85 0.032632317 Lucene_47
 multiplication table as a directory for the information system  <B>algorithms</B> for the organization of disk accesses and disk space are compared to other common approaches  <B>algorithms</B> evaluating the appropriateness of the above approach to a given information system are described  for a certain <B>class</B>
21 Q0 2892 86 0.031767335 Lucene_47
 of protocol hierarchy and the characteristics of each level are summarized  then the line <B>efficiency</B> for various models of system use is studied  some measurements of line <B>efficiency</B> for the arpanet  performance evaluation and <B>efficiency</B>  resource sharing 3.81 4.39 4.6 4.9 ca760101 jb january 5  1978 10 49
21 Q0 2701 87 0.031200968 Lucene_47
a fast and usually linear algorithm for global flow analysis  abstract only--<B>complete</B> paper jacm 23,1 january  1976  a new algorithm for global flow analysis on reducible graphs is presented  the algorithm is shown to treat a very general <B>class</B> of function spaces  for a graph of e edges  the algorithm has a worst case time bound of o e log e  function operations  it is also shown
21 Q0 117 88 0.030568132 Lucene_47
an estimation of the relative <B>efficiency</B> of two internal sorting methods cacm november  1960 nagler  h  ca601118 jb march 20  1978 6 51 pm 117 5 117 117 5 117 117 5 117
21 Q0 149 89 0.030568132 Lucene_47
a decision rule for improved <B>efficiency</B> in solving linear programming problems with the simplex algorithm cacm september  1960 dickson  j  c  frederick  f  p  ca600908 jb march 20  1978 8 43 pm 149 5 149 149 5 149 149 5 149
21 Q0 2508 90 0.030568132 Lucene_47
increasing the <B>efficiency</B> of quicksort  algorithm r402  cacm may  1973 wheeler  r  e  sorting  quicksort 3.73 4.49 5.31 5.6 ca730512 jb january 23  1978 4 35 pm 2508 5 2508 2508 5 2508 2508 5 2508
21 Q0 1465 91 0.030260906 Lucene_47
program translation viewed as a general data processing problem <B>efficiency</B> dictates that the overall effectiveness of a compiler be increased by all means available  for a compiler to have a substantial useful life it needs a clear logical structure  reliability and sound data processing techniques  a compiler must be based on fixed conventions to preserve <B>efficiency</B> and reliability  empty
21 Q0 2938 92 0.02846104 Lucene_47
toward a discipline of real-time programming programming is divided into three major categories with increasing <B>complexity</B> of reasoning in program validation  sequential programming  multiprogramming  and real-time programming  by adhering to a strict programming discipline and by using a suitable high-level language molded after this discipline  the <B>complexity</B> of reasoning about concurrency
21 Q0 2111 93 0.026558269 Lucene_47
spelling correction in systems programs several specialized techniques are shown for efficiently incorporating spelling correction <B>algorithms</B> in to compilers and operating systems  these include the use of syntax and semantics information  the organization of restricted keyword and symbol tables  and the consideration of a limited <B>class</B> of spelling errors  sample 360 coding for performing
21 Q0 2435 94 0.026558269 Lucene_47
a <B>class</B> of dynamic memory allocation <B>algorithms</B> anew dynamic memory allocation algorithm  the fibonacci system  is introduced  this algorithm is similar to  but seems to have certain advantages over  the  buddy  system  a generalization is mentioned which includes both of these systems as special cases  cacm october  1973 hirschberg  d  s  dynamic storage allocation  buddy system  simulation
21 Q0 2955 95 0.026558269 Lucene_47
buddy systems two <B>algorithms</B> are presented for implementing any of a <B>class</B> of buddy systems for dynamic storage allocation  each buddy system corresponds to a set of recurrence relations which relate the block sizes provided to each other  analyses of the in ternal fragmentation of the binary buddy system  the fibonacci buddy system  and the weighted buddy system are given  comparative simulation
21 Q0 371 96 0.025922628 Lucene_47
remarks on <B>algorithms</B> 2 and 3  algorithm 15 and <B>algorithms</B> 25 and 26 cacm march  1961 wilkinson  j  h  ca610311 jb march 17  1978 12 35 am 371 5 371 371 5 371 371 5 371
21 Q0 1404 97 0.02509665 Lucene_47
<B>computational</B> aspects of multiple covariance analysis on a multifactor structure the <B>computational</B> procedure for the analysis of multiple covariance in statistics is discussed with reference to the analysis of variance  a special operator calculus developed by hartly for programming analysis of variance for multifactor experiments is extended to cover the analysis of covariance  this extension
21 Q0 2283 98 0.024592364 Lucene_47
thinning <B>algorithms</B> on rectangular  hexagonal  and triangular arrays in this report three thinning <B>algorithms</B> are developed  one each for use with rectangular  hexagonal  and triangular arrays of the <B>algorithms</B> are presented and the relative performances of the <B>algorithms</B> are compared  it is found <B>algorithms</B>  rectangular  hexagonal  triangular arrays  image processing  skeleton 3.64 ca720907 jb january
21 Q0 164 99 0.024454506 Lucene_47
a short study of notation <B>efficiency</B> cacm august  1960 smith jr   h  j  ca600802 jb march 20  1978 9 02 pm 205 4 164 210 4 164 214 4 164 1982 4 164 398 4 164 642 4 164 669 4 164 100 4 164 123 4 164 164 4 164 164 5 164 164 5 164 164 5 164 1 5 164
21 Q0 598 100 0.024454506 Lucene_47
the cobol librarian - a key to object program <B>efficiency</B> many answers to the question  how may a cobol compiler be forced into the generation of an efficient object program   the purpose of this article is to present one possible answer  the creation and full utilization of a well-constructed cobol library  cacm may  1962 hicks  w  ca620507 jb march 20  1978 1 50 pm 598 5 598 598 5 598 598 5 598
*************Query 22*************************

22 Q0 2678 1 0.37021834 Lucene_47
visible <B>surface</B> plotting program  j6   algorithm a475  cacm march  1974 wright  t  <B>hidden</B> <B>line</B> problem  <B>computer</B> <B>graphics</B>  contour <B>surface</B> 3.65 4.41 8.2 ca740305 jb january 18  1978 11 18 <B>am</B> 2678 5 2678 2678 5 2678 2678 5 2678
22 Q0 2473 2 0.30845568 Lucene_47
<B>hidden</B>-<B>line</B> plotting program  algorithm r420  cacm july  1973 macleod  <B>i</B>  d  g  collins  a  m  <B>hidden</B>-<B>line</B> plot  <B>surface</B> plot 4.9 ca730713 jb january 23  1978 11 14 <B>am</B> 2473 5 2473 2473 5 2473 2473 5 2473
22 Q0 2751 3 0.23730555 Lucene_47
  b  t  <B>computer</B> <B>graphics</B>  graphic display  <B>hidden</B> <B>surface</B> removal  3.26 3.41 8.2 ca750602 jb january determines the <B>hidden</B> <B>surface</B> algorithm  the various methods of object modeling  shading  and <B>hidden</B> <B>surface</B> removal are thus strongly interconnected  several shading techniques corresponding to different methods of object modeling and the related <B>hidden</B> <B>surface</B> <B>algorithms</B> are presented here  human
22 Q0 2913 4 0.22305219 Lucene_47
 for evaluating filters is presented  the application of prefiltering to <B>hidden</B>-<B>surface</B> <B>algorithms</B> effectiveness  cacm november  1977 crow  f  c  aliasing  <B>computer</B> <B>graphics</B>  convolutional filtering  <B>hidden</B>-<B>surface</B> removal  sampling 8.2 ca771103 jb december 27  1977 7 56 <B>am</B> 2816 4 2913 2828 4 2913 2827 4the aliasing problem in <B>computer</B>-generated shaded images certain defects  such as jagged edges
22 Q0 2692 5 0.2009095 Lucene_47
 <B>hidden</B>-<B>surface</B> computations  cacm january  1974 sutherland  <B>i</B>  e  hodgman  g  w  <B>computer</B> <B>graphics</B>  <B>hidden</B>-<B>surface</B>  clipping 5.31 6.32 6.35 ca740107 jb january 18  1978 2 04 pm 2004 4 2692 2687 4 2692reentrant polygon clipping a new family of clipping <B>algorithms</B> is described  these <B>algorithms</B> the parts of the polygon which lie outside the volume  in two dimensions the <B>algorithms</B> permit clipping
22 Q0 2829 6 0.16685122 Lucene_47
 these new techniques are included  cacm october  1976 blinn  j  f  newell  m  e  <B>computer</B> <B>graphics</B>  graphic display  shading  <B>hidden</B> <B>surface</B> removal 3.41 5.12 5.15 8.2 ca761002 jb january 4  1978 8 36 <B>am</B> 2816texture and reflection in <B>computer</B> generated images in 1974 catmull developed a new algorithm for rendering images of bivariate <B>surface</B> patches  this paper describes extensions of this algorithm
22 Q0 2827 7 0.15321535 Lucene_47
  methods of parameterization for each type of osic are discussed  as well as <B>surface</B> bounding and <B>hidden</B> <B>surface</B> removal  cacm october  1976 levin  j  <B>computer</B> <B>graphics</B>  <B>hidden</B> <B>surface</B> removal  quadric <B>surface</B> intersection curves 3.41 5.12 5.13 5.19 8.2 ca761004 jb january 3  1978 4 32 pm 2816 4 2827 surfaces  a parameterization scheme is used  each quadric <B>surface</B> intersection curve  qsic
22 Q0 2369 8 0.14388163 Lucene_47
 the visible and <B>hidden</B> <B>line</B> relationship between two polygons  additional work must be done to extend this approach to simultaneous rotation about several axes  cacm april  1972 matsushita  y  <B>hidden</B> <B>line</B> problem  display programming  <B>computer</B> <B>graphics</B>  displays  <B>graphics</B>  <B>computer</B> drawn picture<B>hidden</B> lines elimination for a rotating object a method is presented of determining which parts
22 Q0 1915 9 0.14019623 Lucene_47
an algorithm for <B>hidden</B> <B>line</B> elimination the algorithm presented causes the elimination of <B>hidden</B> is obtained in a much simpler way  cacm april  1969 galimberti  r  montanari  u  <B>hidden</B> <B>line</B> elimination  back <B>line</B> recognition  three-dimensional representation  plane-faced objects  perspective view  machine rendering of solids  automatic drawing  displaying techniques  <B>computer</B> <B>graphics</B>  man machine
22 Q0 2384 10 0.13920629 Lucene_47
<B>hidden</B>-<B>line</B> plotting program  j6   algorithm a420  cacm february  1972 williamson  h  <B>hidden</B>-<B>line</B> plot  <B>surface</B> plot 4.9 ca720207 jb january 31  1978 4 12 pm 2384 5 2384 2384 5 2384 2384 5 2384
22 Q0 2004 11 0.13472933 Lucene_47
  half-tone <B>computer</B> <B>graphics</B>  <B>line</B>-scan image processing  <B>hidden</B> <B>surface</B>  polygonal <B>surface</B> structurea procedure for generation of three-dimensional half-toned <B>computer</B> <B>graphics</B> presentations a description is given of an algorithm for producing <B>computer</B> generated half-tone presentations of three-dimensional polygonal <B>surface</B> structures  this algorithm achieves a significant increase in speed
22 Q0 2441 12 0.12204653 Lucene_47
<B>hidden</B>-<B>line</B> plotting program  algorithm r420  cacm september  1973 williamson  h  ca730914 jb january 23  1978 8 36 <B>am</B> 2441 5 2441 2441 5 2441 2441 5 2441
22 Q0 2924 13 0.11893922 Lucene_47
an interactive <B>computer</B> <B>graphics</B> approach to <B>surface</B> representation an in teractive <B>computer</B> <B>graphics</B> method has been developed for the rapid generation of arbitrary shaped three-dimensional surfaces  the method is a synthesis of spline theory and <B>algorithms</B>  an in teractive means for man-machine abel  j  f  greenberg  d  p  <B>computer</B> <B>graphics</B>  three-dimensional <B>surface</B> representation  splines
22 Q0 2402 14 0.09202623 Lucene_47
 of interactive  three-dimensional  <B>computer</B> <B>graphics</B> systems coupled to powerful digital computers encourages the development of <B>algorithms</B> adapted to this environment  pictorial pattern recognition building  <B>i</B> e  the use of chemical information to frame  structural hypotheses  which can recognition <B>algorithms</B> is hindered by the fact that the cross-correlation between a model
22 Q0 1978 15 0.0919704 Lucene_47
the use of interactive <B>graphics</B> to solve numerical problems with the advent of on-<B>line</B>  time-sharing  <B>computer</B> systems and graphic terminals  we have available a new dimension in numerical problem solving capabilities  <B>rather</B> than simply use the new power to achieve fast turnaround  we can develop  cacm october  1970 smith  l  b  interactive <B>graphics</B>  <B>computer</B> <B>graphics</B>  <B>graphics</B>  least squares
22 Q0 2828 16 0.09179767 Lucene_47
 <B>algorithms</B>  <B>hidden</B> <B>surface</B> <B>algorithms</B>  hierarchical data structures  geometric models 5.31 8.2hierarchical geometric models for visible <B>surface</B> <B>algorithms</B> the geometric structure inherent for producing pictures by <B>computer</B>  by using an extension of traditional structure information in primary store for immediate access by the visible <B>surface</B> algorithm  finally  the geometric structure
22 Q0 2674 17 0.07949667 Lucene_47
scan conversion <B>algorithms</B> for a cell organized raster display raster scan <B>computer</B> <B>graphics</B> applications  the <B>algorithms</B> were implemented in fortran on the cdc 6400 <B>computer</B>  results obtained  1974 barrett  r  c  fordan  b  w  jr  <B>graphics</B>  scan conversion  raster display  <B>line</B> drawing has been described which extends the capabilities of this organization to include general <B>graphics</B>
22 Q0 2638 18 0.0767506 Lucene_47
<B>hidden</B>-<B>line</B> plotting program  algorithm r420  cacm june  1974 gaither  b  ca740608 jb january 17  1978 3 00 pm 2638 5 2638 2638 5 2638 2638 5 2638
22 Q0 2564 19 0.06395883 Lucene_47
<B>hidden</B>-<B>line</B> plotting program  algorithm r420  cacm december  1974 ellis  t  m  r  ca741210 jb january 13  1978 3 45 pm 2564 5 2564 2564 5 2564 2564 5 2564
22 Q0 2637 20 0.06395883 Lucene_47
<B>hidden</B>-<B>line</B> plotting program  algorithm r420  cacm june  1974 ellis  t  m  r  ca740609 jb january 17  1978 2 59 pm 2637 5 2637 2637 5 2637 2637 5 2637
22 Q0 2486 21 0.062771454 Lucene_47
 of such symbols  e g  by overprinting  the precise positioning of accent marks  floating diacritics   <B>line</B> breaks  <B>i</B> e  words or formulas placed partly at the end of one <B>line</B> and partly at the beginning<B>computer</B> photocomposition of technical text in <B>computer</B> assisted typesetting by means  photocomposition  typesetting  printing  <B>graphics</B>  text processing 3.79 3.82 ca730614 jb january 23  1978 1 30
22 Q0 1742 22 0.05591606 Lucene_47
 system  <B>computer</B> <B>graphics</B>  graphic terminal  displays  <B>graphics</B>  display generator  display channel for a <B>computer</B> display are considered  to work efficiently  such a channel must have a sufficient number of instructions that it is best understood as a small processor <B>rather</B> than a powerful channel  by making improvements one can return to the original simple design plus one new general purpose <B>computer</B>
22 Q0 1181 23 0.055493373 Lucene_47
a simple data transmission system using the office telephone a method has evolved for transmitting data of a type originating in many laboratory situation direct to a central <B>computer</B>  the method requires almost no <B>specialized</B> equipment and uses any ordinary telephone on a  callup  basis  present time-sequence studies of nerve impulses  cacm october  1965 neilsen  <B>i</B>  r  ca651014 jb march 6  1978
22 Q0 2967 24 0.053929403 Lucene_47
a comparison of hardware and software associative memories in the context of <B>computer</B> <B>graphics</B> the associative processing of <B>line</B> drawings  apld  system utilizes a hardware associative memory and creates  modifies  deletes  stores  and retrieves two-dimensional <B>line</B> drawings consisting of poin ts  lines  rectangles  and triangles  the apld functions were duplicated on the tx-2 <B>computer</B> at m  s
22 Q0 2845 25 0.052923597 Lucene_47
 for storage allocation is described  the set of permitted block sizes  size <B>i</B>    <B>i</B> 0 n  must satisfy the condition size <B>i</B>  size <B>i</B>-1  size <B>i</B>-k <B>i</B>   where k may be any meaningful integral-valued function  such as tracks and <B>cylinders</B>  cacm july  1976 burton  w  buddy system  dynamic storage allocation 3.89 4.32 4.39 ca760708 jb january 4  1978 11 24 <B>am</B> 1389 4 2845 1552 4 2845 2162 4 2845 2435 4 2845 2596 4 2845
22 Q0 2771 26 0.05165803 Lucene_47
 bounded by many faces  cacm april  1975 braid  <B>i</B>  c  computational geometry  <B>computer</B>-aided design  <B>graphics</B>  machined components  polyhedra  shape synthesis  three-dimensional modeling 3.2 8.2 ca750406 jb of solid objects to be synthesized and stored using a <B>computer</B>  synthesis begins with primitive solids like together or subtracted  two <B>algorithms</B> to perform addition are described  for practical designers
22 Q0 2925 27 0.046555933 Lucene_47
 reconstruction  contour data  serial sections  three-dimensional <B>computer</B> <B>graphics</B>  minimum cost pathsoptimal <B>surface</B> reconstruction from planar contours in many scientific and technical endeavors presents a general solution to the problem of constructing a <B>surface</B> over a set of cross-sectional contours  this <B>surface</B>  to be composed of triangular tiles  is constructed by separately determining
22 Q0 3049 28 0.045994684 Lucene_47
 the conceptual view of <B>graphics</B> leading to the design of sembegs and outlines the major components of the system  the design of sembegs is founded upon the basic assumption that the true aim of <B>computer</B> <B>graphics</B> is to describe graphical entities  <B>rather</B> than  as commonly held  to provide graphical input  <B>graphics</B> packages  and graphical devices  cacm november  1978 wendorf  j  <B>computer</B> <B>graphics</B>  data
22 Q0 1697 29 0.043299936 Lucene_47
  orthography  rand tablet  pdp-1  automatic typesetting  man-machine communication  <B>computer</B> <B>graphics</B>  graphical input  on-<B>line</B> editing 3.40 4.41 ca680904 jb february 22  1978 9 13 <B>am</B> 1697 4 1697 1528 5 1697 inputting and outputting nonstandard characters on a <B>computer</B> is printed  in principle  the system can of such a system is given  illustrations of the <B>computer</B> input and output of chinese characters
22 Q0 2421 30 0.043006457 Lucene_47
a scan conversion algorithm with reduced storage requirements most <B>graphics</B> systems using a raster format to the raster format  published scan conversion <B>algorithms</B> which are fast will reserve in execution time  cacm november  1973 jordan  b  w  jr  barrett  r  c  <B>graphics</B>  scan conversion  raster plotter  <B>line</B> drawing  discrete image  dot generation 4.41 6.35 8.2 ca731105 jb january 20
22 Q0 2786 31 0.042383417 Lucene_47
 and fewer exceptions  for typical expressions  the size and font changes  positioning  <B>line</B> drawing  for example  the input sum from <B>i</B> o to infinity x sub <B>i</B> pi over 2 produces  formula   the syntax a phototypesetter or on a terminal with forward and reverse half-<B>line</B> motions  the system interfaces directly  typesetting  photocomposition compiler-compiler  <B>graphics</B>  printing  text processing  4.12 4.22 8.2
22 Q0 3116 32 0.042040132 Lucene_47
  this paper presents a <B>computer</B> representation for solids and surfaces and <B>algorithms</B> which carry detection  solid representation  polyhedral representation  <B>graphics</B>  polygons  surfaces 3.2 8.2 ca790101 dh april 10  1979 10 50 <B>am</B> 2827 4 3116 3116 4 3116 2771 5 3116 3116 5 3116 3116 5 3116 3116 5
22 Q0 2841 33 0.041545887 Lucene_47
 <B>graphics</B>  <B>computer</B>-aided design  picture processing  b-splines  3-d displays 3.80 6.22 8.2 ca760803 jb january 4  1978 10 25 <B>am</B> 2828 5 2841 2841 5 2841 2841 5 2841 2841 5 2841 1751 6 2841 2004 6 2841 2751designing surfaces in 3-d an experimental system for <B>computer</B>-aided design of free-form surfaces splines  the principal features of the system are   1  the surfaces are rendered as isoparametric <B>line</B>
22 Q0 2188 34 0.038752172 Lucene_47
an approach to the optimum design of <B>computer</B> <B>graphics</B> systems display system designers are faced  this is accomplished by means of a mathematical model of a <B>computer</B> driven <B>graphics</B> system  the parameters of the model are functions of the capabilities of the <B>graphics</B> hardware response time  system cost  and the distribution of data storage and processing between the <B>graphics</B>
22 Q0 2919 35 0.03827817 Lucene_47
 the program development and main tenance function onto a <B>specialized</B> <B>computer</B> which is dedicated to that purpose  such a <B>computer</B> is here called a programmer s workbench  the four basic sections  e  l  <B>computer</B> configurations  <B>computer</B> networks  software development  software engineering  software main tenance  unix 3.2 3.5 3.7 3.8 4.0 ca771007 jb december 27  1977 10 37 <B>am</B> 2626 4 2919 2786 4
22 Q0 2367 36 0.03780518 Lucene_47
computers and society  a proposed course for <B>computer</B> scientists the purpose of this paper is to describe a course concerned with both the effects of computers on society and the responsibilities of <B>computer</B> scientists to society  the impact of computers is divided into five components  political are discussed  a <B>topic</B> by <B>topic</B> outline is given  and a selected set of references is listed
22 Q0 616 37 0.036785163 Lucene_47
an information algebra - phase <B>i</B> report-language structure group of the codasyl development committee this report represents the results of the first phase of the work of the language structure group  and all those <B>interested</B> in developing a theoretical approach to data processing   b  with interest  <B>rather</B>  they have tried to present a philosophy to the professional people who are vitally concerned
22 Q0 2809 38 0.03649717 Lucene_47
 bauer  f  l  matrices  norms  positivity  numerical range  positivity <B>cones</B>  vector lattice absolute  monotonic 5.11 5.14 ca750102 jb january 12  1978 10 56 <B>am</B> 2809 5 2809 2809 5 2809 2809 5 2809
22 Q0 2987 39 0.03598205 Lucene_47
  boundary <B>line</B> representation  cartography  <B>computer</B> <B>graphics</B> <B>computer</B>-searchable structures  contour  <B>line</B>-drawing processing  poin ts in polygons  regional boundary representation  spatial information 3.14 3.23 3.30 3.79 8.2 ca770305 jb december 30  1977 12 44 <B>am</B> 1630 4 2987 1804 4 2987 1804 4 2987 2547
22 Q0 2687 40 0.035712484 Lucene_47
a cell organized raster display for <B>line</B> drawings raster scan <B>computer</B> <B>graphics</B> displays with  real  c  <B>graphics</B>  raster display  <B>line</B> drawing  discrete image  dot generation  matrix displays 4.41 is described which extends the capabilities of this organization to include general <B>graphics</B> memory of the character generator to synthesize an arbitrary <B>line</B>  the synthesis process does
22 Q0 1159 41 0.035558503 Lucene_47
 trends in <B>computer</B> design  and that it is this process of convergence in hardware design <B>rather</B> than anymachine independence  its technology and economics a survey is offered of techniques for transferring programs  and especially compilers  from one <B>computer</B> to another  of the methods examined halpern  m  <B>i</B>  ca651210 jb march 6  1978 3 44 pm 1159 4 1159 1988 4 1159 381 4 1159 1159 5 1159
22 Q0 3149 42 0.034962162 Lucene_47
   picture processing  <B>computer</B> <B>graphics</B>  pattern recognition  3.2 3.6 8.2 ca790605 dh august 22  1979 1 pictures of such bodies  particularly when the <B>line</B> data extracted from the pictures are imperfect-dimensional bodies corresponding to given two-dimensional <B>line</B>-structure data  cacm june  1979 shapira  r
22 Q0 1710 43 0.03448837 Lucene_47
 of the system <B>rather</B> than a particular implementation  though sufficient information is included  associative  data structure  ring structure lists  list structure  set languages  modeling  <B>graphics</B> 4.20 4.22 ca680804 jb february 22  1978 11 02 <B>am</B> 1710 5 1710 1710 5 1710 1710 5 1710 1853 5 1710
22 Q0 2918 44 0.034139138 Lucene_47
multiprocessor memory organization and memory interference the structure of shared memory in a multiprocessor <B>computer</B> system is examined with particular attention to nonin terleaved memory suited to certain <B>specialized</B> computation problems as well as to possess advantages in terms december 27  1977 10 28 <B>am</B> 2918 4 2918 3119 4 2918 2859 5 2918 2918 5 2918 2918 5 2918 2918 5 2918
22 Q0 2201 45 0.033274166 Lucene_47
 strips  cacm april  1971 talbot  p  a  carr iii  j  w  coulter jr   r  r  hwang  r  c  <B>computer</B> <B>graphics</B>  <B>computer</B> animation  on-<B>line</B> systems  two-dimensional languages  crt  microfilm recorder 3.41 3.80animator  an on-<B>line</B> two-dimensional film animation system animator is a <B>computer</B> animation system <B>computer</B> animation techniqueshe dec-338 serves as an input terminal for movie making  allowing the trial
22 Q0 2035 46 0.03326508 Lucene_47
conversational access to a 2048-word machine lap6 is an on-<B>line</B> system running on a 2048-word linc are logically similar to a disk  priority was given to the design of efficient tape <B>algorithms</B> themselves during the specification period  cacm july  1970 wilkes  m  a  conversational <B>computer</B> access  display editing  display oriented system  filing <B>algorithms</B>  lap6  layering  linc  man
22 Q0 2400 47 0.032480393 Lucene_47
  picture processing  pattern recognition  <B>line</B> detection  curve detection  colinear points  point-<B>line</B> transformation  hough transformation 3.63 ca720103 jb february 1  1978 9 36 <B>am</B> 2400 5 2400 2400 5 that the use of angle-radius <B>rather</B> than slope-intercept parameters simplifies the computation
22 Q0 1014 48 0.03231675 Lucene_47
 the experimenter may not be <B>interested</B> in these interactions it is impossible to ignore them in most to the <B>computer</B> to handle the bulk of work involved in computing the interactions  a program device to get the <B>computer</B> to do this is described  cacm august  1964 weldon  r  j  ca640816 jb march 9  1978
22 Q0 1551 49 0.032274514 Lucene_47
on compiling <B>algorithms</B> for arithmetic expressions this paper deals with <B>algorithms</B> concerning arithmetic expressions used in a fortran iv compiler for a hitac-5020 <B>computer</B> having n accumulators  the <B>algorithms</B> generate an object code which minimizes the frequency of storing and recovering august  1967 nakata  <B>i</B>  ca670804 jb february 27  1978 4 35 pm 1551 4 1551 1945 4 1551 1122 5 1551 1551 5
22 Q0 1145 50 0.03214496 Lucene_47
git-a heuristic program for testing pairs of directed <B>line</B> graphs for isomorphism  given a pair of directed <B>line</B> graphs  the problem of ascertaining whether or not they are isomorphic is one require 40 years of running time on a very high speed <B>computer</B> in order to compare two 15-node graphs in areas such as game-playing and theorem-proving  where practical <B>algorithms</B> are unknown
22 Q0 2520 51 0.03130384 Lucene_47
greatest common divisor of n integers and multipliers  algorithm c386  cacm april  1973 ragland  l  c  good  d  <B>i</B>  proof of <B>algorithms</B>  greatest common divisor  euclidean algorithm  inductive assertion method 3.15 4.42 5.10 5.24 ca730408 jb january 24  1978 9 27 <B>am</B> 2520 5 2520 2520 5 2520 2520 5 2520
22 Q0 266 52 0.03096138 Lucene_47
fitting <B>spheres</B> by the method of least squares cacm november  1961 robinson  s  m  ca611102 jb march 15  1978 11 00 pm 266 5 266 266 5 266 266 5 266
22 Q0 2426 53 0.030642709 Lucene_47
<B>algorithms</B> scale1  scale2  and scale3 for determination of scales on <B>computer</B> generated plots  j6   algorithm a463  cacm october  1973 lewart  c  r  plotting  scaling for plotting 4.41 ca731014 jb january 20  1978 11 01 <B>am</B> 2426 5 2426 2426 5 2426 2426 5 2426
22 Q0 2111 54 0.030639071 Lucene_47
spelling correction in systems programs several <B>specialized</B> techniques are shown for efficiently incorporating spelling correction <B>algorithms</B> in to compilers and operating systems  these include the use of syntax and semantics information  the organization of restricted keyword and symbol tables ca700204 jb february 14  1978 10 40 <B>am</B> 1112 4 2111 1179 4 2111 1288 4 2111 1544 4 2111 1592 4 2111 1592 4
22 Q0 2273 55 0.030473275 Lucene_47
conversion of decision tables by rule mask method without rule mask two <B>algorithms</B> for generating <B>computer</B> programs from decision tables are described  the <B>algorithms</B> allow handling limited entry  extended entry  and mixed entry tables  the <B>algorithms</B> are based on the rule mask method but need not have the masks at execution time  they perform the logical operations immediately <B>rather</B> than
22 Q0 2905 56 0.029618913 Lucene_47
 <B>i</B> of identifiers  two methods are presented for building  in a mechanical way  perfect hashing functions  <B>i</B> e  functions transforming the elements of <B>i</B> into unique addresses  the first method  the  quotient reduction  method  is shown to be complete in the sense that for every set <B>i</B> the smallest table in which the elements of <B>i</B> can be stored and from which they can be retrieved by using a perfect
22 Q0 2146 57 0.029468924 Lucene_47
  the logic of this algorithm is <B>rather</B> complicated  hence  several other new dispersion <B>algorithms</B> with more straightforward logic are presented  of the simple dispersion <B>algorithms</B> discussedoptimizing the polyphase sort various dispersion <B>algorithms</B> for the polyphase sorting procedure and writing than most <B>algorithms</B> in use today  an additional two and one-fourth to three percent improvement
22 Q0 2536 58 0.028825076 Lucene_47
 varied remote terminal access to a large scale <B>computer</B> is considered  the problems of embedding telecommunications <B>i</B> o within an operating system are discussed  and it is shown how the decentralization over a hard wired <B>line</B> controller  cacm march  1973 feinroth  y  franceschini  e  goldstein  m ca730303 jb january 24  1978 11 23 <B>am</B> 1657 4 2536 2080 4 2536 2357 4 2536 2536 4 2536 1523 5 2536
22 Q0 2631 59 0.027917642 Lucene_47
an information-theoretic approach to text searching in direct access systems using direct access <B>computer</B> files of bibliographic information  an attempt is made to overcome one of the problems often treats text as a string of characters <B>rather</B> than words bounded by spaces  and chooses subsets june  1974 barton  <B>i</B>  j  creasey  s  e  lynch  m  f  snell  m  j  text searching  information theory
22 Q0 3111 60 0.026732301 Lucene_47
 the passive eaves dropper  it suggests that further research on this <B>topic</B> will be highly rewarding  both  cryptology  communications security  wiretap  <B>computer</B> network security  passive eavesdropping  key
22 Q0 2433 61 0.026578357 Lucene_47
 allocation <B>rather</B> than code structuring is the crucial illiac optimization problem  a satisfactory and express parallel <B>algorithms</B> are described  cacm october  1973 millstein  r  e  array processing fortran 4.12 4.21 4.22 ca731007 jb january 20  1978 11 30 <B>am</B> 2433 5 2433 2433 5 2433 2433 5 2433 2785 5
22 Q0 2820 62 0.026295504 Lucene_47
  debug  and execute fairly simple programs at a <B>graphics</B> display terminal  complete syntax checking the flexibility of the multilingual system  over 500 students have used caps to learn fortran  pl <B>i</B>  or cobolin conjunction with a <B>computer</B> assisted course on introductory <B>computer</B> science  cacm november  error correction  interpreters  debugging  <B>computer</B> assisted instruction  <B>computer</B> science education
22 Q0 2341 63 0.025460066 Lucene_47
 way  in addition to these somewhat <B>specialized</B> applications  blocks appear to be a good general of <B>specialized</B> syntax and could readily be absorbed into the external structure of most programming languages  cacm june  1972 gimpel  j  f  character manipulation  output formatting  string processing  <B>graphics</B>
22 Q0 1680 64 0.025342 Lucene_47
 systems  <B>graphics</B>  displays  man-machine interface  on-<B>line</B> computing  graphic programming 1.5 3.3 3.5 3.8 and tutorial  system is described  this system was designed to improve man-<B>computer</B> communications by employing a display unit to interleave tutoring with other <B>computer</B> operations such as simulation  relinquishing <B>computer</B> resources allocated to it  and surrendering control to the operating system to perform
22 Q0 1908 65 0.025081927 Lucene_47
 <B>computer</B> systems conducted at mit is described in this paper  this study is the first known attempt decade-the professionals who  as nonprogrammers  are using the <B>computer</B> as an aid in decision-making and problem-solving <B>rather</B> than as a programming end in itself  statistically and logically significant results indicate equal cost for usage of the two <B>computer</B> systems  however  a much higher level
22 Q0 2973 66 0.024567893 Lucene_47
sorting on a mesh-connected parallel <B>computer</B> two <B>algorithms</B> are presented for sorting n 2 elements previous algorithm takes time o n log n   the <B>algorithms</B> of this paper are shown to be optimal april  1977 thompson  c  d  kung  h  t  parallel <B>computer</B>  parallel sorting  parallel merge  routing december 29  1977 4 58 <B>am</B> 2973 5 2973 2973 5 2973 2973 5 2973 3156 5 2973 2289 6 2973 2973 6 2973 3075
22 Q0 2547 67 0.024560327 Lucene_47
  1973 merrill  r  d  contour map representation  region boundary representation  <B>computer</B>-search-able structure  graphic data retrieval  graphic language  two-dimensional patterns  <B>computer</B> <B>graphics</B>representation of contours ad regions for efficient <B>computer</B> search a novel <B>computer</B>-searchable representation for the three basic pictorial features  contour maps  region coverage  and <B>line</B>
22 Q0 2306 68 0.024514167 Lucene_47
ancient babylonian <B>algorithms</B> the early origins of mathematics are discussed  emphasizing those aspects which seem to be of greatest interest from the standpoint of <B>computer</B> science  a number of old babylonian tablets  many of which have never before been translated into english  are quoted  cacm  sorting 1.2 ca720722 jb january 30  1978 10 50 <B>am</B> 2306 5 2306 2306 5 2306 2306 5 2306
22 Q0 2646 69 0.024257785 Lucene_47
 nature of the <B>i</B> o scheduling  these <B>algorithms</B> are restricted to classes of programs with predictablea model for masking rotational latency by dynamic disk allocation this paper presents the background and <B>algorithms</B> for masking the rotational latency of a disk or drum  it discusses the anticipatory input and output of blocks of data to buffer and primary memories for a mono-programmed <B>computer</B>
22 Q0 3153 70 0.024257785 Lucene_47
 is examined in the context of a paged <B>computer</B> system  two parameterized <B>algorithms</B> which partition alocation parameters on the expected response times under the two <B>algorithms</B>  numerical solutions  cacm july  1979 hine  j  mitrani  <B>i</B>  tsur  s  queueing networks  paging  virtual memory  performance
22 Q0 1426 71 0.024000088 Lucene_47
a simulation of hospital admission policy a study is described which simulates different admission policies of a large <B>specialized</B> hospital  the objective is to determine better policies for stabilization of admission and census rates while maintaining a reasonably full hospital  there types  1966 smith  w  g  solomon jr   m  b  ca660511 jb march 3  1978 9 42 <B>am</B> 1426 5 1426 1426 5 1426 1426 5
22 Q0 1764 72 0.0239935 Lucene_47
panel discussion on <B>computer</B> appreciation session 19 of the acm 20 th anniversary conference on august 31  1967  was entitled education  design experiments  and <B>computer</B> appreciation  its second half consisted of a panel discussion on <B>computer</B> appreciation  organized and chaired by elliot <B>i</B> are included in the references  cacm april  1968 organick  e  <B>i</B>  <B>computer</B> appreciation  students
22 Q0 2984 73 0.023967499 Lucene_47
cost utilization  a measure of system performance a method is presented for evaluating <B>computer</B> a technique for the visual representation of system performance  cacm march  1977 borovits  <B>i</B>  ein-dor  p  <B>computer</B> system  performance evaluation  cost utilization  system balance 2.44 ca770308 jb december 29  1977 6 41 <B>am</B> 2705 4 2984 2984 4 2984 1908 5 2984 2984 5 2984 2984 5 2984 2984 5 2984
22 Q0 1924 74 0.023858158 Lucene_47
 system  it is shown that carefully designed matrix <B>algorithms</B> can lead to enormous savings in the number time  examination of addition  multiplication  and inversion <B>algorithms</B> shows that a partitioned matrix representation  <B>i</B> e  one submatrix or partition per page  in most cases induced fewer page faults <B>algorithms</B> is also studied as a function of the number of pages of main memory available
22 Q0 1931 75 0.023787778 Lucene_47
 by <B>computer</B> 5.11 5.13 5.14 ca690207 jb february 20  1978 10 49 <B>am</B> 1524 4 1931 1931 4 1931 1931 4 1931 papers  one by hansen and one by hansen and r  r  smith  have shown how interval arithmetic  <B>i</B> by hasen and r  r  smith is compared with straightforward use of <B>i</B>  in determinant evaluation  computational results show the accuracy and running times that can be expected when using <B>i</B>
22 Q0 435 76 0.023556083 Lucene_47
  but <B>rather</B> occurs by an evolutionary process  we should be concerned also with the problem area that the author is <B>interested</B>  a method employing a decision matrix is presented
22 Q0 2837 77 0.02347788 Lucene_47
new upper bounds for selection the worst-case minimum number of comparisons complexity vi n  of the <B>i</B>-th selection problem is considered  a new upper bound for vi n  improves the bound given favorably with a recent algorithm by hyafil  cacm september  1976 yap  c  k  selection problem  <B>algorithms</B> 5.31 ca760902 jb january 4  1978 9 48 <B>am</B> 2837 4 2837 2837 4 2837 3150 4 2837 2784 5 2837 2837 5 2837
22 Q0 2892 78 0.0233398 Lucene_47
a study of <B>line</B> overhead in the arpanet the form  extent  and effect of the communication <B>line</B> of protocol hierarchy and the characteristics of each level are summarized  then the <B>line</B> efficiency for various models of system use is studied  some measurements of <B>line</B> efficiency for the arpanet  <B>computer</B> communication networks  interprocess communication  measurement  packet switching
22 Q0 2968 79 0.023289734 Lucene_47
a comparison of tree-balancing <B>algorithms</B> several <B>algorithms</B>-height-balance  <B>i</B> e  avl and extensions   weight-balance  <B>i</B> e  bb and wb   and total restructuring-for building balanced binary search trees are compared  the criteria for comparison encompass theoretical aspects  e g  path lengths of <B>algorithms</B>  information storage and retrieval 3.7 3.72 3.74 5.31 ca770504 jb december 29  1977 2 16 <B>am</B>
22 Q0 2959 80 0.023231365 Lucene_47
 their applications on a <B>computer</B>  the user of sba views his application as manipulation of information in two june  1977 zloof  m  m  de jong  s  p  programming language  <B>graphics</B>  user in terface  data flow  application programming 3.73 3.74 4.22 4.33 4.34 ca770604 jb december 29  1977 1 25 <B>am</B> 2155 4 2959 2406 4
22 Q0 2667 81 0.023060061 Lucene_47
 <B>computer</B> system  a software monitoring facility built into the supervisor was used for data collection for a fortran compiler and an interactive <B>line</B> file editor  probability distribution functions and other data are given for such things as cpu intervals  <B>i</B> o intervals  and the number of such intervals  1978 10 12 <B>am</B> 1533 4 2667 1892 4 2667 1924 4 2667 1951 4 2667 2095 4 2667 2218 4 2667 2297 4 2667
22 Q0 1886 82 0.023002347 Lucene_47
 by first factoring the expressions  <B>i</B> e  finding a set of subexpressions each of which occurs in two generated  the factorization <B>algorithms</B> are also applicable to the problem of factoring boolean  1969 breuer  m  a  factorization <B>algorithms</B>  code optimization  sequencing of operations  detection 10 57 <B>am</B> 1030 4 1886 1886 4 1886 1939 4 1886 1886 5 1886 1886 5 1886 1886 5 1886 2175 5 1886 678 5
22 Q0 2002 83 0.02298428 Lucene_47
 and other effects  cacm september  1970 hirschsoln  <B>i</B>  <B>computer</B> <B>graphics</B>  data potting  data display
22 Q0 2535 84 0.02288927 Lucene_47
the effects of multiplexing on a <B>computer</B>-communications system a study is made of the way in which a user to the <B>computer</B> and  consequently  affects the performance of a time-shared <B>computer</B>  there is noticeable improvement in the performance of the <B>computer</B>  model   in the sense that time-shared scheduling so that there may be little or no change in the <B>computer</B>-communications system performance
22 Q0 409 85 0.022510562 Lucene_47
 and or programmers has been developed and realized on the ibm 709 7090 <B>computer</B>  the system is based and instances of large and complex data sets  as well as <B>algorithms</B> defined on these data sets  both data and <B>algorithms</B> may be expressed in a family of command and descriptive languages  the concept 1 26 <B>am</B> 409 5 409 409 5 409 409 5 409 657 5 409 279 6 409 409 6 409
22 Q0 3090 86 0.02241866 Lucene_47
 was to enhance the administrative attractiveness of the using agencies in the eyes of funders <B>rather</B> than features of the <B>computer</B>-based system and of the organizational demands placed upon different dh february 12  1979 11 01 <B>am</B> 3090 5 3090 3090 5 3090 3090 5 3090 3117 5 3090 3090 6 3090
22 Q0 1400 87 0.022193372 Lucene_47
free-text inputs to utility routines through the use of some <B>rather</B> simple techniques  it is frequently possible to produce a program which will accept free-text inputs  the techniques are discussed and related to a general tape manipulation routine  cacm july  1966 blum  r  <B>i</B>  ca660712 jb march 2  1978 8 32 pm 1400 4 1400 1553 4 1400 1945 4 1400 2127 4 1400 2396 4 1400 2730 4 1400 1400 5 1400
22 Q0 1506 88 0.022101408 Lucene_47
the laconiq monitor  time sharing for online dialogues the laconiq  laboratory <B>computer</B> online  the monitor was designed so that it could work with a small <B>computer</B>  an ibm system 360 30   therefore is that it is event-driven <B>rather</B> than clock-driven  the program segments called into execution by the remote crt consoles are invariably run to completion <B>rather</B> than  rolled-out  to be brought back at a later time
22 Q0 531 89 0.02194043 Lucene_47
 because of name misspellings  changes of name upon marriage  and other problems  we are <B>interested</B> <B>computer</B>  honeywell 800   here we present in more detail our initial procedures for the person-matching
22 Q0 2825 90 0.021704292 Lucene_47
the bmd and bmdp series of statistical <B>computer</B> programs cacm october  1976 frane  j  w  analysis of variance  cluster analysis  contingency tables  data analysis  discriminant analysis  factor analysis  <B>graphics</B>  outliers  regression  time series  transformations 1.3 3.3 4.0 5.5 ca761006 jb january 3  1978 4 18 pm 2825 4 2825 2419 5 2825 2825 5 2825 2825 5 2825 2825 5 2825
22 Q0 1741 91 0.021595443 Lucene_47
  rankowitz  s  shepherd  b  j  spinrad  r  j  <B>computer</B> display  <B>computer</B> <B>graphics</B>  <B>computer</B> raster display display  tv <B>graphics</B> terminal  multiconsole <B>computer</B> <B>graphics</B>  inexpensive graphic terminal 2.0 4.49brad  the brookhaven raster display a multiconsole <B>computer</B> display system has been designed employed is that of programmatically generating a binary image of the desired display in a <B>computer</B>
22 Q0 2016 92 0.02083703 Lucene_47
the instrumentation of multics an array of measuring tools devised to aid in the implementation of a prototype <B>computer</B> utility is discussed  these tools include special hardware clocks and data channels  general purpose programmed probing and recording tools  and <B>specialized</B> measurement facilities  some particular measurements of interest in a system which combines demand paging
22 Q0 3082 93 0.02083703 Lucene_47
 for solving synchronization problems  the algorithm is then <B>specialized</B> for synchronizing physical clocks  l  distributed systems  <B>computer</B> networks  clock synchronization  multiprocess systems 4.32 5.29
22 Q0 2211 94 0.020800456 Lucene_47
scanned-display <B>computer</B> <B>graphics</B> a television-like scanned-display system has been successfully implemented on a honeywell ddp-224 <B>computer</B> installation  the scanned image is stored in the core memory of the <B>computer</B>  and software scan conversion is used to convert the rectangular coordinates rate  cacm march  1971 noll  a  m  <B>computer</B> <B>graphics</B>  scanned-display  scan conversion  raster displays
22 Q0 87 95 0.02064092 Lucene_47
a note on a method for generating points uniformly on n-dimensional <B>spheres</B> cacm april  1959 muller  m  e  ca590405 jb march 22  1978 7 04 pm 2333 4 87 87 4 87 2333 5 87 87 5 87 87 5 87 87 5 87 88 5 87 1793 6 87 87 6 87 88 6 87
22 Q0 2238 96 0.020462956 Lucene_47
least squares <B>surface</B> fit  algorithm r176  cacm december  1972 schuegraf  e  ca721217 jb january 27  1978 8 59 <B>am</B> 2238 5 2238 2238 5 2238 2238 5 2238
22 Q0 1906 97 0.020449655 Lucene_47
automated printed circuit routing with a stepping aperture a <B>computer</B> program for routing the top  a virtual aperture  <B>i</B> e  a long horizontal slit  is stepped down the board  the planned routing and vias below the aperture and to maximize the effective <B>line</B> usage  if a conflict has not been  printed circuit  interconnections  aperture  stepping aperture  <B>computer</B> program  circuit board
22 Q0 2948 98 0.020442957 Lucene_47
a terminal-oriented communication system this paper describes a system for full-duplex communication between a time-shared <B>computer</B> and its terminals  the system consists of a communications <B>computer</B> of terminals of various types  the overall system design is presented along with the <B>algorithms</B> used december 28  1977 11 49 <B>am</B> 2948 5 2948 2948 5 2948 2948 5 2948
22 Q0 2145 99 0.020053534 Lucene_47
 in dual-in-<B>line</B> packages as well as discrete components such as transistors and resistors have been-to-<B>line</B> connection  it can bring the number of successful wiring connections very close to 100 percent  cacm november  1971 aramaki  <B>i</B>  kawabata  t  kazuhiko  a  heuristic etching-pattern layout  wiring 2  1978 10 58 <B>am</B> 2145 5 2145 2145 5 2145 2145 5 2145
22 Q0 2981 100 0.020000072 Lucene_47
 and  in particular  it is shown that subgoal induction can be viewed as a <B>specialized</B> form of computation programs  iterative programs 4.19 4.22 5.21 5.24 ca770401 jb december 29  1977 6 31 <B>am</B> 2981 4 2981 3030 4
*************Query 23*************************

23 Q0 3137 1 0.50960803 Lucene_47
 of an interactive transaction processing system  cacm april  1979 bucci  g  streeter  d  <B>distributed</B> processing  system design  cost minimization  <B>distributed</B> database  interactive <B>computing</B>  economica methodology for the design of <B>distributed</B> information systems a macro model of a <B>distributed</B> information system in presented  the model describes the major costs of using an information system from
23 Q0 2849 2 0.36874735 Lucene_47
ethernet  <B>distributed</B> packet switching for local computer networks ethernet is a branching broadcast communication system for carrying digital data packets among locally <B>distributed</B> <B>computing</B> of access to the ether for packet broadcasts is <B>distributed</B> among the contending transmitting is <B>distributed</B> among the receiving stations using packet address recognition  design principles
23 Q0 2081 3 0.36292917 Lucene_47
 data <B>structures</B> suitable for a high level algorithmic language for mathematical programming <B>computing</B> by saving memory space and superfluous operations  sequences of matrices  and sequences and cumulative operators  <B>algorithms</B> are given which use symbol manipulation of matrix expressions so calculus  data <B>structures</B>  linear programming  matrix  matrix concatenation  matrix sequences
23 Q0 1745 4 0.36204797 Lucene_47
a position paper on <B>computing</B> and communications the effective operation of free enterprise <B>computing</B>  communications  and the development of information services   2  the wide use  1968 dennis  j  b  information networks  information systems  <B>computing</B> and free enterprise  <B>computing</B> economics  computer installation management  government regulation  communications services
23 Q0 3148 5 0.33794016 Lucene_47
high level programming for <B>distributed</B> <B>computing</B> programming for <B>distributed</B> and other loosely coupled systems is a problem of growing interest  this paper describes an approach to <B>distributed</B> <B>computing</B> at the level of general purpose programming languages  based on primitive notions of module of the project are also discussed  cacm june  1979 feldman  j  <B>distributed</B> <B>computing</B>  modules  messages
23 Q0 2276 6 0.28411573 Lucene_47
computer methods for sampling from the exponential and normal distributions various methods are known for transforming uniformly <B>distributed</B> random numbers into exponentially and normally <B>distributed</B>  with some new <B>algorithms</B>  a number of procedures convert taylor series expansions directly into sampling distribution there remains a choice between slower and shorter <B>algorithms</B> and faster but space consuming
23 Q0 1873 7 0.26072997 Lucene_47
accelerating lp <B>algorithms</B> it is shown how a novel method for <B>computing</B>  related  inner products can accelerate the pricing phase of lp <B>algorithms</B>  other lp applications are indicated  cacm july  1969 fox  b  l  linear programming  revised simplex method  multiple pricing  inner product 5.19 5.41 ca690707 jb february 17  19789 08 am 1873 5 1873 1873 5 1873 1873 5 1873
23 Q0 3141 8 0.2410802 Lucene_47
  rather than o n2   cacm may  1979 chang  e  roberts  r  decentralized <B>algorithms</B>  <B>distributed</B> systems
23 Q0 2890 9 0.22525533 Lucene_47
on quadratic adaptive routing <B>algorithms</B> two analytic models of a store-and-forward communications network are constructed  one to find the optimal message routing and the other to illustrate analysis for a simple network  cacm january  1976 agnew  c  e  routing <B>algorithms</B>  adaptive routing  quadratic routing  alternate routing  store-and-forward network  <B>distributed</B> network  computer network
23 Q0 2832 10 0.22380652 Lucene_47
 improves on previous context tree retrieval <B>algorithms</B>  it is based on the observation that in typical retrieval  a retrieval is started from the position of the previous retrieval and auxiliary <B>structures</B> are built up to make the search rapid  <B>algorithms</B> for addition and deletion of data and for garbage bindings  data <B>structures</B> 3.69 3.74 4.10 ca760907 jb january 4  1978 8 49 am 2832 5 2832 2832 5 2832
23 Q0 1411 11 0.22137573 Lucene_47
comparison of several <B>algorithms</B> for computation of means  standard deviations and correlation coefficients several <B>algorithms</B> for computation of basic statistics are compared by their performance and correlation coefficient  for each statistic  the algorithm included the usual <B>computing</B> formulas of the statistic  the usual <B>computing</B> formulas were also evaluated in double precision  large errors were
23 Q0 2406 12 0.21494485 Lucene_47
a data definition and mapping language a data definition language i sa declarative computer language for specifying data <B>structures</B>  most data definition languages concentrate on the declaration of logical data <B>structures</B> with little concern for how these <B>structures</B> are physically realized as in advanced data management systems and <B>distributed</B> data bases  this paper reviews past work
23 Q0 3086 13 0.20598763 Lucene_47
on the complexity of <B>computing</B> the measure of u ai  bi  the decision tree complexity of <B>computing</B> the measure of the union of n  possibly overlapping  intervals is shown to be  n log n   even if comparisons between linear functions of the interval endpoints are allowed  the existence of an  n log n  analysis of <B>algorithms</B>  combinatorial problems  computational complexity  computational models
23 Q0 2433 14 0.20495994 Lucene_47
control <B>structures</B> in illiac iv fortran as part of an effort to design and implement a fortran provides a means of expressing data and control <B>structures</B> suitable for exploiting illiac iv parallelism method of data allocation is then presented  language <B>structures</B> to utilize this storage method and express parallel <B>algorithms</B> are described  cacm october  1973 millstein  r  e  array processing
23 Q0 2630 15 0.19554749 Lucene_47
on <B>computing</B> sets of shortest paths in a graph two <B>algorithms</B> are presented that construct the k shortest paths between every pair of vertices in a directed graph  these <B>algorithms</B> generalize the floyd algorithm and the dantzig algorithm for finding the shortest path between every pair of vertices in a directed graph  cacm june  1974 minieka  e  graph  network  shortest path  algorithm 5.32
23 Q0 3124 16 0.18650544 Lucene_47
 in the construction of data-driven <B>algorithms</B>  cacm february  1979 gull w  jenkins  m  nested arrays  apl arrays  recursive data <B>structures</B>  trees  data-driven <B>algorithms</B>  theory of arrays 4.22 5.29recursive data <B>structures</B> in apl a mathematical study of three approaches for defining nested arrays in apl is presented  theorems exhibiting the relationships between the definitional systems
23 Q0 3025 17 0.18593849 Lucene_47
 s contributions to <B>computing</B> technology include  accelerating the transition from batch oriented to time sharing <B>computing</B> systems  transferring hardware technology within dec  and elsewhere january  1978 bell  c  kotok  a  hastings  t  hill  r  computer <B>structures</B>  architecture  operating
23 Q0 2169 18 0.18345985 Lucene_47
 the system to be installed quickly and easily on a variety of <B>computing</B> machines  in this paper a brief description of the language  run time data <B>structures</B>  and implementation is given  cacm august
23 Q0 2999 19 0.18345985 Lucene_47
 <B>structures</B>  <B>computing</B> techniques  time series  cross tabulation 3.10 3.20 3.30 3.70 4.0 ca770201 jb
23 Q0 2130 20 0.18315423 Lucene_47
automatic segmentation of cyclic program <B>structures</B> based on connectivity and processor timing time-shared  multiprogrammed  and overlayed batch systems frequently require segmentation of computer with the physical restrictions imposed by the available <B>computing</B> equipment  a generalization of ramamoorthy s january  1970 lowe  t  c  automatic segmentation  cyclic program <B>structures</B>  loops  paging
23 Q0 2216 21 0.18020426 Lucene_47
 does not assume uniformly <B>distributed</B> branching ratios  and therefore is applicable to a family of sorting <B>algorithms</B> discussed by hoare  singleton  and van emden  the solution to the integral equation indicates that using more advanced <B>algorithms</B> in the family makes only minor reductions
23 Q0 3166 22 0.1790632 Lucene_47
<B>computing</B> standard deviations  accuracy four <B>algorithms</B> for the numerical computation of the standard deviation of  unweighted  sampled data are analyzed  two of the <B>algorithms</B> are well-known in the statistical and computational literature  the other two are new <B>algorithms</B> specifically intended definition of  accuracy   each of the four <B>algorithms</B> is analyzed for the conditions under which
23 Q0 2883 23 0.17165637 Lucene_47
 well-known graph search <B>algorithms</B>  the relations between this representation of the minimization lead to substantial improvements in <B>computing</B> time  moreover  if heuristic search methods are used  the <B>computing</B> time will depend on the amount of noise in the picture  some experimental results
23 Q0 2454 24 0.16295624 Lucene_47
computational <B>algorithms</B> for closed queueing networks with exponential servers methods are presented for <B>computing</B> the equilibrium distribution of customers in closed queueing networks with exponential servers  expressions for various marginal distributions are also derived  the computational <B>algorithms</B> are based on two-dimensional iterative techniques which are highly efficient and quite simple
23 Q0 2834 25 0.16295624 Lucene_47
efficient generation of the binary reflected gray code and its applications <B>algorithms</B> are presented to generate the n-bit binary reflected gray code and codewords of fixed weight in that code  both <B>algorithms</B> are efficient in that the time required to generate the next element from the current one <B>computing</B> 5.39 ca760905 jb january 4  1978 9 14 am 2466 4 2834 2834 4 2834 2834 4 2834 2834 4 2834
23 Q0 2963 26 0.16295624 Lucene_47
a fast algorithm for <B>computing</B> longest common subsequences previously published <B>algorithms</B> for finding the longest common subsequence of two sequences of length n have had a best-case running time of o n 2   an algorithm for this problem is presented which has a running time of o  r   n log n subsequence  efficient <B>algorithms</B> 3.73 3.63 5.25 ca770509 jb december 29  1977 1 46 am 2963 4 2963 3114 4 2963
23 Q0 2578 27 0.1607696 Lucene_47
self-stabilizing systems in spite of <B>distributed</B> control cacm november  1974 dijkstra  e  w  multiprocessing  networks  self-stabilization  synchronization  mutual exclusion  robustness  sharing  error recovery  <B>distributed</B> control  harmonious cooperation  self-repair 4.32 ca741106 jb january 16,1978 10 18 am 2578 5 2578 2578 5 2578 2578 5 2578
23 Q0 2949 28 0.1588744 Lucene_47
a correctness proof of a topology information main tenance protocol for a <B>distributed</B> computer network in order for the nodes of a <B>distributed</B> computer network to communicate  each node must have tajibnapis  w  d  <B>distributed</B> computer network  correctness proofs  computer networks  <B>distributed</B> control  network topology  routing problem in networks  <B>distributed</B> operating system  store and forward
23 Q0 2402 29 0.15623441 Lucene_47
 encourages the development of <B>algorithms</B> adapted to this environment  pictorial pattern recognition recognition <B>algorithms</B> is hindered by the fact that the cross-correlation between a model function  especially for large <B>structures</B>  this is significant  for crystallography of biological
23 Q0 2484 30 0.15623441 Lucene_47
 an element from the given set of objects  the use of different relations and <B>algorithms</B> results in different information <B>structures</B>  as list  tree  ring  etc  thus the problem of information organization and storage is reduced to that of defining relations and formulating <B>algorithms</B> under a given
23 Q0 3032 31 0.15623441 Lucene_47
reverse path forwarding of broadcast packets a broadcast packet is for delivery to all nodes of a network  <B>algorithms</B> for accomplishing this delivery through a store-and-forward packet switching  to this list of <B>algorithms</B> we add  6  reverse path forwarding  a broadcast routing method which exploits routing procedures and data <B>structures</B> already available for packet switching  reverse path forwarding
23 Q0 3043 32 0.1421016 Lucene_47
<B>distributed</B> processes  a concurrent programming concept a language concept for concurrent processes without common variables is introduced  these processes communicate and synchronize by means by microcomputer networks with <B>distributed</B> storage  the paper gives several examples of <B>distributed</B>  concurrent programming  <B>distributed</B> processes  microprocessor networks  nondeterminism  guarded regions
23 Q0 3082 33 0.1421016 Lucene_47
time  clocks  and the ordering of events in a <B>distributed</B> system the concept of one event happening before another in a <B>distributed</B> system is examined  and is shown to define a partial ordering of the events  a <B>distributed</B> algorithm is given for synchronizing a system of logical clocks which can  l  <B>distributed</B> systems  computer networks  clock synchronization  multiprocess systems 4.32 5.29
23 Q0 52 34 0.1421016 Lucene_47
an efficient method for generating uniformly <B>distributed</B> points on the surface on an n-dimensional sphere  corrigendum  cacm october  1959 cook  j  m  ca591007 jb march 22  1978 4 12 pm 52 5 52 52 5 52 52 5 52
23 Q0 2373 35 0.14063011 Lucene_47
 assumptions  working-set size is shown to be normally <B>distributed</B>  cacm march  1972 denning  p  j  schwartz  s  c  working-set model  paging  paging <B>algorithms</B>  program behavior  program modeling 4.3
23 Q0 1423 36 0.13860108 Lucene_47
a simple algorithm for <B>computing</B> the generalized inverse of a matrix the generalized inverse of a matrix is important in analysis because it provides an extension of the concept of an inverse which applies to all matrices  it also has many applications in numerical analysis  but it is not widely used because the existing <B>algorithms</B> are fairly complicated and require considerable storage space
23 Q0 3156 37 0.13860108 Lucene_47
<B>computing</B> connected components on parallel computers we present a parallel algorithm which uses n2 processors to find the connected components of an undirected graph with n vertices in time o log2n   an o log2n  time bound also can be achieved using only n n  log2n   processors  the algorithm can  graph theory  parallel processing  <B>algorithms</B>  transitive closure  connected component 5.25 5.32 6.22
23 Q0 1946 38 0.1379144 Lucene_47
<B>computing</B> polynomial resultants  bezout s determinant vs  collins  reduced p  algorithm <B>algorithms</B> for <B>computing</B> the resultant of two polynomials in several variables  a key repetitive step of computation in solving systems of polynomial equations by elimination  are studied  determining the best requirements  and <B>computing</B> speed  preliminary considerations narrow the choice of the best algorithm
23 Q0 1810 39 0.1373251 Lucene_47
 is manual  are examined  and a number of the important troubles which beset <B>computing</B> today are shown become a normal part of most <B>computing</B> systems  cacm december  1969 sayre  d  paging  automatic <B>algorithms</B>  performance  measurement 4.0 4.19 4.39 6.20 6.34 ca691202 jb february 15  1978 4 33 pm
23 Q0 2114 40 0.13187926 Lucene_47
a formal system for information retrieval from files a generalized file structure is provided by which the concepts of keyword  index  record  file  directory  file structure  directory decoding  and record retrieval are defined and from which some of the frequently used file <B>structures</B> such as inverted files  index-sequential files  and multilist files are derived  two <B>algorithms</B> which retrieve
23 Q0 3037 41 0.13187926 Lucene_47
 in time proportional to n  cacm december  1978 gries  d  misra  j  primes  <B>algorithms</B>  data <B>structures</B> 5.25 5.24 5.29 ca781202 dh january 22  1979 11 12 am 2896 4 3037 2972 4 3037 3037 4 3037 3037 4
23 Q0 3164 42 0.13187926 Lucene_47
 of actions  two pad <B>algorithms</B> are presented  one uses a simple path matrix representation  list processing  data <B>structures</B>  topological sort  acyclic digraph  database integrity  network
23 Q0 3165 43 0.13187926 Lucene_47
 illustrated by the outline of <B>algorithms</B> for area computation and point inclusion  the algorithm is applied <B>structures</B>  computational geometry  computer cartography  automated cartography 3.14 4.34 8.2 ca790906 db
23 Q0 2838 44 0.1305538 Lucene_47
 operations  or on a single processor time-shared with them  <B>algorithms</B> for recovering discarded list <B>structures</B> in this manner are presented and analyzed to determine sufficient conditions under which  time-sharing  multiprocessing  parallel processing  real time  data <B>structures</B>  analysis of <B>algorithms</B> 3.69 3.89 4.19 4.29 4.32 4.34 4.9 5.25 ca760901 jb january 4  1978 9 57 am 1024 4 2838 1051 4 2838
23 Q0 2314 45 0.12976462 Lucene_47
  rather than focusing just on language features  since <B>algorithms</B> must be not only coded in a language  programmable control <B>structures</B>  and sophisticated data communication mechanisms  interactive languages  design of programming languages  interactive systems  control <B>structures</B>  data <B>structures</B>
23 Q0 2092 46 0.12972021 Lucene_47
 <B>structures</B> and the <B>algorithms</B> used for question answering  cacm march  1970 schwarcz  r  m  burger  j <B>structures</B> and their semantic organization  the deductive question-answering formalism of relational
23 Q0 2665 47 0.12972021 Lucene_47
copying list <B>structures</B> using bounded workspace two new <B>algorithms</B> are presented for list structure copying using bounded workspace  the first  of primarily theoretical interest  shows that without cell tag bits the task can be performed in time n 2  the second algorithm  assuming one tag bit  while cyclic <B>structures</B> are copied in average time less than nlogn  no foreknowledge of cycle absence
23 Q0 2766 48 0.12972021 Lucene_47
copying cyclic list <B>structures</B> in linear time using bounded workspace a bounded workspace copying algorithm for arbitrary list <B>structures</B> is given  this algorithm operates in linear time and does not require tag bits  the best previous bounded workspace copying <B>algorithms</B> achieved n 2 time without tag bits and n log n time with one tag  the only restriction on the algorithm given here
23 Q0 2828 49 0.12244595 Lucene_47
 <B>algorithms</B>  hidden surface <B>algorithms</B>  hierarchical data <B>structures</B>  geometric models 5.31 8.2hierarchical geometric models for visible surface <B>algorithms</B> the geometric structure inherent in the definition of the shapes of three-dimensional objects and environments is used not just to define their relative motion and placement  but also to assist in solving many other problems of systems
23 Q0 2197 50 0.11970378 Lucene_47
the merit of regional <B>computing</B> networks one of the suggested means for stimulating the spread of <B>computing</B> capabilities in institutions of higher learning is through the construction of regional <B>computing</B> networks  one such network has been constructed in the san francisco bay area by stanford to the schools as the awakening of <B>computing</B> awareness and the fostering of capability development
23 Q0 1780 51 0.11368128 Lucene_47
harmonic analysis for symmetrically <B>distributed</B> data  algorithm 320  c6   cacm february  1968 hunter  d  b  harmonic analysis  cosine series  sine series  function approximation  curve fitting  trigonometric series 5.13 ca680202 jb february 23  1978 1 34 pm 1780 5 1780 1780 5 1780 1780 5 1780
23 Q0 88 52 0.11368128 Lucene_47
an efficient method for generating uniformly <B>distributed</B> points on the surface of an n-dimensional sphere cacm april  1959 hicks  j  s  wheeling  r  f  ca590404 jb march 22  1978 7 10 pm 2333 5 88 87 5 88 88 5 88 88 5 88 88 5 88 1793 6 88 87 6 88 88 6 88 88 6 88
23 Q0 2524 53 0.1055034 Lucene_47
some approaches to best-match file searching the problem of searching the set of keys in a file to find a key which is closest to a given query key is discussed  after  closest   in terms of a metric on the the key space  is suitably defined  three file <B>structures</B> are presented together with their corresponding search <B>algorithms</B>  which are intended to reduce the number of comparisons required
23 Q0 1862 54 0.10094309 Lucene_47
<B>computing</B> capabilities at argentine and chilean universities the author reports on a trip to universities in argentina and chile during november 1968  describing university conditions and <B>computing</B> in university government  chile is allowing such participation  university <B>computing</B> service than an ibm 360 40  with some exception  <B>computing</B> science academic programs are rare  this situation
23 Q0 2816 55 0.100480996 Lucene_47
optimal reorganization of <B>distributed</B> space disk files in most database organizations  the cost of accessing the database will increase due to structural changes caused by updates and insertions  by reorganizing the database the access costs can be reduced  a basic problem is to establish for <B>distributed</B> free space is described  a cost function describing the excess costs due to physical
23 Q0 2371 56 0.09947112 Lucene_47
a system for interprocess communication in a resource sharing computer network a system of communication between processes in a time-sharing system is described and the communication system is extended so that it may be used between processes <B>distributed</B> throughout a computer network  the hypothetical application of the system to an existing network is discussed  cacm april  1972 walden  d  c
23 Q0 2926 57 0.09947112 Lucene_47
pagination of b -trees with variable-length records a strategy is presented for pagination of b -trees with variable-length records  if records of each length are uniformly <B>distributed</B> within the file  and if a wide distribution of record lengths exists within the file  then this strategy results in shallow trees with fast access times  the performance of this strategy in an application
23 Q0 147 58 0.09576302 Lucene_47
report on a conference of university <B>computing</B> center directors cacm october  1960 ca601001 jb march 20  1978 8 38 pm 147 5 147 147 5 147 147 5 147
23 Q0 72 59 0.09576302 Lucene_47
an educational program in <B>computing</B> cacm august  1959 hollingsworth  j  ca590801 jb march 22  1978 6 18 pm 72 5 72 72 5 72 72 5 72
23 Q0 2833 60 0.09231548 Lucene_47
 useful or accessible  a reference count scheme for reclaiming non-self-referential <B>structures</B> are proposed  the <B>algorithms</B> are designed to work well in systems which use multiple levels of storage
23 Q0 2855 61 0.09231548 Lucene_47
an efficient list-moving algorithm using constant workspace an efficient algorithm is presented for moving arbitrary list <B>structures</B>  using no storage  apart from program variables  other than that required to hold the original list and the copy  the original list is destroyed as it is moved to the original  the algorithm is superior in execution speed to previous <B>algorithms</B> for the same problem  some
23 Q0 2060 62 0.09157711 Lucene_47
 reference and its value   3  all compound data <B>structures</B> are treated as functions   4  type declarations are not permitted  the functional approach to data <B>structures</B> and the use of references insure  it may be specified by giving an arbitrary algorithm for <B>computing</B> or accessing its components
23 Q0 3035 63 0.08922193 Lucene_47
a strategic planning methodology for the <B>computing</B> effort in higher education  an empirical planning of the <B>computing</B> effort in higher education are presented here  a planning methodology of the delivery of <B>computing</B> services to the major institutional roles of instruction  research the delivery of <B>computing</B> services  cacm december  1978 wetherbe  j  dock  v  computer management  computer
23 Q0 1153 64 0.08526096 Lucene_47
a fast procedure for generating normal random variables  a technique for generating normally <B>distributed</B> random numbers is described  it is faster than those currently in general use and is readily applicable to both binary and decimal computers  cacm january  1964 marsaglia  g  maclaren  m  d  bray  t  a  ca640101 jb march 10  1978 5 43 am 1073 4 1153 1153 4 1153 940 5 1153 1073 5 1153 1153 5
23 Q0 2900 65 0.08526096 Lucene_47
  cacm november  1977 grapa  e  belford  g  g  file allocation  computer networks  <B>distributed</B> data
23 Q0 2969 66 0.08526096 Lucene_47
  databases  <B>distributed</B> databases  optimal file location 3.81 3.51 4.33 ca770503 jb december 29  1977 2
23 Q0 3084 67 0.08526096 Lucene_47
interpolation search -a log logn search interpolation search is a method of retrieving a desired record by key in an ordered file by using the value of the key and the statistical distribution of the keys  it is shown that on the average log logn file accesses are required to retrieve a key  assuming that the n keys are uniformly <B>distributed</B>  the number of extra accesses is also estimated
23 Q0 1525 68 0.08445504 Lucene_47
on <B>computing</B> the fast fourier transform cooley and tukey have proposed a fast algorithm for <B>computing</B> complex fourier transform and have shown major time savings in using it to compute large transforms on a digital computer  with n a power of two  <B>computing</B> time for this algorithm is proportional to n log2 n  a major improvement over other methods with <B>computing</B> time proportional to n 2
23 Q0 3011 69 0.08445504 Lucene_47
 management in most us local governments  what exists is management-oriented <B>computing</B>  involving  management use of <B>computing</B> is surprisingly common  but also varied in its extent among local governments  management <B>computing</B> is most prevalent in those governments with professional management practices where top management is supportive of <B>computing</B> and tends to control <B>computing</B> decisions
23 Q0 371 70 0.083153725 Lucene_47
remarks on <B>algorithms</B> 2 and 3  algorithm 15 and <B>algorithms</B> 25 and 26 cacm march  1961 wilkinson  j  h  ca610311 jb march 17  1978 12 35 am 371 5 371 371 5 371 371 5 371
23 Q0 3158 71 0.0829332 Lucene_47
secure personal <B>computing</B> in an insecure network a method for implementing secure personal <B>computing</B> in a network with one or more central facilities is proposed  the method employs a public-key encryption device and hardware keys  each user is responsible for his own security and need not rely august  1979 denning  d  personal <B>computing</B>  security  privacy  networks  public-key encryption 2.12
23 Q0 1431 72 0.082681365 Lucene_47
on a storage mapping function for data <B>structures</B> some basic facts about certain data <B>structures</B> are reviewed and an efficient algorithm is presented for constructing a storage mapping function for a structure from the structure s definition  cacm may  1966 deuel  p  ca660506 jb march 3  1978 9 58 am 1431 5 1431 1431 5 1431 1431 5 1431
23 Q0 2709 73 0.082681365 Lucene_47
a genealogy of control <B>structures</B> the issue of program control <B>structures</B> has had a history results on control <B>structures</B> and explores their practical implications  the classic result of bohm ideas on control <B>structures</B> are then explored  these include a review of various other control <B>structures</B>  results on time space limitations  and theorems relating the relative power of control
23 Q0 2975 74 0.082681365 Lucene_47
remark on uniform insertion in structured data <B>structures</B> cacm april  1977 hollander  c  data <B>structures</B>  directed graphs  uniform insertion 4.34 ca770407 jb december 29  1977 5 04 am 2975 4 2975 2594 5 2975 2975 5 2975 2975 5 2975 2975 5 2975
23 Q0 2226 75 0.082317986 Lucene_47
further evidence for the analysis of <B>algorithms</B> for the zero-one programming problem the purpose  with two <B>algorithms</B> for the zero-one linear programming problem  an error in gue s paper is corrected  the utility of one of the <B>algorithms</B> as a suboptimizer is indicated  cacm january  1971 proll  l  g  operations research  integer programming  zero-one variables  <B>algorithms</B> 5.39 5.41 ca710108 jb
23 Q0 3128 76 0.0803848 Lucene_47
 arguments and also simplifies implementation in <B>distributed</B> systems  the mechanism is defined synchronization  interprocess communication  <B>distributed</B> systems  security models  mutual exclusion
23 Q0 1889 77 0.07980251 Lucene_47
introducing <B>computing</B> to smaller colleges and universities -- a progress report by technical means and educational methodology for introducing <B>computing</B> at such institutions must also be developed  t  gallie  t  m  brooks jr   f  p  ferrel  j  k  regional network  introducing <B>computing</B>  under project  regional center  consortium  remote <B>computing</B> 1.50 1.52 1.59 2.49 ca690604 jb february 17  1978
23 Q0 2810 78 0.07980251 Lucene_47
professionalism in the <B>computing</B> field the term professional means different things to different to the researcher  but within the rather broad definition specified  the <B>computing</B> practitioner is  as yet contributes to the  nonprofessional  status of the <B>computing</B> practitioner  the roles of these institutions  specifically  can make certain improvements to help the <B>computing</B> practitioner achieve professional status
23 Q0 3090 79 0.07980251 Lucene_47
automated welfare client-tracking and service integration  the political economy of <B>computing</B> the impacts of an automated client-tracking system on the clients  caseworkers  administrators impacts of <B>computing</B>  organizational impacts of <B>computing</B>  management information systems  sociology of <B>computing</B>  information systems and service integration  urban information systems 2.11 3.53 ca780607
23 Q0 481 80 0.07980251 Lucene_47
a one-day look at <B>computing</B> cacm september  1962 armerding  g  w  gruenberger  f  j  marks  s  l  parkin  t  r  ca620911 jb march 17  1978 7 30 pm 481 5 481 481 5 481 481 5 481
23 Q0 80 81 0.07980251 Lucene_47
a technique for <B>computing</B> critical rotational speeds of flexible shafts on an automatic computer cacm june  1959 schwartz  b  l  ca590604 jb march 22  1978 6 35 pm 80 5 80 80 5 80 80 5 80
23 Q0 1010 82 0.07900046 Lucene_47
a multiuser computation facility for education and research present-day <B>computing</B> facilities are limited in their value for scientific research by inability to interact strongly with users  the full power of a research <B>computing</B> instrument should be available at many terminals that give each user the ability to generate  correct and operate any procedure he wishes  either simple or complex
23 Q0 1224 83 0.07900046 Lucene_47
determining a <B>computing</B> center environment an investigation is described in which several generally unavailable parameters descriptive of a <B>computing</B> center environment are obtained  the actual data collection and reduction is described  and the results of one month of this collection are tabulated and summarized  cacm july  1965 rosin  r  f  ca650711 jb march 6  1978 8 48 pm 1224 5 1224 1224 5
23 Q0 2311 84 0.07900046 Lucene_47
a generational perspective of information system development system development is categorized from a generational point of view that parallels the commonly described <B>computing</B> system generations  for each generation  the scope of development projects and the technological world view of the system developer are examined  cacm july  1972 benjamin  r  i  <B>computing</B> milieu  management data processing
23 Q0 2780 85 0.07900046 Lucene_47
on <B>computing</B> certain elements of the inverse of a sparse matrix a recursive algorithm for <B>computing</B> the inverse of a matrix from the lu factors based on relationships in takahashi  et al   is examined  the formulas for the algorithm are given  the dependency relationships are derived  the computational costs are developed  and some general comments on application and stability are made  cacm
23 Q0 2822 86 0.07900046 Lucene_47
homilies for humble standards copyright 1976  association for <B>computing</B> machinery  inc  general permission to republish  but not for profit  all or part of this material is granted provided that acm s copyright notice is given and that reference is made to the publication  to its data of issue  and to the fact that reprinting privileges were granted by permission of the association for <B>computing</B>
23 Q0 2283 87 0.07888655 Lucene_47
thinning <B>algorithms</B> on rectangular  hexagonal  and triangular arrays in this report three thinning <B>algorithms</B> are developed  one each for use with rectangular  hexagonal  and triangular arrays of the <B>algorithms</B> are presented and the relative performances of the <B>algorithms</B> are compared  it is found <B>algorithms</B>  rectangular  hexagonal  triangular arrays  image processing  skeleton 3.64 ca720907 jb january
23 Q0 1275 88 0.07308069 Lucene_47
code <B>structures</B> for protection and manipulation of variable length items  corrigendum  cacm april  1965 ramamoorthy  c  v  ca650416 jb march 7  1978 3 31 pm 1275 5 1275 1275 5 1275 1275 5 1275
23 Q0 2032 89 0.07308069 Lucene_47
file <B>structures</B> using hashing functions a general method of file structuring is proposed which uses a hashing function to define tree structure  two types of such trees are examined are derived and illustrated  cacm july  1970 coffman jr   e  g  eve  j  data <B>structures</B>  tree <B>structures</B>  file <B>structures</B>  scatter tables  hashing functions  information retrieval 3.70 3.74 ca700705
23 Q0 1831 90 0.072346196 Lucene_47
a comment on optimal tree <B>structures</B> cacm october  1969 stanfel  l  e  information retrieval  file searching  tree <B>structures</B>  double chaining 3.70 3.73 3.74 ca691015 jb february 15  1978 1 31 pm 1831 5 1831 1831 5 1831 1831 5 1831 2257 5 1831 2360 5 1831 849 6 1831 849 6 1831 1831 6 1831 1831 6 1831 1936 6 1831 1936 6 1831 2360 6 1831
23 Q0 2950 91 0.07201324 Lucene_47
 <B>algorithms</B> based on an abstract model of a scheduling system which formalizes the notion of priority  various classes of scheduling <B>algorithms</B> are defined and related to existing <B>algorithms</B>  a criterion-invariant <B>algorithms</B>  which include most of the commonly implemented ones  for time-invariant <B>algorithms</B>  fabry  r  s  scheduling <B>algorithms</B>  scheduling models  priority  operating systems processor
23 Q0 1342 92 0.07055827 Lucene_47
transportation problem  <B>algorithms</B> 293  h   cacm december  1966 bayer  g  ca661207a jb march 2  1978 2 30 pm 1342 5 1342 1342 5 1342 1342 5 1342
23 Q0 1658 93 0.07055827 Lucene_47
analysis of <B>algorithms</B> for the zero-one programming problem this paper is concerned with a review and examination of several existing <B>algorithms</B> for the zero-one programming problem  computational experience is summarized  the machine time and storage requirements of several of the <B>algorithms</B>  integer programming  zero-one variables  <B>algorithms</B> 5.39 5.41 ca681208 jb february 21  1978 1 31 pm
23 Q0 1660 94 0.07055827 Lucene_47
index by subject to <B>algorithms</B>  1960-1968 cacm december  1968 ca681206 jb february 21  1978 1 39 pm 1660 5 1660 1660 5 1660 1660 5 1660
23 Q0 1952 95 0.07055827 Lucene_47
index by subject to <B>algorithms</B>  1970 cacm december  1970 ca701211 jb february 9  1978 2 50 pm 1952 5 1952 1952 5 1952 1952 5 1952
23 Q0 2007 96 0.07055827 Lucene_47
<B>algorithms</B> policy revised august 1970 cacm august  1970 ca700814 jb february 10  1978 3 12 pm 2007 5 2007 2007 5 2007 2007 5 2007
23 Q0 2819 97 0.07055827 Lucene_47
 <B>algorithms</B> for encoding a string differ slightly from earlier proposals  the analysis program attempts to find an optimal set of codes for representing substrings of the file  four new <B>algorithms</B> for this operation are described and compared  various parameters in the <B>algorithms</B> are optimized to obtain file compaction  huffman codes  n-gram encoding  comparison of <B>algorithms</B> 3.7 3.73 4.33 ca761104 jb
23 Q0 804 98 0.07055827 Lucene_47
exponentiation of series  <B>algorithms</B> 134  cacm july  1963 thacher jr   h  c  ca630720 jb march 14  1978 8 19 am 804 5 804 804 5 804 804 5 804
23 Q0 1349 99 0.069111004 Lucene_47
<B>computing</B> capabilities at western european universities this report on the author s trip to universities in western europe in the summer of 1966 gives brief descriptions of <B>computing</B> activities at each institution visited  present equipment capabilities vary from moderate to large scale  however financial relationship   c  the subordinated organization of the <B>computing</B> facility   d
23 Q0 2357 100 0.069111004 Lucene_47
mux  a simple approach to on-line <B>computing</B> an on-line system operating as part of a normal batch system for the cdc 6600 computer is described  the system  which required one man-year for initial software implementation  although basically simple  provides the necessary elements to input <B>computing</B>  on-line access  on-line <B>computing</B>  remote file manager  real time  multiplexer
*************Query 24*************************

24 Q0 20 1 0.37781322 Lucene_47
accelerating convergence of iterative <B>processes</B> a technique is discussed which  when <B>applied</B> to an iterative procedure for the solution of an equation  accelerates the rate of convergence if the iteration converges and induces convergence if the iteration diverges  an illustrative example is given  cacm june  1958 wegstein  j  h  ca580602 jb march 22  1978 9 09 pm 20 5 20 20 5 20 20 5 20
24 Q0 1410 2 0.36397845 Lucene_47
interarrival statistics for time sharing systems the optimization of time-shared system performance requires the description of the <B>stochastic</B> <B>processes</B> governing the user inputs and the program activity  this paper provides a statistical description of the user input process in the sdc-arpa general-purpose time-sharing system  tss   the input process is assumed to be stationary
24 Q0 1696 3 0.33715743 Lucene_47
an algorithm for identifying the ergodic subchains and transient states of a <B>stochastic</B> matrix an algorithm for identifying the ergodic subchains and transient states of a <B>stochastic</B> matrix are reviewed  and an updating procedure for dealing with certain sequences of <B>stochastic</B> matrices recently propose method  cacm september  1968 fox  b  l  landi  d  m  <B>stochastic</B> matrix  ergodic  chain
24 Q0 268 4 0.2889921 Lucene_47
<B>stochastic</B> evaluation of a static storage allocation cacm october  1961 cohen  l  j  ca611013 jb march 16  1978 12 48 pm 268 5 268 268 5 268 268 5 268
24 Q0 1194 5 0.28304666 Lucene_47
establishment of the acm repository and principles of the ir system <B>applied</B> to its operation the history of the establishment of the acm repository at the moore school  university of pennsylvania  is reviewed briefly  two principles are presented as paramount in the provision of information and expandable search vocabulary  user access through many facets of document indexing  and <B>stochastic</B> search
24 Q0 3120 6 0.23613326 Lucene_47
 instead control structures  namely events and <B>processes</B>  the work of the compiler-writer becomes easier special processing for each problem  this technique has been <B>applied</B> to the construction of an algol
24 Q0 942 7 0.23613326 Lucene_47
fortran subroutines for time series analysis the authors have recently been concerned in a time-series study that constituted a fairly typical piece of <B>applied</B> statistical research  involving extensive computations on a moderately large quantity of data  wehave found that the many different numerical <B>processes</B> that were required could be built up almost completely from a small number of basic
24 Q0 2931 8 0.16529328 Lucene_47
 question is whether methods of logic have significance in the other direction for the more <B>applied</B>  programs naturally enter in giving descriptions of <B>processes</B>  the definition of the precise
24 Q0 3043 9 0.1629144 Lucene_47
distributed <B>processes</B>  a concurrent programming concept a language concept for concurrent <B>processes</B> without common variables is introduced  these <B>processes</B> communicate and synchronize by means <B>processes</B> and shows that they include procedures  coroutines  classes  monitors  <B>processes</B>  semaphores  concurrent programming  distributed <B>processes</B>  microprocessor networks  nondeterminism  guarded regions
24 Q0 1435 10 0.14449605 Lucene_47
 experimental design problems are   1  the problem of <B>stochastic</B> convergence   2  the problem of factor
24 Q0 1540 11 0.14449605 Lucene_47
an algorithm for class scheduling with section preference an algorithm for assignment of students to classes in a fixed time schedule that allows students to give a preference for sections within courses is given  if consistent with the objective of balanced sections  these preferences will be honored  the algorithm is more <B>stochastic</B> than monte carlo in nature  results are given that compare
24 Q0 2882 12 0.13623217 Lucene_47
a <B>stochastic</B> evaluation model for database organization in data retrieval systems experimental work in the valuation of large scale data retrieval systems has been scarce due to its difficulty and prohibitive cost  this paper discusses a simulation model of a data retrieval system which has  <B>stochastic</B> model  monte carlo simulation 3.70 3.71 3.72 3.73 3.74 3.79 ca760205 jb january 5  1978
24 Q0 2342 13 0.1293093 Lucene_47
interference between communicating parallel <B>processes</B> various kinds of interference between communicating parallel <B>processes</B> have been examined by dijkstra  knuth  and others  solutions have been of parallel <B>processes</B> is regarded as a machine which proceeds from one state s  i e  a collection to calculate transition rules from the  partial rules  by which the individual <B>processes</B> operate
24 Q0 3141 14 0.127983 Lucene_47
an improved algorithm for decentralized extrema-finding in circular configurations of <B>processes</B> this note presents an improvement to lelann s algorithm for finding the largest  or smallest  of a set of uniquely numbered <B>processes</B> arranged in a circle  in which no central controller exists and the number of <B>processes</B> is not known a priori  this decentralized algorithm uses a technique of selective
24 Q0 2371 15 0.12191397 Lucene_47
a system for interprocess communication in a resource sharing computer network a system of communication between <B>processes</B> in a time-sharing system is described and the communication system is extended so that it may be used between <B>processes</B> distributed throughout a computer network  the hypothetical application of the system to an existing network is discussed  cacm april  1972 walden  d  c
24 Q0 1235 16 0.12041336 Lucene_47
a <B>stochastic</B> approach to the grammatical coding of english a computer program is described which will assign each word in an english text to its form class or part of speech  the program operates at relatively high speed in only a limited storage space  about half of the word-events in a corpus are identified through the use of a small dictionary of function words and frequently occurring lexical
24 Q0 2535 17 0.12041336 Lucene_47
the effects of multiplexing on a computer-communications system a study is made of the way in which asynchronous time division multiplexing changes the <B>stochastic</B> nature of the arrival process from a user to the computer and  consequently  affects the performance of a time-shared computer-communications system  it is concluded that while  for certain values of system parameters
24 Q0 2742 18 0.12041336 Lucene_47
improved event-scanning mechanisms for discrete event simulation simulation models of large  complex  real-world  applications have occasionally earned the reputation of eating up hours of computer time  this problem may be attributed in part to difficulties such as slow <B>stochastic</B> convergence  however  an additional problem lies in the fact that a significant amount of bookkeeping time
24 Q0 293 19 0.11298156 Lucene_47
the <B>applied</B> mathematics laboratory of the david w  taylor model basin cacm september  1961 richstone  m  ca610901 jb march 16  1978 10 01 pm 293 5 293 293 5 293 293 5 293
24 Q0 927 20 0.11298156 Lucene_47
linear programming <B>applied</B> to ultraviolet absorption spectroscopy cacm february  1963 white  w  c  shapiro  b  pratt  a  w  ca630206 jb march 14  1978 2 19 pm 927 5 927 927 5 927 927 5 927
24 Q0 3078 21 0.10449769 Lucene_47
 analytical solutions to markov <B>processes</B> can be considerably reduced by the application of symbol manipulation programs  since many physical systems can be modeled by markov and semi-markov <B>processes</B>
24 Q0 1846 22 0.09852137 Lucene_47
on simulating networks of parallel <B>processes</B> in which simultaneous events may occur some sequential <B>processes</B>  briefly reviewed are the common techniques used to handle such simulations when  following this  the problem of dealing with simultaneous events in separate <B>processes</B> is introduced  l  simulation  parallel <B>processes</B>  simultaneous events  picture processing  computer system
24 Q0 2255 23 0.09852137 Lucene_47
comments on moorer s music and computer composition cacm november  1972 smoliar  s  w  artificial intelligence  heuristic programming  models of cognitive <B>processes</B>  computer music  computer composition  music theory 3.44 3.65 ca721114 jb january 27  1978 1 22 pm 2255 5 2255 2255 5 2255 2255 5 2255
24 Q0 2376 24 0.09852137 Lucene_47
synchronization of communicating <B>processes</B> formalization of a well-defined synchronization mechanism can be used to prove that concurrently running <B>processes</B> of a system communicate correctly  this is demonstrated for a system consisting of many sending <B>processes</B> which deposit messages in a buffer and many receiving <B>processes</B> which remove messages from that buffer  the formal description
24 Q0 2504 25 0.09852137 Lucene_47
concerning music and computer composition in computational linguistics cacm may  1973 mcmorrow  c  h  artificial intelligence  heuristic programming  models of cognitive <B>processes</B>  computer music  computer composition music theory 3.44 3.65 ca730516 jb january 23  1978 4 27 pm 2504 5 2504 2504 5 2504 2504 5 2504
24 Q0 2672 26 0.09852137 Lucene_47
emotional content considered dangerous cacm march  1974 smoliar  s  w  artificial intelligence  heuristic programming  models of cognitive <B>processes</B>  computer music  computer composition  music theory 3.44 3.65 ca740311 jb january 18  1978 10 56 am 2672 5 2672 2672 5 2672 2672 5 2672
24 Q0 412 27 0.09852137 Lucene_47
recursive <B>processes</B> and algol translation cacm january  1961 gray  a  a  ca610102 jb march 17  1978 1 29 am 412 5 412 412 5 412 412 5 412 763 5 412 196 6 412 224 6 412 404 6 412 412 6 412 631 6 412
24 Q0 618 28 0.09852137 Lucene_47
computers- the key to total systems control  an industrial viewpoint man-man-machine <B>processes</B> are characterized in five main types  and the markets for each type are shown for 1950 and 1960 and estimated for 1970  cacm march  1962 carlson  w  m  ca620314 jb march 20  1978 2 53 pm 618 5 618 618 5 618 618 5 618
24 Q0 2740 29 0.09638145 Lucene_47
 operating system as a set of cooperating sequential <B>processes</B>  the <B>processes</B> synchronize by means of semaphores and extended semaphores  queue semaphores   the number of parallel <B>processes</B> is carefully lauesen  s  cooperating <B>processes</B>  operating system  semaphores  semaphore applications  queue semaphores  asynchronous structuring  buffering  parallel <B>processes</B>  synchronizing primitives  reentrant code  rc
24 Q0 2767 30 0.096330695 Lucene_47
a comparison of simulation event list algorithms four algorithms are considered which can be used to schedule events in a general purpose discrete simulation system  two of the algorithms are new  one is based on an end-order tree structure for event notices  and another uses an indexed linear list  the algorithms are tested with a set of typical <B>stochastic</B> scheduling distributions especially
24 Q0 1441 31 0.095868036 Lucene_47
methods of numerical integration <B>applied</B> to a system having trivial function evaluations a study has been made to determine which methods of numerical integration require the least computation time for a given amount of truncation error when <B>applied</B> to a particular system of ordinary differential equations where function evaluations are relatively trivial  recent methods due to butcher and gear
24 Q0 1233 32 0.09038525 Lucene_47
conventions for the use of symbols in the preparation of flowcharts for information processing systems  a standard working paper  this paper is intended as an outline of the various conventions which are being considered for the use of flowcharts for information processing systems  the conventions are <B>applied</B> to the use of the symbols appearing in the proposed american standard flowchart symbols
24 Q0 1438 33 0.09038525 Lucene_47
a method for locating zeros of complex functions a method for computing the index  or winding number  is developed and <B>applied</B> to the problem of finding zeros of functions from the plane into the plane  cacm april  1966 cain jr   g  l  ca660411 jb march 3  1978 10 23 am 1438 5 1438 1438 5 1438 1438 5 1438
24 Q0 1563 34 0.09038525 Lucene_47
a method for finding hamilton paths and knight s tours the use of warnsdorff s rule for finding a knight s tour is generalized and <B>applied</B> to the problem of finding a hamilton path in a graph  a graph-theoretic justification for the method is given  cacm july  1967 pohl  i  ca670710 jb february 28  1978 8 28 am 1563 5 1563 1563 5 1563 1563 5 1563
24 Q0 2409 35 0.09038525 Lucene_47
an algorithm for the approximate solution of wiener-hopf integral equations an explicit approximate solution is given for an equation  where it is assumed that the classical wiener-hopf technique may be <B>applied</B>  it is furthermore assumed that fourier transforms are known explicitly  the approximate solution depends on two positive parameters  cacm november  1973 stenger  f  integral equations
24 Q0 1272 36 0.0870814 Lucene_47
  chief among them being interpretation and expansion of computer output in such <B>processes</B> as factor analysis  applications are described  such <B>processes</B> as factor analysis  applications are described
24 Q0 2912 37 0.0870814 Lucene_47
 have obtained an incorrect result  and two techniques for transmitting messages between <B>processes</B> process and read by other <B>processes</B>  cacm november  1977 lamport  l  asynchronous multiprocessing
24 Q0 2920 38 0.0870814 Lucene_47
game interpretation of the deadlock avoidance problem the deadlock avoidance problem may be defined informally as the determination  from some a priori information about the <B>processes</B>  resources  operating system  etc   of the  safe situations  which may be realized without endangering the smooth system and the <B>processes</B> allows formalization of risk and safety concepts  the bipartite graph
24 Q0 3039 39 0.0870814 Lucene_47
on-the-fly garbage collection  an exercise in cooperation as an example of cooperation between sequential <B>processes</B> with very little mutual interference despite frequent manipulations of a large shared data space  a technique is developed which allows nearly all of the activity needed for garbage-grained interleaving  cooperation between sequential <B>processes</B> with minimized mutual exclusion
24 Q0 1199 40 0.08620619 Lucene_47
 <B>processes</B>  and control functions  experiments performed with this model  the results of the experiments
24 Q0 1587 41 0.08620619 Lucene_47
storage allocation in a certain iterative process a method of core storage allocation in a certain iterative process is described and estimates of the machine time required are given  the method is applicable to iterative <B>processes</B> in which input data items once chosen are never again needed  in this method the input data is continuously relocated and the space made available apportioned
24 Q0 2327 42 0.08620619 Lucene_47
toward an automata theory of brains a source of ideas for automata theory-the study of the brain-has been pushed aside in mathematical development of the theory  this paper suggests the ways in which automata theory might evolve over the next 25 years if it is to contribute to an understanding of how the brain <B>processes</B> information  cacm july  1972 arbib  m  a  automata theory  brain theory
24 Q0 2848 43 0.08620619 Lucene_47
synthesis of decision rules decision tables can be used as an effective tool during an interview to record the logic of <B>processes</B> to be automated  the result of such an interview is not a structure of complete decision tables but rather sets of decision rules  the purpose of this paper is to provide a procedure for synthesizing the decision rules and thus provide an aid in developing a structure
24 Q0 825 44 0.08620619 Lucene_47
pip  a photo-interpretive program for the analysis of spark-chamber data  an operating computer program that <B>processes</B> photographically recorded data is described  the input to the program consists of spark-chamber photographs on which tracks of high-energy particles are recorded  the program automatically scans  measures and performs the preliminary interpretation of these photographs
24 Q0 1135 45 0.08532201 Lucene_47
 common to all <B>processes</B> of such class  permits writing extremely compact programs  even for comparatively  it stresses the structural analysis of the class of <B>processes</B> to be represented in the languages  as opposed as characteristic of the class of all batch file <B>processes</B>  this new philosophy has the potential
24 Q0 1748 46 0.08532201 Lucene_47
 are discussed  and the nature of basic operations on <B>processes</B> is considered  some of the connections between <B>processes</B> and protection are analyzed  a very general approach to priority-oriented scheduling for interlocking the execution of independent <B>processes</B> are presented and compared  cacm may  1968 lampson  b
24 Q0 2320 47 0.08532201 Lucene_47
 by concurrent <B>processes</B> with operations defined on it  this clarifies the meaning of programs competing <B>processes</B> to any degree desired  these concepts are sufficiently safe to use not only within multiprogramming  programming languages  operating systems  concurrent <B>processes</B>  shared data  mutual exclusion
24 Q0 2378 48 0.08532201 Lucene_47
an operating system based on the concept of a supervisory computer an operating system which is organized as a small supervisor and a set of independent <B>processes</B> are described  the supervisor handles i o with external devices-the file and directory system-schedules active <B>processes</B> and manages  cooperating <B>processes</B> 4.30 4.31 4.32 ca720303 jb january 31  1978 3 08 pm 1458 4 2378 1523 4 2378 1603 4
24 Q0 3128 49 0.08532201 Lucene_47
synchronization with eventcounts and sequencers synchronization of concurrent <B>processes</B> requires controlling the relative ordering of events in the <B>processes</B>  a new synchronization mechanism is proposed  using abstract objects called eventcounts and sequencers  that allows <B>processes</B> to control the ordering of events directly  rather than using mutual exclusion to protect manipulations of shared
24 Q0 1892 50 0.08428936 Lucene_47
degree of multiprogramming in page-on-demand systems a simple <B>stochastic</B> model is described which offers a base for understanding the relationship between the number of programs permitted to share memory  the degree of multiprogramming   drum traffic rates  and central processing unit utilization in page-on-demand  multiprogrammed  time-shared computer systems  the model preserves  as a key
24 Q0 1886 51 0.07989003 Lucene_47
 procedure is <B>applied</B> which orders the factors and expressions such that all information is computed feasible  heuristic procedures are <B>applied</B>  and hence global optimal results are not necessarily
24 Q0 2705 52 0.07989003 Lucene_47
programming languages  natural languages  and mathematics some social aspects of programming are illuminated through analogies with similar aspects of mathematics and natural languages  the split between pure and <B>applied</B> mathematics is found similarly in programming  the development of natural december  1975 naur  p  analogies related to social aspects pure and <B>applied</B> mathematics  language
24 Q0 3020 53 0.07989003 Lucene_47
systematic recursion removal the recursion removal algorithm presented by strong and walker is amplified and <B>applied</B> to a relatively complex pl i program  the aim is to demonstrate systematic recursion-removal techniques on something more complex than knuth s  sturdy toddler  and to obtain and the example on which it will be illustrated  recursion removal is then <B>applied</B> to the two major parts
24 Q0 1008 54 0.07908709 Lucene_47
scheduling meetings with a computer computer scheduling of papers as it was developed for the 1960 meeting of the federation of american societies for experimental biology  faseb  is described  the faseb meeting is the largest scientific meeting held in the united states each year  the technique developed for faseb can be <B>applied</B> to schedule any meeting with parallel sessions  cacm september
24 Q0 111 55 0.07908709 Lucene_47
on programming the numerical solution of polynomial equations numerical techniques are presented for computing the roots of polynomial equations  by applying the recommended scaling and inversion rules  the basic bairstow and newton-raphson iterative techniques can be <B>applied</B> with great reliability  both a high degree of accuracy and rapid convergence are realized  numerical examples are shown
24 Q0 1110 56 0.07908709 Lucene_47
a fourier series method for the numerical solution of a class of parabolic partial differential equations  a fourier series method is described which  when <B>applied</B> to a certain class of parabolic partial differential equations  reduces the problem to a system of ordinary differential equations  an application is given for which the method shows a considerable advantage over conventional finite
24 Q0 1382 57 0.07908709 Lucene_47
desired computer impact on undergraduate mathematics three matters relating to the theme of the symposium are discussed here  the author examines some projections concerning the supply and demand for mathematicians in the united states through the mid-1970s  comments briefly on some of the factors which may influence the professional activities of <B>applied</B> mathematicians over the next several
24 Q0 1383 58 0.07908709 Lucene_47
implications of the digital computer for education in the mathematical sciences the digital computer has profoundly altered the definition of what is interesting in mathematics  the importance of <B>applied</B> logic in human affairs is changed by the existence of the  logical engine   the result is that one should no longer think in terms of a single discipline of mathematics but in terms of a complex
24 Q0 1631 59 0.07908709 Lucene_47
testing a random number generator the first 1,000,000 numbers produced by the random number generator used in the general purpose systems simulator  gpss  were subjected to statistical tests  the tests are described and the results of the tests are presented  these particular tests indicate that the numbers are satisfactory  it is recommended that suitable tests be <B>applied</B> to all random numbers
24 Q0 1673 60 0.07908709 Lucene_47
approximate solution of initial boundary wave equation problems by boundary-value techniques a new boundary-value technique is proposed for the treatment of initial-boundary-value problems for linear and mildly nonlinear wave equations  several illustrative examples are offered to demonstrate the ease with which the method can be <B>applied</B>  cacm november  1968 greenspan  d  initial-boundary-value
24 Q0 1809 61 0.07908709 Lucene_47
  nevertheless  there is a need for a solid background in <B>applied</B> mathematics  cacm december  1969
24 Q0 2836 62 0.07908709 Lucene_47
weighted derivation trees the nodes of a weighted derivation tree are associated with weighting functions over the vocabulary of a context-free grammar  an algorithm is presented for constructing the optimal derivation tree having the same structure as a given weighted derivation tree  in addition  the correctness of the algorithm is established  the method may be <B>applied</B> to problems involving
24 Q0 1518 63 0.07389103 Lucene_47
 utilization  software utilization  and queueing <B>processes</B>  the model is mechanized in simscript
24 Q0 1541 64 0.07389103 Lucene_47
a language for modeling and simulating dynamic systems the general objective of this language is to facilitate both the modeling and experimental aspects of simulation studies  the ability to represent systems containing highly interactive <B>processes</B> is an essential feature  the nature of the language  and the role of the process concept  is presented by means of an extended example  cacm
24 Q0 2383 65 0.07389103 Lucene_47
 of cognitive <B>processes</B>  computer music  computer composition  music theory 3.44 3.65 ca720208 jb january 31
24 Q0 2519 66 0.07389103 Lucene_47
on the problem of communicating complex information the nature of the difficulty involved in communicating mathematical results between scientists using a computer based information retrieval system is examined  the problem is analyzed in terms of psychological and information-processing <B>processes</B>  and what turns out to be a vicious circle of effects is described  these include ways of augmenting
24 Q0 2581 67 0.07389103 Lucene_47
a locally-organized parser for spoken input this paper describes lpars  a locally-organized parsing system  designed for use in a continuous speech recognizer  lpars <B>processes</B> a string of phonemes which contains ambiguity and error  the system is locally-organized in the sense that it builds local parse structures from reliable word candidates recognized anywhere in an input utterance
24 Q0 2895 68 0.07389103 Lucene_47
a language for formal problem specification a language for specifying the in tended behavior of communicating parallel <B>processes</B> is described  the specifications are constrain ts on the order in which events of a computation can occur  the language is used to write specifications of the readers writers problem and the writer priority of the second readers writers problem  cacm december  1977
24 Q0 3056 69 0.07389103 Lucene_47
 of experiments or <B>processes</B>  cacm october  1978 morris  r  counting 5.11 ca781005 dh january 29
24 Q0 3140 70 0.07389103 Lucene_47
social <B>processes</B> and proofs of theorems and programs it is argued that formal verifications of programs  no matter how obtained  will not play the same key role in the development of computer science and software engineering as proofs do in mathematics  furthermore the absence of continuity  the inevitability of change  and the complexity of specification of significantly many real programs make
24 Q0 1753 71 0.06966513 Lucene_47
virtual memory  <B>processes</B>  and sharing in multics some basic concepts involved in the design of the multics operating system are introduced  multics concepts of <B>processes</B>  address space  and virtual memory are defined and the use of paging and segmentation is explained  the means by which users may share procedures and data is discussed and the mechanism by which symbolic references
24 Q0 2080 72 0.06966513 Lucene_47
 of <B>processes</B> as well as the communication among them  cacm april  1970 hansen  p  b  multiprogramming  operating systems  parallel <B>processes</B>  process concept  process communication  message buffering  process
24 Q0 2228 73 0.06966513 Lucene_47
comments on prevention of system deadlocks habermann s method of deadlock prevention is discussed  where deadlock is defined as a system state from which resource allocations to certain <B>processes</B> are not possible  it is shown that the scheduler may introduce  artificial  deadlocks which habermann s method does not prevent  permanent blocking is the situation where certain <B>processes</B> never receive
24 Q0 1180 74 0.06778894 Lucene_47
  imperatives are <B>applied</B> in accordance with definitions of symbolic terms  presented systematically
24 Q0 1554 75 0.06778894 Lucene_47
 can be generalized to n-dimensions and <B>applied</B> to any n-dimensional hyperobject or hypersurface
24 Q0 1637 76 0.06778894 Lucene_47
 the possibilities of statistical spectral analysis as <B>applied</B> to simulation experiments  cacm february
24 Q0 1707 77 0.06778894 Lucene_47
generation of positive test matrices with known positive spectra sufficient conditions are given for a real matrix to be similar to a positive matrix  this result is used to construct a similarity transformation which  when <B>applied</B> to a particular upper triangular matrix  yields a positive matrix with a preassigned positive spectrum  cacm august  1968 hall  c  a  porsching  t  a  test matrices
24 Q0 1911 78 0.06778894 Lucene_47
on coordination reduction and sentence analysis a class of coordination phenomena in natural languages is considered within the frame work of transformational theory  to account for these phenomena it is proposed that certain machinery be added to the syntactic component of a transformational grammar  this machinery includes certain rule schemata  the conditions under which they are to be <B>applied</B>
24 Q0 2000 79 0.06778894 Lucene_47
a variation of the goodman-lance method for the solution of two-point boundary value problems a recently published method for the interpolative solution of nonlinear equations is improved  and <B>applied</B> to give a significant variation of the goodman-lance method for the solution of two-point boundary value problems  the resulting method applies in particular to the numerical solution of optimal
24 Q0 2019 80 0.06778894 Lucene_47
normalization techniques for hand printed numerals family of pattern standardization techniques based on geometrical projection is <B>applied</B> to a file of digitized hand printed numerals obtained from sales clerks  the principle involves transforming a quadrilateral specified in terms of the convex hull of each pattern into a square  the amount of overlap within each class of characters versus
24 Q0 2062 81 0.06778894 Lucene_47
the application of sequential sampling to simulation  an example inventory model four different sequential sampling procedures are <B>applied</B> to the analysis of data generated by a computer simulation experiment with a multi-item inventory model  for each procedure the cost of computer time required to achieve given levels of statistical precision is calculated  also the cost of computer time using
24 Q0 2185 82 0.06778894 Lucene_47
a note on compiling fixed point binary multiplications an algorithm is developed for compiling  as a sequence of shifts  additions and subtractions  many fixed point binary multiplications involving a constant  the most significant characteristics of the algorithm are the simplicity of the test which determines if the algorithm should be <B>applied</B> and the degree to which it  suggests  efficient
24 Q0 2268 83 0.06778894 Lucene_47
   the testing procedure is described together with the evaluation criteria <B>applied</B>  a set of test problems
24 Q0 2523 84 0.06778894 Lucene_47
 according to criteria based on topology and size  the method has been <B>applied</B> to the construction
24 Q0 2811 85 0.06778894 Lucene_47
 analysis system has been <B>applied</B> with good results to these pulse waves to detect and measure structural
24 Q0 2900 86 0.06778894 Lucene_47
some theorems to aid in solving the file allocation problem the file allocation problem-i e  the problem of finding the optimal set of network sites at which to locate copies of a file-is known to be  in general  polynomial complete  heuristics and other aids to finding optimal  or near-optimal  solutions are therefore much needed  in this paper we present three theorems which can be <B>applied</B>
24 Q0 2953 87 0.06778894 Lucene_47
notes on recursion elimination various methods of recursion elimination are <B>applied</B> to the schematic recursive procedure  proc s x   px then n x   s fx   s gx   m x  fi  procedures with this general form arise in connection with tree traversal and sorting algorithms  each method of recursion removal involves the use of one or more stacks  and the solutions are compared on the basis
24 Q0 298 88 0.06778894 Lucene_47
a 48-bit pseudo-random number generator a new 48-bit pseudo-random number generator  suitable for several computers  was tested statistically for randomness to determine its adequacy for use in monte carlo programs  frequency tests  distributions of certain low-order moments  runs up and down  and runs above and below the mean were <B>applied</B> to one-half million generated numbers lying within
24 Q0 3013 89 0.06778894 Lucene_47
 <B>applied</B> to a set of test pictures are compared with each other and with the standard digital laplacian
24 Q0 78 90 0.06778894 Lucene_47
 of the numerical analyst   a number of other papers have <B>applied</B> particular devices to particular
24 Q0 95 91 0.06778894 Lucene_47
elimination of special functions from differential equations a set of ordinary differential equations which contains mathematical functions requiring the use of subroutines for numerical solution by electronic computer  tabular data for numerical solution by hand calculation or function generators when analog methods are <B>applied</B> can sometimes be expanded to an equivalent set of equations which do
24 Q0 1749 92 0.0639915 Lucene_47
the structure of the  the -multiprogramming system a multiprogramming system is described in which all activities are divided over a number of sequential <B>processes</B>  these sequential <B>processes</B> are placed at various hierarchical levels  in each of which one or more independent abstractions have been verification  synchronizing primitives  cooperating sequential <B>processes</B>  system levels  input
24 Q0 2210 93 0.06391202 Lucene_47
 technique is <B>applied</B> to transform recursively defined functions into iterative programs  frequently or with recursion  the principle of mathematical induction must be <B>applied</B>  the relation between the version
24 Q0 1145 94 0.061575852 Lucene_47
  git-graph isomorphism tester-incorporates a variety of <B>processes</B> that attempt to narrow down
24 Q0 1308 95 0.061575852 Lucene_47
a mathematical model for mechanical part description the flexibility of a mathematical model takes advantage of the common information requirements of computer-aided engineering drawing  numerical control tape generation  and physical characteristic computation  by judicious control of man-machine communication requirements  improved results over conventional engineering design <B>processes</B>
24 Q0 1385 96 0.061575852 Lucene_47
 of automation  control of production <B>processes</B> rather than data processing  and  5  the  yun ch ou hsueh
24 Q0 1458 97 0.061575852 Lucene_47
online programming when the transition has been made from off line to online programming  there are a number of changes in the working conditions noted  these changes in the environment make necessary corresponding changes in the <B>processes</B> related to producing and checking out programs  in the main  it it not the programming language itself which must be changed to provide a facility
24 Q0 1928 98 0.061575852 Lucene_47
 into a structural model  the elimination of manual <B>processes</B> in achieving exclusive simulation of activity
24 Q0 2307 99 0.061575852 Lucene_47
dynamic document processing the current role of computers in automatic document processing is briefly outlined  and some reasons are given why the early promise of library automation and of the mechanization of documentation <B>processes</B> has not been fulfilled  a new dynamic document environment is then outlined in which clustered files are searched and information is retrieved following
24 Q0 243 100 0.061575852 Lucene_47
n-dimensional codes for detecting and correcting multiple errors the paper introduces a new family of codes for detecting and correcting multiple errors in a binary-coded message  the message itself is arranged  conceptually  into a multidimensional rectangular array  the <B>processes</B> of encoding and error detection are based upon parity evaluations along prescribed dimensions of the array
*************Query 25*************************

25 Q0 2318 1 0.6449154 Lucene_47
the role of <B>computer</B> system models in <B>performance</B> <B>evaluation</B> models constitute a useful means of investigating <B>computer</B> system <B>performance</B>  this paper examines the interrelationships between models and other methods for evaluating the <B>performance</B> of <B>computer</B> <B>systems</B> and establishes circumstances under which the use of a model is appropriate  cacm july 1972 kimbleton  s  r  modeling  <B>evaluation</B>
25 Q0 2812 2 0.46036354 Lucene_47
 by the navy material command support activity  nmcsa   <B>computer</B>-aided analysis consists of a set of procedures and <B>computer</B> programs specifically designed to aid in the process of applications software design  <B>computer</B> selection and <B>performance</B> <B>evaluation</B>  there are four major components  problem statement<B>computer</B>-aided analysis and design of information <B>systems</B> this paper describes the use of <B>computer</B>
25 Q0 2268 3 0.41732007 Lucene_47
a comparative study of <B>computer</B> programs for integrating differential equations a study comparing the <B>performance</B> of several <B>computer</B> programs for integrating <B>systems</B> of ordinary differential   the testing procedure is described together with the <B>evaluation</B> criteria applied  a set of test problems the best <B>performance</B>  cacm november  1972 fox  p  ordinary differential equations  integration  program
25 Q0 2984 4 0.37263966 Lucene_47
 a technique for the visual representation of system <B>performance</B>  cacm march  1977 borovits  i  ein-dor  p  <B>computer</B> system  <B>performance</B> <B>evaluation</B>  cost utilization  system balance 2.44 ca770308 jbcost utilization  a measure of system <B>performance</B> a method is presented for evaluating <B>computer</B> system <B>performance</B> in terms of a cost utilization factor and a measure of imbalance  these coefficients
25 Q0 2634 5 0.3493181 Lucene_47
an <B>evaluation</B> of statistical software in the social sciences several hundred college and university <B>computer</B> installations now offer various types of statistical packages for general use  among those with a basis for selection and use  tests were made for each of these <B>systems</B>  and the results are summarized as to cost and <B>performance</B>  cacm june  1974 slysz  w  d  statistical computation  statistical
25 Q0 2951 6 0.3440166 Lucene_47
  and statistical <B>performance</B> <B>evaluation</B> tools are employed to investigate the feasibility of a dynamic  a  response time monitor  <B>computer</B> networks  time-sharing <B>systems</B>  comparative response time  arpadynamic response time prediction for <B>computer</B> networks if the ultimate aim of a computing network network <B>systems</B> studied in detail  to describe and predict the response time for network time-sharing
25 Q0 2542 7 0.34052455 Lucene_47
a software design and <B>evaluation</B> system a critical failure of current software system design and implementation methodology is that the <B>performance</B> of a proposed design is not evaluated before which overcomes many of the difficulties is proposed  a system which integrates <B>performance</B> <B>evaluation</B> with design and implementation is described  this system is based on a simple  high level
25 Q0 3136 8 0.3346119 Lucene_47
price <B>performance</B> patterns of u  <B>computer</B> <B>systems</B> econometric models of the u  <B>computer</B> market have market for larger  general purpose <B>computer</B> <B>systems</B>  the other market is the developing one for small business <B>computer</B> <B>systems</B>  a market which is relatively unstable with low price predictability  cacm april  1979 cale  e  gremillion  l  mckenney  j  price <B>performance</B>  grosch s law  u  <B>computer</B>
25 Q0 1938 9 0.3266875 Lucene_47
some criteria for time-sharing system <B>performance</B> time-sharing <B>systems</B>  as defined in this article  are those multiaccess <B>systems</B> which permit a terminal user to utilize essentially the full first-level quantitative time-sharing system <B>performance</B> <B>evaluation</B>  cacm january  1969 stimler  s to utilize the full resources of the system that makes quantitative <B>evaluation</B> of time-sharing
25 Q0 3089 10 0.31476468 Lucene_47
<B>performance</B> of rollback recovery <B>systems</B> under intermittent failures a mathematical model <B>systems</B>  checkpoints  recovery procedures  checking techniques  reliability and system <B>performance</B> <B>evaluation</B> 3.72 3.73 4.33 4.35 4.6 5.5 8.1 ca780608 dh february 9  1979 10 26 am 3089 4 3089 2599 5 3089 is used to derive the principal <B>performance</B> measures  including availability  response time
25 Q0 3070 11 0.30614966 Lucene_47
hybrid simulation models of <B>computer</B> <B>systems</B> this paper describes the structure and operation of a hybrid simulation model in which both discrete-event simulation and analytic techniques are combined  h  <B>performance</B> <B>evaluation</B>  simulation  queueing network models  central server model 4.32 4.35 8.1 <B>computer</B> system  discrete-event simulation is used to model the arrival and activation of jobs
25 Q0 2990 12 0.2941658 Lucene_47
effective information retrieval using term accuracy the <B>performance</B> of information retrieval <B>systems</B> can be evaluated in a number of different ways  much of the published <B>evaluation</B> work is based on measuring the retrieval <B>performance</B> of an average user query  unfortunately  formal proofs are difficult to construct for the average case  in the present study  retrieval <B>evaluation</B> is based
25 Q0 3119 13 0.2860242 Lucene_47
the impact of distributions and disciplines on multiple processor <B>systems</B> simple queueing models are used to study the <B>performance</B> tradeoffs of multiple processor <B>systems</B>  issues considered include the impact of cpu service disciplines and distributions  level of multiprogramming  multitasking  scheduling disciplines  <B>performance</B> <B>evaluation</B>  queueing models 4.32 4.6 6.2 8.1 ca790104 dh april 10  1979
25 Q0 2319 14 0.25820428 Lucene_47
 impact on the way we go about modularizing operating and <B>computer</B> <B>systems</B>  cacm july  1972 lynch  w  c  <B>computer</B> system  operating system  <B>performance</B> <B>evaluation</B>  <B>performance</B> measurement  measurementoperating system <B>performance</B> an overview of the current and future positions with respect to operating system <B>performance</B> is given  while a great deal of information and a large number of models
25 Q0 2535 15 0.24639527 Lucene_47
 a user to the <B>computer</B> and  consequently  affects the <B>performance</B> of a time-shared <B>computer</B>  there is noticeable improvement in the <B>performance</B> of the <B>computer</B>  model   in the sense that time-shared scheduling so that there may be little or no change in the <B>computer</B>-communications system <B>performance</B>the effects of multiplexing on a <B>computer</B>-communications system a study is made of the way in which
25 Q0 2894 16 0.23799388 Lucene_47
a methodology for interactive <B>computer</B> service measurement a measurement methodology applicable to in teractive <B>computer</B> service is described  its primary purpose is to enable external  user-oriented assessment of <B>computer</B> <B>performance</B>  instead of the more frequently used in ternal system system  <B>computer</B> service  measurement  <B>performance</B>  external measurement  methodology  measurement
25 Q0 1908 17 0.22631694 Lucene_47
 <B>computer</B> <B>systems</B> conducted at mit is described in this paper  this study is the first known attempt to evaluate two such <B>systems</B> for what may well be the predominant user population within the next decade-the professionals who  as nonprogrammers  are using the <B>computer</B> as an aid in decision-making results indicate equal cost for usage of the two <B>computer</B> <B>systems</B>  however  a much higher level
25 Q0 1653 18 0.22608447 Lucene_47
system <B>performance</B> <B>evaluation</B>  survey and appraisal the state of the art of system <B>performance</B> <B>evaluation</B> is reviewed and <B>evaluation</B> goals and problems are examined  throughput  turnaround  and availability are defined as fundamental measures of <B>performance</B>  overhead and cpu speed are placed of information  the central role of measurement in <B>performance</B> <B>evaluation</B> and in the development
25 Q0 2522 19 0.22491516 Lucene_47
the design  implementation  and <B>evaluation</B> of a working set dispatcher the behavior of a <B>computer</B> allocation  software <B>evaluation</B>  operating <B>systems</B>  supervisory <B>systems</B> 4.31 4.32 ca730406 jb to the processes competing for them  recent research in time-sharing paging <B>systems</B> has developed the working  and indicates future directions of research on methods of controlling a <B>computer</B> system  cacm april  1973
25 Q0 2882 20 0.22333321 Lucene_47
a stochastic <B>evaluation</B> model for database organization in data retrieval <B>systems</B> experimental work in the valuation of large scale data retrieval <B>systems</B> has been scarce due to its difficulty  cacm february  1976 siler  k  f  database architecture  database <B>performance</B> and <B>evaluation</B>  invented before  the model is designed to estimate the retrieval workload of alternative data retrieval <B>systems</B>
25 Q0 2988 21 0.22096585 Lucene_47
  system <B>performance</B>  queueing network models  in teractive <B>computer</B> <B>systems</B> 4.32 ca770304 jb december network models of <B>computer</B> <B>systems</B>  empirical analyses and analytic studies based on applying model is proposed as being broadly applicable to the analysis of in teractive <B>computer</B> <B>systems</B> which variables such as memory requirement distribution and job swap time  and <B>performance</B> measures
25 Q0 2892 22 0.21543407 Lucene_47
  <B>computer</B> communication networks  interprocess communication  measurement  packet switching  <B>performance</B> <B>evaluation</B> and efficiency  resource sharing 3.81 4.39 4.6 4.9 ca760101 jb january 5  1978 10 49
25 Q0 1032 23 0.20714068 Lucene_47
theoretical considerations in information retrieval <B>systems</B> information storage and retrieval <B>systems</B> are composed of three major components   a  identification of information and tagging model for an <B>evaluation</B> function of relevancy is developed which rewards the system for retrieving <B>performance</B>  and the second is a self-generating subset of the file with a high probability of being
25 Q0 1518 24 0.20713831 Lucene_47
an experimental model of system 360 the problem of predicting the <B>performance</B> of modern <B>computer</B> <B>systems</B> is formidable  one general technique which can ease this problem is macroscopic simulation  this paper reports on the applicability of that technique to system 360  the paper describes <B>performance</B> produced by the model consist of statistics relating to turnaround time  throughput  hardware
25 Q0 1030 25 0.20426656 Lucene_47
techniques for the simulation of <B>computer</B> logic the simulation of a digital <B>computer</B> is an integral part of most <B>computer</B> design automation <B>systems</B>  the <B>evaluation</B> of the boolean functions which characterize the <B>computer</B> being simulated constitutes one major portion of a simulation system  four general procedural classes for evaluating these functions are defined  toward greatly increased
25 Q0 3048 26 0.20303427 Lucene_47
<B>performance</B> <B>evaluation</B> of highly concurrent computers by deterministic simulation simulation is presented as a practical technique for <B>performance</B> <B>evaluation</B> of alternative configurations of highly for <B>performance</B> <B>evaluation</B>  without the necessity of emulating the system  as a case study  as in the ibm 360 195  cacm november  1978 kumar  b  davidson  e  <B>performance</B> <B>evaluation</B>  deterministic
25 Q0 2151 27 0.20064469 Lucene_47
  measurement technology  tx-2 <B>computer</B>  virtual computers  <B>performance</B> improvement 4.30 4.32 4.42 4.43 of software <B>systems</B> is followed by a description of a hardware and software scheme for measuring user programs in a time-shared environment  the tx-2 <B>computer</B> at mit lincoln laboratory was used showing the system in use is presented  finally  it is shown how other time-sharing <B>systems</B> may
25 Q0 2741 28 0.2005473 Lucene_47
decomposability  instabilities  and saturation in multiprogramming <B>systems</B> a step-by-step approach to model the dynamic behavior and evaluate the <B>performance</B> of computing <B>systems</B> is proposed <B>systems</B>  i  unstable regimes of operations and  ii  critical computing loads which bring the system in which  thrashing  can set in  cacm july  1975 courtois  p  j  multiprogramming  paging  <B>performance</B>
25 Q0 2298 29 0.19090089 Lucene_47
  eckhouse jr   r  h  microprogramming  emulation  <B>computer</B> <B>systems</B>  language processors  input-output <B>systems</B>  nano-program  project management  hardware <B>evaluation</B> 4.1 4.2 4.3 6.2 ca720804 jb january 30 phases  the <B>evaluation</B> of various possible machines to support this research  the decision
25 Q0 3091 30 0.19081683 Lucene_47
some basic determinants of <B>computer</B> programming productivity the propose of this research for predicting the amount of time necessary to create a <B>computer</B> program  the fifteen program  cacm june  1978 chrysler  e  programmer <B>performance</B> standards  predicting program development time  programmer <B>evaluation</B>  programmer scheduling  programmer productivity  programming management  cobol
25 Q0 2852 31 0.18736593 Lucene_47
 in <B>computer</B> science or in information <B>systems</B> mcfarlan and nolan have made a strong case for adding committee on <B>computer</B> education for management for graduate professional programs in information <B>systems</B> professional programs in information <B>systems</B> or for graduate professional programs in <B>computer</B> science  cacm july  1976 conte  s  d  halstead  m  h  education  information <B>systems</B> administration  <B>computer</B>
25 Q0 1750 32 0.18109111 Lucene_47
 of the faster memory  cacm may  1968 fuchel  k  heller  s  multiple <B>computer</B> <B>systems</B>  extended core storage  multiprogrammed operating <B>systems</B>  multiprocessor operating <B>systems</B>  control data corporationconsiderations in the design of a multiple <B>computer</B> system with extended core storage the use the multiprogramming <B>performance</B> of a multicomputer system is discussed  the general design of the hardware
25 Q0 3088 33 0.16968296 Lucene_47
general equations for idealized cpu-i o overlap configurations general equations are derived for estimating the maximum possible utilization of main storage partitions  cpu and i o devices under different conditions in an idealized cpu-i o overlap model of multiprogrammed <B>computer</B> <B>systems</B>  buffering  input output  overlap  <B>performance</B>  resource allocation  throughput  timesharing 3.72 4.30
25 Q0 1805 34 0.1691122 Lucene_47
  1969 lasser  d  j  productivity  prediction  multiprogramming  simulation  equipment <B>evaluation</B>  hardware  <B>evaluation</B>  monitor  operating system  system software  supervisors  <B>performance</B>  timeproductivity of multiprogrammed computers-progress in developing an analytic prediction method multiprogramming as it is discussed here is a mode of <B>computer</B> operation in which two or more programs
25 Q0 3028 35 0.16876048 Lucene_47
the manchester mark i and atlas  a his torical perspective in 30 years of <B>computer</B> design at manchester university two <B>systems</B> stand out  the mark i  developed over the period 1946-49  and the atlas  1955-62   this paper places each <B>computer</B> in its his torical context and then describes of manchester innovations in these and other areas is discussed  and the contemporary <B>performance</B>
25 Q0 1719 36 0.15962982 Lucene_47
 data processing system cost and <B>performance</B>  real-time data processing <B>systems</B> as typified by the automated airline reservation system are discussed in this paper  criteria for evaluating <B>performance</B>a methodology for calculating and optimizing real-time system <B>performance</B> the continually increasing size  complexity  number of types  and cost of data processing <B>systems</B> are causing serious re
25 Q0 1347 37 0.15903904 Lucene_47
general time-varying <B>systems</B> error sensitivities program the <B>evaluation</B>  by the propagation of variance technique  of the sensitivity of time-varying <B>systems</B> to initial condition and parameter errors  involves the determination of several system-dependent partial derivative matrices for individualized programs  and presaging the further development of extremely general <B>computer</B> programs
25 Q0 3153 38 0.15747204 Lucene_47
the control of response times in multi-class <B>systems</B> by memory allocations the possibility is examined in the context of a paged <B>computer</B> system  two parameterized algorithms which partition are obtained  a way of applying the results to <B>systems</B> with more than two job classes is indicated  cacm july  1979 hine  j  mitrani  i  tsur  s  queueing networks  paging  virtual memory  <B>performance</B>
25 Q0 3072 39 0.15318906 Lucene_47
feedback coupled resource allocation policies in the multiprogramming- multiprocessor <B>computer</B> system model studies of some integrated  feedback-driven scheduling <B>systems</B> for multiprogrammed- multiprocessor <B>computer</B> <B>systems</B> are presented  the basic control variables used are the data-flow rates for the processes executing on the cpu  the model <B>systems</B> feature simulated continuous-flow and preempt
25 Q0 1267 40 0.14830606 Lucene_47
<B>performance</B> of <B>systems</B> used for data transmission transfer rate of information bits -an asa tutorial standard information thruput as a characteristic of <B>systems</B> <B>performance</B> is discussed  this discussion includes the pertinent aspects of information transfer  of determination of transfer rate that a <B>performance</B> characteristic involving information rate can best be expressed as the trib in conjunction
25 Q0 1827 41 0.14735478 Lucene_47
 pinkerton  t  b  <B>performance</B> monitoring  <B>performance</B> measurement  program behavior  <B>performance</B> data  multiprogramming <B>performance</B>  software measurement  time-sharing <B>performance</B>  system <B>evaluation</B><B>performance</B> monitoring in a time-sharing system a software measurement facility which is part of monitoring operating system and user program behavior and <B>performance</B>  the overall structure
25 Q0 2571 42 0.14679079 Lucene_47
  scheduling  modeling  <B>performance</B> <B>evaluation</B> 4.32 8.1 ca741203 jb january 16  1978 9 51 am 2571 4 2571 3072 <B>performance</B>  a modified strategy monitor control is investigated for the case of task execution
25 Q0 2106 43 0.14612648 Lucene_47
<B>computer</B> education in a graduate school of management several years of experience have led to the belief that the creative design and <B>evaluation</B> of management information <B>systems</B> requires a thorough understanding of the related <B>computer</B> technology  concepts such as paging and priority interrupt <B>systems</B> can best be explained at the machine language level  any machine used for exposition should
25 Q0 2017 44 0.1430121 Lucene_47
 <B>systems</B>  dynamic storage allocation  measurement of <B>systems</B> program behavior  <B>performance</B> <B>evaluation</B> memory machines  descriptions of the experimental sort programs and analysis of the <B>performance</B>
25 Q0 1671 45 0.14296944 Lucene_47
a phonological rule tester the design and implementation of a system to alleviate the problem of rule <B>evaluation</B> for the linguist in the area of phonology are presented  it permits the user to define <B>computer</B> and is designed to be used on-line in interactive fashion  with control returned tester  linguistics  transformational grammar  lisp  format-directed list processing  on-line <B>systems</B>
25 Q0 2344 46 0.14293297 Lucene_47
on the optimization of <B>performance</B> of time-sharing <B>systems</B> by simulation a simulation model <B>performance</B> is used to ascertain which of the parameters controllable by the job-scheduling algorithm controllable by the scheduling algorithm have a marked effect on system <B>performance</B>  system <B>performance</B> in the measure of system <B>performance</B> can be obtained by using variable time-slice techniques
25 Q0 2016 47 0.14140247 Lucene_47
  <B>performance</B> measurement  multiprogramming <B>systems</B>  measuring tools  system analysis  multics  meteringthe instrumentation of multics an array of measuring tools devised to aid in the implementation of a prototype <B>computer</B> utility is discussed  these tools include special hardware clocks and data channels  general purpose programmed probing and recording tools  and specialized measurement facilities
25 Q0 2798 48 0.13873895 Lucene_47
 burnett  g  j  coffman  e  g  jr  interleaved memory <B>systems</B>  modular memory <B>systems</B>  memory <B>performance</B>analysis of interleaved memory <B>systems</B> using blockage buffers a model of interleaved memory <B>systems</B> investigate the <B>performance</B> of various system structures  i e  schemes for sending instruction and data requests to the memory system  <B>performance</B> is measured by determining the distribution
25 Q0 1728 49 0.1379199 Lucene_47
 multiprogramming <B>systems</B> in which programs are organized into fixed length pages  the data collected from or instructions not in main  core  memory  these data are used also for the <B>evaluation</B> of page replacement algorithms and for assessing the effects on <B>performance</B> of changes in the amount of storage allocated to executing programs  cacm july  1968 coffman  e  g  varian  l  c  paging <B>systems</B>  paging
25 Q0 2859 50 0.13584214 Lucene_47
interference in multiprocessor <B>computer</B> <B>systems</B> with interleaved memory this paper analyzes are valid for a much larger class of models  including those more nearly like real <B>systems</B> that the simple model are tested against some measurements of program behavior and simulations of <B>systems</B> using memory references from real programs  the model results provide a good indication of the <B>performance</B>
25 Q0 2849 51 0.12908228 Lucene_47
ethernet  distributed packet switching for local <B>computer</B> networks ethernet is a branching stations  the packet transport mechanism provided by ethernet has been used to build <B>systems</B> which can be viewed as either local <B>computer</B> networks or loosely coupled multiprocessors  an ethernet s shared a kilometer of coaxial cable  a model for estimating <B>performance</B> under heavy loads and a packet
25 Q0 1792 52 0.12688534 Lucene_47
  erikson  w  j  grant  e  e  online vs  off line <B>performance</B>  programmer <B>computer</B> communicationexploratory experimental studies comparing online and off line programming <B>performance</B> two exploratory experiments were conducted at system development corporation to compare debugging <B>performance</B> of programmers working under conditions of on-line and off line access to a <B>computer</B>
25 Q0 2711 53 0.12182055 Lucene_47
 be expressible as a function of the density of the object space  in particular  retrieval <B>performance</B> to choose an optimum indexing vocabulary for a collection of documents  typical <B>evaluation</B> results
25 Q0 1931 54 0.120730236 Lucene_47
interval arithmetic determinant <B>evaluation</B> and its use in testing for a chebyshev system two recent by hasen and r  r  smith is compared with straightforward use of i  in determinant <B>evaluation</B>  for determinant <B>evaluation</B>  an application using i  determinants in a program to test a set of functions to see arithmetic  range arithmetic  error bounds  determinant <B>evaluation</B>  chebyshev system  mathematical proof
25 Q0 2375 55 0.119126655 Lucene_47
 head disks are compared using the <B>performance</B> criteria of expected seek time  system oriented are obtained  the variance of waiting time is introduced as another meaningful measure of <B>performance</B> to measure total <B>performance</B> including system oriented and individual request oriented measures of input loading conditions  the selection and implementation of a maximum <B>performance</B> two-policy
25 Q0 2452 56 0.11485352 Lucene_47
<B>evaluation</B> and selection of file organization-a model and system this work first discusses the factors that affect file  data base  organization <B>performance</B>  an elusive subject  and then presents and to facilitate as much as possible the process of data base structure design and <B>evaluation</B>  cacm september  1973 cardenas  a  f  file organization  file structures  file management  file organization <B>performance</B>
25 Q0 2502 57 0.11466463 Lucene_47
a comment on the practical aspects of <B>computer</B> science education cacm may  1973 estell  r  g  education  <B>computer</B> engineering  <B>computer</B> sciences curriculum  <B>systems</B> design 1.52 6.0 ca730518 jb january 23  1978 4 23 pm 2502 5 2502 2502 5 2502 2502 5 2502
25 Q0 2553 58 0.11466463 Lucene_47
the practical aspect of <B>computer</B> science education-discussion cacm january  1973 blount  s  e  education  <B>computer</B> engineering  <B>computer</B> science curriculum  <B>systems</B> design 1.52 6.0 ca730108 jb january 24  1978 4 09 pm 2553 5 2553 2553 5 2553 2553 5 2553
25 Q0 1071 59 0.11358762 Lucene_47
<B>computer</B>-usage accounting for generalized time-sharing <B>systems</B> the current development of general time-sharing <B>systems</B> requires a revision of accounting procedures for <B>computer</B> usage  since time of <B>computer</B> time and storage space that a user actually utilizes  the various cost factors which should be considered for <B>computer</B> usage accounting in generalized time-sharing <B>systems</B> are discussed  cacm may
25 Q0 436 60 0.111118965 Lucene_47
<B>evaluation</B> of polynomials by <B>computer</B> cacm december  1962 knuth  d  e  ca621203 jb march 17  1978 5 16 pm 1223 4 436 1388 4 436 436 4 436 1620 5 436 405 5 436 436 5 436 436 5 436 436 5 436 819 5 436 819 6 436 436 6 436 436 6 436
25 Q0 2317 61 0.10905891 Lucene_47
programming <B>systems</B> and languages 1965-1975 in spite of impressive gains by pl i  fortran and cobol  in the operating system area all major <B>computer</B> manufacturers set out to produce very ambitious multiprogramming <B>systems</B>  and they all ran into similar problems  a number of university projects in the development of system measurement and <B>evaluation</B> techniques and increased use of microprogramming
25 Q0 893 62 0.108828716 Lucene_47
significance arithmetic on a digital <B>computer</B> the 7090 at nyu has been modified to include a  significance mode  of operation which is intended to facilitate the identification of significant bits and comparisons are made with the ordinary  normalized mode   examples include power series <B>evaluation</B>  linear equations solution  determinant <B>evaluation</B> and matrix inversion  cacm march  1963 goldstein
25 Q0 1341 63 0.10838983 Lucene_47
levels of <B>computer</B> <B>systems</B> in building current <B>computer</B> <B>systems</B>  we tend to break them down into  levels  of control  command and communication  in using the system  we break our problems down on the usefulness of future <B>systems</B>  particularly with regard to such trends as time sharing  parallel programming  and  eventually  <B>systems</B> which learn  in this essay some of these questions are posed
25 Q0 2985 64 0.10785611 Lucene_47
effects of chargeout on user manager attitudes the relationship of in ternal pricing <B>systems</B> for <B>computer</B> services  chargeout <B>systems</B>  and user management attitudes about their <B>computer</B>-based information <B>systems</B> is investigated  evidence is provided that the relationship conforms to a general of <B>computer</B>-based <B>systems</B>  development and main tenance of <B>computer</B>-based <B>systems</B> is asserted
25 Q0 96 65 0.10776496 Lucene_47
on computing radiation integrals the relative merit and cost of four ways of evaluating typical radiation integrals containing spherical bessel functions are investigated  these methods are desk machine <B>evaluation</B> of a finite series  integration of the appropriate differential equation by a reeves electronic analog <B>computer</B> and by a litton 40 ibm 704 <B>computer</B>  results are generally applicable
25 Q0 1699 66 0.106894545 Lucene_47
experimental <B>evaluation</B> of information retrieval through a teletypewriter experiments designed to evaluate the capabilities of mechanized information retrieval <B>systems</B>  with emphasis on interactive  were conducted at the moore school information <B>systems</B> laboratory  the basic assumption in <B>evaluation</B> of such a system include ease of use  learning time  and effectiveness of actual retrieval  three
25 Q0 40 67 0.102513485 Lucene_47
 many advantages over a decimal representation for a high-<B>performance</B>  general-purpose <B>computer</B> addressing and instruction formats can increase the overall <B>performance</B>  binary addresses are also  on the other hand  decimal numbers are essential for communicating between man and the <B>computer</B>  the time for decimal-binary conversion needed by a purely binary <B>computer</B> may be significant  a slower
25 Q0 2048 68 0.10151713 Lucene_47
comparison of several adaptive newton-cotes quadrature routines in evaluating definite integrals with peaked integrands this report compares the <B>performance</B> of five different adaptive quadrature schemes  based on newton-cotes  2n   1  point rules  n   1  2  3  4  5   in approximating the set  adaptive newton-cotes quadrature  quadrature scheme comparison  definite integral <B>evaluation</B>
25 Q0 1196 69 0.09868764 Lucene_47
 to digital <B>computer</B> processing can be formulated in terms of the numerical solution of <B>systems</B> of ordinary differential equations  powerful methods are in existence for the solution of such <B>systems</B>  a good general purpose routine for the solution of such <B>systems</B> furnishes a powerful tool  and minimization of <B>computer</B> time  a number of examples are discussed in detail  cacm september  1965
25 Q0 2967 70 0.09821622 Lucene_47
a comparison of hardware and software associative memories in the context of <B>computer</B> graphics  lines  rectangles  and triangles  the apld functions were duplicated on the tx-2 <B>computer</B> at m  s-addressable memory  graphics  information retrieval  data structures  software <B>evaluation</B>  hardware <B>evaluation</B>  parallel processing  database management 3.71 3.72 3.73 3.74 4.34 4.6 6.22 8.2 ca770505
25 Q0 2217 71 0.09820669 Lucene_47
 in predicate calculus  multiple s proving program  pp  uses two <B>evaluation</B> functions to guide its of predicate calculus clauses were created for use in the automatic learning of better <B>evaluation</B> functions demonstrated that the learning program could simultaneously improve <B>performance</B> on problems in a specific
25 Q0 1912 72 0.09785396 Lucene_47
simulation of outpatient appointment <B>systems</B> an experimental <B>computer</B> program is described which simulates appointment <B>systems</B> employed by outpatient departments of hospitals  both major kinds of appointment <B>systems</B>-individual and block-can be simulated  the purpose of the simulator is to enable the user to evaluate the effectiveness of alternative appointment <B>systems</B> in a given clinical
25 Q0 322 73 0.09736081 Lucene_47
operational compatibility of <B>systems</B>-conventions the general standards committee of the share organization has devoted considerable effort to the problem of operating a <B>computer</B> efficiently in view of the growing number of programming <B>systems</B> available  each of these programming <B>systems</B> has been by manually setting up the <B>computer</B> for each system as required  the following set of conventions
25 Q0 3078 74 0.09729617 Lucene_47
analysis of the availability of <B>computer</B> <B>systems</B> using <B>computer</B>- aided algebra analytical results  related to the availability of a <B>computer</B> system constructed of unreliable processors  are presented in this paper  these results are obtained by using various <B>computer</B>-aided algebraic manipulation manipulation programs  since many physical <B>systems</B> can be modeled by markov and semi-markov processes
25 Q0 1844 75 0.09697806 Lucene_47
 response system  modular constructed <B>systems</B>  modular <B>computer</B>-sharing <B>systems</B>  graphics  file switcha modular <B>computer</B> sharing system an alternative approach to the design and organization serves as the master or control <B>computer</B> and supervises the collection and distribution of messages terminal  a crosspoint switching network allows any such disk drive to be connected to any <B>computer</B>
25 Q0 2936 76 0.09690838 Lucene_47
an efficient data structure for the simulation event set recently algorithms have been presented for the realization of event scheduling routines suitable for general purpose discrete event simulation <B>systems</B>  several exhibited a <B>performance</B> superior to that of commonly used simple linked list of the best of the previously published algorithms  first  the new algorithm s <B>performance</B> is quite
25 Q0 417 77 0.092643104 Lucene_47
legal implications of <B>computer</B> use this paper points out a variety of ways <B>computer</B> <B>systems</B> used in business and industry can be involved in legal entanglements and suggests that <B>computer</B> specialists aspects of <B>computer</B> <B>systems</B> involved in legal situations  cacm december  1962 freed  r  n  ca621222 jb burden on the new technology and for achieving a favorable legal climate for it generally  <B>computer</B>
25 Q0 1747 78 0.09034572 Lucene_47
 criteria  <B>computer</B> <B>systems</B>  <B>computer</B> <B>systems</B> design  input equipment  input equipment design  operatingthree criteria for designing computing <B>systems</B> to facilitate debugging the designer of a computing the influences affecting the content and extent of his <B>computer</B> s output  to define the scope <B>computer</B> are explained  examples of applications of the criteria concern the reading of a time-of-day
25 Q0 2621 79 0.08815177 Lucene_47
a high security log-in procedure the protection of time sharing <B>systems</B> from unauthorized users involved with storing the passwords in the <B>computer</B> can be avoided  we discuss the selection to one-way ciphers derived from sannon codes  cacm august  1974 purdy  g  b  operating <B>systems</B>  time sharing <B>systems</B>  security  cryptography 4.35 ca740803 jb january 17  1978 10 10 am 2621 5 2621 2621
25 Q0 143 80 0.08806415 Lucene_47
a list of <B>computer</B> <B>systems</B> programs for the ibm 650  datatron 205  and univac ss-80 cacm october  1960 romberg  a  ca601005 jb march 20  1978 8 21 pm 143 5 143 143 5 143 143 5 143
25 Q0 2818 81 0.08806415 Lucene_47
interference in multiprocessor <B>computer</B> <B>systems</B> with interleaved memory  corrigendum  cacm november  1976 baskett  f  smith  a  j  ca761105 jb january 3  1978 3 18 pm 2818 5 2818 2818 5 2818 2818 5 2818
25 Q0 1473 82 0.08759221 Lucene_47
the stability of the fourth order runge-kutta method for the solution of <B>systems</B> of differential equations the problem of the region of stability of the fourth order-runge-kutta method for the solution of <B>systems</B> of differential equations is studied  this region can be characterized by means by the electronic digital <B>computer</B> z22  cacm february  1966 karim  a  i  a  ca660211 jb march 3  1978
25 Q0 2262 83 0.08717906 Lucene_47
garbage collection for virtual memory <B>computer</B> <B>systems</B> in list processing there is typically a growing demand for space during program execution  this paper examines the practical implications of this growth within a virtual memory <B>computer</B> system  proposes two new garbage collection techniques for virtual memory <B>systems</B>  and compares them with traditional methods by discussion and by simulation
25 Q0 1415 84 0.086812906 Lucene_47
 immediate prospects for improving the <B>performance</B> of automatic message retrieval <B>systems</B>  they may have practical value in man-machine <B>systems</B> using human monitors to select the preferred syntactic
25 Q0 1572 85 0.086455226 Lucene_47
the simulation of time sharing <B>systems</B> the development of new large scale time-sharing <B>systems</B> has an appropriate hardware configuration for these <B>systems</B>  but appropriate software adjustments must be made  unfortunately  these <B>systems</B> often do not respond to changes in the manner that intuition would suggest  and there are few guides to assist in the analysis of <B>performance</B> characteristics
25 Q0 2286 86 0.08333922 Lucene_47
automatic error analysis for determining precision the problem considered is that of evaluating a rational expression to within any desired tolerance on a <B>computer</B> which performs variable-precision floating-point arithmetic operations  an automatic error analysis technique is given for determining generalize easily to the <B>evaluation</B> of many nonrational expressions  cacm september  1972 richman  p  l
25 Q0 3035 87 0.0827496 Lucene_47
a strategic planning methodology for the computing effort in higher education  an empirical <B>evaluation</B> the findings of a study designed to address the pressing problems associated with the strategic the delivery of computing services  cacm december  1978 wetherbe  j  dock  v  <B>computer</B> management  <B>computer</B> budget  university computing  <B>computer</B> planning 2.41 3.51 ca781204 dh january 18  1979 4 26 pm 2977
25 Q0 1526 88 0.08208565 Lucene_47
multiprogramming under a page on demand strategy a model of multiprogramming for a particular <B>computer</B> system using a page on demand strategy is developed  analysis of this model is used to predict <B>performance</B>  measured by the average usage of the cpu  when user programs are typical of those arising from an interactive time sharing environment  the effect of several hardware modifications is also
25 Q0 1926 89 0.08208565 Lucene_47
description of format  a text-processing program format is a production program which facilitates the editing and printing of  finished  documents directly on the printer of a relatively small  64k  <B>computer</B> system  it features good <B>performance</B>  totally free-form input  very flexible formatting capabilities including up to eight columns per page  automatic capitalization  aids for index
25 Q0 462 90 0.08208565 Lucene_47
<B>computer</B> pattern recognition techniques  electrocardiographic diagnosis the use of programmed digital computers as general pattern classification and recognition devices is one phase of the current lively interest in artificial intelligence  it is important to choose a class of signals which recognition  in this way comparisons between machine and human <B>performance</B> may be obtained
25 Q0 671 91 0.08208565 Lucene_47
telefile-a case study of an on-line savings bank application the development of an on-line <B>computer</B> system for a savings bank institution is traced from the early conceptual needs of the bank to the consummation of design by the teleregister corporation  both bank and equipment criteria and <B>performance</B> of the system  benefits to the bank are discussed from the banker s point of view
25 Q0 3026 92 0.081134014 Lucene_47
the evolution of the sperry univac 1100 series  a his tory  analysis  and projection the 1100 series <B>systems</B> are sperry univac s large-scale main frame <B>computer</B> <B>systems</B>  beginning with the 1107 in 1962  the 1100 series has progressed through a succession of eight compatible <B>computer</B> models <B>computer</B> series  <B>computer</B> architecture  multiprocessing languages  data management <B>systems</B>  end
25 Q0 2314 93 0.08024347 Lucene_47
requirements for advanced programming <B>systems</B> for list processing list processing <B>systems</B> should the requirements specified are applicable to the design of advanced programming <B>systems</B> for a wide range of applications  three aspects of programming <B>systems</B> are highlighted  good interactive facilities  as is the duality of data retrieval and function <B>evaluation</B>  syntax directed input and output of data would
25 Q0 2479 94 0.0799179 Lucene_47
 administration  information <B>systems</B> management  <B>computer</B> management 1.52 3.51 ca730707 jb january 23curriculum recommendations for graduate professional programs in information <B>systems</B>  recommended addendum on information <B>systems</B> administration an addendum to the report of the acm curriculum committee on <B>computer</B> education for management is proposed  the proposed addendum is to include
25 Q0 2105 95 0.07978743 Lucene_47
an interactive <B>computer</B> system using graphical flowchart input an interactive <B>computer</B> system operational on a graphical <B>computer</B> terminal is described  this system was designed to demonstrate a method of programming by <B>computer</B> interpretation of a flowchart  the user draws a description of a sampled-data system and specifies description is transmitted to a large scale <B>computer</B>  the design
25 Q0 2669 96 0.07901273 Lucene_47
  program models  <B>performance</B> measurement  multilevel memory <B>systems</B>  virtual memory  associative memorya simple linear model of demand paging <B>performance</B> predicting the <B>performance</B> of a proposed automatically managed multilevel memory system requires a model of the patterns by which programs refer to the information stored in the memory  some recent experimental measurements on the multics virtual
25 Q0 2765 97 0.07901273 Lucene_47
analysis and <B>performance</B> of inverted data base structures the need to envision and architecture data base <B>systems</B> in a hierarchical level by level framework is stressed  the inverted data base  file timing and blocking specifications identified as having a first-order effect on <B>performance</B> file organization  data base <B>performance</B> and measurement  secondary index organization  information
25 Q0 1066 98 0.07720259 Lucene_47
 extensively in recent years that the whole concept for organizing a <B>computer</B> code has undergone a radical  to a <B>computer</B> code  an advanced code must cope with such a variety of situations that the respective <B>computer</B> subprograms must be organized into an integrated system  emphasis in this paper is devoted to the underlying principles upon which future linear programming <B>systems</B> must be based
25 Q0 1236 99 0.077144496 Lucene_47
 as an example in the present report to illustrate <B>systems</B> operations and <B>evaluation</B> procedures  cacm
25 Q0 1272 100 0.07697498 Lucene_47
 beyond mere correction and improvement of <B>computer</B> output  is exemplified by the use  chief among them being interpretation and expansion of <B>computer</B> output in such processes as factor  such as the quick  unbiased <B>evaluation</B> of a large volume of incoming mail or telegrams  yielding
*************Query 26*************************

26 Q0 3105 1 0.36697638 Lucene_47
a language extension for expressing constraints on data access controlled sharing of information is needed and desirable for many applications and is supported in <B>operating</B> <B>systems</B> by access <B>control</B> <B>mechanisms</B>  this paper shows how to extend programming languages to provide controlled sharing  cacm may  1978 jones  a  liskov b  programming languages  access <B>control</B>  data types  abstract data
26 Q0 2626 2 0.30440038 Lucene_47
protection and the <B>control</B> of information sharing in multics the design of <B>mechanisms</B> to <B>control</B>  security  privacy  access <B>control</B>  authentication  computer utilities  time-sharing <B>systems</B>  proprietary insight into the tradeoffs among different possible designs  the key <B>mechanisms</B> described include access <B>control</B> lists  hierarchical <B>control</B> of access specifications  identification and authentication
26 Q0 1677 3 0.28622216 Lucene_47
storage organization in programming <B>systems</B> the system of program and data representation that has arrangement is discussed with its realized advantages or programming <B>systems</B>  simplicity-sharing and multimedia storage <B>control</B>  on the basis of experience at rice  some ideas <B>control</B>  codewords  data representation  program representation  data structures  storage
26 Q0 1750 4 0.26323286 Lucene_47
 of the faster memory  cacm may  1968 fuchel  k  heller  s  multiple computer <B>systems</B>  extended core storage  multiprogrammed <B>operating</B> <B>systems</B>  multiprocessor <B>operating</B> <B>systems</B>  <B>control</B> data corporation 6600  <B>operating</B> system with ecs 4.30 4.32 ca680506 jb february 23  1978 9 27 am 1750 5 1750 1750 5
26 Q0 2372 5 0.25966784 Lucene_47
 existing <B>systems</B>  and serves as a framework for a proposal for general security system implementation within today s languages and <B>operating</B> <B>systems</B>  cacm april  1972 conway  r  w  maxwell  w  l  morgan  h  l  security  privacy  access <B>control</B> confidentiality  <B>operating</B> <B>systems</B>  access management  dataon the implementation of security measures in information <B>systems</B> the security of an information
26 Q0 2840 6 0.24886777 Lucene_47
protection in <B>operating</B> <B>systems</B> a model of protection <B>mechanisms</B> in computing <B>systems</B> is presented and its appropriateness is argued  the  safety  problem for protection <B>systems</B> under this model is to determine in a given situation whether a subject can acquire a particular right to an object  <B>operating</B> system  decidability  turing machine 4.30 4.31 5.24 ca760804 jb january 4  1978 10 12 am
26 Q0 3128 7 0.24567154 Lucene_47
 is proposed  using abstract objects called eventcounts and sequencers  that allows processes to <B>control</B> variables that <B>control</B> ordering of events  direct <B>control</B> of ordering seems to simplify correctness arguments and also simplifies implementation in distributed <B>systems</B>  the mechanism is defined <B>mechanisms</B> in the system is explained  in particular  eventcounts are shown to be applicable
26 Q0 2541 8 0.24446328 Lucene_47
  and centralized the communication <B>mechanisms</B> enabling the construction of hierarchical subsystems  it also suggested an important new concept for <B>operating</B> <B>systems</B>  separation of the scheduling from design of the language  <B>operating</B> system  and machine  via microcode  to create an interactive performing the scheduling decisions   cacm february  1973 balzer  r  m  concurrent design  <B>operating</B>
26 Q0 2314 9 0.24378917 Lucene_47
  programmable <B>control</B> structures  and sophisticated data communication <B>mechanisms</B>  interactive languages  design of programming languages  interactive <B>systems</B>  <B>control</B> structures  data structuresrequirements for advanced programming <B>systems</B> for list processing list processing <B>systems</B> should the requirements specified are applicable to the design of advanced programming <B>systems</B> for a wide range
26 Q0 1680 10 0.23042868 Lucene_47
 40  and the ibm 2250 display unit under <B>operating</B> system 360  adept is a cataloged program that controls the standard <B>operating</B> system by terminating and rescheduling itself automatically  relinquishing computer resources allocated to it  and surrendering <B>control</B> to the <B>operating</B> system to perform instruction  tutorial <B>systems</B>  programming  simulation  modeling  information retrieval <B>operating</B>
26 Q0 1747 11 0.22077127 Lucene_47
 criteria  computer <B>systems</B>  computer <B>systems</B> design  input equipment  input equipment design  <B>operating</B> <B>systems</B>  <B>operating</B> <B>systems</B> design  multiprogramming  multiprogrammed <B>systems</B>  multiprogrammed systemthree criteria for designing computing <B>systems</B> to facilitate debugging the designer of a computing reproducibility of output  these criteria imply that a user can  if he desires  either know or <B>control</B> all
26 Q0 2632 12 0.21742551 Lucene_47
hydra  the kernel of a multiprocessor <B>operating</B> system this paper describes the design philosophy of hydra-the kernel of an <B>operating</B> system for c mmp  the carnegie-mellon multi-mini-processor and virtual  called an  object   <B>mechanisms</B> are presented for dealing with objects  including defined with respect to that type of object  the <B>mechanisms</B> provide a coherent basis for extension
26 Q0 3026 13 0.20884542 Lucene_47
 series <B>systems</B> are sperry univac s large-scale main frame computer <B>systems</B>  beginning with the 1107-speed register  or two operands from high-speed registers  the 1100 <B>operating</B> system is designed computer series  computer architecture  multiprocessing languages  data management <B>systems</B>  end user facilities  executive <B>control</B> software 1.3 4.0 4.20 4.30 4.32 4.33 4.35 6.0 6.21 6.30 ca780104 jb
26 Q0 2938 14 0.20608166 Lucene_47
 high-level language molded after this discipline  the complexity of reasoning about <B>concurrency</B> real-time <B>systems</B> analytically verifiable and ultimately reliable  a possible discipline is outlined
26 Q0 2036 15 0.19620262 Lucene_47
 <B>systems</B> is given  cacm july  1970 grant  c  a  time-sharing  command languages  pseudo-teletype  interaction  conditional job <B>control</B>  <B>operating</B> <B>systems</B> 3.80 3.81 4.29 4.39 ca700701 jb february 13  1978 9
26 Q0 2939 16 0.18731402 Lucene_47
 <B>mechanisms</B> that support the use of data and <B>control</B> abstractions  this paper provides an in troduction to the abstraction <B>mechanisms</B> in clu  by means of programming examples  the utility of the threeabstraction <B>mechanisms</B> in clu clu is a new programming language designed to support the use that three kinds of abstractions-procedural  <B>control</B>  and especially data abstractions-are useful
26 Q0 1461 17 0.18251556 Lucene_47
discussion summary on <B>operating</B> <B>systems</B> cacm march  1966 ca660311 jb march 3  1978 1 26 pm 1461 5 1461 1461 5 1461 1461 5 1461
26 Q0 2080 18 0.18158117 Lucene_47
the nucleus of a multiprogramming system this paper describes the philosophy and structure of a multiprogramming system that can be extended with a hierarchy of <B>operating</B> <B>systems</B> to suit diverse  <B>operating</B> <B>systems</B>  parallel processes  process concept  process communication  message buffering  process es  a fundamental set of primitives allows the dynamic creation and <B>control</B> of a hierarchy
26 Q0 2320 19 0.18158117 Lucene_47
 <B>operating</B> <B>systems</B> but also within user programs  cacm july  1972 hansen  p  b  structured multiprogramming  programming languages  <B>operating</B> <B>systems</B>  concurrent processes  shared data  mutual exclusion regions and event variables enables the programmer to <B>control</B> scheduling of resources among
26 Q0 3050 20 0.1797262 Lucene_47
<B>systems</B> design education  a gaming approach one of the problems facing managers of computer installations is the problem of configuring the computer system to meet the demands made by the mix of jobs to configure a computer system to meet a hypothetical job mix is under the <B>control</B> of a game choices and a simulated run of the center <B>operating</B> under his choices  cacm november  1978 lyons  n
26 Q0 696 21 0.1797262 Lucene_47
 over 200 remote input stations which collect and transmit company <B>operating</B> data to a central data processing center  two rca 301 edp <B>systems</B> are used to record and <B>control</B> the flow of data transmitted
26 Q0 2870 22 0.17626284 Lucene_47
 of the security requirements of different existing <B>systems</B> and facilitate the construction of <B>mechanisms</B> that enforce security  the model provides a unifying view of all <B>systems</B> that restrict information flowa lattice model of secure information flow this paper investigates <B>mechanisms</B> that guarantee secure information flow in a computer system  these <B>mechanisms</B> are examined within a mathematical
26 Q0 2817 23 0.17173472 Lucene_47
the notions of consistency and predicate locks in a database system in database <B>systems</B>  users access shared data under the assumption that the data satisfies certain consistency constraints  this paper defines the concepts of transaction  consistency and schedule and shows that consistency  lock  database  <B>concurrency</B>  transaction 4.32 4.33 ca761106 jb january 3  1978 3 14 pm 2155 4 2817
26 Q0 2849 24 0.16553678 Lucene_47
 stations  the packet transport mechanism provided by ethernet has been used to build <B>systems</B> which can communication facility  its ether  is a passive broadcast medium with no central <B>control</B>  coordination and implementation are described  based on experience with an <B>operating</B> ethernet of 100 nodes along  boggs  d  r  computer networks  packet switching  multiprocessing  distributed <B>control</B>  distributed
26 Q0 3068 25 0.16378869 Lucene_47
a model for verification of data security in <B>operating</B> <B>systems</B> program verification applied <B>systems</B>  a precise definition of data security is developed here in terms of a general model for <B>operating</B> <B>systems</B>  this model is suitable as a basis for verifying many of those properties  d  <B>operating</B> <B>systems</B>  security  protection  program verification 4.35 5.24 ca780904 dh february 5
26 Q0 2936 26 0.15579581 Lucene_47
an efficient data structure for the simulation event set recently algorithms have been presented for the realization of event scheduling routines suitable for general purpose discrete event simulation <B>systems</B>  several exhibited a performance superior to that of commonly used simple linked list <B>mechanisms</B>  event scanning <B>mechanisms</B>  multilinked lists 3.34 4.22 5.5 8.1 ca770807 jb december 28  1977
26 Q0 2878 27 0.1474009 Lucene_47
 who may join the system at some of its queues is a <B>control</B> limit policy  with a single <B>control</B> that is not filled up to the <B>control</B> number corresponding to this queue and the user s class  in this paper <B>control</B> numbers  as well as lower and upper bounds for the <B>control</B> numbers and the capacities process  price scheduling  <B>operating</B> system 4.39 8.3 ca760302 dmm january 9  1978 2 14 pm 2878 5
26 Q0 2377 28 0.14683501 Lucene_47
 access privilege with a computation  this paper describes hardware processor <B>mechanisms</B> for implementing these rings of protection  the <B>mechanisms</B> for implementing these rings of protection  the <B>mechanisms</B> allow cross-ring calls and subsequent returns to occur without trapping to the supervisor to a companion user procedure  the <B>mechanisms</B> of passing and referencing arguments are the same in both cases
26 Q0 1290 29 0.1423211 Lucene_47
transparent-mode <B>control</B> procedures for data communication  using the american standard code in the area of transparent-mode data communication <B>control</B> philosophy  the appearance of this paper was forecast  underthe name of  second-level <B>control</B>   in the earlier tutorial paper   <B>control</B> procedures upon solutions to the problems of transparency to the basic ascii communication <B>control</B> characters
26 Q0 2578 30 0.14146808 Lucene_47
self-stabilizing <B>systems</B> in spite of distributed <B>control</B> cacm november  1974 dijkstra  e  w  multiprocessing  networks  self-stabilization  synchronization  mutual exclusion  robustness  sharing  error recovery  distributed <B>control</B>  harmonious cooperation  self-repair 4.32 ca741106 jb january 16,1978 10 18 am 2578 5 2578 2578 5 2578 2578 5 2578
26 Q0 59 31 0.14057541 Lucene_47
survey of progress and trend of development and use of automatic data processing in business and management <B>control</B> <B>systems</B> of the federal government  as of december 1957-iii cacm september  1959 ca590910 jb march 22  1978 4 41 pm 59 5 59 59 5 59 59 5 59
26 Q0 1591 32 0.13812084 Lucene_47
 into an <B>operating</B> system of a large computer is described  the model transferred <B>control</B> to the <B>operating</B> system to execute functions other than teaching  and then recovered <B>control</B> in order to resume teaching  the teaching system  abac-ii  was written to run under the <B>operating</B> system  ibsys  for the ibm student mode and programmer mode  during the latter  the full resources of the <B>operating</B> system
26 Q0 1534 33 0.13657795 Lucene_47
dad  the c  <B>operating</B> system the design and implementation of the c  <B>operating</B> system  dad  is described in detail  this system is designed for the <B>control</B> data 3600 using a large drum backing store and is intended to allow the integration of a remote console  display  subsystem into a conventional job stack environment  the use of the drums  the buffering of input and output on slow peripherals
26 Q0 1341 34 0.13552855 Lucene_47
levels of computer <B>systems</B> in building current computer <B>systems</B>  we tend to break them down into  levels  of <B>control</B>  command and communication  in using the system  we break our problems down on the usefulness of future <B>systems</B>  particularly with regard to such trends as time sharing  parallel programming  and  eventually  <B>systems</B> which learn  in this essay some of these questions are posed
26 Q0 2621 35 0.13364534 Lucene_47
 to one-way ciphers derived from sannon codes  cacm august  1974 purdy  g  b  <B>operating</B> <B>systems</B>  time sharing <B>systems</B>  security  cryptography 4.35 ca740803 jb january 17  1978 10 10 am 2621 5 2621 2621a high security log-in procedure the protection of time sharing <B>systems</B> from unauthorized users is often achieved by the use of passwords  by using one-way ciphers to code the passwords  the risks
26 Q0 104 36 0.12939642 Lucene_47
digital simulation of discrete flow <B>systems</B>  the discrete flow <B>systems</B> discussed are characterized to simulate such <B>systems</B> utilizes some techniques not common in other approaches to physical  air traffic flow and <B>control</B> procedures are simulated to compare the effects of alternative <B>control</B> decisions  cacm december  1960 moore  c  j  lewis  t  s  ca601212 jb march 20  1978 6 27 pm 104 5
26 Q0 2321 37 0.12939642 Lucene_47
on the interface between computers and data communications <B>systems</B> future <B>systems</B> that combine to the communications <B>systems</B> will be required  when specifying these interfaces  consideration must be given to problems of coordination  synchronization  error <B>control</B>  signaling  stream multiplexing  and switch <B>control</B>  in addition to minimizing the technological interdependence of specific subsystem designs
26 Q0 1247 38 0.129058 Lucene_47
an <B>operating</B> environment for dynamic-recursive computer programming <B>systems</B> presented in this paper is a brief nontechnical introduction to oedipus  a computer programming system which can serve as an <B>operating</B> environment for dynamic and or recursive programs and programming <B>systems</B>  the available services include dynamic allocation of storage for contiguous blocks of arbitrary size  input
26 Q0 2985 39 0.1268557 Lucene_47
effects of chargeout on user manager attitudes the relationship of in ternal pricing <B>systems</B> for computer services  chargeout <B>systems</B>  and user management attitudes about their computer-based information <B>systems</B> is investigated  evidence is provided that the relationship conforms to a general also indicate that the chargeout <B>systems</B> characteristic of advanced edp stage environments
26 Q0 2342 40 0.12580834 Lucene_47
 gilbert  p  chandler  w  j  concurrent programming <B>control</B>  cooperating processes  formal programs  interference  mutual exclusion  <B>operating</B> <B>systems</B>  parallel processes 4.0 4.10 4.30 4.32 4.42 5.24
26 Q0 2069 41 0.12167704 Lucene_47
comments on a paper by wallace and mason cacm april  1970 heess jr   w  f  page-on-demand  demand paging  time-sharing multiprogramming  markovian computer models  scheduling strategies  <B>operating</B> <B>systems</B>  memory management 2.44 4.32 4.39 6.20 6.21 ca700415 jb february 13  1978 2 36 pm 2069 5 2069 2069 5 2069 2069 5 2069
26 Q0 1485 42 0.11793134 Lucene_47
the structure of programming languages in this paper the major components of every programming language are identified as   1  the elementary program statement   2  <B>mechanisms</B> for linking elementary statements together   3  the means by which a program can obtain data inputs  several alternative the most convenient ways of structuring programs  organizing <B>systems</B> and referencing data  cacm february
26 Q0 3025 43 0.11597686 Lucene_47
 the pdp-6  circa 1963  over five generations of implementations to presently include <B>systems</B> covering a price range of five to one  the origin and evolution of the hardware  <B>operating</B> system  and languages to time sharing computing <B>systems</B>  transferring hardware technology within dec  and elsewhere  and serving as a model for single user and timeshared interactive minicomputer microcomputer <B>systems</B>  cacm
26 Q0 1476 44 0.11577213 Lucene_47
<B>control</B> procedures for data communication-an asa progress report sectional committee x 3 to  define and specify functional <B>control</B> requirements and characteristics governing the operation of digital data generating and receiving <B>systems</B> interconnected by communication system   this effort is primarily directed toward <B>systems</B> employing the american standard code for information interchange
26 Q0 322 45 0.11455315 Lucene_47
operational compatibility of <B>systems</B>-conventions the general standards committee of the share organization has devoted considerable effort to the problem of <B>operating</B> a computer efficiently in view of the growing number of programming <B>systems</B> available  each of these programming <B>systems</B> has been coded to utilize a fixed set of hardware components without recognizing the fact that others may
26 Q0 1264 46 0.11381495 Lucene_47
blnsys-a 1401 <B>operating</B> system with braille capabilities blnsys is an <B>operating</B> system designed for a 4k 1401 with common optional features and two attached tape drives  printed output of this system or of executing programs may be in either english or braille  even though this system was written <B>control</B>  card-to-braille conversion  brailled listings of 7040 ibsys batch output  and update
26 Q0 3153 47 0.11331334 Lucene_47
the <B>control</B> of response times in multi-class <B>systems</B> by memory allocations the possibility and economical lower bounds for the expected response times as functions of the <B>control</B> parameters are obtained  a way of applying the results to <B>systems</B> with more than two job classes is indicated <B>control</B> 4.32 8.1 ca790704 dh august 22  1979 3 32 pm 3016 4 3153 3070 4 3153 3153 4 3153 3153 4 3153
26 Q0 251 48 0.11246033 Lucene_47
ballistic cam design this paper presents a digital computer program for the rapid calculation of manufacturing data essential to the design of preproduction cams which are utilized in ballistic computers of tank fire <B>control</B> <B>systems</B>  the cam profile generated introduces the superelevation angle required by tank main armament for a particular type ammunition  cacm november  1961 archambault  m
26 Q0 300 49 0.11246033 Lucene_47
cobol  a sample problem a simplified merchandise <B>control</B> problem has been chosen for presenting cobol to users and potential users of computing <B>systems</B>  a mythical department store   e  language bros   inc    is programming in the cobol language one of the many runs on its computer  cacm august  1961 mackinson  t  n  ca610804 jb march 16  1978 10 12 pm 300 5 300 300 5 300 300 5 300 638 5 300 300
26 Q0 618 50 0.11246033 Lucene_47
computers- the key to total <B>systems</B> <B>control</B>  an industrial viewpoint man-man-machine processes are characterized in five main types  and the markets for each type are shown for 1950 and 1960 and estimated for 1970  cacm march  1962 carlson  w  m  ca620314 jb march 20  1978 2 53 pm 618 5 618 618 5 618 618 5 618
26 Q0 84 51 0.11246033 Lucene_47
survey of progress and trend of development and use of automatic data processing in business and management <B>control</B> <B>systems</B> of the federal government  as of december 1957-ii  part 2 see ca590406  cacm may  1959 ca590502 jb march 22  1978 6 42 pm 84 5 84 84 5 84 84 5 84
26 Q0 86 52 0.11246033 Lucene_47
survey of progress and trend of development and use of automatic data processing in business and management <B>control</B> <B>systems</B> of the federal government  as of december 1957 cacm april  1959 controller general of the united states to the congress of the united states ca590406 jb march 22  1978 6 48 pm 86 5 86 86 5 86 86 5 86
26 Q0 3127 53 0.11230645 Lucene_47
  sager  g  portability  real time  <B>operating</B> <B>systems</B>  minicomputer 3.80 4.30 4.35 ca790206 dh aprilthoth  a portable real-time <B>operating</B> system thoth isa real-time <B>operating</B> system which is designed to be portable over a large set of machines  it is currently running on two minicomputers with quite different architectures  both the system and application programs which use it are written
26 Q0 2949 54 0.11142891 Lucene_47
 tajibnapis  w  d  distributed computer network  correctness proofs  computer networks  distributed <B>control</B>  network topology  routing problem in networks  distributed <B>operating</B> system  store and forward packet switching  store and forward message switching  traffic <B>control</B> 3.81 4.32 ca770703 jb december 28
26 Q0 1754 55 0.10987532 Lucene_47
dynamic storage allocation <B>systems</B> in many recent computer system designs  hardware facilities have storage allocation <B>systems</B>-according to the functional capabilities provided and the underlying facilities in several representative computer <B>systems</B> is included as an appendix  cacm may  1968  virtual memories  storage fragmentation  storage hierarchies  addressing <B>mechanisms</B> 4.30 6.20
26 Q0 2020 56 0.10987532 Lucene_47
 generation computing <B>systems</B> has led to a much broader concern about the means by which the resources of these <B>systems</B> are allocated among the user community  one means that is suggested more and more and to highlight the advantages and disadvantages of pricing  two illustrative pricing <B>systems</B> are also august  1970 nielsen  n  r  allocation <B>mechanisms</B>  charging  computer pricing  costing  flexible
26 Q0 1844 57 0.10952361 Lucene_47
 serves as the master or <B>control</B> computer and supervises the collection and distribution of messages  economic configurations are possible for a range of <B>systems</B> sizes that span at least one order of magnitude  rittenhouse  l  e  multiple terminal <B>systems</B>  terminal oriented <B>systems</B>  multiple processor <B>systems</B>  high availability  conversational <B>systems</B>  general purpose time-sharing <B>systems</B>  real-time
26 Q0 2424 58 0.10924975 Lucene_47
 be modest  cacm november  1973 fabry  r  s  <B>operating</B> <B>systems</B>  data security  fault tolerancedynamic verification of <B>operating</B> system decisions dynamic verification of a decision implies independent hardware and software  the dynamic verification of <B>operating</B> system decisions is used  and cost effectiveness  the technique of dynamic verification allows the construction of an <B>operating</B>
26 Q0 2151 59 0.1088267 Lucene_47
 showing the system in use is presented  finally  it is shown how other time-sharing <B>systems</B> may provide similar measuring facilities  cacm october  1971 nemeth  a  g  rovner  p  d  <B>operating</B> <B>systems</B>  multiprogramming <B>systems</B>  time-sharing <B>systems</B>  software measurement  user program measurement of software <B>systems</B> is followed by a description of a hardware and software scheme for measuring user
26 Q0 2558 60 0.108145796 Lucene_47
protection in programming languages linguistic <B>mechanisms</B> which can be used to protect one subprogram from another s malfunctioning are described  function-producing functions and various type-tagging schemes are considered  an attempt is made to distinguish between access limitation keys  access <B>control</B> authentication  secrecy 4.2 4.3 ca730103jb january 24  1978 4 45 pm 1458 4
26 Q0 2950 61 0.10754833 Lucene_47
 a framework for implementing flexible schedulers in real <B>operating</B> <B>systems</B>  the policy-driven scheduler  fabry  r  s  scheduling algorithms  scheduling models  priority  <B>operating</B> <B>systems</B> processor
26 Q0 1923 62 0.10646742 Lucene_47
pseudofiles an approach to system interfaces for high level languages using basic input output support facilities is described  it is shown that this technique can provide potentially inexpensive methods for programs to communicate with deeply embedded facilities such as command language processors  cacm march  1969 rosin  r  f  <B>operating</B> <B>systems</B>  interfaces input-output  high level languages
26 Q0 3137 63 0.10646742 Lucene_47
a methodology for the design of distributed information <B>systems</B> a macro model of a distributed information system in presented  the model describes the major costs of using an information system from the perspective of the end-user  the making evident the effect of various design and <B>operating</B> parameters on overall cost per transaction  the technique is illustrated by application to the design
26 Q0 2821 64 0.10610106 Lucene_47
cobol under <B>control</B> a sample set of cobol programming standards is offered  these standards constrain code to be developed in a  structured  form for both data and <B>control</B> structures  they do not require syntax beyond the existing cobol language and in fact utilize a typical limited subset the cost and time to produce and maintain large software <B>systems</B> that have been deployed in live
26 Q0 1226 65 0.10443892 Lucene_47
the organization of structured files a data file is an integral part of a data processing system  in many <B>systems</B>  the selection of an organization for the data within the file can be critical to the system s <B>operating</B> efficiency  this paper provides the <B>systems</B> designer with an information source which describes ten techniques that may be employed for organizing structured data
26 Q0 3141 66 0.10443892 Lucene_47
  rather than o n2   cacm may  1979 chang  e  roberts  r  decentralized algorithms  distributed <B>systems</B>  <B>operating</B> <B>systems</B> 4.32 4.35 5.25 5.32 ca790502 dh june 5  1979 2 35 pm 3141 5 3141 3141 5 3141 3141 5
26 Q0 2740 67 0.10348872 Lucene_47
 structuring of <B>operating</B> <B>systems</B>  the project management and the performance are discussed  too  the <B>operating</B> system is the first large one using the rc 4000 multiprogramming system  cacm july  1975a large semaphore based <B>operating</B> system the paper describes the internal structure of a large <B>operating</B> system as a set of cooperating sequential processes  the processes synchronize by means
26 Q0 2111 68 0.10347407 Lucene_47
spelling correction in <B>systems</B> programs several specialized techniques are shown for efficiently incorporating spelling correction algorithms in to compilers and <B>operating</B> <B>systems</B>  these include morgan  h  l  spelling correction  error correction  debugging  compilers  <B>operating</B> <B>systems</B> spelling correction is presented  by using <B>systems</B> which perform spelling correction  the number
26 Q0 2522 69 0.102566555 Lucene_47
 rodriguez-rosell  j  dupuy  j  p  working set  dispatcher  scheduler  time-sharing <B>systems</B>  resource allocation  software evaluation  <B>operating</B> <B>systems</B>  supervisory <B>systems</B> 4.31 4.32 ca730406 jb to the processes competing for them  recent research in time-sharing paging <B>systems</B> has developed the working
26 Q0 1962 70 0.10232907 Lucene_47
 to 200 samples per second   the functions can be used for a variety of purposes such as the <B>control</B> mathews  m  v  moore  f  r  computer music  music  real-time <B>control</B>  digital <B>control</B>  time functions  interactive software  hybrid <B>systems</B>  conductor program 3.44 3.8 7.3 ca701201 jb february 9  1978 4
26 Q0 2379 71 0.10046233 Lucene_47
 on the principles which guided the design  cacm march  1972 liskov  b  h  <B>operating</B> <B>systems</B>  system designthe design of the venus <B>operating</B> system the venus <B>operating</B> system is an experimental multiprogramming system which supports five or six concurrent users on a small computer  the system was produced architectural feature  the software exploits these features to define the <B>operating</B> system as simply
26 Q0 2876 72 0.10003304 Lucene_47
intentional resolution of privacy protection in database <B>systems</B> traditionally  privacy protection in database <B>systems</B> is understood to be the <B>control</B> over what information a given user can get from  the <B>control</B> over what a user is allowed to do with a piece of information supplied to him a certain amount of <B>control</B> over the internal behavior of users  programs which interact
26 Q0 3183 73 0.09940183 Lucene_47
 of eft  regulation and <B>control</B> of eft  and evaluating and monitoring eft <B>systems</B>  cacm december  1979policy  values  and eft research  anatomy of a research agenda there is an emerging recognition that eft <B>systems</B> have the potential to vastly alter the payment and fund transfer system in american  regulation and <B>control</B>  monitoring eft 2.11 2.3 3.52 3.53 3.80 ca791206 db february 25  1980 2 10 pm
26 Q0 1199 74 0.09840279 Lucene_47
a computer center simulation project today s computation centers are based on rapidly changing technologies of hardware and software <B>systems</B>  it is difficult  therefore  to base decisions on experience  in most instances  the benefits of comparable experience for a given problem situation processes  and <B>control</B> functions  experiments performed with this model  the results of the experiments
26 Q0 1432 75 0.09840279 Lucene_47
incorporation of nonstandard input output devices into fortran <B>systems</B> a fortran system may readily be modified to handle input output with nonstandard media on the same basis on which it handles the standard media  this is done by providing a character-handling subroutine suited to the nonstandard  this method was used to <B>control</B> output of alphanumeric information on a digital graph plotter  cacm may
26 Q0 1636 76 0.097526394 Lucene_47
invariant imbeding and the numerical integration of boundary-value problems for unstable linear <B>systems</B> of ordinary differential equations in such diverse areas as radiative transfer in planetary atmospheres and optimal guidance and <B>control</B>  two-point boundary-value problems for unstable <B>systems</B> arise  greatly complicating the numerical solution  an invariant imbeding technique is presented which
26 Q0 1462 77 0.09717739 Lucene_47
multilevel <B>operating</B> <B>systems</B> the basic software for all newer computers is built on the well-established need for standard <B>operating</B> <B>systems</B>  this implies that all applications-no matter how large  large applications require supervisory monitors which handle problems similar to those of the <B>operating</B> <B>systems</B>  but at a different level  sometimes  still a third or even a fourth such level is required
26 Q0 1236 78 0.09656405 Lucene_47
the smart automatic document retrieval system-an illustration a fully automatic document retrieval system <B>operating</B> on the ibm 7094 is described  the system is characterized by the fact that several to simulate an actual <B>operating</B> environment  but also to test the effectiveness of the various available as an example in the present report to illustrate <B>systems</B> operations and evaluation procedures  cacm
26 Q0 2184 79 0.09656405 Lucene_47
on the meaning of names in programming <B>systems</B> it is assumed that there is a similarity of function between the data names of a programming language and the file names of an <B>operating</B> system  the two functions are discussed in terms of the same basic concepts in order to identify the extent name list  value list  expression   cacm july  1971 fraser  a  g  file  <B>operating</B> system  programming
26 Q0 2777 80 0.09656405 Lucene_47
  1975 parnas  d  l  <B>operating</B> <B>systems</B>  co-<B>operating</B> processes process synchronization primitives 4.3
26 Q0 2624 81 0.09546097 Lucene_47
formal requirements for virtualizable third generation architectures virtual machine <B>systems</B> have been implemented on a limited number of third generation computer <B>systems</B>  e g  cp-67 on the ibm 360 67  from previous empirical studies  it is known that certain third generation computer <B>systems</B>  e g  goldberg  r  p  <B>operating</B> system  third generation architecture  sensitive instruction  formal
26 Q0 1463 82 0.094627574 Lucene_47
more on extensible machines one of the most salient characteristics of extensible machines  em  is the facility for providing system <B>control</B> over program-to-program and program-to-data linkage  e g   address connection   it is the intent of this paper to expand and clarify the remarks concerning on the em concepts  and to  finally  trace the employment of linkage <B>mechanisms</B> through various levels
26 Q0 1470 83 0.09434507 Lucene_47
the structure of programming languages the following are identified as major components of every programming language   1  the elementary program statement   2  <B>mechanisms</B> for linking elementary statements together   3  the means by which a program can obtain data inputs  several alternative forms the most convenient ways of structuring programs  organizing <B>systems</B>  and referencing data  cacm march
26 Q0 3064 84 0.09434507 Lucene_47
  1978 ulrich  e  simulation  discrete <B>systems</B> simulation  discrete event simulation  time-flow <B>mechanisms</B> 3.65 3.74 4.22 8.1 ca780908 dh january 29  1979 6 46 pm 2767 4 3064 2844 4 3064 2844 4 3064 2936
26 Q0 2438 85 0.09361161 Lucene_47
  multiprocessor <B>systems</B>  extensible <B>control</B> structures 4.1 4.2 4.22 4.3 4.32 5.24 ca731002 jb january 23a model and stack implementation of multiple environments many <B>control</B> and access environment structures require that storage for a procedure activation exist at times when <B>control</B> is not nested retention of that storage for durations not necessarily tied to <B>control</B> flow  the technique has
26 Q0 1033 86 0.09329906 Lucene_47
  the completely symbolic <B>operating</B> system includes display and entry of program and data  sequence <B>control</B>
26 Q0 3174 87 0.09125778 Lucene_47
password security  a case history this paper describes the history of the design of the password security scheme on a remotely accessed time-sharing system  the present design was the result of countering observed attempts to penetrate the system  the result is a compromise between extreme security and ease of use  cacm november  1979 morris  r  thompson  k  <B>operating</B> <B>systems</B>  passwords  computer
26 Q0 3014 88 0.091051966 Lucene_47
 with assertions that must be true at some time when <B>control</B> passes through the corresponding point the validity of program transformations and the correctness of continuously <B>operating</B> programs  cacm of programs  program verification  program transformation  continuously <B>operating</B> programs  5.24
26 Q0 2378 89 0.08984516 Lucene_47
  cacm march  1972 gaines  r  s  <B>operating</B> <B>systems</B>  supervisors  multiprogramming  time-sharingan <B>operating</B> system based on the concept of a supervisory computer an <B>operating</B> system which is organized as a small supervisor and a set of independent processes are described  the supervisor handles i o with external devices-the file and directory system-schedules active processes and manages
26 Q0 2597 90 0.08984516 Lucene_47
  1974 hoare  c  a  r  monitors  <B>operating</B> <B>systems</B>  scheduling  mutual exclusion  synchronization  systemmonitors  an <B>operating</B> system structuring concept this paper develops brinch-hansen s concept of a monitor as a method of structuring an <B>operating</B> system  it introduces a form of synchronization  describes a possible method of implementation in terms of semaphores and gives a suitable proof rule
26 Q0 2629 91 0.08984516 Lucene_47
the unix time-sharing system unix is a general-purpose  multi-user  interactive <B>operating</B> system for the digital equipment corporation pdp-11 40 and 11 45 computers  it offers a number of features seldom found even in larger <B>operating</B> <B>systems</B>  including   1  a hierarchical file system incorporating-sharing  <B>operating</B> system  file system  command language  pdp-11 4.30 4.32 ca740702 jb january 17  1978 1
26 Q0 2319 92 0.08870461 Lucene_47
 impact on the way we go about modularizing <B>operating</B> and computer <B>systems</B>  cacm july  1972 lynch  w<B>operating</B> system performance an overview of the current and future positions with respect to <B>operating</B> system performance is given  while a great deal of information and a large number of models interactions between the various subsystems of an <B>operating</B> system  an overall model of the total system must
26 Q0 2138 93 0.08706136 Lucene_47
bliss  a language for <B>systems</B> programming a language  bliss  is described  this language is designed so as to be especially suitable for use in writing production software <B>systems</B> for a specific machine  the pdp-10   compilers  <B>operating</B> <B>systems</B>  etc  prime design goals of the design of <B>systems</B> programs  a major feature which contributes to the realization of these goals is a mechanism
26 Q0 3028 94 0.08703244 Lucene_47
  paging  virtual storage  extra codes  compilers  <B>operating</B> <B>systems</B>  ferranti  manchester mark i  atlasthe manchester mark i and atlas  a his torical perspective in 30 years of computer design at manchester university two <B>systems</B> stand out  the mark i  developed over the period 1946-49  and the atlas  1955-62   this paper places each computer in its his torical context and then describes
26 Q0 3011 95 0.08626429 Lucene_47
 of management information <B>systems</B>  mis  bear little relation to the information <B>systems</B> currently in use by top the use of relatively unsophisticated applications  despite the unsophisticated nature of these <B>systems</B> practices where top management is supportive of computing and tends to <B>control</B> computing decisions and where department users have less <B>control</B> over design and implementation activities  finally
26 Q0 2482 96 0.086038664 Lucene_47
 allocation  <B>operating</B> <B>systems</B>  multiprogramming  hierarchical <B>systems</B> 4.30 4.32 ca730704 jb january <B>operating</B> system  for constructing appropriate mixtures and suggests appropriate subsystems for the most
26 Q0 2867 97 0.086038664 Lucene_47
modularization and hierarchy in a family of <B>operating</B> <B>systems</B> this paper describes the design philosophy used in the construction of a family of <B>operating</B> <B>systems</B>  it is shown that the concepts of module and level do not coincide in a hierarchy of functions  family members can share much software as a result of the implementation of run-time modules at the lowest system level  cacm may  1976
26 Q0 3023 98 0.08434525 Lucene_47
 the reasons and objectives for extending the architecture  it covers virtual storage  program <B>control</B>  data <B>systems</B>  architecture  instruction sets  virtual storage  error handling 6.0 6.21 ca780107 jb march
26 Q0 1728 99 0.08329491 Lucene_47
 storage  <B>operating</B> system simulation  <B>operating</B> <B>systems</B>  supervisor simulation  machine language are summarized from an empirical study directed at the measurement of program <B>operating</B> behavior in those multiprogramming <B>systems</B> in which programs are organized into fixed length pages  the data collected from allocated to executing programs  cacm july  1968 coffman  e  g  varian  l  c  paging <B>systems</B>  paging
26 Q0 2317 100 0.08329491 Lucene_47
 for some programming system functions  cacm july  1972 rosen  s  languages  <B>operating</B> <B>systems</B>  programmingprogramming <B>systems</B> and languages 1965-1975 in spite of impressive gains by pl i  fortran and cobol  in the <B>operating</B> system area all major computer manufacturers set out to produce very ambitious multiprogramming <B>systems</B>  and they all ran into similar problems  a number of university projects
*************Query 27*************************

27 Q0 2297 1 0.8124647 Lucene_47
a model of <B>memory</B> contention in a paging machine this paper is concerned with certain <B>aspects</B> of contention for main <B>memory</B> resources in a multiprogrammed computer system <B>operating</B> under demand  1972 oden  p  h  shedler  g  s  paging machines  demand paging  <B>operating</B> <B>systems</B> studies  queuing analysis  <B>memory</B> contention  <B>memory</B> <B>management</B> 4.32 ca720805 jb january 30  1978 9 50 am 1879 4 2297
27 Q0 2069 2 0.67279965 Lucene_47
comments on a paper by wallace and mason cacm april  1970 heess jr   w  f  page-on-demand  demand paging  time-sharing multiprogramming  markovian computer models  scheduling strategies  <B>operating</B> <B>systems</B>  <B>memory</B> <B>management</B> 2.44 4.32 4.39 6.20 6.21 ca700415 jb february 13  1978 2 36 pm 2069 5 2069 2069 5 2069 2069 5 2069
27 Q0 1752 3 0.48880258 Lucene_47
  time-sharing  <B>operating</B> <B>systems</B>  resource <B>management</B>  task scheduling  paging  system simulation  <B>memory</B> <B>management</B>  virtual memories 4.30 4.31 4.32 ca680504 jb february 23  1978 9 39 am 1751 5 1752resource <B>management</B> for a medium scale time-sharing <B>operating</B> system task scheduling and resource balancing for a medium size virtual <B>memory</B> paging machine are discussed in relation to a combined
27 Q0 2988 4 0.41511875 Lucene_47
<B>memory</B> <B>management</B> and response time this paper presents a computationally tractable methodology for including accurately the effects of finite <B>memory</B> size and workload <B>memory</B> requirements in queueing network models of computer <B>systems</B>  empirical analyses and analytic studies based on applying use nonpaged memories  cacm march  1977 brown  r  m  browne  j  c  chandy  k  m  <B>memory</B> <B>management</B>
27 Q0 2358 5 0.41186237 Lucene_47
the multics virtual <B>memory</B>  concepts and design as experience with use of on-line <B>operating</B> <B>systems</B>  segmented main <B>memory</B>  since the size of main <B>memory</B> on contemporary <B>systems</B> is rather limited  c  t  daley  r  c  <B>operating</B> system  multics  virtual <B>memory</B>  segmentation  information sharing  paging  <B>memory</B> <B>management</B>  <B>memory</B> hierarchy 4.30 4.31 4.32 ca720502 jb january 31  1978 11 24 am 1753 4
27 Q0 2902 6 0.38023743 Lucene_47
 <B>memory</B> <B>management</B>  dynamic storage allocation  garbage collection  list processing  <B>memory</B> allocation  <B>memory</B> <B>management</B>  programming techniques  simulation  simulation <B>memory</B> <B>management</B>  simulationdynamic <B>memory</B> allocation in computer simulation this paper investigates the performance of 35 dynamic <B>memory</B> allocation algorithms when used to service simulation programs as represented by 18 test
27 Q0 2319 7 0.37878832 Lucene_47
 be developed to be able to analyze and design the performance <B>aspects</B> of an <B>operating</B> system although impact on the way we go about modularizing <B>operating</B> and computer <B>systems</B>  cacm july  1972 lynch  w<B>operating</B> system performance an overview of the current and future positions with respect to <B>operating</B> system performance is given  while a great deal of information and a large number of models
27 Q0 2372 8 0.37575632 Lucene_47
 within today s languages and <B>operating</B> <B>systems</B>  cacm april  1972 conway  r  w  maxwell  w  l  morgan  h  l  security  privacy  access control confidentiality  <B>operating</B> <B>systems</B>  access <B>management</B>  data banks  <B>management</B> information <B>systems</B> 3.50 3.73 4.12 4.22 4.39 ca720401 jb january 31  1978 1 59 pmon the implementation of security measures in information <B>systems</B> the security of an information
27 Q0 3006 9 0.3666423 Lucene_47
anomalies with variable partition paging algorithms five types of anomalous behavior which may occur in paged virtual <B>memory</B> <B>operating</B> <B>systems</B> a redefined  one type of anomaly  for example  concerns the fact that  with certain reference strings and paging algorithms  an increase in mean <B>memory</B>  gupta  r  anomaly  <B>memory</B> <B>management</B>  program behavior  stack algorithms  virtual <B>memory</B>  working set
27 Q0 1892 10 0.3569568 Lucene_47
  markovian computer models  scheduling strategies  <B>operating</B> <B>systems</B>  <B>memory</B> <B>management</B> 2.44 4.32 4.39degree of multiprogramming in page-on-demand <B>systems</B> a simple stochastic model is described which <B>memory</B>  the degree of multiprogramming   drum traffic rates  and central processing unit utilization in page-on-demand  multiprogrammed  time-shared computer <B>systems</B>  the model preserves  as a key
27 Q0 1750 11 0.34699002 Lucene_47
 of the faster <B>memory</B>  cacm may  1968 fuchel  k  heller  s  multiple computer <B>systems</B>  extended core storage  multiprogrammed <B>operating</B> <B>systems</B>  multiprocessor <B>operating</B> <B>systems</B>  control data corporation 6600  <B>operating</B> system with ecs 4.30 4.32 ca680506 jb february 23  1978 9 27 am 1750 5 1750 1750 5 of large quantities of addressable  but not executable  fast random access <B>memory</B> to heighten
27 Q0 2374 12 0.33639982 Lucene_47
 in storage utilization and <B>operating</B> efficiency over fixed partitioning  cacm march  1972 coffman jr   e  g  ryan jr   t  a  storage partitioning  <B>memory</B> <B>management</B>  dynamic storage allocation  spacea study of storage partitioning using a mathematical model of locality both fixed and dynamic storage partitioning procedures are examined for use in multiprogramming <B>systems</B>  the storage requirement
27 Q0 3000 13 0.3322332 Lucene_47
 <B>aspects</B> of the construction and behavior of real programs  and some of their implications for the design of virtual <B>memory</B> <B>systems</B> are presented and discussed  cacm january  1977 batson  a  psegment sizes and lifetimes in algol 60 programs the characteristics of the virtual <B>memory</B> of <B>memory</B> requests and for their holding times  lifetimes   the results are presented in terms
27 Q0 2406 14 0.32684317 Lucene_47
 and physical <B>aspects</B> of data is increasingly apparent  such languages will be a key <B>systems</B>  as well as in advanced data <B>management</B> <B>systems</B> and distributed data bases  this paper reviews past work in the data definition language for describing both logical and physical <B>aspects</B> of data  applications <B>management</B> <B>systems</B>  file translation 3.51 3.70 3.73 4.29 4.82 ca731202 jb january 19  1978 2 58 pm 2155 4
27 Q0 2669 15 0.2995325 Lucene_47
 of the automatic <B>management</B> algorithm to produce a single  composite statement  the mean number of <B>memory</B>  program models  performance measurement  multilevel <B>memory</B> <B>systems</B>  virtual <B>memory</B>  associative <B>memory</B> automatically managed multilevel <B>memory</B> system requires a model of the patterns by which programs refer to the information stored in the <B>memory</B>  some recent experimental measurements on the multics virtual
27 Q0 2740 16 0.28637242 Lucene_47
 structuring of <B>operating</B> <B>systems</B>  the project <B>management</B> and the performance are discussed  too  the <B>operating</B> system is the first large one using the rc 4000 multiprogramming system  cacm july  1975a large semaphore based <B>operating</B> system the paper describes the internal structure of a large <B>operating</B> system as a set of cooperating sequential processes  the processes synchronize by means
27 Q0 3050 17 0.2796824 Lucene_47
<B>systems</B> design education  a gaming approach one of the problems facing managers of computer that the computer center must service  this paper presents a <B>management</B> game that allows the player choices and a simulated run of the center <B>operating</B> under his choices  cacm november  1978 lyons  n  system design  configuration  <B>management</B> game 2.43 2.44 ca781101 dh january 29  1979 11 43 am 2407 4 3050
27 Q0 3026 18 0.27291414 Lucene_47
 computer series  computer architecture  multiprocessing languages  data <B>management</B> <B>systems</B>  endthe evolution of the sperry univac 1100 series  a his tory  analysis  and projection the 1100 series <B>systems</B> are sperry univac s large-scale main frame computer <B>systems</B>  beginning with the 1107-speed register  or two operands from high-speed registers  the 1100 <B>operating</B> system is designed
27 Q0 1747 19 0.26416558 Lucene_47
 criteria  computer <B>systems</B>  computer <B>systems</B> design  input equipment  input equipment design  <B>operating</B> <B>systems</B>  <B>operating</B> <B>systems</B> design  multiprogramming  multiprogrammed <B>systems</B>  multiprogrammed systemthree criteria for designing computing <B>systems</B> to facilitate debugging the designer of a computing clock  the synchronization of parallel processes  protection in multiprogrammed <B>systems</B>
27 Q0 2379 20 0.2617648 Lucene_47
 on the principles which guided the design  cacm march  1972 liskov  b  h  <B>operating</B> <B>systems</B>  system designthe design of the venus <B>operating</B> system the venus <B>operating</B> system is an experimental architectural feature  the software exploits these features to define the <B>operating</B> system as simply <B>management</B>  deadlock 4.30 4.32 4.41 6.21 ca720302 jb january 31  1978 3 16 pm 1828 4 2379 1854 4 2379 1877
27 Q0 2864 21 0.25964248 Lucene_47
 and <B>memory</B> <B>management</B> in virtual <B>memory</B> <B>systems</B>  cacm may  1976 madison  a  w  batson  a  p  program behavior  <B>memory</B> <B>management</B>  locality 4.22 4.35 4.6 4.9 6.21 ca760507 jb january 4  1978 3 15 pm
27 Q0 1753 22 0.2594176 Lucene_47
virtual <B>memory</B>  processes  and sharing in multics some basic concepts involved in the design of the multics <B>operating</B> system are introduced  multics concepts of processes  address space  and virtual <B>memory</B> are defined and the use of paging and segmentation is explained  the means by which users may  dennis  j  b  virtual <B>memory</B>  information sharing  shared procedures  data sharing  dynamic linking
27 Q0 3028 23 0.25772002 Lucene_47
  paging  virtual storage  extra codes  compilers  <B>operating</B> <B>systems</B>  ferranti  manchester mark i  atlasthe manchester mark i and atlas  a his torical perspective in 30 years of computer design at manchester university two <B>systems</B> stand out  the mark i  developed over the period 1946-49  and the atlas-generation and store <B>management</B> have evolved in the progression from mark i to atlas  the wider impact
27 Q0 2624 24 0.24954376 Lucene_47
formal requirements for virtualizable third generation architectures virtual machine <B>systems</B> have been implemented on a limited number of third generation computer <B>systems</B>  e g  cp-67 on the ibm 360 67  from previous empirical studies  it is known that certain third generation computer <B>systems</B>  e g  goldberg  r  p  <B>operating</B> system  third generation architecture  sensitive instruction  formal
27 Q0 1751 25 0.24810682 Lucene_47
  multiprocessing  multiprogramming  <B>operating</B> <B>systems</B>  program behavior  program models  resource allocation of a general treatment of resource allocation in modern computer <B>systems</B> is an adequate model for program knowledge vital to the dynamic <B>management</B> of paged memories   process  and  working set  are shown to be manifestations of the same ongoing computational activity  then  processor demand  and  <B>memory</B>
27 Q0 2314 26 0.24320792 Lucene_47
 the requirements specified are applicable to the design of advanced programming <B>systems</B> for a wide range of applications  three <B>aspects</B> of programming <B>systems</B> are highlighted  good interactive facilitiesrequirements for advanced programming <B>systems</B> for list processing list processing <B>systems</B> should condition  the need for extended data forms  storage <B>management</B>  and extensibility are stressed
27 Q0 2622 27 0.24287371 Lucene_47
a user authentication scheme not requiring secrecy in the computer in many computer <B>operating</B> <B>systems</B> a user authenticates himself by entering a secret password known solely to himself and the system  in this paper a password scheme is presented which does not require secrecy in the computer  all <B>aspects</B> are discussed  cacm august  1974 evans  a  jr  kantrowitz  w  weiss  e  <B>operating</B> system security
27 Q0 3067 28 0.24151841 Lucene_47
  database referencing  <B>memory</B> <B>management</B>  optimal <B>memory</B> policies  paging  program behavior  program is a model for the entire class of demand-fetching <B>memory</B> policies that satisfy a resident-set inclusion property  a generalized optimal policy  gopt  is also defined  at its <B>operating</B> points demand curves showing swapping load as a function of <B>memory</B> usage are developed for gws and gopt
27 Q0 2502 29 0.23642774 Lucene_47
a comment on the practical <B>aspects</B> of computer science education cacm may  1973 estell  r  g  education  computer engineering  computer sciences curriculum  <B>systems</B> design 1.52 6.0 ca730518 jb january 23  1978 4 23 pm 2502 5 2502 2502 5 2502 2502 5 2502
27 Q0 2798 30 0.23500173 Lucene_47
analysis of interleaved <B>memory</B> <B>systems</B> using blockage buffers a model of interleaved <B>memory</B> <B>systems</B> burnett  g  j  coffman  e  g  jr  interleaved <B>memory</B> <B>systems</B>  modular <B>memory</B> <B>systems</B>  <B>memory</B> performance and data requests to the <B>memory</B> system  performance is measured by determining the distribution of the number of <B>memory</B> modules in operation during a <B>memory</B> cycle  an important observation from
27 Q0 2582 31 0.23360357 Lucene_47
 restructuring is described  the method is particularly suited to those <B>systems</B> where primary <B>memory</B>  a working set which does not contain the next <B>memory</B> reference  the data the method operates upon to restructure an interactive text editor and the file system module of an <B>operating</B> system have shown its ferrari  d  program restructuring  program segmentation  locality improvement  <B>memory</B> hierarchies
27 Q0 2311 32 0.23285262 Lucene_47
 developer are examined  cacm july  1972 benjamin  r  i  computing milieu  <B>management</B> data processing  hardware <B>systems</B>  software <B>systems</B>  <B>systems</B> development process  functional <B>systems</B>  <B>management</B> <B>systems</B> 2.0 3.50 4.0 6.20 ca720717 jb january 30  1978 11 22 am 2311 5 2311 2311 5 2311 2311 5 2311
27 Q0 2378 33 0.2239289 Lucene_47
  cacm march  1972 gaines  r  s  <B>operating</B> <B>systems</B>  supervisors  multiprogramming  time-sharingan <B>operating</B> system based on the concept of a supervisory computer an <B>operating</B> system which is organized as a small supervisor and a set of independent processes are described  the supervisor <B>memory</B>  handle errors  and provides a small set of primitive functions which it will execute
27 Q0 1901 34 0.22381522 Lucene_47
  cacm may  1969 belady  l  a  kuehner  c  j  space-sharing  storage allocation  <B>memory</B> allocation  storage <B>management</B>  <B>memory</B> <B>management</B>  program behavior  multiprogramming  computer system designdynamic space-sharing in computer <B>systems</B> a formalization of relationships between space-shading program behavior  and processor efficiency in computer <B>systems</B> is presented  concepts of value
27 Q0 3011 35 0.2225089 Lucene_47
<B>management</B> utilization of computers in american local governments traditional concepts of <B>management</B> information <B>systems</B>  mis  bear little relation to the information <B>systems</B> currently in use by top <B>management</B> in most us local governments  what exists is <B>management</B>-oriented computing  involving the use of relatively unsophisticated applications  despite the unsophisticated nature of these <B>systems</B>
27 Q0 1461 36 0.21934728 Lucene_47
discussion summary on <B>operating</B> <B>systems</B> cacm march  1966 ca660311 jb march 3  1978 1 26 pm 1461 5 1461 1461 5 1461 1461 5 1461
27 Q0 2481 37 0.21921912 Lucene_47
 and nonswapping buffer <B>management</B> policies  cacm july 1973 gelenbe  e  cache  virtual <B>memory</B>  lifetimethe distribution of a program in primary and fast buffer storage a virtual <B>memory</B> computer system with a fast buffer  cache  <B>memory</B> between primary <B>memory</B> and the central processing unit is considered  the optimal distribution of a program between the buffer and primary <B>memory</B> is studied using
27 Q0 2867 38 0.21706691 Lucene_47
modularization and hierarchy in a family of <B>operating</B> <B>systems</B> this paper describes the design philosophy used in the construction of a family of <B>operating</B> <B>systems</B>  it is shown that the concepts of module and level do not coincide in a hierarchy of functions  family members can share much software  virtual <B>memory</B> 4.0 4.30 4.35 ca760504 jb january 4  1978 3 33 pm 1828 4 2867 1854 4 2867 1877 4 2867
27 Q0 1810 39 0.21700008 Lucene_47
 under the conditions tested  even though it is <B>operating</B> across a <B>memory</B>-to-storage interface  a program into the available <B>memory</B> is discussed  measurements by brown et al  and by nelson become a normal part of most computing <B>systems</B>  cacm december  1969 sayre  d  paging  automatic paging  demand paging  folding  automatic folding  storage hierarchies  <B>memory</B> hierarchies  replacement
27 Q0 1728 40 0.21587957 Lucene_47
  dynamic program behavior  program behavior  virtual <B>memory</B> <B>systems</B>  single-level storage  one-level storage  <B>operating</B> system simulation  <B>operating</B> <B>systems</B>  supervisor simulation  machine language are summarized from an empirical study directed at the measurement of program <B>operating</B> behavior in those multiprogramming <B>systems</B> in which programs are organized into fixed length pages  the data collected from
27 Q0 2262 41 0.20768392 Lucene_47
garbage collection for virtual <B>memory</B> computer <B>systems</B> in list processing there is typically of this growth within a virtual <B>memory</B> computer system  proposes two new garbage collection techniques for virtual <B>memory</B> <B>systems</B>  and compares them with traditional methods by discussion and by simulation  cacm november  1972 baecker  h  d  garbage collection  virtual <B>memory</B>  list processing  paging
27 Q0 2577 42 0.20308807 Lucene_47
an on-site data <B>management</B> system application in field archaeology cacm november  1974 brown  j  a  werner  b  apl-plus  archaeology  koster prehistoric site data <B>management</B>  retrieval <B>systems</B> 3.36 3.70 3.73 3.89 ca741107 jb january 16  1978 10 15 am 2577 5 2577 2577 5 2577 2577 5 2577
27 Q0 2689 43 0.1981751 Lucene_47
a crt report generating system cacm january  1974 lucas  h  c  jr  report generation  automated <B>systems</B> design  data processing  <B>management</B> 3.50 4.12 4.22 ca740110 jb january 18  1978 1 40 pm 2689 5 2689 2689 5 2689 2689 5 2689
27 Q0 59 44 0.1981751 Lucene_47
survey of progress and trend of development and use of automatic data processing in business and <B>management</B> control <B>systems</B> of the federal government  as of december 1957-iii cacm september  1959 ca590910 jb march 22  1978 4 41 pm 59 5 59 59 5 59 59 5 59
27 Q0 3068 45 0.19684134 Lucene_47
a model for verification of data security in <B>operating</B> <B>systems</B> program verification applied <B>systems</B>  a precise definition of data security is developed here in terms of a general model for <B>operating</B> <B>systems</B>  this model is suitable as a basis for verifying many of those properties  d  <B>operating</B> <B>systems</B>  security  protection  program verification 4.35 5.24 ca780904 dh february 5
27 Q0 2681 46 0.19535977 Lucene_47
dynamic <B>memory</B> repacking a probabilistic model of a multiprogramming system is exercised in order to determine the conditions under which the dynamic repacking of main <B>memory</B> is beneficial  and the <B>operating</B> conditions that lead to improved system throughput through repacking are delineated  cacm march  1974 balkovich  e  chiu  w  presser  l  wood  r  dynamic <B>memory</B> repacking  <B>memory</B>
27 Q0 1959 47 0.19448933 Lucene_47
an interrupt based organization for <B>management</B> information <B>systems</B> a programming structure the new organization which is proposed for <B>management</B> information <B>systems</B>  cacm december  1970 morgan  h  l  <B>management</B> information <B>systems</B>  integrated data processing  supervisors  interrupts monitoring shared data base <B>systems</B>  the bases for this organization are a generalized interrupt structure
27 Q0 1725 48 0.19300513 Lucene_47
 of ordered retrieval of binary words from an associative <B>memory</B>  as described by lewin  is based columns of the <B>memory</B>  thus the circuits indicate whether the individual digit columns contain digits of both values  or of only one value  or contain no digits at all  i e  that the <B>memory</B> is empty considerably the number of <B>memory</B> accesses necessary to retrieve in order a number of distinct words from
27 Q0 2357 49 0.18944417 Lucene_47
mux  a simple approach to on-line computing an on-line system <B>operating</B> as part of a normal batch system for the cdc 6600 computer is described  the system  which required one man-year for initial for parts and fabrication  all <B>aspects</B> of the system are described  including design criteria  implementation effort  <B>operating</B> overhead  user reactions  remote terminals  <B>operating</B> system 3.79 3.89 4.39
27 Q0 1657 50 0.18557179 Lucene_47
implementation of the sharer2 time-sharing system a simple mechanism is described for the execution of part of a program with its own <B>memory</B> protection  this allows such a program to act as a suboperating system  an improved version of the sharer time-sharing system using this feature is described  cacm december  1968 harrison  m  c  <B>operating</B> system  <B>memory</B> protection  time-sharing
27 Q0 1912 51 0.18334033 Lucene_47
simulation of outpatient appointment <B>systems</B> an experimental computer program is described which simulates appointment <B>systems</B> employed by outpatient departments of hospitals  both major kinds of appointment <B>systems</B>-individual and block-can be simulated  the purpose of the simulator is to enable the user to evaluate the effectiveness of alternative appointment <B>systems</B> in a given clinical
27 Q0 2967 52 0.1826826 Lucene_47
 the associative processing of line drawings  apld  system utilizes a hardware associative <B>memory</B> with the software simulation illustrates the advantages of the hardware associative <B>memory</B> in three of hardware associative <B>memory</B> technology  namely input output and cost effectiveness  are also addressed  cacm may  1977 stillman  n  j  berra  p  b  associative <B>memory</B>  associative processor  content
27 Q0 2583 53 0.17966154 Lucene_47
guidelines for humanizing computerized information <B>systems</B>  a report from stanley house cacm november  1974 sterling  t  d  humanization  social implication  <B>management</B>  information <B>systems</B>  regulations  social and behavioral sciences  philosophy 1.5 2 3.3 3.4 3.5 ca741101 jb january 16  1978 10 53 am 2583 5 2583 2583 5 2583 2583 5 2583 3142 5 2583 2583 6 2583 3076 6 2583
27 Q0 3092 54 0.17950618 Lucene_47
 <B>systems</B> and programming resources consumed range as high as 75-80 percent in each category  however indicate that   1  maintenance and enhancement do consume much of the total resources of <B>systems</B> and programming groups   2  maintenance and enhancement tend to be viewed by <B>management</B> as at least  problems of a <B>management</B> orientation tend to be more significant than those of a technical orientation
27 Q0 2479 55 0.17500405 Lucene_47
 july  1973 mcfarlan  f  w  nolan  r  l  education  <B>management</B> information <B>systems</B>  information <B>systems</B> administration  information <B>systems</B> <B>management</B>  computer <B>management</B> 1.52 3.51 ca730707 jb january 23curriculum recommendations for graduate professional programs in information <B>systems</B>  recommended addendum on information <B>systems</B> administration an addendum to the report of the acm curriculum
27 Q0 2985 56 0.17312503 Lucene_47
effects of chargeout on user manager attitudes the relationship of in ternal pricing <B>systems</B> for computer services  chargeout <B>systems</B>  and user <B>management</B> attitudes about their computer-based information <B>systems</B> is investigated  evidence is provided that the relationship conforms to a general also indicate that the chargeout <B>systems</B> characteristic of advanced edp stage environments
27 Q0 2625 57 0.16897629 Lucene_47
  shared addresses  information sharing  <B>operating</B> <B>systems</B>  computer utility  segmentation  tagged  these inadequacies are traced to the lack of an efficient absolute address for objects in these <B>systems</B>  the direct uses a main <B>memory</B> hash table for obtaining a segment s location in main <B>memory</B> given its unique code  a computer using capability-based addressing may be substantially superior to present <B>systems</B>
27 Q0 2818 58 0.16701458 Lucene_47
interference in multiprocessor computer <B>systems</B> with interleaved <B>memory</B>  corrigendum  cacm november  1976 baskett  f  smith  a  j  ca761105 jb january 3  1978 3 18 pm 2818 5 2818 2818 5 2818 2818 5 2818
27 Q0 2017 59 0.16678338 Lucene_47
 <B>systems</B>  dynamic storage allocation  measurement of <B>systems</B> program behavior  performance evaluation  <B>memory</B> <B>management</B> 4.32 4.49 4.9 5.31 ca700804 jb february 10  1978 3 51 pm 1050 4 2017 1117 4 2017 <B>memory</B> machines  descriptions of the experimental sort programs and analysis of the performance
27 Q0 2852 60 0.16455884 Lucene_47
the technology of computer center <B>management</B>  a proposed course for graduate professional programs in computer science or in information <B>systems</B> mcfarlan and nolan have made a strong case for adding a course on information <B>systems</B> administration to the 13 courses proposed by the acm curriculum committee on computer education for <B>management</B> for graduate professional programs in information <B>systems</B>
27 Q0 2859 61 0.16100237 Lucene_47
interference in multiprocessor computer <B>systems</B> with interleaved <B>memory</B> this paper analyzes the <B>memory</B> interference caused by several processors simultaneously using several <B>memory</B> modules  exect for the relative degree of <B>memory</B> interference as the system size increases  the model of the limiting behavior are valid for a much larger class of models  including those more nearly like real <B>systems</B> that the simple
27 Q0 3112 62 0.16071075 Lucene_47
 <B>systems</B> lack this property because allocating a list cell from the heap may cause a garbage collection  cacm april  1978 baker  h  real-time  compacting garbage collection  list processing  virtual <B>memory</B>  file or database <B>management</B>  storage <B>management</B>  storage allocation  lisp  cdr-coding  reference
27 Q0 2621 63 0.16061506 Lucene_47
 to one-way ciphers derived from sannon codes  cacm august  1974 purdy  g  b  <B>operating</B> <B>systems</B>  time sharing <B>systems</B>  security  cryptography 4.35 ca740803 jb january 17  1978 10 10 am 2621 5 2621 2621a high security log-in procedure the protection of time sharing <B>systems</B> from unauthorized users is often achieved by the use of passwords  by using one-way ciphers to code the passwords  the risks
27 Q0 2198 64 0.16059531 Lucene_47
introduction to  feature analysis of generalized data base <B>management</B> <B>systems</B>  this paper <B>management</B> <B>systems</B>  this introduction gives a review of the current state of the art in these <B>systems</B> and discusses the differences and similarities between capabilities found in host language <B>systems</B> of the full report  cacm may  1971 codasyl <B>systems</B> committee data base <B>management</B> <B>systems</B>  programming
27 Q0 3153 65 0.16053562 Lucene_47
the control of response times in multi-class <B>systems</B> by <B>memory</B> allocations the possibility of giving different quality of service to jobs of different classes by regulating their <B>memory</B> allocation the main <B>memory</B> between two classes of jobs are considered  initially  a closed system consisting in an open system with external arrivals are studied  the object is to investigate the effect of the <B>memory</B>
27 Q0 1456 66 0.15937044 Lucene_47
storage and retrieval of <B>aspects</B> of meaning in directed graph structures an experimental system that uses lisp to make a conceptual dictionary is described  the dictionary associates with each english word the syntactic information  definitional material  and references to the contexts in which auxiliary <B>memory</B> as a continuous extension of core <B>memory</B>  cacm march  1966 simmons  r  f  ca660316 jb
27 Q0 84 67 0.15854008 Lucene_47
survey of progress and trend of development and use of automatic data processing in business and <B>management</B> control <B>systems</B> of the federal government  as of december 1957-ii  part 2 see ca590406  cacm may  1959 ca590502 jb march 22  1978 6 42 pm 84 5 84 84 5 84 84 5 84
27 Q0 86 68 0.15854008 Lucene_47
survey of progress and trend of development and use of automatic data processing in business and <B>management</B> control <B>systems</B> of the federal government  as of december 1957 cacm april  1959 controller general of the united states to the congress of the united states ca590406 jb march 22  1978 6 48 pm 86 5 86 86 5 86 86 5 86
27 Q0 1267 69 0.15769774 Lucene_47
performance of <B>systems</B> used for data transmission transfer rate of information bits -an asa tutorial standard information thruput as a characteristic of <B>systems</B> performance is discussed  this discussion includes the pertinent <B>aspects</B> of information transfer  of determination of transfer rate of information bits  trib   of residual errors  and of standard measurement conditions  the paper also
27 Q0 1541 70 0.15769774 Lucene_47
a language for modeling and simulating dynamic <B>systems</B> the general objective of this language is to facilitate both the modeling and experimental <B>aspects</B> of simulation studies  the ability to represent <B>systems</B> containing highly interactive processes is an essential feature  the nature of the language  and the role of the process concept  is presented by means of an extended example  cacm
27 Q0 417 71 0.15769774 Lucene_47
 <B>aspects</B> of computer <B>systems</B> involved in legal situations  cacm december  1962 freed  r  n  ca621222 jblegal implications of computer use this paper points out a variety of ways computer <B>systems</B> used in business and industry can be involved in legal entanglements and suggests that computer specialists have a responsibility to call for assistance in forestalling or minimizing those entanglements
27 Q0 1247 72 0.15510195 Lucene_47
an <B>operating</B> environment for dynamic-recursive computer programming <B>systems</B> presented in this paper is a brief nontechnical introduction to oedipus  a computer programming system which can serve as an <B>operating</B> environment for dynamic and or recursive programs and programming <B>systems</B>  the available services include dynamic allocation of storage for contiguous blocks of arbitrary size  input
27 Q0 2500 73 0.15458511 Lucene_47
 is to be maintained  a resource <B>management</B> program is described which uses linked lists along running as part of a large scale general purpose <B>operating</B> system  keeps resources relatively active  d  j  deadlock  resource allocation  scheduling  resource <B>management</B>  multiprogramming  time
27 Q0 3177 74 0.15231605 Lucene_47
 olutely no information about d  this technique enables the construction of robust key <B>management</B> schemes for cryptographic <B>systems</B> that can function securely and reliably even when misfortunes destroy shamir  a  cryptography  key <B>management</B>  interpolation 5.39 5.6 ca791105 db january 23  1980 11 48
27 Q0 2095 75 0.15018377 Lucene_47
measurements of segment size distributions of segment sizes measured under routine <B>operating</B> con ditions on a computer system which utilizes variable sized segments  the burroughs b5500 system  they should be relevant to the design of new computer <B>systems</B>  especially with respect  segmentation  segment sizes  page sizes  paging  resource allocation  <B>memory</B> allocation  core
27 Q0 1924 76 0.14534847 Lucene_47
organizing matrices and matrix operations for paged <B>memory</B> <B>systems</B> matrix representations and operations are examined for the purpose of minimizing the page faulting occurring in a paged <B>memory</B> algorithms  paged <B>memory</B> <B>systems</B>  virtual <B>memory</B> <B>systems</B>  array storage allocation  storage of page faults occurring when only a small part of the total matrix can be in main <B>memory</B> at one
27 Q0 2812 77 0.14528254 Lucene_47
computer-aided analysis and design of information <B>systems</B> this paper describes the use of computer-aided analysis for the design and development of an integrated financial <B>management</B> system  the statement of requirements was written in ads  accurately defined <B>systems</B>  and analyzed to the form necessary for use by the soda  <B>systems</B> optimization and design algorithm  program
27 Q0 1680 78 0.14253794 Lucene_47
 instruction  tutorial <B>systems</B>  programming  simulation  modeling  information retrieval <B>operating</B> 40  and the ibm 2250 display unit under <B>operating</B> system 360  adept is a cataloged program that controls the standard <B>operating</B> system by terminating and rescheduling itself automatically  relinquishing computer resources allocated to it  and surrendering control to the <B>operating</B> system to perform
27 Q0 320 79 0.14185666 Lucene_47
logic-structure tables logic tables are an excellent way of developing and expressing the logic required in procedures  operations  <B>systems</B> and circuits  a set of rules for writing and using logic tables is explained by means of some simple examples  then the logic structure of a vending machine to fully express and consider both the sequential and parallel <B>aspects</B> of logic  they can be compiled
27 Q0 1928 80 0.14154421 Lucene_47
 networks of large and active digital <B>systems</B> is described  essential objectives sought are improved activities  the passage of time is simulated in a precise  quantitative fashion and <B>systems</B> to be simulated may be combinations of synchronous and asynchronous logic  certain <B>aspects</B> of the techniques february  1969 ulrich  e  g  simulation  logical simulation  digital simulation  large <B>systems</B>
27 Q0 2868 81 0.14090121 Lucene_47
 to the <B>memory</B> hierarchy  these problems are discussed and a new solution is described  cacm may  1976 lampson  b  w  sturgis  h  e  <B>operating</B> system  protection  capabilities  layering domains  <B>memory</B>reflections on an <B>operating</B> system design the main features of a general purpose multiaccess <B>operating</B> system developed for the cdc 6400 at berkeley are presented  and its good and bad points
27 Q0 1708 82 0.14024411 Lucene_47
a note on the efficiency of a lisp computation in a paged machine the problem of the use of two levels of storage for programs is explored in the context of a lisp system which uses core <B>memory</B> as a buffer for a large virtual <B>memory</B> stored on a drum  details of timing are given for one particular problem  cacm august  1968 borrow  d  g  murphy  d  l  storage <B>management</B>  list processor
27 Q0 2668 83 0.1399918 Lucene_47
 for calculating page fault probability in a virtual <B>memory</B> system <B>operating</B> under demand paging with various <B>memory</B> sizes and replacement rules  a first order markov model of program behavior is assumed  and a representation of the system based on <B>memory</B> states  control states  and <B>memory</B> substates  replacement rules  cacm april  1974 franklin  m  a  gupta  r  k  virtual <B>memory</B>  demand paging  replacement
27 Q0 3025 84 0.13938105 Lucene_47
 the pdp-6  circa 1963  over five generations of implementations to presently include <B>systems</B> covering a price range of five to one  the origin and evolution of the hardware  <B>operating</B> system  and languages to time sharing computing <B>systems</B>  transferring hardware technology within dec  and elsewhere  and serving as a model for single user and timeshared interactive minicomputer microcomputer <B>systems</B>  cacm
27 Q0 1627 85 0.13872257 Lucene_47
application of level changing to a multilevel storage organization a technique for organizing the devices of a computer storage system is described  this technique  called the multilevel store  provides a means for economically satisfying the requirements for very large storage capacities of certain data <B>management</B> and information retrieval <B>systems</B>  the concept of level changing is introduced
27 Q0 2345 86 0.13850002 Lucene_47
  1972 ashenhurst  r  l  education  <B>management</B> <B>systems</B>  <B>systems</B> analysis  <B>management</B> information <B>systems</B>  information <B>systems</B> development  information analysis  system design 1.52 3.51 ca720515 jb januarycurriculum recommendations for graduate professional programs in information <B>systems</B> the need for education related to information <B>systems</B> in organizations is discussed  and a curriculum is proposed
27 Q0 2407 87 0.13848083 Lucene_47
  <B>management</B> <B>systems</B>  information <B>systems</B>  information analysis  system design  <B>systems</B> analysis 1.52curriculum recommendations for undergraduate programs in information <B>systems</B> the need for education related to information <B>systems</B> in organizations is discussed  and a curriculum is proposed for an undergraduate program  material necessary for such programs is identified  and courses incorporating
27 Q0 322 88 0.13767004 Lucene_47
operational compatibility of <B>systems</B>-conventions the general standards committee of the share organization has devoted considerable effort to the problem of <B>operating</B> a computer efficiently in view of the growing number of programming <B>systems</B> available  each of these programming <B>systems</B> has been coded to utilize a fixed set of hardware components without recognizing the fact that others may
27 Q0 2106 89 0.13729973 Lucene_47
computer education in a graduate school of <B>management</B> several years of experience have led to the belief that the creative design and evaluation of <B>management</B> information <B>systems</B> requires a thorough  simulation  machine language  <B>management</B> information <B>systems</B>  interpreters 1.52 3.51 4.13 4.21 <B>systems</B> can best be explained at the machine language level  any machine used for exposition should
27 Q0 3142 90 0.13729973 Lucene_47
 is indicated  while most <B>management</B> <B>systems</B> may be adequate  results of the survey raise concerns for instance   cacm may  1979 sterling  t  errors  <B>systems</B> errors  billing errors  <B>management</B> <B>systems</B> to errors-to a failure to correct them  what can be learned by designers of large <B>management</B> packages
27 Q0 1698 91 0.13641994 Lucene_47
  answers to these and similar questions are needed in certain <B>aspects</B> of <B>operating</B> system design  cacm september  1968 denning  p  j  statistical models for input-output  <B>operating</B> system design
27 Q0 1409 92 0.13514476 Lucene_47
nebula  a digital computer using a 20 mc glass delay line <B>memory</B> oregon state university has mc as <B>memory</B>  the design objectives as originally conceived in a special seminar were   1 easily modifiable hardware for basic research in computer <B>systems</B> design  an unusual arrangement of information within the 22 mc <B>memory</B> allows a simple interface with the 340 kc arithmetic unit  which
27 Q0 3127 93 0.13496995 Lucene_47
  sager  g  portability  real time  <B>operating</B> <B>systems</B>  minicomputer 3.80 4.30 4.35 ca790206 dh aprilthoth  a portable real-time <B>operating</B> system thoth isa real-time <B>operating</B> system which is designed to be portable over a large set of machines  it is currently running on two minicomputers with quite different architectures  both the system and application programs which use it are written
27 Q0 2308 94 0.13474615 Lucene_47
  cacm july  1972 sturman  g  m  urban <B>systems</B>  urban applications  data acquisition  data <B>management</B>  engineering analysis  information <B>systems</B> 3.23 3.39 3.53 3.72 3.82 3.89 ca720720 jb january 30
27 Q0 2181 95 0.13304423 Lucene_47
 education for <B>management</B>  supported by a national science foundation grant  is established to appraise for <B>management</B>  to provide the committee with material for its study of curricular needs  five regional courses  and curricula for students concentrating on computer-based information <B>systems</B> involved  preliminary to the committee s recommendations for improving computer education for <B>management</B>
27 Q0 2365 96 0.13255128 Lucene_47
 under an <B>operating</B> system which uses paging  cacm april  1972 moler  c  b  matrix algorithms  linear equations  fortran  paged <B>memory</B>  virtual <B>memory</B>  array processing 4.22 4.32 5.14 ca720408 jb
27 Q0 2424 97 0.1312964 Lucene_47
 be modest  cacm november  1973 fabry  r  s  <B>operating</B> <B>systems</B>  data security  fault tolerancedynamic verification of <B>operating</B> system decisions dynamic verification of a decision implies independent hardware and software  the dynamic verification of <B>operating</B> system decisions is used  and cost effectiveness  the technique of dynamic verification allows the construction of an <B>operating</B>
27 Q0 3090 98 0.13095737 Lucene_47
 <B>systems</B> fit the political economies of the groups that use them  cacm june  1978 kling  r  social impacts of computing  organizational impacts of computing  <B>management</B> information <B>systems</B>  sociology of computing  information <B>systems</B> and service integration  urban information <B>systems</B> 2.11 3.53 ca780607
27 Q0 2151 99 0.13078798 Lucene_47
 showing the system in use is presented  finally  it is shown how other time-sharing <B>systems</B> may provide similar measuring facilities  cacm october  1971 nemeth  a  g  rovner  p  d  <B>operating</B> <B>systems</B>  multiprogramming <B>systems</B>  time-sharing <B>systems</B>  software measurement  user program measurement of software <B>systems</B> is followed by a description of a hardware and software scheme for measuring user
27 Q0 2950 100 0.12925163 Lucene_47
 a framework for implementing flexible schedulers in real <B>operating</B> <B>systems</B>  the policy-driven scheduler  fabry  r  s  scheduling algorithms  scheduling models  priority  <B>operating</B> <B>systems</B> processor
*************Query 28*************************

28 Q0 2949 1 0.5362692 Lucene_47
 be implemented on <B>any</B> computer <B>network</B>  it is based on baran s  hot potato heuristic <B>routing</B> doctrine tajibnapis  w  d  distributed computer <B>network</B>  correctness proofs  computer <B>networks</B>  distributed control  <B>network</B> topology  <B>routing</B> problem in <B>networks</B>  distributed operating system  store and forward <B>information</B> about the <B>network</B> s topology  since nodes and links sometimes crash  a scheme is needed
28 Q0 3032 2 0.5097926 Lucene_47
 of a <B>network</B>  <B>algorithms</B> for accomplishing this delivery through a store-and-forward <B>packet</B> switching  to this list of <B>algorithms</B> we add  6  reverse path forwarding  a broadcast <B>routing</B> method which exploits <B>routing</B> procedures and data structures already available for <B>packet</B> switching  reverse path forwarding is a practical algorithm for broadcast <B>routing</B> in store-and-forward <B>packet</B> switching computer
28 Q0 2892 3 0.28479275 Lucene_47
  computer communication <B>networks</B>  interprocess communication  measurement  <B>packet</B> switching are presented and by extrapolation these measurements are <B>used</B> to anticipate overhead in a heavily loaded <B>network</B>  similar results are derived for a recently proposed <B>network</B> protocol and compared <B>am</B> 2892 5 2892 2892 5 2892 2892 5 2892
28 Q0 2890 4 0.23640275 Lucene_47
 analysis for a simple <B>network</B>  cacm january  1976 agnew  c  e  <B>routing</B> <B>algorithms</B>  adaptive <B>routing</B>on quadratic adaptive <B>routing</B> <B>algorithms</B> two analytic models of a store-and-forward communications <B>network</B> are constructed  one to find the optimal message <B>routing</B> and the other to illustrate of its current <B>routing</B> decision on the future state of the <B>network</B>  the form of the optimality
28 Q0 2849 5 0.16259404 Lucene_47
ethernet  distributed <B>packet</B> switching for local computer <B>networks</B> ethernet is a branching stations  the <B>packet</B> transport mechanism provided by ethernet has been <B>used</B> to build systems which can be viewed as either local computer <B>networks</B> or loosely coupled multiprocessors  an ethernet s shared  boggs  d  r  computer <B>networks</B>  <B>packet</B> switching  multiprocessing  distributed control  distributed
28 Q0 1928 6 0.1327875 Lucene_47
 described may be <B>used</B> for the simulation of <B>network</B> structures other than digital <B>networks</B>  cacmexclusive simulation of activity in digital <B>networks</B> a technique for simulating the detailed logic <B>networks</B> of large and active digital systems is described  essential objectives sought are improved in length  and a simulation procedure which deals effectively with <B>any</B> mixture of serial and simultaneous
28 Q0 3158 7 0.12609841 Lucene_47
secure personal computing in an insecure <B>network</B> a method for implementing secure personal computing in a <B>network</B> with one or more central facilities is proposed  the method employs a public-key encryption device and <B>hardware</B> keys  each user is responsible for his own security and need not rely confidential files in the central facility or transmit confidential data to other users on the <B>network</B>  cacm
28 Q0 2776 8 0.1253183 Lucene_47
 educational research <B>information</B> triad  inc   and the triangle universities computation center <B>network</B>computer <B>networks</B> in higher education  socio-economic-political factors this study presents the results of a nationwide survey of computer <B>networks</B> in higher education conducted during 1971-73  five major and 18 minor <B>networks</B> were identified  the five major <B>networks</B> included  the arpa net
28 Q0 3040 9 0.1232481 Lucene_47
  backtrack  combinatorial <B>algorithms</B>  constraint <B>networks</B>  constraint satisfaction  graph coloring  <B>network</B>synthesizing constraint expressions a constraint <B>network</B> representation is presented  a theory of consistency levels in such <B>networks</B> is formulated  which is related to problems of backtrack tree search efficiency  an algorithm is developed that can achieve <B>any</B> level of consistency desired
28 Q0 1695 10 0.11565545 Lucene_47
plexus-an on-line system for modeling neural <B>networks</B> a description is presented of plexus  a system which enables a user to construct and specify a neural <B>network</B>  to analyze the output data produced by the <B>network</B>  and to store and retrieve <B>networks</B> and data from a library  the system  operated analysis  discrete system simulation  library systems  modeling  <B>network</B> simulation  neural <B>networks</B>
28 Q0 1685 11 0.11493151 Lucene_47
gan  a system for generating and analyzing activity <B>networks</B> gan  a system for generating activity <B>networks</B>  is designed to save time in the preparation of activity <B>networks</B> and to deal conveniently with <B>network</B> programs  a defining description of a programming language designed for generating activity <B>network</B> from a set of standard <B>networks</B> is presented  also  a general idea of a language
28 Q0 2614 12 0.11085993 Lucene_47
arrow to precedence <B>network</B> transformation  h   algorithm a481  cacm august  1974 crandall  k  c  critical path  <B>networks</B>  precedence <B>networks</B> 3.23 5.40 ca740810 jb january 17  1978 9 37 <B>am</B> 2614 5 2614 2614 5 2614 2614 5 2614
28 Q0 1846 13 0.10764841 Lucene_47
on simulating <B>networks</B> of parallel processes in which simultaneous events may occur some computer are dealt with  the systems are assumed to be described as a <B>network</B> of interconnected sequential processes  briefly reviewed are the common techniques <B>used</B> to handle such simulations when  following this  the problem of <B>dealing</B> with simultaneous events in separate processes is introduced
28 Q0 2371 14 0.102728836 Lucene_47
 is extended so that it may be <B>used</B> between processes distributed throughout a computer <B>network</B>  the hypothetical application of the system to an existing <B>network</B> is discussed  cacm april  1972 walden  d  c  interprocess communication  time-sharing  computer <B>networks</B>  resource sharing 3.81 4.39 4.82 4.9a system for interprocess communication in a resource sharing computer <B>network</B> a system
28 Q0 2951 15 0.101684295 Lucene_47
dynamic response time prediction for computer <B>networks</B> if the ultimate aim of a computing <B>network</B> in participating in the vast store of resources available on a <B>network</B>  analytical  simulation response time monitor that is capable of providing comparative response time <B>information</B> for users wishing to process various computing applications at some <B>network</B> computing node  the research clearly
28 Q0 2515 16 0.1015199 Lucene_47
minimal event-node <B>network</B> of project precedence relations a procedure for constructing a minimal event-node <B>network</B> to represent a set of precedence relations without parallel activities is presented  a minimal event-node <B>network</B> is an event-node <B>network</B> in which both the number of nodes  produces event-node <B>networks</B> which are not minimal  since our procedure includes the set-covering problem
28 Q0 1611 17 0.099765465 Lucene_47
scheduling project <B>networks</B> some of the basic concepts and terminology of project networking are developed  the critical path algorithm incorporated in the c-e-<B>i</B>-r proprietary scheduling system ramps  resource allocation and multi-project scheduling  is described  the error detection and <B>network</B> february 28  1978 11 31 <B>am</B> 1611 4 1611 1611 4 1611 1295 5 1611 1611 5 1611 1611 5 1611 1611 5 1611 340 5
28 Q0 828 18 0.097072005 Lucene_47
incompressible flow <B>network</B> calculations a general method for the calculation of flows and pressures in fluid flow <B>networks</B> is presented  the method is applicable to computer use  cacm june  1963 cantrell  h  n  ca630621 jb march 14  1978 10 03 <B>am</B> 828 5 828 828 5 828 828 5 828
28 Q0 2401 19 0.093016386 Lucene_47
 to obtain single isolated elements  one for each pattern  is presented  this procedure may be <B>used</B> for counting patterns on a matrix  and a <B>hardware</B> implementation of the algorithm using large scale <B>any</B> pattern  regardless of the complexity of its configuration  problems regarding merging  an analogy with a neural <B>network</B> description  in terms of mcculloch-pitts  neurons  is presented  cacm
28 Q0 2274 20 0.089166686 Lucene_47
generating english discourse from semantic <B>networks</B> a system is described for generating english sentences from a form of semantic nets in which the nodes are word-sense meanings and the paths are primarily deep case relations  the grammar <B>used</B> by the system is in the form of a <B>network</B> that imposes  the generation algorithm uses the <B>information</B> in the semantic <B>network</B> to select appropriate generation paths
28 Q0 2900 21 0.08551325 Lucene_47
some theorems to aid in solving the file allocation problem the file allocation problem-<B>i</B> e  the problem of finding the optimal set of <B>network</B> sites at which to locate copies of a file-is known  cacm november  1977 grapa  e  belford  g  g  file allocation  computer <B>networks</B>  distributed data management 4.33 ca771116 jb december 27  1977 8 45 <B>am</B> 2900 5 2900 2900 5 2900 2900 5 2900
28 Q0 1723 22 0.08256957 Lucene_47
computer construction of project <B>networks</B> project <B>networks</B> are <B>used</B> in pert and cpm  an algorithm is given for constructing project <B>networks</B> directly from the project precedence relations ii for the ibm 7094  cacm july  1968 fisher  a  c  liebman  j  s  nemhauser  g  l  project <B>networks</B>  pert  cpm  topological ordering  <B>network</B> construction by computer 5.32 ca680706 jb february 22
28 Q0 2289 23 0.07822182 Lucene_47
 is the determination of <B>algorithms</B> that exploit the possibilities for parallelism  especially for problems whose solutions appear to be inherently serial  in <B>particular</B>  several parallelized <B>algorithms</B> applications to wire <B>routing</B>  pert chart analysis  and the analysis of many types of <B>networks</B>  these <B>algorithms</B> exhibit a computation time that in many cases grows at a rate not exceeding log2 n  where n
28 Q0 2197 24 0.07820099 Lucene_47
 computing <B>networks</B>  one such <B>network</B> has been constructed in the san francisco bay area by stanford university  this paper reports upon the lessons learned from the operation of the <B>network</B> over the past development  educational computing  <B>network</B> computing  regional computing <B>networks</B>  remote computingthe merit of regional computing <B>networks</B> one of the suggested means for stimulating the spread
28 Q0 1034 25 0.07511394 Lucene_47
 system <B>changes</B> throughout its lifetime  the analysis is geared to determining workload  relationships and storage characteristics of documents in the <B>information</B> <B>network</B> automatically  cacm july  1964
28 Q0 2969 26 0.07286387 Lucene_47
optimal program and data locations in computer <B>networks</B> an optimization procedure for the allocation of program and data files in a computer <B>network</B> is presented  this algorithm takes into account the dependencies between files and programs such as occur in real heterogeneous computer <B>networks</B> and a possible application of the model  cacm may  1977 morgan  h  l  levin  k  d  computer <B>networks</B>
28 Q0 616 27 0.0718934 Lucene_47
an <B>information</B> algebra - phase <B>i</B> report-language structure group of the codasyl development  on a mathematical model called  an <B>information</B> algebra  developed primarily by r  bosak  it is hoped that this report will be read  a  with avid <B>interest</B> by programming language designers and implementors  and all those <B>interested</B> in developing a theoretical approach to data processing   b  with <B>interest</B>
28 Q0 1261 28 0.07111666 Lucene_47
modeling and simulation of digital <B>networks</B> the simulation of digital <B>networks</B> on a digital  the digital <B>network</B> is modeled as a set of time-dependent or time-independent boolean transformations  each transformation describing the input-output relationship of a model element comprising the <B>network</B> mode  the simplicity of utilizing the fortran iv programming system as a digital <B>network</B> simulator
28 Q0 2948 29 0.070235536 Lucene_47
 of terminals of various types  the overall system design is presented along with the <B>algorithms</B> <B>used</B>  error correction  multiplexing  local echoing  communication system  <B>network</B> 3.81 4.31 ca770704 jb december 28  1977 11 49 <B>am</B> 2948 5 2948 2948 5 2948 2948 5 2948
28 Q0 2046 30 0.06856124 Lucene_47
   a prompting service which supplies such <B>information</B> is not a satisfactory solution  activities in data representation will often be needed as a result of <B>changes</B> in query  update  and report traffic and natural growth in the types of stored <B>information</B>  existing noninferential  formatted data systems provide users with tree-structured files or slightly more general <B>network</B> models of the data
28 Q0 2572 31 0.06772361 Lucene_47
 december  1974 press  l  <B>i</B>  community <B>information</B> utilities  social implications  public policy 2.1 2.3arguments for a moratorium on the construction of a community <B>information</B> utility in this article of computerized community <B>information</B> utilities  before accepting the inevitability and desirability of this or <B>any</B> technology  we should   1  be sure of the feasibility  internally and externally
28 Q0 441 32 0.067064226 Lucene_47
 the procedure can be adapted to <B>any</B> machine  it is discussed in terms of the 7090  a pert <B>network</B> of 30,000topological sorting of large <B>networks</B> topological sorting is a procedure required for many problems involving analysis of <B>networks</B>  an example of one such problem is pert  the present paper presents a very general method for obtaining topological order  it permits treatment of larger <B>networks</B> than
28 Q0 2396 33 0.064889155 Lucene_47
  based on a semantic memory <B>network</B> like that of quillian s tlc  muse  from a model to understand and special purpose rules  the  relational triple  notation <B>used</B> during interpretation of input to demonstrate how the model interprets text  resolves ambiguities  adds <B>information</B> to memory  generalizes from examples and performs various actions  cacm january  1972 mccalla  g  <B>i</B>  sampson  j  r  natural
28 Q0 2402 34 0.064018644 Lucene_47
 building  <B>i</B> e  the use of chemical <B>information</B> to frame  structural hypotheses  which can encourages the development of <B>algorithms</B> adapted to this environment  pictorial pattern recognition recognition <B>algorithms</B> is hindered by the fact that the cross-correlation between a model demonstrates that this <B>information</B> can be the basis of a technique for structure determination that can make
28 Q0 1181 35 0.06397633 Lucene_47
 requires almost no specialized equipment and uses <B>any</B> ordinary telephone on a  callup  basis  present applications include cardiac-output calculations  <B>radio</B>-activity tracer studies and neurophysiology time-sequence studies of nerve impulses  cacm october  1965 neilsen  <B>i</B>  r  ca651014 jb march 6  1978
28 Q0 1844 36 0.063035846 Lucene_47
 terminal  a crosspoint switching <B>network</B> allows <B>any</B> such disk drive to be connected to <B>any</B> computer the size and power of the machines <B>used</B> and the computation requirements of the <B>particular</B> mix system if compatible computers are <B>used</B>  cacm october  1969 baskin  h  b  horowitz  e  b  tennison  r  d
28 Q0 3133 37 0.06282745 Lucene_47
logic and semantic <B>networks</B> an extended form of semantic <B>network</B> is defined  which can be regarded  the extended semantic <B>network</B> is provided with a precise semantics  inference rules  and a procedural interpretation  on the other hand  by regarding semantic <B>networks</B> as an abstract data structure  a  kowalski  r  logic  semantic <B>networks</B>  theorem-proving  indexing  resolution  deduction  logic programming
28 Q0 3164 38 0.06192444 Lucene_47
 of actions  two pad <B>algorithms</B> are presented  one uses a simple path matrix representation is the expected number of nodes reachable along paths from <B>any</B> given node  cacm september  1979 hansen  w  list processing  data structures  topological sort  acyclic digraph  database integrity  <B>network</B>  deadlock 4.34 5.32 4.33 ca790905 db january 14  1980 11 56 <B>am</B> 3164 4 3164 1712 5 3164 3164 5 3164
28 Q0 2712 39 0.060719896 Lucene_47
horner s rule for the evaluation of general closed queueing <B>networks</B> the solution of separable closed queueing <B>networks</B> requires the evaluation of homogeneous multinomial expressions  the number of terms in those expressions grows combinatorially with the size of  the <B>network</B> such that a direct constant is evaluated  cacm october  1975 reiser  m  kobayashi  h  queueing <B>networks</B>  queueing theory
28 Q0 367 40 0.060526352 Lucene_47
topological ordering of a list of randomly-numbered elements of a <B>network</B> a <B>network</B> of directed line segments free of circular elements is assumed  the lines are identified by their terminal nodes in numeric order  a simple technique can be <B>used</B> to create at high speed a list in topological order  cacm april  1961 lasser  d  j  ca610401 jb march 17  1978 12 17 <B>am</B> 1050 5 367 1226 5 367 367 5 367 367
28 Q0 1989 41 0.05990156 Lucene_47
transition <B>network</B> grammars for natural language analysis the use of augmented transition <B>network</B> associated with the arcs of the grammar <B>network</B> allow for the reordering  restructuring  and copying rule out meaningless analyses and take advantage of semantic <B>information</B> to guide the parsing by examples  an implementation of an experimental parsing system for transition <B>network</B> grammars is briefly
28 Q0 2380 42 0.058586523 Lucene_47
 on dec pdp-10 augmented by special paging <B>hardware</B> developed at bbn  this report specifies a set of goals which are important for <B>any</B> time sharing system  it describes how the tenex design virtual machine  intimate terminal interaction  comprehensive uniform file and <B>i</B> o capabilities to achieve a system operational within six months of <B>hardware</B> checkout  tenex has met its major goals
28 Q0 383 43 0.0574065 Lucene_47
on finding minimum routes in a <B>network</B> with turn penalties cacm february  1961 caldwell  t  ca610215 jb march 17  1978 12 49 <B>am</B> 383 5 383 383 5 383 383 5 383
28 Q0 1135 44 0.05502541 Lucene_47
 complex applications  in terms of tables of control expressions which express only <B>information</B> characteristic of the <B>particular</B> application  furthermore local <B>changes</B> of a process  e g  <B>changes</B> to emphasizing formal  <B>i</B> e   contents-independent  syntactical definitions  it relies exclusively  a  ca640208 jb march 10  1978 4 08 <B>am</B> 1135 4 1135 1136 4 1135 493 4 1135 2710 4 1135 2765 4 1135
28 Q0 1623 45 0.052760456 Lucene_47
 and utilized practically every command  in <B>particular</B>  it made extensive use of the part command engineering problem  although readers may be <B>interested</B> in the problem because it is stated in a general  mathematical  sense and could be of <B>interest</B> in areas other than circuit analysis  cacm march  1967
28 Q0 3059 46 0.05274872 Lucene_47
  multiprogramming  parallel processing  queueing <B>network</B> models  multiprocessing of computation and <B>i</B> o 4.32models for parallel processing within programs  application to cpu <B>i</B> o and <B>i</B> o <B>i</B> o overlap system are developed in this paper  the solution technique is developed by <B>network</B> decomposition  the models are formulated in terms of cpu <B>i</B> o and <B>i</B> o <B>i</B> o overlap and applied to the analysis
28 Q0 1572 47 0.05238152 Lucene_47
 an appropriate <B>hardware</B> configuration for these systems  but appropriate software adjustments must be made  unfortunately  these systems often do not respond to <B>changes</B> in the manner that intuition is described in this paper  the resulting model has a general purpose design and can be <B>used</B> to study a variety of time-sharing systems  it can also be <B>used</B> to assist in the design and development of new
28 Q0 944 48 0.052017104 Lucene_47
  may be <B>used</B> to construct numeric  alphabetic or alphanumeric trees  such trees have <B>information</B> where the quantity  word length and distribution of stored <B>information</B> is not known a priori  or <B>changes</B> rapidly during the processing  the purpose of this paper is to examine the storage and search properties is available  of prime <B>interest</B> is the application where a symbol table  dictionary or similar
28 Q0 1890 49 0.04982141 Lucene_47
simulation of traffic flows in a <B>network</B> a computer simulation program which deals with traffic flows in the <B>network</B> of a large area is described  each road is segmented into blocks of several ten-meter lengths and is represented by a bidirectional list in computer memory  the movement of cars  <B>i</B> e <B>network</B> traffic control  traffic density  intersection  signal setting  vehicle  road <B>network</B>  list
28 Q0 2973 50 0.04918823 Lucene_47
sorting on a mesh-connected parallel computer two <B>algorithms</B> are presented for sorting n 2 elements on an n x n mesh-connected processor array that require o n  <B>routing</B> and comparison steps  the best previous algorithm takes time o n log n   the <B>algorithms</B> of this paper are shown to be optimal april  1977 thompson  c  d  kung  h  t  parallel computer  parallel sorting  parallel merge  <B>routing</B>
28 Q0 1867 51 0.04782026 Lucene_47
on the expected lengths of sequences generated in sorting by replacement selecting in the replacement-selecting technique of sorting  one is <B>interested</B> in the ratio l j  of the expected length of the j-th sequence generated by the technique to the number of memory cells <B>used</B>  using complex-variable <B>changes</B> of l j -2 is 2.6662  cacm july  1969 hooker  w  w  replacement selecting  sorting  sequence
28 Q0 397 52 0.047473457 Lucene_47
a card format for reference files in <B>information</B> processing this paper proposes a card format suitable for a variety of reference files in <B>information</B> processing  an 80-column ibm card is divided number  and the kind  major <B>interest</B>  and source of the reference  the identification also provides terms  <B>hardware</B> terms  equipment  machine systems  abbreviations  etc   it is suitable
28 Q0 2568 53 0.046630133 Lucene_47
 be presented in the terminology of classical <B>network</B> theory  one such formulation is  given a nondirected <B>network</B>  partition its nodes into a minimal number of subsets such that no two members of the same extension of the previous work is the introduction of variable length examinations where w <B>i</B>  is the number of periods for exam <B>i</B>  the object of this paper is to generalize the definition of largest
28 Q0 2581 54 0.046122726 Lucene_47
  these local structures are <B>used</B> as  islands of reliability  to guide the search for more highly garbled words  speech understanding  augmented transition <B>network</B>  local parsing 3.42 3.65 3.69 ca741103 jb january 16  1978 10 41 <B>am</B> 2581 4 2581 2739 4 2581 2795 4 2581 2921 4 2581 3087 4 2581 1989 5 2581 2581 5
28 Q0 2311 55 0.04601754 Lucene_47
a generational perspective of <B>information</B> system development system development is categorized from developer are examined  cacm july  1972 benjamin  r  <B>i</B>  computing milieu  management data processing  <B>hardware</B> systems  software systems  systems development process  functional systems  management systems 2.0 3.50 4.0 6.20 ca720717 jb january 30  1978 11 22 <B>am</B> 2311 5 2311 2311 5 2311 2311 5 2311
28 Q0 1769 56 0.04487413 Lucene_47
 these barriers is the universal need for processing <B>information</B>  ever more urgent as the greater part of human work activity <B>changes</B> from production to service  computer developments in <B>hardware</B>the expanding world of computers the onward sweep of automatic processing of <B>information</B> is impeded  forecast  survey  introduction 1.0 1.3 2.1 3.24 4.0 6.20 6.30 ca680401 jb february 23  1978 11 36 <B>am</B>
28 Q0 2833 57 0.043558612 Lucene_47
 a heap  and does not require the programmer to give <B>any</B> indication that <B>particular</B> items are no longer are proposed  the <B>algorithms</B> are designed to work well in systems which use multiple levels of storage file stores <B>changes</B> to reference counts  and a multiple reference table stores the count for items management  garbage collection  lisp 4.19 ca760906 jb january 4  1978 8 58 <B>am</B> 1708 4 2833 1781 4 2833 1826
28 Q0 1856 58 0.04283487 Lucene_47
 for adding the additional <B>information</B> this process requires to actually comprehend text of <B>any</B> <B>particular</B> kind  the memory structure and comprehension process of tlc allow new factual assertions  this memory is a  semantic <B>network</B>  representing factual assertions about the world  the program also creates
28 Q0 2445 59 0.042791042 Lucene_47
<B>routing</B> problem  algorithm a456  cacm september  1973 fencl  z  <B>routing</B> problem  shortest path  traveling salesman problem  hamiltonian circuit 5.40 ca730910 jb january 23  1978 8 47 <B>am</B> 2445 5 2445 2445 5 2445 2445 5 2445
28 Q0 1688 60 0.040980875 Lucene_47
netflow  algorithm 248  h   cacm september  1968 henderson  j  h  capacitated <B>network</B>  linear programming  minimum-cost flow  <B>network</B> flow  out-of-kilter 5.32 5.41 ca680913 jb february 21  19784 31 pm 1688 5 1688 1688 5 1688 1688 5 1688
28 Q0 1601 61 0.0398636 Lucene_47
 are superior to standard <B>algorithms</B>  cacm may  1967 shedler  g  s  ca670505 jb february 28  1978 10 44 <B>am</B>  several approximations to a solution of an equation  the s8everal approximations obtained in <B>any</B> iteration are computationally independent  making the methods of <B>interest</B> in a parallel processing environment  convergence is insured by extracting the  best <B>information</B>  at each iteration  several
28 Q0 1612 62 0.038709544 Lucene_47
top-to-bottom parsing rehabilitated  this note is concerned with the efficiency of the top-to-bottom parsing algorithm as <B>used</B> in connection with programming language grammars  it is shown of the productions defining the grammar  the essential weakness of the method is in <B>dealing</B>  cacm april  1967 brooker  r  a  ca670403 jb february 28  1978 11 32 <B>am</B> 1612 4 1612 1781 4 1612 1945
28 Q0 2424 63 0.03837323 Lucene_47
 independent <B>hardware</B> and software  the dynamic verification of operating system decisions is <B>used</B> to reinforce each other  on prime  dynamic verification is <B>used</B> to ensure that one user s <B>information</B> cannot become available to another user gratuitously even in the presence of a single <B>hardware</B> system which does not make certain decisions improperly even in the presence of a single <B>hardware</B>
28 Q0 1704 64 0.038271 Lucene_47
minimum excess cost curve  algorithm 217  h   cacm august  1968 muth  j  f  critical path scheduling  pert  cost time tradeoffs  <B>network</B> flows 3.59 5.41 ca680810 jb february 22  1978 9 52 <B>am</B> 1704 5 1704 1704 5 1704 1704 5 1704
28 Q0 2327 65 0.0379509 Lucene_47
 of how the brain processes <B>information</B>  cacm july  1972 arbib  m  a  automata theory  brain theory  <B>network</B> complexity  resolution of redundancy of potential command  frog visual system  reticular
28 Q0 1397 66 0.03761167 Lucene_47
 on symbolic and algebraic manipulation brought together over four hundred people <B>interested</B> in programming  and in <B>algorithms</B> for their implementation  twenty-eight papers were presented  followed by a lively panel discussion of future directions  evening meetings were arranged for several <B>interest</B> groups  the conference was sponsored by the acm special <B>interest</B> committee on symbolic and algebraic
28 Q0 3134 67 0.037404608 Lucene_47
the use of normal multiplication tables for <B>information</B> storage and retrieval this paper describes a method for the organization and retrieval of attribute based <B>information</B> systems  using the normal multiplication table as a directory for the <B>information</B> system  <B>algorithms</B> for the organization requesting a group of <B>information</B> items  all of which possess a <B>particular</B> set of attributes  and possibly
28 Q0 1516 68 0.037175927 Lucene_47
automatic data compression the  <B>information</B> explosion  noted in recent years makes it essential that storage requirements for all <B>information</B> be kept to a minimum  a fully automatic and rapid three-part compressor which can be <B>used</B> with  <B>any</B>  body of <B>information</B> to greatly reduce slow external  anpak for the automatic compression of  <B>any</B>  <B>information</B>  and iopak for further compression
28 Q0 2630 69 0.03675636 Lucene_47
on computing sets of shortest paths in a graph two <B>algorithms</B> are presented that construct the k shortest paths between every pair of vertices in a directed graph  these <B>algorithms</B> generalize the floyd algorithm and the dantzig algorithm for finding the shortest path between every pair of vertices in a directed graph  cacm june  1974 minieka  e  graph  <B>network</B>  shortest path  algorithm 5.32
28 Q0 1768 70 0.0364401 Lucene_47
a global parser for context-free phrase structure grammars an algorithm for analyzing <B>any</B> context-free phrase structure grammar and for generating a program which can then parse <B>any</B> sentence  such as minimum lengths of n-derivable strings and possible prefixes  are given and may be of <B>interest</B> apart from their application in this <B>particular</B> context  cacm april  1968 unger  s  h  parser  syntax-directed
28 Q0 1165 71 0.036268447 Lucene_47
 without necessitating <B>changes</B> in the rca 301 object code  execution rates are considerably better than on the spectra 70 45  the emulator makes use of both <B>hardware</B> micro-program routines and software routines to accomplish its function  cacm december  1965 benjamin  r  <B>i</B>  ca651204 jb march 6  1978 4 15
28 Q0 3038 72 0.03611711 Lucene_47
using encryption for authentication in large <B>networks</B> of computers use of encryption to achieve authenticated communication in computer <B>networks</B> is discussed  example protocols are presented <B>algorithms</B> are considered as the basis for protocols  cacm december  1978 needham  r  schroeder  m  encryption  security  authentication  <B>networks</B>  protocols  public-key cryptosystems  data encryption
28 Q0 2002 73 0.036115218 Lucene_47
 is <B>hardware</B>-independent and has been implemented on a variety of installations  of different attributes of the plot  this enables plots of <B>any</B> complexity to be constructed by adding or replacing such that the user could supply the minimum of <B>information</B>  and it should be fully integrable with user s program and other effects  cacm september  1970 hirschsoln  <B>i</B>  computer graphics  data potting  data display
28 Q0 1906 74 0.03576148 Lucene_47
 <B>routing</B>-typically  down from the upper pin  through a via  and horizontally to the lower pin  from the top  a virtual aperture  <B>i</B> e  a long horizontal slit  is stepped down the board  the planned <B>routing</B>automated printed circuit <B>routing</B> with a stepping aperture a computer program for <B>routing</B> and to the problem of obtaining 100 percent interconnect are also discussed  cacm may  1969 lass  s  <B>routing</B>
28 Q0 2894 75 0.03564299 Lucene_47
 assessment of computer performance  instead of the more frequently <B>used</B> in ternal system measurement techniques  the nbs <B>network</B> measurement system is employed as the external measurement tool model <B>network</B> measurement system  measures  figure-of-merit  2.4 4.6 6.2 ca771206 jb december 22
28 Q0 3070 76 0.03564299 Lucene_47
 computer system  discrete-event simulation is <B>used</B> to model the arrival and activation of jobs  and a central-server queueing <B>network</B> models the use of system processors  the accuracy and efficiency  h  performance evaluation  simulation  queueing <B>network</B> models  central server model 4.32 4.35 8.1
28 Q0 2306 77 0.03496029 Lucene_47
ancient babylonian <B>algorithms</B> the early origins of mathematics are discussed  emphasizing those aspects which seem to be of greatest <B>interest</B> from the standpoint of computer science  a number of old babylonian tablets  many of which have never before been translated into english  are quoted  cacm  sorting 1.2 ca720722 jb january 30  1978 10 50 <B>am</B> 2306 5 2306 2306 5 2306 2306 5 2306
28 Q0 1745 78 0.0346655 Lucene_47
  1968 dennis  j  b  <B>information</B> <B>networks</B>  <B>information</B> systems  computing and free enterprise in creating the envisioned <B>information</B> service industry is dependent upon three accomplishments   1  the restructuring of our <B>information</B> processing industry so that a clear division of costs is made among computing  communications  and the development of <B>information</B> services   2  the wide use
28 Q0 1526 79 0.034649953 Lucene_47
multiprogramming under a page on demand strategy a model of multiprogramming for a <B>particular</B> computer system using a page on demand strategy is developed  analysis of this model is <B>used</B> to predict arising from an interactive time sharing environment  the effect of several <B>hardware</B> modifications is also analyzed  a parameter  readily calculated from the <B>hardware</B> characteristics and the program
28 Q0 595 80 0.03418035 Lucene_47
  they are the syntax of cobol  the use of such syntax in solving <B>any</B> given problem  and programming concepts  it is generally accepted that some knowledge of the <B>hardware</B> and computer logic must be possessed the <B>hardware</B> and logic for that computer for which he will write cobol programs  unfortunately  difficult to measure  how then might we approach solving this problem  cacm may  1962 greene  <B>i</B>  ca620510 jb
28 Q0 2092 81 0.034059476 Lucene_47
 to be made of this <B>information</B>  it is concluded that the development of protosynthex iii into a practically useful system to work with large data bases is possible but will require <B>changes</B> in both the data structures and the <B>algorithms</B> <B>used</B> for question answering  cacm march  1970 schwarcz  r  m  burger  j  it is shown that the use of semantic <B>information</B> in deductive question answering greatly facilitates
28 Q0 2711 82 0.0340009 Lucene_47
 be expressible as a function of the density of the object space  in <B>particular</B>  retrieval performance may correlate inversely with space density  an approach based on space density computations is <B>used</B>  s  automatic <B>information</B> retrieval  automatic indexing  content analysis  document space 3.71 3.73 3.74 3.75 ca751101 jb january 6  1978 10 14 <B>am</B> 2711 5 2711 2711 5 2711 2711 5 2711
28 Q0 2967 83 0.033861175 Lucene_47
-addressable memory  graphics  <B>information</B> retrieval  data structures  software evaluation  <B>hardware</B>a comparison of <B>hardware</B> and software associative memories in the context of computer graphics the associative processing of line drawings  apld  system utilizes a <B>hardware</B> associative memory lincoln laboratory under the leap language and data structure  a comparison of the <B>hardware</B> approach
28 Q0 2923 84 0.033675473 Lucene_47
 flow <B>information</B> to reflect program <B>changes</B>  and derives new global <B>information</B> helpful in solving the control flow <B>information</B> implicit in the parse tree  the need for high-level flow analysis arises from is presented  many of the graphs involved are constructed and analyzed before <B>any</B> programs programming  escapes  exits  jumps  goto statements 5.24 4.12 4.22 ca771003 jb december 27  1977 11 41 <B>am</B>
28 Q0 1889 85 0.03292164 Lucene_47
  the experience of two years with a statewide <B>network</B> involving-41 institutions is discussed  lessons include  t  gallie  t  m  brooks jr   f  p  ferrel  j  k  regional <B>network</B>  introducing computing  under 11 21 <B>am</B> 1889 5 1889 1889 5 1889 1889 5 1889
28 Q0 2988 86 0.03292164 Lucene_47
 <B>network</B> models of computer systems  empirical analyses and analytic studies based on applying  system performance  queueing <B>network</B> models  in teractive computer systems 4.32 ca770304 jb december 30  1977 12 51 <B>am</B> 2988 4 2988 1750 5 2988 2988 5 2988 2988 5 2988 2988 5 2988 3059 5 2988 3070 5
28 Q0 2016 87 0.032893248 Lucene_47
the instrumentation of multics an array of measuring tools devised to aid in the implementation of a prototype computer utility is discussed  these tools include special <B>hardware</B> clocks and data channels  general purpose programmed probing and recording tools  and specialized measurement facilities  some <B>particular</B> measurements of <B>interest</B> in a system which combines demand paging
28 Q0 2439 88 0.032814678 Lucene_47
 input and output instructions in <B>any</B> language available on the system  this paper describes how this multiple-terminal facility was implemented without requiring <B>any</B> <B>changes</B> in the system executive or in <B>any</B> of the system s compilers or interpreters  cacm october  1973 mcgeachie  j  s  dtss  multiple 4.32 ca731001 jb january 23  1978 8 33 <B>am</B> 2439 5 2439 2439 5 2439 2439 5 2439
28 Q0 1687 89 0.0327847 Lucene_47
netflow  algorithm 248  h   cacm september  1968 bray  t  a  witzgall  c  capacitated <B>network</B>  linear programming  minimum-cost flow  <B>network</B> flow  out-of-kilter 5.32 5.41 ca680914 jb february 21  1978 4 29 pm 1687 5 1687 1687 5 1687 1687 5 1687
28 Q0 1690 90 0.0327847 Lucene_47
netflow  algorithm 336  h   cacm september  1968 bray  t  a  witzgall  c  capacitated <B>network</B>  linear programming  minimum-cost flow  <B>network</B> flow  out-of-kilter 5.32 5.41 ca680911 jb february 21  1978 4 35 pm 1690 4 1690 1322 5 1690 1690 5 1690 1690 5 1690 1690 5 1690
28 Q0 2088 91 0.0327847 Lucene_47
netflow  algorithm 336  h   cacm march  1970 bray  t  a  witzgall  c  capacitated <B>network</B>  linear programming  minimum-cost flow  <B>network</B> flow  out-of-kilter 5.32 5.41 ca700310 jb february 13  1978 3 44 pm 2088 5 2088 2088 5 2088 2088 5 2088
28 Q0 2454 92 0.032703437 Lucene_47
computational <B>algorithms</B> for closed queueing <B>networks</B> with exponential servers methods are presented for computing the equilibrium distribution of customers in closed queueing <B>networks</B> <B>algorithms</B> are based on two-dimensional iterative techniques which are highly efficient and quite simple <B>networks</B>  equilibrium distributions  steady state distributions 5.12 5.5 8.1 8.3 ca730901 jb january 23
28 Q0 1752 93 0.0326432 Lucene_47
 <B>algorithms</B> that were implemented  and the results of comparative simulation are given by tracing the development of the <B>algorithms</B> through six predecessor versions  throughout the discussion <B>particular</B> the system resources  simulation results relative to alternate <B>hardware</B> characteristics and the effects  memory management  virtual memories 4.30 4.31 4.32 ca680504 jb february 23  1978 9 39 <B>am</B> 1751 5 1752
28 Q0 2722 94 0.032371774 Lucene_47
multidimensional binary search trees <B>used</B> for associative searching this paper develops  as a data structure for storage of <B>information</B> to be retrieved by associative searches  the k-d tree efficiently  various utility <B>algorithms</B> are developed  their proven average running times in an n record <B>algorithms</B> are given for partial match queries with t keys specified  proven maximum running time of o  n
28 Q0 1159 95 0.032295004 Lucene_47
 trends in computer design  and that it is this process of convergence in <B>hardware</B> design rather than <B>any</B>  the considerations that determine the applicability of bootstrapping in <B>any</B> specific case are discussed halpern  m  <B>i</B>  ca651210 jb march 6  1978 3 44 pm 1159 4 1159 1988 4 1159 381 4 1159 1159 5 1159
28 Q0 2516 96 0.032015372 Lucene_47
hierarchical storage in <B>information</B> retrieval a probabilistic analysis is employed to determine the effect of hierarchical storage organizations on <B>information</B> retrieval operations  the data storage <B>hardware</B> is assumed to consist on n-levels of linearly connected memory <B>hardware</B> with increasing  1973 salasin  j  <B>information</B> retrieval  hierarchical storage 3.70 3.72 3.73 3.74 3.79 3.90 6.20
28 Q0 1456 97 0.031561013 Lucene_47
 english word the syntactic <B>information</B>  definitional material  and references to the contexts in which it has been <B>used</B> to define other words  such relations as class inclusion  possession  and active or passive actions are <B>used</B> as definitional material  the resulting structure serves as a powerful vehicle for research on the logic of question answering  examples of methods of inputting <B>information</B>
28 Q0 2888 98 0.03150278 Lucene_47
 analysis  <B>information</B> modeling  database 3.50 ca760105 jb january 5  1978 10 11 <B>am</B> 1135 4 2888 1136 4<B>information</B> reference coding items in business systems have to be identified by reference codes  which can later be <B>used</B> as data codes and file keys in an associated data processing system codes in a methodical way so as to control future extension and <B>changes</B> while maintaining correct
28 Q0 1458 99 0.031285595 Lucene_47
  there are a number of <B>changes</B> in the working conditions noted  these <B>changes</B> in the environment make necessary corresponding <B>changes</B> in the processes related to producing and checking out programs  in the main and its effect on programming are discussed  cacm march  1966 schwartz  j  <B>i</B>  ca660314 jb march 3  197811 44 <B>am</B> 1458 4 1458 1523 4 1458 1603 4 1458 1698 4 1458 1747 4 1458 1748 4 1458 1854 4 1458
28 Q0 2786 100 0.031159395 Lucene_47
 and fewer exceptions  for typical expressions  the size and font <B>changes</B>  positioning  line drawing  for example  the input sum from <B>i</B> o to infinity x sub <B>i</B> pi over 2 produces  formula   the syntax of the language is specified by a small context-free grammar  a compiler-compiler is <B>used</B> to make a compiler ca750302 jb january 10  1978 8 56 <B>am</B> 2626 4 2786 2786 4 2786 2840 4 2786 2919 4 2786 3017 4 2786
*************Query 29*************************

29 Q0 2644 1 0.21987547 Lucene_47
a <B>theorem</B>-proving language for experimentation because of the large <B>number</B> of strategies and inference rules presently under consideration in automated <B>theorem</B> proving  there is a need for developing a language <B>especially</B> oriented toward automated <B>theorem</B> proving  this paper discusses some of automated <B>theorem</B>-proving programs to include new strategies and or new inference rules  such extend
29 Q0 2089 2 0.12522393 Lucene_47
<B>prime</B> <B>number</B>  algorithm 310  a1   cacm march  1970 rapp  d  g  scott  l  d  <B>prime</B> numbers  generator 5.0 ca700309 jb february 13  1978 3 45 pm 2089 5 2089 2089 5 2089 2089 5 2089
29 Q0 3021 3 0.1251567 Lucene_47
 by representing it as a <B>number</B> m  raising m to a publicly specified power e  and then taking the <B>remainder</B> when the result is divided by the publicly specified product  n  of two large secret <B>prime</B> numbers p cryptosystems  privacy  authentication  security  factorization  <B>prime</B> <B>number</B>  electronic mail  message
29 Q0 2200 4 0.12439492 Lucene_47
on complement division the division algorithm <B>theorem</B> is expressed in a form that permits it to serve as the basis for devising division operations that produce both quotient and <B>remainder</B> in complement form  <B>algorithms</B> for division yielding complement results are derived for numbers represented  the binary form of the <B>algorithms</B> thus includes both two s and one s complement implementation
29 Q0 3131 5 0.116872236 Lucene_47
focus microcomputer <B>number</B> system focus is a <B>number</B> system and supporting computational <B>algorithms</B> <B>especially</B> useful for microcomputer control and other signal processing applications  focus has  <B>algorithms</B> for 8-bit and 16-bit implementations of focus are included  cacm march  1979 edgar  a  lee  s  <B>number</B> representation  logarithmic arithmetic  computational speed  computational accuracy
29 Q0 1840 6 0.11130137 Lucene_47
an efficient <B>prime</B> <B>number</B> generator  algorithm 357  a1   cacm october  1969 singleton  r  c  <B>prime</B> numbers  factoring  <B>number</B> theory 3.15 5.30 ca691006 jb february 15  1978 3 23 pm 1840 5 1840 1840 5 1840 1840 5 1840 2927 5 1840 1537 6 1840 1539 6 1840 1538 6 1840 1840 6 1840 1841 6 1840
29 Q0 1933 7 0.10921454 Lucene_47
coding the lehmer pseudo-random <B>number</B> generator an algorithm and coding technique is presented for quick evaluation of the lehmer pseudo-random <B>number</B> generator modulo 2  31 - 1  a <B>prime</B> mersenne <B>number</B> with produces 2  31 - 2 numbers  on a p-bit  greater than 31  computer  the computation method and a primitive root for 2  61 - 1  the next largest <B>prime</B> mersenne <B>number</B>  are given for possible
29 Q0 1874 8 0.10794679 Lucene_47
 arithmetic used in the ibm 360 <B>series</B>  different sequences of residues are considered and relationships <B>involving</B> absolute values is also shown to have twice the period but with less attractive statistical criteria  cacm july  1969 hemmerle  w  j  random <B>number</B>  uniform distribution  pseudo-random <B>number</B>  random <B>number</B> generator  multiplicative congruential generator  power residue  two s complement
29 Q0 2927 9 0.10584237 Lucene_47
  sieve  <B>prime</B> <B>number</B> generation  <B>number</B> theory  linked list  preprocessing  balancing 5.25 5.39some new upper bounds on the generation of <B>prime</B> numbers given an integer n  what is the computational complexity of finding all the primes less than n  a modified sieve of eratosthenes using doubly techniques <B>involving</B> space-time and additive-multiplicative tradeoffs reduces this upper bound to o
29 Q0 942 10 0.103842854 Lucene_47
fortran subroutines for time <B>series</B> analysis the authors have recently been concerned in a time-<B>series</B> study that constituted a fairly typical piece of applied statistical research  <B>involving</B> extensive computations on a moderately large quantity of data  wehave found that the many different numerical processes that were required could be built up almost completely from a small <B>number</B> of basic
29 Q0 2402 11 0.100491725 Lucene_47
 encourages the development of <B>algorithms</B> adapted to this environment  pictorial pattern recognition techniques make possible a <B>number</B> of approaches to x-ray structure determination based on molecular model recognition <B>algorithms</B> is hindered by the fact that the cross-correlation between a model function  <B>especially</B> for large structures  this is significant  for crystallography of biological
29 Q0 2462 12 0.098377444 Lucene_47
an efficient <B>prime</B> <B>number</B> generator  algorithm r357  cacm august  1973 demorgan  r  m  ca730812 jb january 23  1978 10 31 am 2462 5 2462 2462 5 2462 2462 5 2462
29 Q0 1420 13 0.09738871 Lucene_47
a new uniform pseudorandom <B>number</B> generator a new multiplicative congruential pseudorandom <B>number</B> generator is discussed  in which the modulus is the largest <B>prime</B> within accumulator capacity and the multiplier is a primitive root of that <B>prime</B>  this generator passes the usual statistical tests and in addition the least significant bits appear to be as random as the most significant bits
29 Q0 2289 14 0.09285144 Lucene_47
 is the determination of <B>algorithms</B> that exploit the possibilities for parallelism  <B>especially</B> for problems whose solutions appear to be inherently serial  in particular  several parallelized <B>algorithms</B>  these <B>algorithms</B> exhibit a computation time that in many cases grows at a rate not exceeding log2 n  where n is the <B>number</B> of nodes in the graph  straightforward cellular implementations of the well-known serial
29 Q0 2229 15 0.08597285 Lucene_47
 brucke  r  a  <B>series</B> expansion  <B>series</B> inversion  root extraction  binomial <B>theorem</B>  newtonconstruction of rational and negative powers of a formal <B>series</B> some methods are described for the generation of fractional and negative powers of any formal <B>series</B>  such as poisson <B>series</B> or chebyshev <B>series</B>  it is shown that  with the use of the three elementary operations of addition
29 Q0 2232 16 0.08472928 Lucene_47
 the word description can be made precise so that computer <B>algorithms</B> for feature extraction may be obtained  the focus is on the theoretical subject matter  the results consist of a set-<B>theoretic</B> definition of width-at-angle  a <B>theorem</B> relating it to the pattern boundary radius vector conclusion is that the set-<B>theoretic</B> width-at-angle is a useful pattern feature when it can
29 Q0 1539 17 0.08347603 Lucene_47
<B>prime</B> <B>number</B> generator 1  <B>prime</B> <B>number</B> generator 2  algorithm 35 a1   algorithm 310 a1   algorithm 311 a1   cacm september  1967 chartres  b  a  ca670907c jb march 23  1978 2 37 pm 1539 5 1539 1539 5 1539 1539 5 1539 1841 5 1539 1967 5 1539 2120 5 1539 2927 5 1539 1537 6 1539 1537 6 1539 1539 6 1539 1539 6 1539 1539 6 1539 1539 6 1539 1538 6 1539 1840 6 1539 1841 6 1539 1841 6 1539 377 6 1539 377
29 Q0 1841 18 0.08347603 Lucene_47
a <B>prime</B> <B>number</B> generator using the treesort principle  algorithm 356  a1   cacm october  1969 singleton  r  c  <B>prime</B> numbers  <B>number</B> theory  sorting 3.15 5.30 5.31 ca691005 jb february 15  1978 3 25 pm 1841 4 1841 1841 4 1841 1841 4 1841 1967 4 1841 2120 4 1841 2120 4 1841 2927 4 1841 2927 4 1841 1539 5 1841 1841 5 1841 1841 5 1841 1841 5 1841 1841 5 1841 377 5 1841 2927 5 1841 1537 6 1841 1539 6
29 Q0 1725 19 0.08203639 Lucene_47
a simple proof of lewin s ordered-retrieval <B>theorem</B> for associative memories an efficient method considerably the <B>number</B> of memory accesses necessary to retrieve in order a <B>number</B> of distinct words from - 1 memory accesses are necessary   thus he proves that the <B>number</B> of necessary memory accesses of his simple proof of this <B>theorem</B> derived from some elementary aspects of the structure of sets of binary
29 Q0 2276 20 0.07881111 Lucene_47
  with some new <B>algorithms</B>  a <B>number</B> of procedures convert taylor <B>series</B> expansions directly into sampling distribution there remains a choice between slower and shorter <B>algorithms</B> and faster but space consuming
29 Q0 1537 21 0.07870196 Lucene_47
<B>prime</B> <B>number</B> generator 1  algorithm 310  a1   cacm september  1967 chartres  b  a  ca670907a jb february 27  1978 3 12 pm 1537 5 1537 1537 5 1537 1537 5 1537 2120 5 1537 2927 5 1537 1537 6 1537 1537 6 1537 1539 6 1537 1539 6 1537 1538 6 1537 1840 6 1537 1841 6 1537 377 6 1537
29 Q0 1538 22 0.07870196 Lucene_47
<B>prime</B> <B>number</B> generator 2  algorithm 311  a1   cacm september  1967 chartres  b  a  ca670907b jb march 23  1978 2 34 pm 1538 5 1538 1538 5 1538 1538 5 1538 2927 5 1538 1537 6 1538 1539 6 1538 1538 6 1538 1840 6 1538 1841 6 1538
29 Q0 1967 23 0.07870196 Lucene_47
an improved algorithm to produce complex primes  algorithm 401  a1   cacm november  1970 bratley  p  <B>number</B> theory  <B>prime</B> numbers  complex numbers 5.39 ca701112 jb february 9  1978 4 28 pm 1841 4 1967 1967 4 1967 1967 4 1967 2120 4 1967 2927 4 1967 1539 5 1967 1967 5 1967 1967 5 1967 1967 5 1967 2120 5 1967
29 Q0 2206 24 0.07870196 Lucene_47
exact solution of linear equations using residue arithmetic  f4   algorithm 406  cacm march  1971 howell  j  residue arithmetic  symmetric residue  modulus  mixed-radix representation  symmetric mixed-radix representation  mixed-radix conversion  <B>prime</B> <B>number</B>  linear equations  gaussian elimination  matrix inversion  determinant  adjoint matrix  ill-condition 3.15 5.14 ca710306 jb february 3
29 Q0 2507 25 0.07870196 Lucene_47
exact solution of linear equations using residue arithmetic  algorithm r406  cacm may  1973 howell  j  residue arithmetic  symmetric residue  modulus  mixed-radix representation  symmetric mixed-radix representation  mixed radix conversion  <B>prime</B> <B>number</B>  linear equations  gaussian elimination  matrix inversion  determinant  adjoint matrix  ill-condition 3.5 5.14 ca730513 jb january 23  1978 4 34
29 Q0 1257 26 0.077463835 Lucene_47
  in symbolic assembly language  any <B>number</B> of lines at any point of his previously assembled program in core  with the <B>remainder</B> of the program being relocated appropriately  cacm may  1965 evans  t  g
29 Q0 2420 27 0.07454314 Lucene_47
experiments with an automatic <B>theorem</B>-prover havingpartial ordering inference rules automatic <B>theorem</B>-provers need to be made much more efficient  with this in mind  slagle has shown how the axioms for partial ordering can be replaced by built-in inference rules when using a particular <B>theorem</B> using a modified version of these rules  this new <B>theorem</B>-prover has been found to be very powerful
29 Q0 2167 28 0.07219577 Lucene_47
  we describe several positive results about the existence of powerful simplification <B>algorithms</B> and the <B>number</B>-<B>theoretic</B> conjectures on which they rely  results about the nonexistence of <B>algorithms</B>
29 Q0 2031 29 0.07030327 Lucene_47
  such that gcd   x 1 a 1          x n a n  is presented  the <B>number</B> of arithmetic operations and the <B>number</B> of storage locations are linear in n  a <B>theorem</B> of lame that gives a bound for the <B>number</B> of iterations  <B>number</B> theory  diophantine equations 3.15 5.10 ca700706 jb february 13  1978 8 45 am 2031 4 2031
29 Q0 2524 30 0.067486644 Lucene_47
 with their corresponding search <B>algorithms</B>  which are intended to reduce the <B>number</B> of comparisons required by metrics and by graph-<B>theoretic</B> concepts  some empirical results are presented which compare the efficiency
29 Q0 2306 31 0.060711354 Lucene_47
ancient babylonian <B>algorithms</B> the early origins of mathematics are discussed  emphasizing those aspects which seem to be of greatest interest from the standpoint of computer science  a <B>number</B> of old babylonian tablets  many of which have never before been translated into english  are quoted  cacm july  1972 knuth  d  e  history of computation  babylonian tablets  sexagesimal <B>number</B> system
29 Q0 1691 32 0.059917882 Lucene_47
a comparison of the correlational behavior of random <B>number</B> generators for the ibm 360 hutchinson states that the  new   <B>prime</B> modulo  multiplicative congruential pseudorandom generator  attributed to d  h  lehmer  has passed the usual statistical tests for random <B>number</B> generators  it is here  random numbers  pseudorandom <B>number</B> generators  autocorrelation function  serial correlation  digital
29 Q0 1171 33 0.05899801 Lucene_47
 parameters in determining the difference in the <B>number</B> of iterations between the <B>algorithms</B> is not only the <B>number</B> of constraints and the <B>number</B> of variables but also the ratio of the latter to the formera comparison of the primal-simplex and primal-dual <B>algorithms</B> for linear programming a statistical comparison of the primal-dual and the more commonly used primal-simplex algorithm for solving linear
29 Q0 804 34 0.05830364 Lucene_47
exponentiation of <B>series</B>  <B>algorithms</B> 134  cacm july  1963 thacher jr   h  c  ca630720 jb march 14  1978 8 19 am 804 5 804 804 5 804 804 5 804
29 Q0 2283 35 0.058270864 Lucene_47
thinning <B>algorithms</B> on rectangular  hexagonal  and triangular arrays in this report three thinning <B>algorithms</B> are developed  one each for use with rectangular  hexagonal  and triangular arrays of the <B>algorithms</B> are presented and the relative performances of the <B>algorithms</B> are compared  it is found and noise  yet it will yield a thinned image with an overall reduced <B>number</B> of points
29 Q0 2490 36 0.05801738 Lucene_47
efficient <B>algorithms</B> for graph manipulation  h   algorithm a447  efficient <B>algorithms</B> are presented for partitioning a graph into connected components  biconnected components and simple paths is the <B>number</B> of vertices and e is the <B>number</B> of edges  each algorithm requires time and space  r  graphs analysis of <B>algorithms</B>  graph manipulation 5.32 ca730610 jb january 23  1978 1 55 pm 2490
29 Q0 2695 37 0.057685167 Lucene_47
 compared with standard transformations  a graph <B>theoretic</B> algorithm which examines an arbitrary n x n  the algorithm requires no arithmetic while the <B>number</B> of comparisons  the <B>number</B> of assignments  and the <B>number</B>
29 Q0 2770 38 0.055650685 Lucene_47
the quadratic hash method when the table size is not a <B>prime</B> <B>number</B> previous work on quadratic hash methods is limited mainly to the case where the table size is a <B>prime</B> <B>number</B>  here  certain results are derived for composite numbers  it is shown that all composite numbers containing at least the square of one of the component primes have full-period integer-coefficient quadratic hash functions
29 Q0 1099 39 0.055271316 Lucene_47
 rehabilitation planning  also of immediate interest is the fact that the blind may be <B>especially</B>  before the blind could become a serious professional  a <B>number</B> of aids and techniques had
29 Q0 2217 40 0.054991126 Lucene_47
  heuristic tree-searching program  which is presently being applied to resolution <B>theorem</B>-proving  a <B>number</B> of experiments were performed to test the effectiveness and generality of the learning program  cacm february  1971 slagle  j  r  farrell  c  d  learning  <B>theorem</B>-providing  heuristic  automatic
29 Q0 2605 41 0.053397395 Lucene_47
a precise numerical analysis program a description is given of a program for computing the solution to a small <B>number</B> of standard numerical analysis problems to any specified accuracy  up to a limit of 2000 correct decimal places  each computed <B>number</B> is bounded in an interval with a multiple precision midpoint  arithmetic operations <B>involving</B> these numbers are executed according to interval
29 Q0 1679 42 0.053189646 Lucene_47
a fast fourier transform algorithm for real-valued <B>series</B> a new procedure is presented for calculating the complex  discrete fourier transform of real-valued time <B>series</B>  this procedure is described for an example where the <B>number</B> of points in the <B>series</B> is an integral power of two  this algorithm effecting the two-to-one reduction in computation and storage which can be achieved when the <B>series</B> is real
29 Q0 1497 43 0.051642556 Lucene_47
 of every partial <B>remainder</B> by a suitably rounded single-precision divisor   this segmented division is the possibility of eliminating the normalization by an increase on the <B>number</B> of corrections
29 Q0 1924 44 0.048675545 Lucene_47
 system  it is shown that carefully designed matrix <B>algorithms</B> can lead to enormous savings in the <B>number</B> than a row-by-row representation  the <B>number</B> of page-pulls required by these matrix manipulation <B>algorithms</B> is also studied as a function of the <B>number</B> of pages of main memory available time  examination of addition  multiplication  and inversion <B>algorithms</B> shows that a partitioned matrix
29 Q0 3027 45 0.046446003 Lucene_47
the development of the mu5 computer system following a brief outline of the background of the mu5 project  the aims and ideas for mu5 are discussed  a description is then given of the instruction set  which includes a <B>number</B> of features conducive to the production of efficient compiled code from for an associatively addressed  name store  to the final multistage pipeline structure <B>involving</B>
29 Q0 1710 46 0.045962244 Lucene_47
asp-a ring implemented associative structure package asp is a general purpose associative data structure package in which an arbitrary <B>number</B> of data items and an arbitrary <B>number</B> of the relationships between these data items may be represented  a special picture language is described which has by means of a <B>series</B> of macro calls  which are outlined in the appendix  emphasis is on the philosophy
29 Q0 2948 47 0.04553352 Lucene_47
 directly connected to the time-shared system  a <B>number</B> of small remote computers to which the terminals are attached  and connecting medium speed telephone lines  it can service a large <B>number</B> of terminals of various types  the overall system design is presented along with the <B>algorithms</B> used
29 Q0 3141 48 0.04553352 Lucene_47
 and the <B>number</B> of processes is not known a priori  this decentralized algorithm uses a technique of selective message extinction in order to achieve an average <B>number</B> of message passes of order  n log n  rather than o n2   cacm may  1979 chang  e  roberts  r  decentralized <B>algorithms</B>  distributed systems
29 Q0 2146 49 0.04440835 Lucene_47
optimizing the polyphase sort various dispersion <B>algorithms</B> for the polyphase sorting procedure are examinedhe optimum algorithm based on minimizing the total <B>number</B> of unit strings read is displayed  the logic of this algorithm is rather complicated  hence  several other new dispersion <B>algorithms</B> with more straightforward logic are presented  of the simple dispersion <B>algorithms</B> discussed
29 Q0 2267 50 0.044255547 Lucene_47
<B>algorithms</B> to reveal properties of floating-point arithmetic two <B>algorithms</B> are presented in the form of fortran subroutines  each subroutine computes the radix and <B>number</B> of digits of the floating-point numbers and whether rounding or chopping is done by the machine on which it is run  the methods are shown to work on any  reasonable  floating-point computer  cacm november  1972 malcolm  m
29 Q0 3055 51 0.044255547 Lucene_47
an analysis of <B>algorithms</B> for the dutch national flag problem solutions to the dutch national flag problem have been given by dijkstra  1  and meyer  3   dijkstra starts with a simple program and arrives at an improved program by refinement  both of the <B>algorithms</B> given by dijkstra are shown to have an expected <B>number</B> of swaps which is 2 3n   0 1  and that these values differ at most by 1 3
29 Q0 1862 52 0.044217054 Lucene_47
 and academic activities are limited  the <B>number</B> of computers is small and so is the capacity  none larger for excellence  rather the  system  is hard to over-come  universities  <B>especially</B> those with strong european
29 Q0 2657 53 0.044111885 Lucene_47
  c  l  waldinger  r  j  program-synthesizing <B>algorithms</B>  <B>theorem</B> proving  consequence findingan improved program-synthesizing algorithm and its correctness an improved program-synthesizing algorithm based on the algorithm proposed by waldinger and lee in 1969 is given  in the old algorithm  the program-synthesizing problem is translated into a <B>theorem</B>-proving problem  and a program
29 Q0 2726 54 0.04382838 Lucene_47
 is logically equivalent to the quien-mccluskey method for finding <B>prime</B> implicants  if some of the decision memory   4  reducing the <B>number</B> of decision rules   this often improves the clarity of the decision whether to use the above methods  cacm august  1975 shwayder  k  the quine-mccluskey method  <B>prime</B>
29 Q0 3118 55 0.04339049 Lucene_47
 bound to the <B>number</B> of steps required buy a permutation algorithm is derived  and the class of optimum <B>algorithms</B> is identified  cacm january  1979 bongiovanni  g  luccio  f  bubble memory  memory loops
29 Q0 2208 56 0.04327859 Lucene_47
  which is the fast store  is divided into a <B>number</B> of storage areas  when an entry is to be filed in the entire hierarchy  an expression is derived for the expected <B>number</B> of entries filed  the <B>number</B> of storage areas into which the first-level store is divided and the total size of the first-level store  cacm march  1971 williams  j  g  hashing <B>algorithms</B>  memory allocation  memory
29 Q0 2936 57 0.041396428 Lucene_47
an efficient data structure for the simulation event set recently <B>algorithms</B> have been presented <B>algorithms</B>  in this paper a new event scheduling algorithm is presented which improves on two aspects of the best of the previously published <B>algorithms</B>  first  the new algorithm s performance is quite is the <B>number</B> of events in the set  furthermore  tests conducted to estimate the average complexity showed
29 Q0 944 58 0.041380294 Lucene_47
storage and search properties of a tree-organized memory system a memory with list properties  1  may be used to construct numeric  alphabetic or alphanumeric trees  such trees have information storage and retrieval properties applicable to problems <B>involving</B> large quantities of data or to problems properties is available  of <B>prime</B> interest is the application where a symbol table  dictionary or similar
29 Q0 3166 59 0.0412736 Lucene_47
computing standard deviations  accuracy four <B>algorithms</B> for the numerical computation of the standard deviation of  unweighted  sampled data are analyzed  two of the <B>algorithms</B> are well-known in the statistical and computational literature  the other two are new <B>algorithms</B> specifically intended definition of  accuracy   each of the four <B>algorithms</B> is analyzed for the conditions under which
29 Q0 3037 60 0.04002726 Lucene_47
a linear sieve algorithm for finding <B>prime</B> numbers a new algorithm is presented for finding all primes between 2 and n  the algorithm executes in time proportional to n  assuming that multiplication elegant  it is also easily extended to find the <B>prime</B> factorization of all integers between 2 and n in time proportional to n  cacm december  1978 gries  d  misra  j  primes  <B>algorithms</B>  data
29 Q0 1386 61 0.03935098 Lucene_47
symbolic factoring of polynomials in several variables an algorithm for finding the symbolic factors of a multi-variate polynomial with integer coefficients is presented  the algorithm is an extension of a technique used by kronecker in a proof that the <B>prime</B> factoring of any polynomial may be found in a finite <B>number</B> of steps  the algorithm consists of factoring single-variable instances
29 Q0 2606 62 0.039112322 Lucene_47
 programmed <B>algorithms</B>  the new algorithm is a step-by-step procedure for solving the initial value problem of truncated taylor <B>series</B> expansions  the new method is compared with gragg-bulirsh-stoer  and the taylor <B>series</B> method  the taylor <B>series</B> method and the new method are shown to be superior in speed differential equations  initial value problem  integration  taylor <B>series</B>  singularities  continued
29 Q0 2095 63 0.038689923 Lucene_47
measurements of segment size distributions of segment sizes measured under routine operating con ditions on a computer system which utilizes variable sized segments  the burroughs b5500  are discussed  the most striking feature of the measurements is the large <B>number</B> of small segments-about 60 system  they should be relevant to the design of new computer systems  <B>especially</B> with respect
29 Q0 1433 64 0.0379446 Lucene_47
 timeo cut down this expense  an ever increasing effort is made to design more efficient <B>algorithms</B> a pivot column is found  the <B>number</B> of repetitions of a certain transfer of data from tape to core  the generating function of the probability distribution and the moment generating function of the <B>number</B>
29 Q0 1504 65 0.0379446 Lucene_47
<B>algorithms</B> for finding a fundamental set of cycles for an undirected linear graph given the adjacency matrix of the graph  the algorithm presented in this paper finds a spanning tree and then constructs the set of fundamental cycles  our algorithm is slower than an algorithm presented by welch by a ratio of n 3  n is the <B>number</B> of nodes  but requires less storage  for graphs with a large <B>number</B>
29 Q0 1609 66 0.0379446 Lucene_47
 <B>number</B> of examination periods and satisfies the constraint that no student be required to take two scheduled at the same period are grouped together in all possible ways  then a minimum <B>number</B> be obtained  known <B>algorithms</B> for carrying out these procedures are prohibitively expensive  approximations
29 Q0 3164 67 0.0379446 Lucene_47
 of actions  two pad <B>algorithms</B> are presented  one uses a simple path matrix representation is considerably faster  though both are asymptotically o nr   where n is the <B>number</B> of nodes and r is the expected <B>number</B> of nodes reachable along paths from any given node  cacm september  1979 hansen  w
29 Q0 2138 68 0.03781107 Lucene_47
bliss  a language for systems programming a language  bliss  is described  this language is designed so as to be <B>especially</B> suitable for use in writing production software systems for a specific machine  the pdp-10   compilers  operating systems  etc  <B>prime</B> design goals of the design are the ability to produce highly efficient object code  to allow access to all relevant hardware features
29 Q0 2109 69 0.03756718 Lucene_47
 is that <B>prime</B> <B>number</B>  can be searched  cacm february  1970 radke  c  e  quadratic residue  search half of the storage table  it is shown that for some classes of <B>prime</B> numbers the complement
29 Q0 2767 70 0.03747524 Lucene_47
  the <B>algorithms</B> are tested with a set of typical stochastic scheduling distributions <B>especially</B> chosen to show the advantages and limitations of the <B>algorithms</B>  the end-order tree algorithm is showna comparison of simulation event list <B>algorithms</B> four <B>algorithms</B> are considered which can be used to schedule events in a general purpose discrete simulation system  two of the <B>algorithms</B> are new
29 Q0 2837 71 0.03719185 Lucene_47
new upper bounds for selection the worst-case minimum <B>number</B> of comparisons complexity vi n  of the i-th selection problem is considered  a new upper bound for vi n  improves the bound given by the standard hadian-sobel algorithm by a generalization of the kirkpatrick-hadian-sobel algorithm favorably with a recent algorithm by hyafil  cacm september  1976 yap  c  k  selection problem  <B>algorithms</B>
29 Q0 1727 72 0.0371568 Lucene_47
one way of estimating frequencies of jumps in a program for the segmentation of a program it is useful to have a reasonable estimation of the values of s ij   where s ij  is the mean value of the <B>number</B> of jumps from the i-th instruction on to the j-th instruction in the run time  in the cases a variant of this algorithm is derived  avoiding the necessity of computation <B>involving</B> large matrices  cacm
29 Q0 1886 73 0.03687962 Lucene_47
 algorithm is then executed in order to minimize the total <B>number</B> of temporary storage cells generated  the factorization <B>algorithms</B> are also applicable to the problem of factoring boolean  1969 breuer  m  a  factorization <B>algorithms</B>  code optimization  sequencing of operations  detection
29 Q0 2142 74 0.03687962 Lucene_47
 determined and the problem is to find the  most representative  picture  three <B>algorithms</B> are described  all using monte carlo methods  which were designed to solve this problem  the <B>algorithms</B> are applicable in a large and varied <B>number</B> of fields  the most important uses may be the reconstruction
29 Q0 2924 75 0.03687962 Lucene_47
  the method is a synthesis of spline theory and <B>algorithms</B>  an in teractive means for man-machine are <B>algorithms</B> which enable in teractive modification of the b-spline representation of the sectional  complex surfaces can be created by the combination of a <B>number</B> of shapes that have been separately
29 Q0 2963 76 0.03687962 Lucene_47
a fast algorithm for computing longest common subsequences previously published <B>algorithms</B> for finding the longest common subsequence of two sequences of length n have had a best-case running time   where r is the total <B>number</B> of ordered pairs of positions at which the two sequences match  thus subsequence  efficient <B>algorithms</B> 3.73 3.63 5.25 ca770509 jb december 29  1977 1 46 am 2963 4 2963 3114 4 2963
29 Q0 3018 77 0.03687962 Lucene_47
 subgraphs with the objective of minimizing the <B>number</B> of complete subgraphs  a relationship between this edge-clique-cover problem and the graph coloring problem is established which allows <B>algorithms</B>-complete  and if p  np then they do not admit polynomial-time approximation <B>algorithms</B> which always
29 Q0 2325 78 0.036163416 Lucene_47
 of continuous <B>algorithms</B>  four of the components of numerical mathematics are discussed  these are  foundations  finite precision <B>number</B> systems  computational complexity   synthesis and analysis of <B>algorithms</B>  analysis of error  programs and program libraries  cacm july  1972 traub  j  f  numerical mathematics  computer science  mathematics of computation  <B>algorithms</B>  continuous <B>algorithms</B> 1.3 5.0 5.1
29 Q0 1879 79 0.035907365 Lucene_47
 is the presentation of some of the results of a <B>series</B> of simulation experiments investigating the phenomenon available storage after it has been fragmented into a large <B>number</B> of separate blocks  and  2 allocating only the exact <B>number</B> of words required  the most striking result is the apparently general rule that rounding up requests for storage  to reduce the <B>number</B> of different sizes of blocks
29 Q0 2087 80 0.035801906 Lucene_47
a <B>number</B> system for the permutations cacm march  1970 pager  d  permutation  ordering  <B>number</B>  <B>number</B> system  p-<B>number</B>  combinatorial 4.49 5.39 ca700311 jb february 13  1978 3 42 pm 2087 4 2087 2189 4 2087 3188 4 2087 1594 5 2087 2087 5 2087 2087 5 2087 2087 5 2087 2189 5 2087 1594 6 2087 2087 6 2087 3191 6 2087 521 6 2087
29 Q0 2555 81 0.034595046 Lucene_47
 be applied to expressions <B>involving</B> any variable-precision operations having o 10  -p    sum  ei    error bound of the above order  other operations such as log  sin  and cos  which have simple <B>series</B>
29 Q0 1145 82 0.033966698 Lucene_47
 in areas such as game-playing and <B>theorem</B>-proving  where practical <B>algorithms</B> are unknown
29 Q0 1385 83 0.03351783 Lucene_47
computer technology in communist china  1956-1965 based on information from translations of communist <B>chinese</B> news items and periodical literature for the 1965 period  computer technology in china  then presumably all-<B>chinese</B>-made machines from 1965 to the present   3  computer applications   4  the trend to bring concepts such as linear programming to ordinary <B>chinese</B> workers and peasants  communist china
29 Q0 1697 84 0.03351783 Lucene_47
 deal with any orthography  although at present it is limited to 4000 <B>chinese</B> characters and some of such a system is given  illustrations of the computer input and output of <B>chinese</B> characters are included  cacm september  1968 hayashl  h  duncan  s  kuno  s  <B>chinese</B> characters  input output
29 Q0 3163 85 0.03311714 Lucene_47
  the algorithm operates in time o log n   where n is the <B>number</B> of nodes in the tree  this represents an improvement over the best previous ly known insertion <B>algorithms</B> of hirschberg and kosaraju  which  the insertion and deletion <B>algorithms</B> for oshb trees appear much more complicated than the corresponding <B>algorithms</B> for avl trees  cacm september  1979 raiha k  zweben  s  insertion  one-sided height-balanced
29 Q0 2355 86 0.032382872 Lucene_47
implementing clenshaw-curtis quadrature  i methodology and experience clenshaw-curtis quadrature is a particularly important automatic quadrature scheme for a variety of reasons  <B>especially</B> the high accuracy obtained from relatively few integrand values  however  it has received little use because <B>series</B> 5.16 ca720505 jb january 31  1978 10 05 am 1982 4 2355 2355 4 2355 2355 4 2355 2355 4 2355
29 Q0 1812 87 0.031644713 Lucene_47
more on fortran random <B>number</B> generators cacm november  1969 grosenbaugh  l  r  random <B>number</B> generation  monte carlo  simulation 5.5 ca691118 jb february 15  1978 11 57 am 1812 5 1812 1812 5 1812 1812 5 1812
29 Q0 626 88 0.031644713 Lucene_47
a method of representation  storage and retrieval of 13 random codes in a 4-digit <B>number</B> or 16 random codes in a 5-digit <B>number</B> cacm march  1962 foster  m  b  ca620306 jb march 20  1978 3 07 pm 626 5 626 626 5 626 626 5 626
29 Q0 2114 89 0.031078428 Lucene_47
 such as inverted files  index-sequential files  and multilist files are derived  two <B>algorithms</B> which retrieve  directory search  serial processing of lists  <B>prime</B> keyword  parallel processing of lists 3.70 3.73 3.74
29 Q0 2498 90 0.030993206 Lucene_47
minimizing wasted space in partitioned segmentation a paged virtual memory system using a finite <B>number</B> of page sizes is considered  two <B>algorithms</B> for assigning pages to segments are discussed  both of these algorithm are simple to implement  the problem of choosing the page sizes to minimize the expected value of total wasted space in internal fragmentation and in a page table  per segment
29 Q0 3152 91 0.030993206 Lucene_47
storage reorganization techniques for matrix computation in a paging environment in order to multiply matrices while minimizing the <B>number</B> of page fetches required  it is often more efficient to reorganize the data into submatrix form and to use block multiplication rather than to use the best known <B>algorithms</B> which leave the matrices stored in row- or column- oriented form  an efficient method
29 Q0 63 92 0.030962447 Lucene_47
octal diagrams of binary conception and their applicability to computer design logic this paper dates back the genesis of binary conception circa 5000 years ago  and octal diagrams about 4800 years ago  as derived by the <B>chinese</B> ancients  it analyzes the applicability of binary trinities of the octal diagrams to modern electronic-digital-computer design logic  cacm september  1959 li  s  t
29 Q0 2860 93 0.0295037 Lucene_47
a practitioner s guide to addressing <B>algorithms</B> this paper consolidates a <B>number</B> of popular rules of thumb which have been suggested for the design of record addressing <B>algorithms</B>  and discusses the applicability of these rules to large commercial databases  guidelines for selecting identifier transformations  overflow techniques  loading factors  bucket sizes  and loading order and considered
29 Q0 3134 94 0.0295037 Lucene_47
 multiplication table as a directory for the information system  <B>algorithms</B> for the organization some other attributes as well   several examples are given  the results with respect to the <B>number</B> of disk accesses and disk space are compared to other common approaches  <B>algorithms</B> evaluating
29 Q0 2561 95 0.029249948 Lucene_47
 clustering <B>algorithms</B>  they are implemented in a model fact retrieval system which uses a formal a variety of conditions <B>involving</B> incomplete and inconsistent data  cacm december  1974 skinner  c  w
29 Q0 1946 96 0.028924987 Lucene_47
computing polynomial resultants  bezout s determinant vs  collins  reduced p  algorithm <B>algorithms</B> for computing the resultant of two polynomials in several variables  a key repetitive step of computation in solving systems of polynomial equations by elimination  are studied  determining the best to bezout s determinant and collins  reduced polynomial <B>remainder</B> sequence  p r s   algorithm  detailed
29 Q0 1930 97 0.027405128 Lucene_47
extremely portable random <B>number</B> generator extremely portable subroutines are sometimes needed random <B>number</B> generation and in core sorting  which are not entirely universal or are not used in a standardized way  the literature on random <B>number</B> generators does not seem to contain an algorithm in the above mentioned paper  cacm february  1969 kruskal  j  b  random <B>number</B> generators  random
29 Q0 116 98 0.02709214 Lucene_47
the sumador chino on a recent motor trip through mexico  the writer came across on adding device which was referred to as a sumador chino  <B>chinese</B> adder   a survey of the more available literature on the history of mathematics and on instruments of calculation has uncovered no reference to such a device  the purpose of this communication is to enlist the help of other members in bringing to light
29 Q0 1783 99 0.02685143 Lucene_47
in-and-out conversions byan in-and-out conversion we mean that a floating-point <B>number</B> in one base is converted into a floating-point <B>number</B> in another base and then converted back to a floating-point <B>number</B> in the original base  for all combinations of rounding and truncation conversions such in-and-out conversions to return the original <B>number</B>  when possible   or at least significant digit
29 Q0 197 100 0.02685143 Lucene_47
an imaginary <B>number</B> system cacm april  1960 knuth  d  e  ca600414 jb march 22  1978 1 35 pm 197 5 197 197 5 197 197 5 197
*************Query 30*************************

30 Q0 2876 1 0.13941485 Lucene_47
intentional resolution of privacy protection in database <B>systems</B> traditionally  privacy protection in database <B>systems</B> is understood to be the control over <B>what</B> information a given user can <B>get</B> from  the control over <B>what</B> a user is allowed to do with a piece of information supplied to him is demonstrated by several <B>examples</B>  and its realization is discussed  it is shown that intentional resolution
30 Q0 3142 2 0.13607943 Lucene_47
 for instance   cacm may  1979 sterling  <B>t</B>  errors  <B>systems</B> errors  billing errors  management <B>systems</B> and <B>what</B> type of errors occur  how easily are they corrected  <B>what</B> is the reaction of consumers to errors-to a failure to correct them  <B>what</B> can be learned by designers of large management packages organizations and their public  also the role of poor man agement packages <B>including</B> poor software
30 Q0 2341 3 0.093883224 Lucene_47
  <B>including</B> flowcharting  bargraphs  logic diagrams  mathematical-equation formation  and <B>text</B> justification and preparation  have been programmed on a printer in <B>what</B> appears to be an easy and natural  cacm june  1972 gimpel  j  f  character manipulation  output <B>formatting</B>  string processing  graphics
30 Q0 1926 4 0.0865526 Lucene_47
  m  <B>text</B> processing  indexing  printing  documentation  <B>text</B> editing  <B>formatting</B>  frequencydescription of format  a <B>text</B>-processing program format is a production program which facilitates  computer system  it features good performance  totally free-form input  very flexible <B>formatting</B> capabilities <B>including</B> up to eight columns per page  automatic capitalization  aids for index
30 Q0 2871 5 0.08399663 Lucene_47
logical analysis of programs most present <B>systems</B> for verification of computer programs are incomplete in that intermediate inductive assertions must be provided manually by the user  termination  this paper suggests conducting a logical analysis of programs by using invariants which express <B>what</B> simultaneously for correctness  <B>including</B> termination  or incorrectness  a third part examines
30 Q0 2572 6 0.06662089 Lucene_47
  of <B>what</B> is proposed   2  project and perhaps wait for changes in complementary techniques   3  evaluate current and projected supplementary techniques   4  establish the existence of demand for <B>what</B> is proposed   5  take steps to involve a representative group of ultimate users in <B>systems</B> design
30 Q0 1470 7 0.063226886 Lucene_47
 of each of these components are described  compared and evaluated  many <B>examples</B>  frequently from  but the programmer must understand <B>what</B> actions will be taken to achieve the desired effect the most convenient ways of structuring programs  organizing <B>systems</B>  and referencing data  cacm march
30 Q0 2864 8 0.063226886 Lucene_47
 explicit through a formal definition of <B>what</B> constitutes a phase of localized reference behavior  and the reasonableness of the definition is supported by <B>examples</B> taken from actual programs  empirical data from and memory management in virtual memory <B>systems</B>  cacm may  1976 madison  a  w  batson  a  p
30 Q0 84 9 0.05666153 Lucene_47
survey of progress and trend of development and use of automatic data processing in business and management control <B>systems</B> of the federal government  as of december 1957-ii  part 2 <B>see</B> ca590406  cacm may  1959 ca590502 jb march 22  1978 6 42 pm 84 5 84 84 5 84 84 5 84
30 Q0 1457 10 0.05449284 Lucene_47
data manipulation and programming problems in automatic information retrieval automatic information retrieval programs require the manipulation of a variety of different data structures  <B>including</B> linear <B>text</B>  sparse matrices  and tree or list structures  the main data manipulations to be performed in automatic information <B>systems</B> are first briefly reviewed  a variety of data representations
30 Q0 1908 11 0.04804395 Lucene_47
 computer <B>systems</B> conducted at mit is described in this paper  this study is the first known attempt to evaluate two such <B>systems</B> for <B>what</B> may well be the predominant user population within the next results indicate equal cost for usage of the two computer <B>systems</B>  however  a much higher level
30 Q0 3011 12 0.04804395 Lucene_47
management utilization of computers in american local governments traditional concepts of management information <B>systems</B>  mis  bear little relation to the information <B>systems</B> currently in use by top management in most us local governments  <B>what</B> exists is management-oriented computing  involving the use of relatively unsophisticated applications  despite the unsophisticated nature of these <B>systems</B>
30 Q0 2987 13 0.047682736 Lucene_47
 for testing the inclusion of a poin <B>t</B> in a many-sided polygon is given  the speed of the algorithm is discussed for both ideal and practical <B>examples</B>  it is shown that the poin ts of intersection of two polygonal lines can be located by <B>what</B> is essentially a binary tree search  the algorithm
30 Q0 195 14 0.045811277 Lucene_47
<B>what</B> is a code  cacm may  1960 patterson  g  w  ca600502 jb march 22  1978 1 33 pm 195 5 195 195 5 195 195 5 195
30 Q0 2931 15 0.041234516 Lucene_47
  though we have many <B>examples</B>  we have still to give wide-ranging mathematical answers to these queries  <B>what</B> is a machine  <B>what</B> is a computable process  how  or how well  does a machine simulate a process meaning of a program then requires us to explain <B>what</B> are the objects of computation  in a way
30 Q0 3088 16 0.04087095 Lucene_47
 different conditions in an idealized cpu-i o overlap model of multiprogrammed computer <B>systems</B> processors  main storage partitions and user tasks  <B>examples</B> are provided to illustrate the use both balanced and unbalanced resource utilization conditions  cacm june  1978 teory  <B>t</B>  blocking
30 Q0 2541 17 0.040646274 Lucene_47
  it also suggested an important new concept for operating <B>systems</B>  separation of the scheduling from scheduling algorithms  decision of <B>what</B> to do  without endangering the system integration  correctly
30 Q0 397 18 0.040587876 Lucene_47
 is sufficient to identify the material normally associated with reference files for books  <B>articles</B>  programming terms  hardware terms  equipment  machine <B>systems</B>  abbreviations  etc   it is suitable
30 Q0 1518 19 0.040084768 Lucene_47
an experimental model of system 360 the problem of predicting the performance of modern computer <B>systems</B> is formidable  one general technique which can ease this problem is macroscopic simulation  this paper reports on the applicability of that technique to system 360  the paper describes the properties of system 360 jobs that <B>get</B> simulated  cacm november  1967 katz  j  h  ca671102 jb
30 Q0 2909 20 0.038176067 Lucene_47
<B>what</B> can we do about the unnecessary diversity of notation for syntactic definitions  cacm november  1977 wirth  n  syntactic description language  extended bnf 4.20 ca771107 jb december 27  1977 7 20 am 2909 5 2909 2909 5 2909 2909 5 2909
30 Q0 1099 21 0.03802954 Lucene_47
 into various occupations through computer use <B>including</B> that of programmer  is important for future should result in fewer debugging problems and make the blind a valuable addition to any <B>systems</B> group college of medicine  cacm april  1964 sterling  <B>t</B>  d  lichstein  m  scarpino  f  stuebing  d  ca640409
30 Q0 2343 22 0.03802954 Lucene_47
a proposal to establish a pseudo virtual memory via writable overlays many computer <B>systems</B> solve executable storage size problems for large programs by using overlays  however  it appears  several tools  <B>including</B> a graphic display  are included in the proposal in order to aid of the details of the final overlay configuration may be decided after the fact  cacm june  1972 spacek  <B>t</B>  r
30 Q0 248 23 0.037792373 Lucene_47
<B>what</B> is proprietary in mathematical programming -impressions of a panel discussion a panel discussion on  <B>what</B> is proprietary in mathematical programming   was sponsored by the special interest committee on mathematical programming of the acm during a hall of discussion on september 7th at the 16th national acm meeting in los angeles  this note consists solely of the impressions garnered
30 Q0 2375 24 0.037594527 Lucene_47
 to measure total performance <B>including</B> system oriented and individual request oriented measures algorithm are discussed  cacm march  1972 teorey  <B>t</B>  j  pinkerton  <B>t</B>  b  access time  analytical models  peripheral memory devices  real-time <B>systems</B>  response time  rotational delay  scheduling policies  seek time  simulation  storage units  time-sharing <B>systems</B>  waiting time 3.72 4.32 6.34 ca720306jb
30 Q0 1196 25 0.03601282 Lucene_47
 to digital computer processing can be formulated in terms of the numerical solution of <B>systems</B> of ordinary differential equations  powerful methods are in existence for the solution of such <B>systems</B>  a good general purpose routine for the solution of such <B>systems</B> furnishes a powerful tool  and minimization of computer time  a number of <B>examples</B> are discussed in detail  cacm september  1965
30 Q0 724 26 0.035413455 Lucene_47
  programmers tend to <B>see</B> their colleagues in a favorable light  on the whole  personalities seem to vary with function  <B>systems</B> programmers differing from applications programmers  four principal
30 Q0 3065 27 0.03538828 Lucene_47
-the reverse of <B>what</B> one usually obtains  cacm september  1978 ottmann  <B>t</B>  six  h  wood  d
30 Q0 2344 28 0.034609437 Lucene_47
on the optimization of performance of time-sharing <B>systems</B> by simulation a simulation model  <B>including</B> the scheduling itself  require optimization  and which of the parameters not normally nonpreemptive time-sharing <B>systems</B>  the comparison is found to be very favorable  cacm june  1972 blatny  j  clark  s  r  rourke  <B>t</B>  a  time-sharing  simulation studies  optimization  measure of performance
30 Q0 2947 29 0.034058023 Lucene_47
sitar  an interactive <B>text</B> processing system for small computers sitar  a low-cost in teractive <B>text</B> handling and <B>text</B> analysis system for nontechnical users  is in many ways comparable to in teractive bibliographical search and retrieval <B>systems</B>  but has several additional features  information retrieval  <B>text</B> editing  minicomputers  crts time sharing  bibliographic search and retrieval
30 Q0 2583 30 0.032246802 Lucene_47
guidelines for humanizing computerized information <B>systems</B>  a report from stanley house cacm november  1974 sterling  <B>t</B>  d  humanization  social implication  management  information <B>systems</B>  regulations  social and behavioral sciences  philosophy 1.5 2 3.3 3.4 3.5 ca741101 jb january 16  1978 10 53 am 2583 5 2583 2583 5 2583 2583 5 2583 3142 5 2583 2583 6 2583 3076 6 2583
30 Q0 2165 31 0.030828139 Lucene_47
general relativity and the application of algebraic manipulative <B>systems</B> the paper describes some applications of symbolic algebra <B>systems</B> to problems of general relativity <B>including</B> the derivation of the field equations  the petrov classification of a metric  and the solution of the field equations in the presence of matter in a simple case  attention is drawn to the strictly algebraic
30 Q0 3089 32 0.030828139 Lucene_47
performance of rollback recovery <B>systems</B> under intermittent failures a mathematical model of a transaction-oriented system under intermittent failures is proposed  the system is assumed to operate is used to derive the principal performance measures  <B>including</B> availability  response time <B>systems</B>  checkpoints  recovery procedures  checking techniques  reliability and system performance
30 Q0 2631 33 0.030764367 Lucene_47
an information-theoretic approach to <B>text</B> searching in direct access <B>systems</B> using direct access computer files of bibliographic information  an attempt is made to overcome one of the problems often treats <B>text</B> as a string of characters rather than words bounded by spaces  and chooses subsets june  1974 barton  i  j  creasey  s  e  lynch  m  f  snell  m  j  <B>text</B> searching  information theory
30 Q0 2312 34 0.030540852 Lucene_47
on the present and future of scientific computation a pessimistic forecast is given of <B>what</B> can be expected to happen in the application of computers to the physical sciences  cacm july  1972 rice  j  r  scientific computation 3.1 5.0 ca720716 jb january 30  1978 11 24 am 2312 5 2312 2312 5 2312 2312 5 2312
30 Q0 718 35 0.030540852 Lucene_47
an experiment in automatic verification of programs how effective is a compiler at replacing explicit verification  and <B>what</B> is the cost of this technique  cacm october  1963 weinberg  g  m  gressett  g  l  ca631007 jb march 13  1978 5 59 pm 1053 5 718 718 5 718 718 5 718 718 5 718 435 6 718 474 6 718 718 6 718 720 6 718
30 Q0 1616 36 0.0304723 Lucene_47
tensor calculations on computer  appendix in the main <B>text</B> of the paper  comm  acm 9  12  dec  196   864   a formac program was discussed which is capable of calculating various quantities of interest in tensor calculus  this appendix is intended as an example of the program output  chrisoffel symbols calculated for 12 basic orthogonal coordinate <B>systems</B> are listed  cacm march  1967 walton  j  j
30 Q0 2812 37 0.029962284 Lucene_47
computer-aided analysis and design of information <B>systems</B> this paper describes the use of computer  the statement of requirements was written in ads  accurately defined <B>systems</B>  and analyzed to the form necessary for use by the soda  <B>systems</B> optimization and design algorithm  program december  1976 nunamaker  j  f  jr  konsynski  b  r  jr  ho  <B>t</B>  singer  c  computer-aided analysis
30 Q0 2988 38 0.028701251 Lucene_47
 for <B>including</B> accurately the effects of finite memory size and workload memory requirements in queueing network models of computer <B>systems</B>  empirical analyses and analytic studies based on applying model is proposed as being broadly applicable to the analysis of in teractive computer <B>systems</B> which  system performance  queueing network models  in teractive computer <B>systems</B> 4.32 ca770304 jb december
30 Q0 2882 39 0.02839852 Lucene_47
 before  the model is designed to estimate the retrieval workload of alternative data retrieval <B>systems</B>  these data retrieval <B>systems</B> can be organized under several database organizations  <B>including</B>a stochastic evaluation model for database organization in data retrieval <B>systems</B> experimental work in the valuation of large scale data retrieval <B>systems</B> has been scarce due to its difficulty
30 Q0 104 40 0.027798463 Lucene_47
digital simulation of discrete flow <B>systems</B>  the discrete flow <B>systems</B> discussed are characterized by the movement of randomly arriving items along interacting channels  programing a digital computer to simulate such <B>systems</B> utilizes some techniques not common in other approaches to physical control decisions  cacm december  1960 moore  c  j  lewis  <B>t</B>  s  ca601212 jb march 20  1978 6 27 pm 104 5
30 Q0 1747 41 0.027503747 Lucene_47
three criteria for designing computing <B>systems</B> to facilitate debugging the designer of a computing computer are explained  <B>examples</B> of applications of the criteria concern the reading of a time-of-day clock  the synchronization of parallel processes  protection in multiprogrammed <B>systems</B> criteria  computer <B>systems</B>  computer <B>systems</B> design  input equipment  input equipment design  operating
30 Q0 1267 42 0.027254766 Lucene_47
performance of <B>systems</B> used for data transmission transfer rate of information bits -an asa tutorial standard information thruput as a characteristic of <B>systems</B> performance is discussed  this discussion includes the pertinent aspects of information transfer  of determination of transfer rate  and some <B>examples</B> on procedures for determining a thruput rate in terms of trib  it concludes
30 Q0 3179 43 0.026994554 Lucene_47
overview of the eft symposium it is increasingly recognized that large-scale technologies such as eft have the potential for aiding in the solution of current societal problems  yet  these technologies also generate problems  this symposium presents selected papers from a conference that sought to discover <B>what</B> is currently known about eft impacts in society and <B>what</B> research is needed
30 Q0 1383 44 0.026723245 Lucene_47
implications of the digital computer for education in the mathematical sciences the digital computer has profoundly altered the definition of <B>what</B> is interesting in mathematics  the importance of applied logic in human affairs is changed by the existence of the  logical engine   the result is that one should no longer think in terms of a single discipline of mathematics but in terms of a complex
30 Q0 3173 45 0.026723245 Lucene_47
a psychology of learning basic this paper addresses the question  <B>what</B> does a person know following learning of basic programming  several underlying conceptual structures are identified   1  a transaction is an event that occurs in the computer and involves some operation on some object at some location   2  a prestatement is a set of transactions corresponding to a line of code   3  chunks
30 Q0 2634 46 0.026119113 Lucene_47
an evaluation of statistical software in the social sciences several hundred college and university computer installations now offer various types of statistical packages for general use  among those most widely available are osiris  spss  bmd  data-<B>text</B>  and tsar  in order to provide users with a basis for selection and use  tests were made for each of these <B>systems</B>  and the results
30 Q0 1097 47 0.025968097 Lucene_47
an algorithm for converting integers from base a to base b a little known  simple algorithm for integer conversion between number <B>systems</B> is presented and proved  cacm april  1964 gladwin  h  <B>t</B>  ca640411 jb march 10  1978 1 30 am 1097 5 1097 1097 5 1097 1097 5 1097
30 Q0 300 48 0.025968097 Lucene_47
cobol  a sample problem a simplified merchandise control problem has been chosen for presenting cobol to users and potential users of computing <B>systems</B>  a mythical department store   e  language bros   inc    is programming in the cobol language one of the many runs on its computer  cacm august  1961 mackinson  <B>t</B>  n  ca610804 jb march 16  1978 10 12 pm 300 5 300 300 5 300 300 5 300 638 5 300 300
30 Q0 2786 49 0.025891002 Lucene_47
 with <B>text</B> <B>formatting</B> programs  so mixtures of <B>text</B> and mathematics may be handled simply  this paper  typesetting  photocomposition compiler-compiler  graphics  printing  <B>text</B> processing  4.12 4.22 8.2
30 Q0 1112 50 0.025487814 Lucene_47
 to the dictionary again  testing each time to <B>see</B> if the words match-assuming one of these errors occurred  during a test run on garbled <B>text</B>  correct identifications were made for over 95 percent of these error
30 Q0 3150 51 0.025457304 Lucene_47
 july  1979 winograd  <B>t</B>  programming  programming languages  programming <B>systems</B>  <B>systems</B> <B>systems</B> is leading to basic changes in the nature of programming  current programming language concepts will not be adequate for building and maintaining <B>systems</B> of the complexity called of a machine s order code  higher level programming <B>systems</B> can provide the means to understand
30 Q0 1324 52 0.024991807 Lucene_47
-answering <B>systems</B> which are programmed and operating are described and reviewed  the <B>systems</B> range from a conversation machine to programs which make sentences about pictures and <B>systems</B> which translate from english into logical calculi  <B>systems</B> are classified as list-structured data-based  graphic data-based  <B>text</B>-based and inferential  principles and methods of operations are detailed
30 Q0 2314 53 0.024848705 Lucene_47
requirements for advanced programming <B>systems</B> for list processing list processing <B>systems</B> should the requirements specified are applicable to the design of advanced programming <B>systems</B> for a wide range of applications  three aspects of programming <B>systems</B> are highlighted  good interactive facilities programming of various control regimes <B>including</B> multiprocesses  coroutines and backtracking
30 Q0 1739 54 0.024483856 Lucene_47
 as object language  the object program then accepts the <B>text</B> to be searched as input and produces a signal every time an embedded string in the <B>text</B> matches the given regular expression  <B>examples</B>regular expression search algorithm a method for locating specific character strings embedded in character <B>text</B> is described and an implementation of this method in the form of a compiler
30 Q0 1435 55 0.0241851 Lucene_47
design of computer simulation experiments for industrial <B>systems</B> the aim of this paper is to provide background information on the existing literature on experimental design techniques which may be applicable to the design of computer simulation experiments for industrial <B>systems</B>  although major  naylor  <B>t</B>  h  ca660502 jb march 3  1978 10 20 am 1435 5 1435 1435 5 1435 1435 5 1435 1517 5 1435 1435 6
30 Q0 3025 56 0.023165384 Lucene_47
 the pdp-6  circa 1963  over five generations of implementations to presently include <B>systems</B> covering to time sharing computing <B>systems</B>  transferring hardware technology within dec  and elsewhere  and serving as a model for single user and timeshared interactive minicomputer microcomputer <B>systems</B>  cacm january  1978 bell  c  kotok  a  hastings  <B>t</B>  hill  r  computer structures  architecture  operating
30 Q0 2859 57 0.022961004 Lucene_47
 are valid for a much larger class of models  <B>including</B> those more nearly like real <B>systems</B> that the simple model are tested against some measurements of program behavior and simulations of <B>systems</B> usinginterference in multiprocessor computer <B>systems</B> with interleaved memory this paper analyzes the memory interference caused by several processors simultaneously using several memory modules  exect
30 Q0 1001 58 0.022905638 Lucene_47
copyright aspects of computer usage this paper is concerned with the question of <B>what</B> constitutes infringement of a copyright on a book or other nondramatic literary work when the work is fed into a computer and is indexed  analyzed  partially reprinted  or otherwise utilized by the computer to produce eye-readable output  the question of copyrightability of programs and infringement
30 Q0 1248 59 0.022905638 Lucene_47
on the automatic simplification of computer programs presented in this paper is the problem of writing a program which would examine any other program and perform such simplifications on it as can be detected from the argument-program s form alone  without having any knowledge of <B>what</B> it is supposed to do  cacm june  1965 nievergelt  j  ca650607 jb march 6  1978 10 24 pm 1248 5 1248 1248 5 1248
30 Q0 1413 60 0.022905638 Lucene_47
a vision of technology and education educational technology is currently quite fashionable  here  as in many other branches or aspects of technology  changes possible in the next generation or two are now known as ideas  discoveries or inventions  the unknown is whether the potential will become the actual and  if so  on <B>what</B> time scale  this ignorance stems largely from ignorance about
30 Q0 2305 61 0.022905638 Lucene_47
the  plankalkul  of konrad zuse  a forerunner of today s programming languages plankalkul was an attempt by korrad zuse in the 1940 s to devise a notational and conceptual system for writing <B>what</B> today is termed a program  although this early approach to a programming language did not lead to practical use  the plan is described here because it contains features that are standard in today s
30 Q0 2519 62 0.022905638 Lucene_47
on the problem of communicating complex information the nature of the difficulty involved in communicating mathematical results between scientists using a computer based information retrieval system is examined  the problem is analyzed in terms of psychological and information-processing processes  and <B>what</B> turns out to be a vicious circle of effects is described  these include ways of augmenting
30 Q0 2764 63 0.022905638 Lucene_47
an intelligent analyzer and understander of english the paper describes a working analysis and generation program for natural language  which handles paragraph length input  its core is a system of preferential choice between deep semantic patterns  based on <B>what</B> we call  semantic density   the system is contrasted   1  with syntax oriented linguistic approaches  and  2  with theorem proving
30 Q0 2835 64 0.022905638 Lucene_47
recursion analysis for compiler optimization a relatively simple method for the detection of recursive use of procedures is presented for use in compiler optimization  implementation considerations are discussed  and a modification of the algorithm is given to further improve optimization  this analysis can also be used to determine <B>what</B> possible subset of values could be assumed by variables
30 Q0 633 65 0.022722084 Lucene_47
simulation and analysis of biochemical <B>systems</B>  iii  analysis and pattern recognition  cacm february  1962 garfinkel  d  polk  w  higgins  j  j  ochser  r  <B>t</B>  ca620210 jb march 20  1978 3 43 pm 238 4 633 633 4 633 633 4 633 643 4 633 238 5 633 633 5 633 633 5 633 633 5 633 643 5 633 238 6 633 633 6 633 633 6 633 643 6 633
30 Q0 320 66 0.02254574 Lucene_47
logic-structure tables logic tables are an excellent way of developing and expressing the logic required in procedures  operations  <B>systems</B> and circuits  a set of rules for writing and using logic tables is explained by means of some simple <B>examples</B>  then the logic structure of a vending machine is given in which two logic tables are used  logic tables are two-dimensional in nature  enabling us
30 Q0 1256 67 0.021804078 Lucene_47
dynamic variable <B>formatting</B> cacm may  1965 king  d  r  ca650515 jb march 7  1978 12 53 pm 1256 5 1256 1256 5 1256 1256 5 1256
30 Q0 1652 68 0.021765927 Lucene_47
a code for non-numeric information processing applications in online <B>systems</B> a code has been specifically designed to simplify the internal information processing operations within an online computer system with respect to non-numeric applications  and to maximize the transfer rate in area such as information retrieval  document classification  computer-aided teaching and <B>text</B> editing
30 Q0 1711 69 0.021765927 Lucene_47
 of using copyrighted material in information storage and retrieval <B>systems</B>  <B>including</B> the pending
30 Q0 2030 70 0.021765927 Lucene_47
 parsers for context-sensitive grammars and general rewriting <B>systems</B>  and the difference between  kuno in several respects  <B>including</B> the space-time trade-off and the degree of context dependence
30 Q0 2739 71 0.021765927 Lucene_47
the restriction language for computer grammars of natural language over the past few years  a number of <B>systems</B> for the computer analysis of natural language sentences have been based on augmented context-free grammars  a context-free grammar which defines a set of parse trees for a sentence  plus  experience parsing <B>text</B> sentences with the comprehensive english grammar of the n  linguistic string project
30 Q0 1698 72 0.021595644 Lucene_47
 the model we answer questions like  how many processes are suspended waiting for console input  <B>what</B> is the maximum rate at which a process can execute  <B>what</B> bounds can be set on overall buffer requirements
30 Q0 2989 73 0.021595644 Lucene_47
 be sufficient all of the time  most of the time  <B>what</B> would the overhead be if the number of registers were reduced  <B>what</B> are registers used for during their lives  the paper also discusses the problem
30 Q0 2629 74 0.021485986 Lucene_47
the unix time-sharing system unix is a general-purpose  multi-user  interactive operating system for the digital equipment corporation pdp-11 40 and 11 45 computers  it offers a number of features seldom found even in larger operating <B>systems</B>  <B>including</B>   1  a hierarchical file system incorporating 100 subsystems <B>including</B> a dozen languageshis paper discusses the nature and implementation
30 Q0 533 75 0.021175964 Lucene_47
 for such a technique often arises in testing the performance of data processing and engineering <B>systems</B>  where and produces strict-sense stationary noise which agrees approximately with r <B>t</B>   the prescribed auto-covariance function  acf   over an interval  -<B>t</B> 0   <B>t</B> 0    the method consists of approximating
30 Q0 2738 76 0.020578753 Lucene_47
use of the concept of transparency in the design of hierarchically structured <B>systems</B> this paper deals with the design of hierarchically structured programming <B>systems</B>  it develops a method of <B>examples</B> from hardware and software are given as illustrations of the method  cacm july  1975 parnas  d  l  siewiorek  d  p  hierarchical <B>systems</B>  bottom up design  levels of abstraction
30 Q0 3134 77 0.020578753 Lucene_47
 a method for the organization and retrieval of attribute based information <B>systems</B>  using the normal some other attributes as well   several <B>examples</B> are given  the results with respect to the number of information <B>systems</B>  the normal multiplication table method yields far more rapid retrieval with a more economical space requirement than conventional <B>systems</B>  moreover this method incorporates
30 Q0 1415 78 0.02015425 Lucene_47
 immediate prospects for improving the performance of automatic message retrieval <B>systems</B>  they may have practical value in man-machine <B>systems</B> using human monitors to select the preferred syntactic interpretation of a sentence  cacm june  1966 carmody  b  <B>t</B> jones jr   p  e  ca660606 jb march 3  1978
30 Q0 2990 79 0.02015425 Lucene_47
effective information retrieval using term accuracy the performance of information retrieval <B>systems</B> can be evaluated in a number of different ways  much of the published evaluation work is based of automatic indexing <B>systems</B> that have been used successfully in experimental situations  among  1977 yu  c  <B>t</B>  salton  g  information retrieval  automatic indexing  content analysis  term accuracy
30 Q0 1856 80 0.020033022 Lucene_47
 <B>text</B>  when <B>text</B> which the program has not seen before is input to it  it comprehends that <B>text</B> by correctly relating each  explicit or implicit  assertion of the new <B>text</B> to a large memory copies of the parts of its memory which have been found to relate to the new <B>text</B>  adapting and combining these copies to represent the meaning of the new <B>text</B>  by this means  the meaning of all <B>text</B>
30 Q0 2311 81 0.019771855 Lucene_47
  hardware <B>systems</B>  software <B>systems</B>  <B>systems</B> development process  functional <B>systems</B>  management <B>systems</B> 2.0 3.50 4.0 6.20 ca720717 jb january 30  1978 11 22 am 2311 5 2311 2311 5 2311 2311 5 2311
30 Q0 2570 82 0.019476073 Lucene_47
a comparison of list schedules for parallel processing <B>systems</B> the problem of scheduling two or more processors to minimize the execution time of a program which consists of a set of partially ordered tasks is studied  cases where task execution times are deterministic and others in which execution is presented  cacm december  1974 adam  <B>t</B>  l  chandy  k  m  dickson  j  r  parallel processing
30 Q0 1012 83 0.019144392 Lucene_47
formal parsing <B>systems</B> automatic syntactic analysis has recently become important for both natural language data processing and syntax-directed compilers  a formal parsing system g    v u <B>t</B> r  consists of two finite disjoint vocabularies  v and <B>t</B>  a many-many map  u  from v onto <B>t</B>  and a recursive set r of strings in <B>t</B> called syntactic sentence classes  every program for automatic syntactic
30 Q0 1625 84 0.019088034 Lucene_47
on the automatic simplification of source-language programs methods of simplification that can be applied automatically to programs written in an algol-like language are discussed  the simplifications are based on the form of the program and the knowledge obtained by a processor  without any understanding of <B>what</B> the program is supposed to do  these methods have been implemented in a processor
30 Q0 2390 85 0.019088034 Lucene_47
 subtree of theorems required to bring them from <B>what</B> they already know to the background knowledge which
30 Q0 2580 86 0.019088034 Lucene_47
a method for composing simple traditional music by computer a method is described for composing musical rounds by computer  this method uses some music theory plus additional heuristics  fundamental to the method is a set of productions together with sets of applicability rules and weight rules which operate on the productions deciding when and to <B>what</B> extent they are available for use  several
30 Q0 2802 87 0.019088034 Lucene_47
 of its environment  thus modeling <B>what</B> is known as stepwise program refinement as well as program
30 Q0 1517 88 0.019028582 Lucene_47
methods for analyzing data from computer simulation experiments this paper addresses itself to the problem of analyzing data generated by computer simulations of economic <B>systems</B>  we first turn to a hypothetical firm  whose operation is represented by single-channel  multistation queueing model  cacm november  1967 naylor  <B>t</B>  h  wertz  k  wonnacott  <B>t</B>  h  ca671103 jb february 26  1978 3 15 pm
30 Q0 1485 89 0.018788118 Lucene_47
 forms of each of these components are also described  compared and evaluated  many <B>examples</B> the most convenient ways of structuring programs  organizing <B>systems</B> and referencing data  cacm february
30 Q0 2749 90 0.018788118 Lucene_47
significant event simulation this paper compares a new method of simulation organization  called the significant event method  with an old one  called the clock pulse method  using as <B>examples</B> two automobile traffic models  the significant event method is found to be more efficient than the clock that the significant event method can be of value in the simulation of some <B>systems</B> when computational
30 Q0 2907 91 0.018261394 Lucene_47
the optimal approach to recursive programs the classical fixed poin <B>t</B> approach toward recursive programs suggests choosing the  least defined fixed poin <B>t</B>  as the most appropriate solution  in contrast to the least defined fixed poin <B>t</B>  embodies the maximal amount of valuable information for proving properties of optimal fixed poin <B>t</B> are given  the presentation is informal  with emphasis
30 Q0 3128 92 0.018169845 Lucene_47
 arguments and also simplifies implementation in distributed <B>systems</B>  the mechanism is defined formally  and then several <B>examples</B> of its use are given  the relationship of the mechanism to protection synchronization  interprocess communication  distributed <B>systems</B>  security models  mutual exclusion
30 Q0 3087 93 0.018116975 Lucene_47
 of this system is described and illustrated with detailed <B>examples</B> of the operation of system components and <B>examples</B> of overall system operation  the language processing portion of the system uses of important issues in programming natural language <B>systems</B> for limited domains  and the relationship
30 Q0 2399 94 0.017778438 Lucene_47
a crt editing system a test-editing and manipulation program is described  the program operates from low-cost cathode-ray tube entry and display stations with keyboard and 13 function buttons  applications  potential economy of operation  and some aspects of implementation are discussed  cacm january  1972 irons  e  <B>t</B>  djorup  f  m  editing  <B>text</B>  cathode-ray tube entry display  time-sharing 3.7
30 Q0 1341 95 0.017684484 Lucene_47
levels of computer <B>systems</B> in building current computer <B>systems</B>  we tend to break them down into  levels  of control  command and communication  in using the system  we break our problems down on the usefulness of future <B>systems</B>  particularly with regard to such trends as time sharing  parallel programming  and  eventually  <B>systems</B> which learn  in this essay some of these questions are posed
30 Q0 1912 96 0.017684484 Lucene_47
simulation of outpatient appointment <B>systems</B> an experimental computer program is described which simulates appointment <B>systems</B> employed by outpatient departments of hospitals  both major kinds of appointment <B>systems</B>-individual and block-can be simulated  the purpose of the simulator is to enable the user to evaluate the effectiveness of alternative appointment <B>systems</B> in a given clinical
30 Q0 2002 97 0.017412743 Lucene_47
 is demonstrated  these modules are specified independently and are independent of the axis <B>systems</B> or other utility software  consisting of  macros  to produce self-scaled plots  formal tablets of <B>text</B>
30 Q0 2582 98 0.017412743 Lucene_47
improving locality by critical working sets a new approach to program locality improvement via restructuring is described  the method is particularly suited to those <B>systems</B> where primary memory is managed according to a working set strategy  it is based on the concept of critical working set to restructure an interactive <B>text</B> editor and the file system module of an operating system have shown its
30 Q0 2622 99 0.017412743 Lucene_47
a user authentication scheme not requiring secrecy in the computer in many computer operating <B>systems</B> a user authenticates himself by entering a secret password known solely to himself and the system  the system compares this password with one recorded in a password table which is available to only of the system  <B>including</B> all relevant code and data bases  may be known by anyone attempting
30 Q0 1977 100 0.017285105 Lucene_47
an interactive display for approximation by linear programming an interactive program with a graphical display has been developed for the approximation of data by means of a linear combination of functions  <B>including</B> splines  selected by the user  the coefficients of the approximation  this interactive system is described and several <B>examples</B> of its use are given  cacm november  1970 lafata  p
*************Query 31*************************

31 Q0 1686 1 0.22041255 Lucene_47
computer synthesis of holograms for 3-<B>d</B> display optical and <B>digital</B> holography are reviewed  the <B>mathematical</B> model and computational techniques of the authors  <B>digital</B> holographic process based on point apertures for the <B>image</B> is discussed  photographs of the <B>images</B> reconstructed from transforms  computer <B>applications</B>  display device  photography  physics  mathematics  <B>image</B>
31 Q0 3013 2 0.17602997 Lucene_47
 of the standard <B>digital</B> <B>approximations</B> to the gradient  cacm february 1978 schachter  b  rosenfeld  a  <B>image</B>some new methods of detecting step edges in <B>digital</B> pictures this note describes two operators that respond to step edges  but not to ramps  the first is similar to the <B>digital</B> laplacian  but <B>uses</B> the max  rather than the sum  of the x and y second differences  the second <B>uses</B> the difference
31 Q0 2142 3 0.14841816 Lucene_47
 december  1971 gordon r  herman  g  t  approximation  biomedical <B>image</B> <B>processing</B>  efficient encoding  <B>image</B> <B>processing</B>  linear programming  <B>mathematical</B> programming  monte carlo techniques the gray levels of a <B>digital</B> picture at the individual points from the sums of the gray levels along determined and the problem is to <B>find</B> the  most representative  picture  three algorithms
31 Q0 2065 4 0.1450414 Lucene_47
 laboratory at mit conceived by marvin minsky  cacm may  1970 hodes  l  <B>image</B> <B>processing</B>  biomedical <B>image</B> <B>processing</B>  on-line <B>image</B> <B>processing</B>  semiautomatic <B>image</B> <B>processing</B>  data structure  structurea programming system for the on-line analysis of biomedical <B>images</B> a preliminary description interaction  this system is intended for a wide variety of biomedical <B>applications</B>  as an example  the methods
31 Q0 3047 5 0.14154407 Lucene_47
 the technique using landsat <B>images</B> and <B>digital</B> terrain models  cacm november  1978 horn  b  bachman  b  <B>image</B> registration  synthetic <B>images</B>  surface models  automatic hill shading  <B>digital</B> terrainusing synthetic <B>images</B> to register real <B>images</B> with surface models a number of <B>image</B> analysis tasks navigation using visible light or radar <B>images</B> requires exact alignment of such <B>images</B> with <B>digital</B>
31 Q0 1144 6 0.13870473 Lucene_47
<B>digital</B> computer determination of alpha source activity a technique is described for determining the activity and homogeneity of an alpha source  it is believed that the technique  using a <B>digital</B> computer  has many <B>uses</B> and <B>applications</B> in the field of nuclear physics  the technique involves computer manipulation of the <B>digital</B> <B>image</B> of the nuclear source  experimental details are given  cacm
31 Q0 2370 7 0.11544282 Lucene_47
 are described and typical <B>applications</B> in scanner control  optical character recognition and <B>image</B>  interactive terminal  <B>image</B> <B>processing</B>  pattern recognition 4.41 6.35 ca720403 jb january 31  1978 1 47an experimental laboratory for pattern recognition and signal <B>processing</B> an interactive computer interfaced to a process control <B>digital</B> computer  dot-mode and vector displays  analog input and output
31 Q0 2283 8 0.11147376 Lucene_47
 that the algorithm operating with the triangular array is the most sensitive to <B>image</B> irregularities and <B>noise</B>  yet it will yield a thinned <B>image</B> with an overall reduced number of points algorithms  rectangular  hexagonal  triangular arrays  <B>image</B> <B>processing</B>  skeleton 3.64 ca720907 jb january algorithms are developed  one each for <B>use</B> with rectangular  hexagonal  and triangular arrays
31 Q0 2421 9 0.09060951 Lucene_47
 a buffer area large enough to accommodate the entire screen  on the other hand  those which <B>use</B> a small conversion algorithm described here <B>uses</B> a linked list data structure to process the lines of the drawing is used to accumulate the binary <B>image</B> for a group of scan lines  when this portion of the drawing has been plotted  the buffer is reused for the next portion  because of the list <B>processing</B> procedures used
31 Q0 2051 10 0.067813605 Lucene_47
  the program tabulates the correspondences  and <B>uses</B> list <B>processing</B> techniques to sort and count them  each pair of words is then assigned a relative <B>value</B> that is a function of the total frequency  <B>d</B>  g  comparative linguistics  natural language <B>processing</B>  comparative method  historicala pl <B>i</B> program to assist the comparative linguist a practical pl <B>i</B> program is described which can
31 Q0 1839 11 0.06714358 Lucene_47
<B>singular</B> <B>value</B> <B>decomposition</B> of a complex matrix  algorithm 358  f1  4,5   cacm october  1969 businger  p  a  goulub  g  <B>h</B>  <B>singular</B> values  matrix <B>decomposition</B>  least squares solution  pseudoinverse 5.14 ca691007 jb february 15  1978 3 22 pm 1839 5 1839 1839 5 1839 1839 5 1839
31 Q0 533 12 0.06606497 Lucene_47
<B>digital</B> synthesis of correlated stationary <B>noise</B> in this note we propose a method of generating stationary <B>noise</B> with a prescribed auto-covariance function by <B>digital</B> methods  the need for such a technique often arises in testing the performance of data <B>processing</B> and engineering systems  where inputs corrupted with correlated <B>noise</B>  of a known form  are required  the technique is quite simple
31 Q0 1891 13 0.06591221 Lucene_47
 the raster display  brad  recently developed at brookhaven  the system <B>uses</B> a rotating refresh memory the projected video <B>images</B> of an object  viewed from two separate points  the resulting video maps color guns of a color television monitor  thus creating a superimposed <B>image</B> on the screen  optical separation is achieved by viewing the <B>image</B> through color filters  the display is interactive
31 Q0 3015 14 0.06570648 Lucene_47
 for <B>image</B> reconstruction of the choice of the relaxation parameters are discussed  cacm february  1978 herman  g  lent  a  lutz  p  biomedical <B>image</B> <B>processing</B>  <B>image</B> reconstruction  x-ray tomography  <B>mathematical</B> programming  linear inequalities  relaxation techniques 3.12 3.17 3.34 3.63 5.14 5.18 5.41relaxation methods for <B>image</B> reconstruction the problem of recovering an <B>image</B>  a function of two
31 Q0 674 15 0.0633582 Lucene_47
application of ibm 1620 edp methods to the calculation of the formation constants of complex irons cacm november  1963 <B>andrews</B>  a  <B>c</B>  hassler  j  decou  f  ca631118 jb march 13  1978 3 18 pm 674 5 674 674 5 674 674 5 674
31 Q0 2528 16 0.06260433 Lucene_47
binary pattern reconstruction from projections  z   algorithm r445  cacm march  1973 lau  j  pattern reconstruction  <B>image</B> reconstruction  data compression  picture <B>processing</B> 3.63 5.30 ca730311 jb january 24  1978 10 22 am 2528 5 2528 2528 5 2528 2528 5 2528
31 Q0 2188 17 0.05699733 Lucene_47
 <B>applications</B>  the optimum configurations are in turn used to <B>find</B> general display system design guidelines  cacm june  1971 foley  j  <B>d</B>  design guidelines  graphic display systems  <B>mathematical</B> model response time  system cost  and the distribution of data storage and <B>processing</B> between the graphics processor and its supporting data <B>processing</B> system  the work reported here develops an objective
31 Q0 973 18 0.0568155 Lucene_47
 potential measurements-may be viewed as a nonlinear multipoint boundary <B>value</B> problem  a feasible solution  employing quasilinearization and high-speed <B>digital</B> computers  is given  cacm november  1964 bellman  r  collier  <B>c</B>  kagiwada  <B>h</B>  kalaba  r  selvester  r  ca641110 jb march 9  1978 4 00 pm 973 5  a <B>mathematical</B> model relating ventricular dipoles to surface potentials is sketched
31 Q0 1327 19 0.05658661 Lucene_47
<B>use</B> of decision tables in computer programming a decision table is a tabular form for displaying these advantages to <B>use</B> in that it enables one to program directly from a decision table  the technique is based on the creation of a binary <B>image</B> of a limited entry decision table in computer memory  a binary <B>image</B> of a given set of input conditions can also be created  this data <B>image</B> is used
31 Q0 2402 20 0.054867808 Lucene_47
 building  <B>i</B> e  the <B>use</B> of chemical information to frame  structural hypotheses  which can of interactive  three-dimensional  computer graphics systems coupled to powerful <B>digital</B> computers effective <B>use</B> of an interactive graphics system  model building by cross-correlations has intrinsic advantages over usual crystallographic techniques based on the autocorrelation or <B>patterson</B>
31 Q0 1741 21 0.053478315 Lucene_47
 employed is that of programmatically generating a binary <B>image</B> of the desired display in a computer  the <B>image</B> is written on a rotating drum memory  independent read heads continuously display device  the technique has two drawbacks  a computer must compute any <B>image</B> to be displayed  also to calculate the coordinates at the selected point in the input space  cacm june  1968 ophir  <B>d</B>
31 Q0 1543 22 0.05076602 Lucene_47
 for extending the area of application of <B>digital</B> computers beyond the numerical data <B>processing</B> stage  by the <B>use</B> of tensor calculus and a computer language designed to facilitate symbolic <B>mathematical</B> computation  a method has been devised whereby a <B>digital</B> computer can be used to do non-numeric work  a <B>digital</B> computer has been used to derive the equations of motion of a point mass in a general
31 Q0 2529 23 0.050083466 Lucene_47
binary pattern reconstruction from projections  z   algorithm a445  cacm march  1973 chang  s  pattern reconstruction  <B>image</B> reconstruction  data compression  picture <B>processing</B> 3.63 5.30 ca730310 jb january 24  1978 10 25 am 2142 4 2529 2529 4 2529 2231 5 2529 2529 5 2529 2529 5 2529 2529 5 2529
31 Q0 2674 24 0.048381444 Lucene_47
 has been described which extends the capabilities of this organization to <B>include</B> general graphics this display are presented  one is most suitable to non-interactive <B>applications</B> and the other to interactive <B>applications</B>  the algorithms were implemented in fortran on the cdc 6400 computer  results obtained  1974 barrett  r  <B>c</B>  fordan  b  w  jr  graphics  scan conversion  raster display  line drawing
31 Q0 2893 25 0.048152737 Lucene_47
computers as an innovation in <B>american</B> local governments computers and electronic data <B>processing</B> are a major technological innovation in the operations of <B>american</B> local government  this paper  and in the extensiveness and sophistication of their automated <B>applications</B>  the central question addressed is  what might explain the differences between governments in the extent to which they adopt and <B>use</B>
31 Q0 2486 26 0.043850627 Lucene_47
 of photocomposition  special problems arise in highly technical material such as <B>mathematical</B> formulas  new solutions to several of these problems have been devised in the information system of the <B>american</B> institute of physics  they <B>include</B>  the representation of special characters  foreign alphabets  <B>mathematical</B> symbols  etc   not available on input keyboards or on the photocomposer  the generation
31 Q0 1350 27 0.04371579 Lucene_47
 -- gt  cy 1      y m    m  gt   o  where z and y <B>i</B>  are intermediate symbols and <B>c</B> a terminal symbol  since the predictive analyzer at harvard <B>uses</B> a standard-form grammar  it can accept the language information <B>describing</B> its derivation from the <B>original</B> context-free grammar  a technique for performing different from the structural descriptions sd g x  assigned to the same sentence by the <B>original</B> context
31 Q0 1929 28 0.043570727 Lucene_47
<B>images</B> from computers and microfilm plotters <B>digital</B> computers are widely used for the <B>processing</B> commonly employed devices for obtaining permanent graphical output from <B>digital</B> computers is the microfilm plotter  regrettably  present models have no provision for producing <B>images</B> with a continuous half tone pictures from a microfilm plotter under the control of a <B>digital</B> computer  illustrative
31 Q0 2054 29 0.040512122 Lucene_47
on the feasibility of voice input to an on-line computer <B>processing</B> system an on-line <B>digital</B> computer <B>processing</B> system is considered in which an ordinary telephone is the complete terminal device audio responses from the machine  the feasibility of implementing such a system with a fortran-<B>like</B>  cacm june  1970 elder  <B>h</B>  a  speech recognition  word recognition  pattern-matching  pattern
31 Q0 1665 30 0.038507327 Lucene_47
 and easy to <B>use</B>  cacm december  1968 johnson  w  l  porter  j  <B>h</B>  ackley  s  <B>i</B>  ross  <B>d</B>  t  character is dealt with in this tutorial <B>article</B> by the <B>use</B> of the aed rword system  developed at m  as part to a unique condition in the lexical <B>processing</B> of a character string  at each state a character is read an ordered sequence of events  this allows the system to be used in a range of <B>applications</B> outside
31 Q0 1424 31 0.037920393 Lucene_47
automatic analysis of electronic <B>digital</B> circuits using list <B>processing</B> a mapping from black diagrams of <B>digital</B> circuits to list structures is described  together with a list <B>processing</B> program written for the control data 3600 which <B>uses</B> this mapping to automatically carry out circuit analysis  cacm may  1966 shalla  l  ca660513 jb march 3  1978 9 24 am 1424 5 1424 1424 5 1424 1424 5 1424 1846
31 Q0 1423 32 0.03769127 Lucene_47
 applies to all matrices  it also has many <B>applications</B> in numerical analysis  but it is not widely-<B>singular</B> matrices  which gives the generalized inverse with little extra effort and with no additional the special case when m n and a is non-<B>singular</B> and the case when m gt n and rank a    n of significance which results in forming the <B>product</B> a a explicitly  cacm may  1966 rust  r  burrus  w
31 Q0 78 33 0.037148967 Lucene_47
remarks on the practical solution of characteristic <B>value</B> problems this paper is concerned with the practical solution of characteristic <B>value</B> problem for an ordinary differential equation  it is at once apparent that sequential computers  be they <B>digital</B> or analog  solve initial <B>value</B> problems  rather than boundary <B>value</B> problems  and some <B>mathematical</B> process must be found to compensate
31 Q0 2788 34 0.03659872 Lucene_47
<B>finding</B> circles by an array of accumulators cacm february  1975 kimme  <B>c</B>  balard  <B>d</B>  sklansky  j  picture <B>processing</B>  pattern recognition  curve detection line fitting 3.63 ca750211 jb january 10  1978 9 15 am 2788 4 2788 2910 4 2788 2400 5 2788 2788 5 2788 2788 5 2788 2788 5 2788 2910 5 2788 2400 6 2788 2788 6 2788
31 Q0 2689 35 0.035650957 Lucene_47
a crt report generating system cacm january  1974 lucas  <B>h</B>  <B>c</B>  jr  report generation  automated systems design  data <B>processing</B>  management 3.50 4.12 4.22 ca740110 jb january 18  1978 1 40 pm 2689 5 2689 2689 5 2689 2689 5 2689
31 Q0 1415 36 0.035615224 Lucene_47
automatic derivation of microsentences the <B>decomposition</B> of long complex english sentences into shorter kernel-<B>like</B> constituent sentences  microsentences has often been suggested as an avenue toward idea was to extract the <B>subject</B>  verb and object  if any  of each clause and to reassemble have practical <B>value</B> in man-machine systems using human monitors to select the preferred syntactic
31 Q0 2687 37 0.035160452 Lucene_47
  <B>c</B>  graphics  raster display  line drawing  discrete <B>image</B>  dot generation  matrix displays 4.41a cell organized raster display for line drawings raster scan computer graphics displays with  real time  character generators have previously been limited to alphanumeric characters  a display is described which extends the capabilities of this organization to <B>include</B> general graphics
31 Q0 1726 38 0.03451147 Lucene_47
 performance figures are obtained  is thought to be suitable for <B>processing</B> very complicated material  and in <B>applications</B> where the utmost accuracy is not necessary  an unsupervised mode is advocated  here  unformatted text operator-controlled reader  online reader  text-<B>image</B> discrimination  reading machine 3.63
31 Q0 2211 39 0.034510657 Lucene_47
scanned-display computer graphics a television-<B>like</B> scanned-display system has been successfully implemented on a honeywell ddp-224 computer installation  the scanned <B>image</B> is stored in the core memory of the computer  and software scan conversion is used to convert the rectangular coordinates graphical interaction  a scanned <B>image</B> of size 240 x 254 points is displayed at a 30 frame-per-second
31 Q0 1108 40 0.03448079 Lucene_47
<B>digital</B> data processor for tracking the partially illuminated moon  a study of lunar tracking illuminated moon  the data <B>processing</B> portion of the system is presented in detail of the entire system and the effect data <B>processing</B> considerations have on the design of the tracker system  the system basically consists of an optical sensor  <B>digital</B> computer and tracker drive mechanism
31 Q0 2829 41 0.0343119 Lucene_47
 function  the shape and size of this weighting function are chosen using <B>digital</B> signal <B>processing</B>texture and reflection in computer generated <B>images</B> in 1974 catmull developed a new algorithm for rendering <B>images</B> of bivariate surface patches  this paper describes extensions of this algorithm to the intensity obtained from the texture mapping  several examples of <B>images</B> synthesized using
31 Q0 104 42 0.034262717 Lucene_47
<B>digital</B> simulation of discrete flow systems  the discrete flow systems discussed are characterized by the movement of randomly arriving items along interacting channels  programing a <B>digital</B> computer  with the objective being optimization of parameters such as storage capacities and <B>processing</B> rates  in the other control decisions  cacm december  1960 moore  <B>c</B>  j  lewis  t  s  ca601212 jb march 20  1978 6 27 pm 104 5
31 Q0 1700 43 0.033472665 Lucene_47
 of 33,000 <B>subject</B> index entries  a search program using the device has been operational since late using the inclusive or operation  if  at search time  the logical <B>product</B>  using the and operation of over 600,000 <B>subject</B> index entries estimated to average 60 characters each  longer texts  such as abstracts  could be handled by multiple masks  cacm september 1968 hutton  f  <B>c</B>  peekaboo  superimposed
31 Q0 1440 44 0.032994866 Lucene_47
starting <B>approximations</B> for square root calculation on ibm system 360 several starting <B>approximations</B> for square root calculation by newton s method are presented in a form to facilitate their <B>use</B> in ibm system 360 square root routines  these <B>approximations</B> <B>include</B> several for the range  1 16  1   which is the interval of primary interest on ibm system 360  cacm april  1966 fike  <B>c</B>  t  ca660409
31 Q0 3059 45 0.0329041 Lucene_47
models for parallel <B>processing</B> within programs  application to cpu <B>i</B> o and <B>i</B> o <B>i</B> o overlap approximate queueing models for internal parallel <B>processing</B> by individual programs in a multiprogrammed system are developed in this paper  the solution technique is developed by network <B>decomposition</B>  multiprogramming  parallel <B>processing</B>  queueing network models  multiprocessing of computation and <B>i</B> o 4.32
31 Q0 2971 46 0.032796916 Lucene_47
 and can be learned or implemented without the following subsets  cacm may  1977 holt  r  <B>c</B>  wortman  <B>d</B>sp k  a system for teaching computer programming sp k is a compatible subset of the pl <B>i</B> language to encourage structured problem solving by computers  to make the language easy to learn and <B>use</B> language is suitable for in troducing programming concepts used in various <B>applications</B>  including
31 Q0 2231 47 0.031740494 Lucene_47
the reconstruction of binary patterns from their projections given the horizontal and vertical projections of a finite binary pattern f  can we construct the <B>original</B> pattern f  in this paper we give a characterization of patterns that are reconstructable from their projection  three algorithms january  1971 chang  s  pattern reconstruction  <B>image</B> reconstruction  data compression  pattern
31 Q0 1588 48 0.031372573 Lucene_47
pl <B>i</B> list <B>processing</B> the concepts of list <B>processing</B> have been introduced into the pl <B>i</B> language  with these new facilities  it is possible to write pl <B>i</B> procedures that operate on simple and complex eliminated in the list-<B>processing</B> facilities of pl <B>i</B>  the basic concepts of list <B>processing</B> and the philosophy of the pl <B>i</B> language extensions are discussed  in addition  several detailed list-<B>processing</B>
31 Q0 1196 49 0.03109343 Lucene_47
<B>applications</B> of differential equations in general problem solving a large class of problems leading to <B>digital</B> computer <B>processing</B> can be formulated in terms of the numerical solution of systems of ordinary differential equations  powerful methods are in existence for the solution of such systems for <B>processing</B> many problems  this is true from the point of view of ease of programming  ease of debugging
31 Q0 1721 50 0.030909711 Lucene_47
 of <B>singular</B> points off a system of two differential equations is used in developing the method  the intersection point to be determined is identified with such a <B>singular</B> point and appropriate modifications are applied to the system to ensure that the <B>singular</B> point be stable  <B>i</B> e  all integrals which start in the neighborhood of the <B>singular</B> point will always approach this point if the integral parameter
31 Q0 2125 51 0.030611256 Lucene_47
 a smooth polygonal contour from a digitized <B>image</B> is illustrated  the ordered sequence of contour points and the connection graph of the <B>image</B> are first obtained by a modified ledley algorithm in one <B>image</B> scan  a minimal perimeter polygon subjected to specified constraints is then chosen  u  digitized <B>image</B>  connection tree  minimal polygon  optimal approximation  nonlinear programming
31 Q0 2826 52 0.030611256 Lucene_47
 by animating a stick figure representation of an <B>image</B>  this control sequence is then used to drive an <B>image</B> sequence through the same movement  the simplicity of the stick figure <B>image</B> encourages a high level technique permits skeleton control to be applied selectively to only those components of a composite <B>image</B>
31 Q0 2663 53 0.030215103 Lucene_47
a study of computer <B>use</B> in a graduate school of business cacm april  1974 lucas  <B>h</B>  <B>c</B>  jr  montgomery  <B>d</B>  b  larreche  j  <B>c</B>  education  management  business schools 1.50 1.52 ca740407 jb january 18  1978 9 35 am 2663 5 2663 2663 5 2663 2663 5 2663
31 Q0 1664 54 0.029530648 Lucene_47
an algorithm for deriving the equations of <B>mathematical</B> physics by symbolic manipulation a method is described whereby a <B>digital</B> computer can be used to derive the equations of <B>mathematical</B> physics in any curvilinear coordinate system requested by the user  the effectiveness of the technique  cacm december  1968 howard  j  <B>c</B>  tashjian  <B>h</B>  formac  navier-strokes equations  continuity equation
31 Q0 2254 55 0.029355124 Lucene_47
 under development at the university of illinois  cacm december  1972 phillips  j  r  adams  <B>h</B>  <B>c</B> for different types of arrays  so that subarrays may vary over the <B>original</B> array in a nearly arbitrary manner  these definitions are motivated with several realistic examples to illustrate the <B>value</B> information  these are described in sufficient detail to be of <B>value</B> in the design of other array
31 Q0 2993 56 0.029334385 Lucene_47
 function <B>subject</B> to the same constrain t set was attempted  but mps solved only one of these while giving an indication of infeasibility for the other  cacm february  1977 kotiah  t  <B>c</B>  t  steinberg  <B>d</B>  <B>i</B>
31 Q0 2396 57 0.029323548 Lucene_47
 a simplified semantic intersection procedure to <B>find</B> a valid interpretation of the input  while the semantic <B>processing</B> is similar to tlc s  the syntactic component includes the early <B>use</B> of parse treesmuse  a model to understand simple english muse is a computer model for natural language <B>processing</B>  based on a semantic memory network <B>like</B> that of quillian s tlc  muse  from a model to understand
31 Q0 2977 58 0.02924807 Lucene_47
 resource  cacm april  1977 lucac  <B>h</B>  <B>c</B>  jr  sutton  j  a  budgets  stage theories  stage hypothesis 3.50 in an organization  research on the data <B>processing</B> budgets of california counties fails to support the s-shaped curve or the <B>use</B> of budgets as a basis for a stage model  however  the results do not invalidate
31 Q0 615 59 0.028783593 Lucene_47
 this picture is of <B>value</B> to the analyst  the elements of an n-dimensional array must exist vector is the <B>subject</B> of this paper  it is noted that the index address transformation is computationally of implementing the transformation are described  cacm april  1962 hellerman  <B>h</B>  ca620402 jb march 20
31 Q0 1066 60 0.028738132 Lucene_47
growing <B>applications</B> of linear programming <B>use</B> of linear programming models has grown so change  it no longer is adequate merely to reduce a <B>mathematical</B> algorithm  <B>i</B> e  the simplex method  these viewpoints are influenced by the new demands that <B>applications</B> within the petroleum industry are placing entry  data file at the computer center  data <B>processing</B> and editing prior to solving the simplex
31 Q0 3057 61 0.028295893 Lucene_47
 picture points of a given gray level <B>i</B> to another gray level t <B>i</B>  such that if <B>i</B>  gt  j  then t <B>i</B>   gt  t j   the objective is to <B>find</B> a transformed <B>digital</B> picture of a given picture algorithm  picture <B>processing</B> 3.24 5.25 5.42 ca781004 dh january 29  1979 6 08 pm 3057 5 3057 3057
31 Q0 195 62 0.028149225 Lucene_47
what is a code  cacm may  1960 <B>patterson</B>  g  w  ca600502 jb march 22  1978 1 33 pm 195 5 195 195 5 195 195 5 195
31 Q0 2367 63 0.027824402 Lucene_47
  it is hoped that the proposal will make it easier to initiate courses on this <B>subject</B>  cacm april  1972 horowitz  e  morgan  <B>h</B>  l  shaw  a  <B>c</B>  computers and society  social implications  course proposal 1.0
31 Q0 2721 64 0.027725283 Lucene_47
the <B>digital</B> simulation of river plankton population dynamics this paper deals with the development of a <B>mathematical</B> model for and the <B>digital</B> simulation in fortran iv of phytoplankton claudson  r  m  <B>digital</B> simulation  <B>mathematical</B> modeling  plankton population dynamics  phytoplankton was made based on <B>approximations</B> of conditions in that river  although not totally accurate
31 Q0 2446 65 0.027191779 Lucene_47
analysis of skew representations of the symmetric group  algorithm a455  cacm september  1973 hunter  <B>d</B>  b  williams  j  m  symmetric group  skew representation  partition  young diagram  lattice permutation  binary model  <B>outer</B> <B>product</B> 5.30 ca730909 jb january 23  1978 8 49 am 2446 5 2446 2446 5 2446 2446 5 2446
31 Q0 2628 66 0.027179673 Lucene_47
minimal-total-<B>processing</B> time drum and disk scheduling disciplines this <B>article</B> investigates the application of minimal-total-<B>processing</B>-time  mtpt  scheduling disciplines to rotating storage units superior to the other  for most fixed-head drum <B>applications</B>  the sltf discipline is preferable to mtpt is the most time-consuming phase of the algorithm  cacm july  1974 fuller  s  <B>h</B>  drum scheduling  disk
31 Q0 2787 67 0.027127607 Lucene_47
  to <B>use</B> a more compact data representation and more efficient <B>processing</B> techniques  to take fuller timetabling algorithm  cacm march  1975 johnston  <B>h</B>  <B>c</B>  hoare  <B>c</B>  a  r  binary matrices  matrix
31 Q0 849 68 0.027117534 Lucene_47
<B>use</B> of tree structures for <B>processing</B> files in data <B>processing</B> problems  files are frequently used  a file organized into a tree-<B>like</B> structure is discussed  and it is shown that such a file may both is a parameter of the tree  it is also shown that optimizing the <B>value</B> of s leads to a search time structure is also discussed  cacm may  1963 sussenguth jr   e  <B>h</B>  ca630518 jb march 14  1978 10 49 am 435
31 Q0 531 69 0.027108613 Lucene_47
  an earlier paper  1  describes our general procedures for register maintenance by <B>use</B> of a <B>digital</B>person-matching by electronic methods record linkage in the updating of files is accomplished in many establishments through the <B>use</B> of a preassigned number  such as payroll number  customer number identification must be compared  this is a laborious operation which is <B>subject</B> to various errors
31 Q0 2786 70 0.02705136 Lucene_47
  and the <B>like</B> necessary to print according to <B>mathematical</B> conventions are all done automatically  for example  the input sum from <B>i</B> o to infinity x sub <B>i</B> pi over 2 produces  formula   the syntax for typesetting mathematics  the language has been designed to be easy to learn and to <B>use</B> by people  for example  secretaries and <B>mathematical</B> typists  who know neither mathematics nor typesetting
31 Q0 1325 71 0.027037451 Lucene_47
  tree-<B>like</B> branching decisions early in the diagnostic process  cacm january  1965 whipple  g  <B>h</B>  dickson  j  f  horibe  <B>h</B>  stark  l  ca650112 jb march 8  1978 2 27 pm 1325 4 1325 1325 5 1325 1325 5 for the remote  online  real-time <B>digital</B> computer diagnosis of clinical electrocardiograms  it seems
31 Q0 2050 72 0.026964733 Lucene_47
automatic parsing for content analysis although automatic syntactic and semantic analysis is not yet possible for all of an unrestricted natural language text  some <B>applications</B>  of which content that the harvard syntactic analyzer can produce correct and unambiguous identification of the <B>subject</B> language <B>processing</B>  information retrieval  language analysis  text <B>processing</B> 3.42 3.71 ca700605 jb
31 Q0 2906 73 0.026845457 Lucene_47
a very high level programming language for data <B>processing</B> <B>applications</B> application development aimed at business data <B>processing</B> problems  the concepts in bdl mimic those which have evolved through or components  one for defining the business forms  one for <B>describing</B> the business organization  and one for writing calculations  cacm november  1977 hammer  m  owe  w  g  kruskal  v  j  wladawsky  <B>i</B>  very
31 Q0 1846 74 0.026773872 Lucene_47
 of the problems of simulating discrete event systems  particularly computer systems  on a conventional <B>digital</B> problems  the technique will either <B>find</B> a method of simulating the parallel events or report that none can be found  in some of the latter cases it is shown to be possible to <B>find</B> a solution computationally unfeasible when the additional information is provided  cacm september  1969 parnas  <B>d</B>
31 Q0 1272 75 0.026638653 Lucene_47
expanding the editing function in language data <B>processing</B> in automatic abstracting  citation of the amount of condensation of text in language <B>processing</B> operations  and then contends that editing beyond mere correction and improvement of computer output  is exemplified by the <B>use</B> of a concordance in preparing a survey <B>article</B> or lecture  other opportunities for heavy editing are described
31 Q0 2275 76 0.026116697 Lucene_47
 by using <B>singular</B> <B>value</B> <B>decomposition</B>   3  constrain the unknown function approximation  since  j  integral equations of the first kind  nonnegative constraints  <B>singular</B> <B>value</B> analysis 3.10 5.14
31 Q0 415 77 0.025979813 Lucene_47
the <B>use</B> of <B>digital</B> computers in western germany cacm december  1962 schuff  <B>h</B>  k  ca621224 jb march 17  1978 4 32 pm 1349 5 415 415 5 415 415 5 415 415 5 415 236 6 415 323 6 415 83 6 415 415 6 415
31 Q0 2606 78 0.025921194 Lucene_47
 <B>approximations</B> a new integration algorithm is found  and an implementation is compared with other programmed algorithms  the new algorithm is a step-by-step procedure for solving the initial <B>value</B> problem of truncated taylor series <B>expansions</B>  the new method is compared with gragg-bulirsh-stoer the other methods which are discussed will have failed  cacm september  1974 willers  <B>i</B>  m  ordinary
31 Q0 1388 79 0.025194965 Lucene_47
automast  automatic <B>mathematical</B> analysis and symbolic translation a procedure for numerically and then generates the <B>expansions</B> for all of the dependent variables  the <B>expansions</B> are determined symbolically  hence any non-numeric parameters in the <B>original</B> equations are carried automatically into the final <B>expansions</B>  thus the exact influence of any parameters on the problem solution can be easily displayed
31 Q0 3156 80 0.02505362 Lucene_47
computing connected components on parallel computers we present a parallel algorithm which <B>uses</B> n2 processors to <B>find</B> the connected components of an undirected graph with n vertices in time o log2n be used to <B>find</B> the transitive closure of a symmetric boolean matrix  we assume that the processors instructions but not for store instructions  cacm august  1979 hirschberg  <B>d</B>  chandra  a  sarwate  <B>d</B>
31 Q0 2004 81 0.025041733 Lucene_47
  half-tone computer graphics  line-scan <B>image</B> <B>processing</B>  hidden surface  polygonal surface structure
31 Q0 1233 82 0.025033716 Lucene_47
conventions for the <B>use</B> of symbols in the preparation of flowcharts for information <B>processing</B> systems  a standard working paper  this paper is intended as an outline of the various conventions which are being considered for the <B>use</B> of flowcharts for information <B>processing</B> systems  the conventions are applied to the <B>use</B> of the symbols appearing in the proposed <B>american</B> standard flowchart symbols
31 Q0 1695 83 0.0249146 Lucene_47
 properties  cacm september  1968 dill  j  <B>c</B>  randall  <B>d</B>  l  richer  <B>i</B>  biological modeling  data entirely from a <B>digital</B> display unit  interacts directly with the user and permits easy and rapid  provision is also made for the <B>use</B> of experimental data as input to a network  convenient means
31 Q0 1590 84 0.024331331 Lucene_47
 sampled by a microphone and an analog-to-<B>digital</B> converter attached to an interconnected ibm 7090-pdp-1 system  these utterances were recorded at the normal <B>noise</B> level of the computer room but were recognized correctly within 1 to 2 times real-time on the ibm 7090  cacm june 1967 reddy  <B>d</B>  r  ca670602 jb
31 Q0 1135 85 0.024146667 Lucene_47
a general business-oriented language based on decision expressions  the structure of a <B>digital</B> compute programming language which covers a wide class of business and file <B>processing</B> <B>applications</B> complex <B>applications</B>  in terms of tables of control expressions which express only information to emphasizing formal  <B>i</B> e   contents-independent  syntactical definitions  it relies exclusively
31 Q0 616 86 0.02403462 Lucene_47
an information algebra - phase <B>i</B> report-language structure group of the codasyl development-defining language  at the systems level of data <B>processing</B>  the report is based  for the most part  on a <B>mathematical</B> model called  an information algebra  developed primarily by r  bosak  it is hoped  and all those interested in developing a theoretical approach to data <B>processing</B>   b  with interest
31 Q0 2841 87 0.024026094 Lucene_47
 be part of a practical 3-<B>d</B> system for designing space-forms  cacm august  1976 clark  j  <B>h</B>  real-time graphics  computer-aided design  picture <B>processing</B>  b-splines  3-<B>d</B> displays 3.80 6.22 8.2 ca760803 jbdesigning surfaces in 3-<B>d</B> an experimental system for computer-aided design of free-form surfaces   which allows 3-<B>d</B> movements of the points controlling the shapes of the surfaces   2  all
31 Q0 2519 88 0.023907717 Lucene_47
 in communicating <B>mathematical</B> results between scientists using a computer based information retrieval system is examined  the problem is analyzed in terms of psychological and information-<B>processing</B> processes  and what turns out to be a vicious circle of effects is described  these <B>include</B> ways of augmenting controlled by computer  cacm may  1973 pager  <B>d</B>  complex information  information  communication
31 Q0 3021 89 0.023752337 Lucene_47
a method for obtaining <B>digital</B> signatures and public-key cryptosystems an encryption method <B>applications</B> in  electronic mail  and  electronic funds transfer  systems  a message is encrypted when the result is divided by the publicly specified <B>product</B>  n  of two large secret prime numbers p and q  decryption is similar only a different  secret  power <B>d</B> is used  where e   <B>d</B>   1  mod p-1
31 Q0 1824 90 0.023188151 Lucene_47
  this code has available for <B>use</B>  as normal pl <B>i</B> strings the various pieces  at all levels <B>processing</B>  string <B>processing</B>  symbol manipulation  pl <B>i</B>  bnf  syntax  parser  translator  pattern to an algorithmic language  pl <B>i</B>  that provides the pattern-matching capabilities normally found only in special in a bnf-<B>like</B> format  these parse-requests form their own programming language with special sequencing
31 Q0 1261 91 0.022823298 Lucene_47
modeling and simulation of <B>digital</B> networks the simulation of <B>digital</B> networks on a <B>digital</B>  the <B>digital</B> network is modeled as a set of time-dependent or time-independent boolean transformations  each transformation <B>describing</B> the input-output relationship of a model element comprising the network mode  the simplicity of utilizing the fortran iv programming system as a <B>digital</B> network simulator
31 Q0 894 92 0.022732336 Lucene_47
 it to be well adapted to <B>use</B> with <B>digital</B> computers  for factors of degree two  the technique is similar to that of bairstow  the present method being somewhat simpler  cacm march  1963 luther  <B>h</B>
31 Q0 1363 93 0.022631206 Lucene_47
a general method of systematic interval computation for numerical integration of initial <B>value</B> by a self-starting  p-th order numerical integration method to solve an initial <B>value</B> problem  the procedure <B>uses</B> an estimate of the truncation error to calculate the step size  cacm october  1966 martin  w  <B>c</B>  paulson  k  <B>c</B>  sashkin  l  ca661004 jb march 2  1978 4 05 pm 1363 5 1363 1363 5 1363 1363 5 1363
31 Q0 2174 94 0.02260789 Lucene_47
the stable marriage problem the <B>original</B> work of gale and shapley on an assignment method using the stable marriage criterion has been extended to <B>find</B> all the stable marriage assignments  the algorithm derived for <B>finding</B> all the stable marriage assignments is proved to satisfy all the conditions of the problem  algorithm 411 applies to this paper  cacm july  1971 mcvitie  <B>d</B>  g  wilson l  b
31 Q0 606 95 0.022591287 Lucene_47
a method for eliminating ambiguity due to signal coincidence in <B>digital</B> design cacm april  1962 kaiser  <B>c</B>  j  ca620411 jb march 20  1978 2 16 pm 606 5 606 606 5 606 606 5 606
31 Q0 1181 96 0.022482913 Lucene_47
 requires almost no specialized equipment and <B>uses</B> any ordinary telephone on a  callup  basis  present <B>applications</B> <B>include</B> cardiac-output calculations  radio-activity tracer studies and neurophysiology time-sequence studies of nerve impulses  cacm october  1965 neilsen  <B>i</B>  r  ca651014 jb march 6  1978
31 Q0 1197 97 0.022461515 Lucene_47
<B>finding</B> zeros of a polynomial by the q-<B>d</B> algorithm a method which finds simultaneously all the zeros of a polynomial  developed by <B>h</B>  rutishauser  has been tested on a number of polynomials with real coefficients  this slowly converging method  the quotient-difference  q-<B>d</B>  algorithm  provides and sufficient conditions for the existence of the q-<B>d</B> scheme are not completely known  however  failure may
31 Q0 89 98 0.022307113 Lucene_47
a routine to <B>find</B> the solution of simultaneous linear equations with polynomial coefficients cacm april  1959 larson  e  <B>h</B>  marshall  <B>d</B>  p  ca590403 jb march 22  1978 7 12 pm 89 5 89 89 5 89 89 5 89
31 Q0 2248 99 0.022017686 Lucene_47
 in unbounded domains  as in the initial <B>value</B>  cauchy  problem  the solution of the integral equation for the methods are of order <B>h</B>  3 2  and <B>h</B>  7 2   his the increment size  depending on the finite difference <B>approximations</B> involved  cacm december  1972 moore  j  robinson  p  parabolic equations  the cauchy problem  method of successive <B>approximations</B> 5.17 ca721207 jb january 27  1978 11 13 am
31 Q0 175 100 0.021891814 Lucene_47
the solution of simultaneous ordinary differential equations using a general purpose <B>digital</B> computer cacm june  1960 anderson  w  <B>h</B>  ca600615 jb march 20  1978 9 25 pm 120 5 175 175 5 175 175 5 175 175 5 175 175 6 175
*************Query 32*************************

32 Q0 3139 1 0.34870586 Lucene_47
 of a <B>graph</B>  a <B>method</B> is developed which is exact for bipartite graphs and is an important part of <B>heuristic</B> procedures to <B>find</B> maximal cliques in general graphs  finally an exact <B>method</B> is given whichnew methods to color the vertices of a <B>graph</B> this paper describes efficient new <B>heuristic</B> methods methods  the classical methods  and the exact <B>method</B> are compared  cacm april  1979 brelaz  <B>d</B>  np
32 Q0 2177 2 0.3193003 Lucene_47
an algorithm for the blocks and cutnodes of a <B>graph</B> an efficient <B>method</B> is presented for finding blocks and cutnodes of an arbitrary undirected <B>graph</B>  the <B>graph</B> may be represented either  <B>i</B> of the machine employed  the storage  in machine words  required for a <B>graph</B> with n nodes and <B>m</B> edges increases essentially as 2 <B>m</B> n  in case  <B>i</B>   or  n 2  win case  ii   a spanning tree with labeled edges
32 Q0 3156 3 0.21296255 Lucene_47
 processors to <B>find</B> the connected components of an undirected <B>graph</B> with n vertices in time o log2n   an o log2n  time bound also can be achieved <B>using</B> only n n  log2n   processors  the algorithm can be used to <B>find</B> the transitive closure of a symmetric boolean <B>matrix</B>  we assume that the processors  <B>graph</B> theory  parallel processing  <B>algorithms</B>  transitive closure  connected component 5.25 5.32 6.22
32 Q0 2883 4 0.21137822 Lucene_47
 of merit  this problem can be represented as a shortest path problem on a <B>graph</B> and can be solved <B>using</B> well-known <B>graph</B> search <B>algorithms</B>  the relations between this representation of the minimization problem and a dynamic programming approach are discussed  showing that the <B>graph</B> search <B>method</B> canan application of <B>heuristic</B> search methods to edge and contour detection this paper presents
32 Q0 3018 5 0.20919767 Lucene_47
 this edge-clique-cover problem and the <B>graph</B> <B>coloring</B> problem is established which allows <B>algorithms</B> presented a <B>method</B> for determining keyword conflicts and described a <B>heuristic</B> algorithm which solves a certain combinatorial optimization problem in connection with this <B>method</B>  this optimization problem is here shown to be equivalent to the problem of covering the edges of a <B>graph</B> by complete
32 Q0 2289 6 0.19732635 Lucene_47
 that cellular arrays are inherently well suited for the solution of many <B>graph</B> problems  for example  the adjacency <B>matrix</B> of a <B>graph</B> is easily mapped onto an array  each <B>matrix</B> element is stored in one is the determination of <B>algorithms</B> that exploit the possibilities for parallelism  <B>especially</B> for problemscellular arrays for the solution of <B>graph</B> problems a cellular array is a two-dimensional
32 Q0 1145 7 0.19040337 Lucene_47
git-a <B>heuristic</B> program for testing pairs of directed line graphs for <B>isomorphism</B>  given a pair  git-<B>graph</B> <B>isomorphism</B> tester-incorporates a variety of processes that attempt to narrow down the search for an <B>isomorphism</B>  or to demonstrate that none exists  no one scheme is relied upon exclusively in areas such as game-playing and theorem-proving  where practical <B>algorithms</B> are unknown
32 Q0 2368 8 0.19029924 Lucene_47
 is connect or cut  cacm april  1972 chase  s  <B>m</B>  <B>graph</B> <B>algorithms</B>  <B>graph</B> processing  shannon switching games  game playing  <B>graph</B> theory  positional games  demonstration programs  game theory  spinning  the program is a good example of the implementation of <B>graph</B> <B>algorithms</B>  the two players in a shannonan implemented <B>graph</B> algorithm for winning shannon switching games in this tutorial paper
32 Q0 1563 9 0.1712077 Lucene_47
a <B>method</B> for finding hamilton paths and knight s tours the use of warnsdorff s rule for finding a knight s tour is generalized and applied to the problem of finding a hamilton path in a <B>graph</B>  a <B>graph</B>-theoretic justification for the <B>method</B> is given  cacm july  1967 pohl  <B>i</B>  ca670710 jb february 28  1978 8 28 am 1563 5 1563 1563 5 1563 1563 5 1563
32 Q0 3040 10 0.15708345 Lucene_47
  backtrack  combinatorial <B>algorithms</B>  constraint networks  constraint satisfaction  <B>graph</B> <B>coloring</B>  network tree search efficiency  an algorithm is developed that can achieve <B>any</B> level of consistency desired
32 Q0 1839 11 0.15547194 Lucene_47
<B>singular</B> <B>value</B> <B>decomposition</B> of a complex <B>matrix</B>  algorithm 358  f1  4,5   cacm october  1969 businger  p  a  goulub  g  h  <B>singular</B> values  <B>matrix</B> <B>decomposition</B>  least squares solution  pseudoinverse 5.14 ca691007 jb february 15  1978 3 22 pm 1839 5 1839 1839 5 1839 1839 5 1839
32 Q0 2490 12 0.1492999 Lucene_47
efficient <B>algorithms</B> for <B>graph</B> manipulation  h   algorithm a447  efficient <B>algorithms</B> are presented for partitioning a <B>graph</B> into connected components  biconnected components and simple paths  the algorithm for partitioning of a <B>graph</B> into simple paths is iterative and each iteration produces a new  r  graphs analysis of <B>algorithms</B>  <B>graph</B> manipulation 5.32 ca730610 jb january 23  1978 1 55 pm 2490
32 Q0 2484 13 0.14781977 Lucene_47
 be represented by a tree or <B>graph</B>  it is quite natural for us to view the process of designing a data base as that of constructing a tree or a <B>graph</B>  a general <B>method</B> for constructing such a tree or a <B>graph</B> is provided  there are three important elements in this general construction <B>method</B>  namely  a set an element from the given set of objects  the use of different relations and <B>algorithms</B> results
32 Q0 2630 14 0.14391671 Lucene_47
on computing sets of shortest paths in a <B>graph</B> two <B>algorithms</B> are presented that construct the k shortest paths between every pair of vertices in a directed <B>graph</B>  these <B>algorithms</B> generalize the floyd algorithm and the dantzig algorithm for finding the shortest path between every pair of vertices in a directed <B>graph</B>  cacm june  1974 minieka  e  <B>graph</B>  network  shortest path  algorithm 5.32
32 Q0 2408 15 0.14039972 Lucene_47
solving the biharmonic equation in a square  a direct versus a semidirect <B>method</B> two methods for solving the biharmonic equation are compared  one <B>method</B> is direct  <B>using</B> <B>eigenvalue</B>-eigenvector <B>decomposition</B>  the other <B>method</B> is iterative  solving a poisson equation directly at each iteration  cacm november  1973 ehrlich  l  w  biharmonic  direct <B>method</B>  block iterative  eigenvector-<B>eigenvalue</B>
32 Q0 1847 16 0.13205111 Lucene_47
an algorithm for finding a fundamental set of cycles of a <B>graph</B> a fast <B>method</B> is presented for finding a fundamental set of cycles for an undirected finite <B>graph</B>  a spanning tree is grown  one stage in the process is to take the top element v of the pushdown list and examine it  <B>i</B> e  inspect all those edges  v z  of the <B>graph</B> for which z has not yet been examined  if z is already
32 Q0 1504 17 0.13026147 Lucene_47
<B>algorithms</B> for finding a fundamental set of cycles for an undirected linear <B>graph</B> given the adjacency <B>matrix</B> of the <B>graph</B>  the algorithm presented in this paper finds a spanning tree and then constructs the set of fundamental cycles  our algorithm is slower than an algorithm presented by welch  <B>d</B>  g  ca671204 jb february 26  19782 35 pm 1504 4 1504 3040 4 1504 1145 5 1504 1504 5 1504 1504 5
32 Q0 1529 18 0.12334903 Lucene_47
<B>decomposition</B> programming an analysis of <B>matrix</B> substructure a petroleum blending problem was analyzed in order to compare the primal and primal-dual <B>decomposition</B> <B>algorithms</B>  in the course <B>algorithms</B> and to their absolute performance as compared with a standard primal-simplex solution without <B>decomposition</B>  cacm october  1967 bell  e  j  ca671004 jb february 27  1978 2 33 pm 1529 5 1529
32 Q0 1905 19 0.12312875 Lucene_47
the simplex <B>method</B> of linear programming <B>using</B> lu <B>decomposition</B> standard computer implementations of dantzig s simplex <B>method</B> for linear programming are <B>based</B> upon forming the inverse of the basic <B>matrix</B> and updating the inverse after every step of the <B>method</B>  these implementations have bad round is <B>based</B> upon the lu <B>decomposition</B>  computed with row interchanges  of the basic <B>matrix</B>  the implementation
32 Q0 2980 20 0.12048364 Lucene_47
 eliminations on the basis of local properties of the region adjacency <B>graph</B>  the scheme is <B>based</B> on definitions of <B>graph</B> properties which are satisfied when a spurious region is present  then editing is equivalent to fast <B>graph</B> operations  a number of examples are shown  cacm april  1977 tanimoto  s  lthe editing of picture segmentations <B>using</B> local analysis of graphs a major problem in picture
32 Q0 2619 21 0.1190326 Lucene_47
<B>graph</B> <B>coloring</B> conditions for the existence of solutions to the timetable problem a necessary of a <B>graph</B>  the preconditions correspond to the unavailability constraints and preassigned meetings in the class-teacher timetable problem  <B>using</B> some recent results that convert graphs with preconditions to graphs without them  it is shown that the existence of a coloration of a <B>graph</B> is the required
32 Q0 1727 22 0.11525347 Lucene_47
 it is useful to have a reasonable estimation of the values of s ij   where s ij  is the mean <B>value</B> of the number of jumps from the <B>i</B>-th instruction on to the j-th instruction in the run time  in the cases estimation of the s ij   it is easier to estimate not s ij  but the quantities p ij  s ij  c <B>i</B>  sum s ij   j 1 n   where c <B>i</B>  is an arbitrary positive constant for each <B>i</B>  although the p ij
32 Q0 2790 23 0.11184272 Lucene_47
the elementary circuits of a <B>graph</B>  algorithm r459  cacm february  1975 syslo  <B>m</B>  <B>m</B>  ca750209 jb january 12  1978 2 54 pm 2790 5 2790 2790 5 2790 2790 5 2790
32 Q0 2524 24 0.10807055 Lucene_47
 to <B>find</B> a key which is closest to a given query key is discussed  after  closest   in terms of a metric with their corresponding search <B>algorithms</B>  which are intended to reduce the number of comparisons required to achieve the desired result  these methods are derived <B>using</B> certain inequalities satisfied by metrics and by <B>graph</B>-theoretic concepts  some empirical results are presented which compare the efficiency
32 Q0 3164 25 0.10705444 Lucene_47
 of actions  two pad <B>algorithms</B> are presented  one uses a simple path <B>matrix</B> representationprogressive acyclic digraphs-a tool for database integrity a progressive acyclic digraph  pad  algorithm accepts are requests and maintains a <B>graph</B> in an acyclic state  when a request creates a cycle is the expected number of nodes reachable along paths from <B>any</B> given node  cacm september  1979 hansen  w
32 Q0 1423 26 0.1067934 Lucene_47
 storage requirements  the algorithm gives the generalized inverse for <B>any</B> <B>m</B> by n <B>matrix</B> a  including the special case when <B>m</B> n and a is non-<B>singular</B> and the case when <B>m</B> gt n and rank a    na simple algorithm for computing the generalized inverse of a <B>matrix</B> the generalized inverse of a <B>matrix</B> is important in analysis because it provides an extension of the concept of an inverse which
32 Q0 1961 27 0.10581708 Lucene_47
an efficient search algorithm to <B>find</B> the elementary circuits of a <B>graph</B> a theoretically most efficient search algorithm is presented which uses an exhaustive search to <B>find</B> all of the elementary circuits of a <B>graph</B>  the algorithm can be easily modified to <B>find</B> all of the elementary circuits in the <B>graph</B> to give a relation between speed and complexity  extensions to undirected and s-graphs
32 Q0 2430 28 0.10216784 Lucene_47
the elementary circuits of a <B>graph</B>  h   algorithm a459  cacm october  1973 syslo <B>m</B>  <B>m</B>  algorithm  <B>graph</B> theory  circuit search algorithm  path search algorithm  searching 3.74 4.22 5.32 ca731010 jb january 20  1978 11 11 am 2430 4 2430 1961 5 2430 2430 5 2430 2430 5 2430 2430 5 2430
32 Q0 2877 29 0.10176449 Lucene_47
 determines all the definitions which can possibly  reach  each node of the control flow <B>graph</B> of the program and all the definitions that are  live  on each edge of the <B>graph</B>  the procedure uses  <B>algorithms</B>  compilers 4.12 5.24 ca760303 jb january 5  1978 8 33 am 2877 5 2877 2877 5 2877 2877 5
32 Q0 2275 30 0.10034226 Lucene_47
 by <B>using</B> <B>singular</B> <B>value</B> <B>decomposition</B>   3  constrain the unknown function approximation  since  j  integral equations of the first kind  nonnegative constraints  <B>singular</B> <B>value</B> analysis 3.10 5.14
32 Q0 2695 31 0.09819913 Lucene_47
 <B>matrix</B>  permutation  algorithm  eigenvalues  <B>graph</B>  bandwidth  sparse <B>matrix</B> 5.14 5.32 ca740104 jbtridiagonalization by permutations tridiagonalizing a <B>matrix</B> by similarity transformations can be tridiagonalized <B>using</B> only row and corresponding column permutations  the advantages of <B>using</B> compared with standard transformations  a <B>graph</B> theoretic algorithm which examines an arbitrary n x n
32 Q0 2052 32 0.094978645 Lucene_47
 an undirected linear <B>graph</B> independently of the relation of the activities in conflict to additional constraints of time and space  each connected component of such a <B>graph</B>  which can be found at different times  cacm june  1970 grimes  j  e  allocation  conflict <B>matrix</B>  connected component  scheduling  spanning tree  undirected linear <B>graph</B> 1.90 3.51 3.59 5.32 ca700603 jb february 13  1978 11 55 am
32 Q0 2172 33 0.09425286 Lucene_47
<B>graph</B> plotter  j6   algorithm 412  cacm july  1971 cermak  j  plot  <B>graph</B>  line printer plot 4.41 ca710710 jb february 2  1978 4 32 pm 2172 5 2172 2172 5 2172 2172 5 2172
32 Q0 2752 34 0.09425286 Lucene_47
generation of all the cycles of a <B>graph</B> from a set of basic cycles  h   algorithm 492  cacm june 1975 gibbs  n  e  basic cycle  cycle  <B>graph</B> 5.32 3.24 ca750601 jb january 9  1978 1 55 pm 2752 5 2752 2752 5 2752 2752 5 2752
32 Q0 2697 35 0.09374007 Lucene_47
a fast <B>method</B> for solving a class of tridiagonal linear systems the solution of linear systems is considered  it is proved that the diagonals of the lu <B>decomposition</B> converges when floating-point precision  it is also proved that the computed lu <B>decomposition</B> converges when floating-point arithmetic is used and that the limits of the lu diagonals <B>using</B> floating point are roughly within machine
32 Q0 2606 36 0.09109824 Lucene_47
 programmed <B>algorithms</B>  the new algorithm is a step-by-step procedure for solving the initial <B>value</B> problem the other methods which are discussed will have failed  cacm september  1974 willers  <B>i</B>  <B>m</B>  ordinarya new integration algorithm for ordinary differential equations <B>based</B> on continued fraction of truncated taylor series expansions  the new <B>method</B> is compared with gragg-bulirsh-stoer
32 Q0 2568 37 0.09085166 Lucene_47
a <B>graph</B> formulation of a school scheduling algorithm the problem classically titled extension of the previous work is the introduction of variable length examinations where w <B>i</B>  is the number of periods for exam <B>i</B>  the object of this paper is to generalize the definition of largest  a  oakford  r  v  scheduling  school scheduling  examination scheduling  nondirected network  <B>graph</B>
32 Q0 3124 38 0.08650019 Lucene_47
 in the construction of data-driven <B>algorithms</B>  cacm february  1979 gull w  jenkins  <B>m</B>  nested arrays  apl arrays  recursive data structures  trees  data-driven <B>algorithms</B>  theory of arrays 4.22 5.29 are given and illustrated through <B>graph</B> representations  one of the approaches is used to define an apl
32 Q0 3125 39 0.084036835 Lucene_47
 problem  <B>i</B> e  the elimination of computations performed twice on a given execution path  such computations are termed partially redundant  moreover  the algorithm does not require <B>any</B> graphical information or restrictions on the shape of the program <B>graph</B>  testing this algorithm has shown that its
32 Q0 2701 40 0.08105483 Lucene_47
  the algorithm is shown to treat a very general class of function spaces  for a <B>graph</B> of e edges are given of code improvement problems which can be solved <B>using</B> the algorithm  cacm december  1975 graham  s  l  wegman  <B>m</B>  global flow analysis  data flow  code optimization  common subexpression elimination  live-dead analysis  information propagation  flow <B>graph</B>  reducibility  go-to-less
32 Q0 2290 41 0.080804996 Lucene_47
immediate predominators in a directed <B>graph</B>  h   algorithm a430  cacm august  1972 purdom jr   p  w  moore  e  f  predominator  immediate predominator  <B>graph</B> theory  directed <B>graph</B>  shortest path  articulation  connectivity  program optimization  optimizing compiler 4.12 5.32 ca720812 jb january 30  1978 9 19 am 1807 4 2290 2034 4 2290 2290 4 2290 2579 4 2290 2923 4 2290 2945 4 2290 1947 5 2290
32 Q0 1481 42 0.07997621 Lucene_47
<B>graph</B> plotter  algorithm 278  j6   cacm february  1966 lloyd  p  ca660206d jb march 23  1978 7 30 pm 1481 5 1481 1481 5 1481 1481 5 1481
32 Q0 2161 43 0.07997621 Lucene_47
an algorithm for the blocks and cutnodes of a <B>graph</B>  corrigendum  cacm september  1971 paton  k  ca710903 jb february 2  1978 2 24 pm 2161 5 2161 2161 5 2161 2161 5 2161
32 Q0 2461 44 0.07997621 Lucene_47
<B>graph</B> plotter  algorithm r412  cacm august  1973 watkins  r  p  ca730813 jb january 23  1978 10 30 am 2461 5 2461 2461 5 2461 2461 5 2461
32 Q0 2402 45 0.07975191 Lucene_47
 encourages the development of <B>algorithms</B> adapted to this environment  pictorial pattern recognition techniques make possible a number of approaches to x-ray structure determination <B>based</B> on molecular model building  <B>i</B> e  the use of chemical information to frame  structural hypotheses  which can recognition <B>algorithms</B> is hindered by the fact that the cross-correlation between a model
32 Q0 1721 46 0.07951395 Lucene_47
 a new <B>method</B> is proposed to calculate the intersection points of two plane curves  the theory of <B>singular</B> points off a system of two differential equations is used in developing the <B>method</B> are applied to the system to ensure that the <B>singular</B> point be stable  <B>i</B> e  all integrals which start points  intersections plane curves  integration  differential equations  <B>matrix</B> iteration  <B>singular</B>
32 Q0 2015 47 0.07908561 Lucene_47
  a <B>graph</B> formulation is used for the problem of merging productions  the productions generated correspond to the minimum cost inverse-arborescence of that <B>graph</B>  the validity of the technique is demonstrated for weak precedence grammars defined here  but the productions mechanically generated for <B>any</B> are obtained  cacm august  1970 ichbiah  j  <B>d</B>  morse  s  p  translator writing systems  syntactic analysis
32 Q0 2195 48 0.079037935 Lucene_47
 is presented  in this technique the <B>heuristic</B> of the problem is not embedded in the recognition is then discussed  the <B>method</B> described is suitable for parallel processing because the operations of the curves  or to log2 n if the approximate <B>method</B> is used   cacm may  1971 montanari  u  picture optimal detection  <B>heuristic</B> methods  global recognition  parallel processing  dynamic programming
32 Q0 2763 49 0.07784931 Lucene_47
basic cycle generation  h   algorithm 491  cacm may  1975 gibbs  n  e  <B>graph</B>  basic cycles fundamental cycle  spanning tree  vertex adjacency <B>matrix</B> 5.32 3.24 ca750504 jb january 9  1978 2 39 pm 1961 4 2763 2177 4 2763 2763 4 2763 1847 5 2763 2763 5 2763 2763 5 2763 2763 5 2763
32 Q0 1791 50 0.07777465 Lucene_47
triangular factors of modified matrices  algorithm 319  f1   cacm january  1968 green  <B>d</B>  r  <B>matrix</B> <B>decomposition</B>  <B>matrix</B> factors  <B>matrix</B> modifier  <B>matrix</B> perturbation 5.14 ca680102 jb february 23  1978 2 50 pm 1791 5 1791 1791 5 1791 1791 5 1791
32 Q0 1415 51 0.07729821 Lucene_47
 have practical <B>value</B> in man-machine systems <B>using</B> human monitors to select the preferred syntacticautomatic derivation of microsentences the <B>decomposition</B> of long complex english sentences into shorter kernel-<B>like</B> constituent sentences  microsentences has often been suggested as an avenue toward idea was to extract the subject  verb and object  if <B>any</B>  of each clause and to reassemble
32 Q0 2178 52 0.076474525 Lucene_47
  friedman  <B>d</B>  p  <B>graph</B> processing  programming language  formal semantics  directed <B>graph</B>  lisp  networka language extension for <B>graph</B> processing and its formal semantics a simple programming language <B>graph</B> data structure and a set of primitive operations for manipulating these structures  graspe may itself and on its <B>method</B> of definition  commonly  the definition of a language involves definition
32 Q0 3059 53 0.0757616 Lucene_47
models for parallel processing within programs  application to cpu <B>i</B> o and <B>i</B> o <B>i</B> o overlap system are developed in this paper  the solution technique is developed by network <B>decomposition</B>  the models are formulated in terms of cpu <B>i</B> o and <B>i</B> o <B>i</B> o overlap and applied to the analysis of these problems  the percentage performance improvement from cpu <B>i</B> o overlap is found to be greatest
32 Q0 2819 54 0.07544141 Lucene_47
 of characters  is presented  the <B>method</B> is general  and applies equally well to english  to pl <B>i</B> <B>algorithms</B> for encoding a string differ slightly from earlier proposals  the analysis program attempts to <B>find</B> an optimal set of codes for representing substrings of the file  four new <B>algorithms</B> for this operation are described and compared  various parameters in the <B>algorithms</B> are optimized to obtain
32 Q0 2925 55 0.072426826 Lucene_47
 to the problem of finding certain minimum cost cycles in a directed toroidal <B>graph</B>  a new fast the algorithm  an illustrated example which involves the construction of a minimum area surface <B>describing</B> a human head is included  cacm october  1977 fuchs  h  kedem z  <B>m</B>  uselton  s  p  surface
32 Q0 2986 56 0.07185881 Lucene_47
 efficiently  cacm march  1977 hunt  h  b  iii szymanski  t  g  ullman  j  <B>d</B>  computational complexity  sparse relation  boolean <B>matrix</B>  directed <B>graph</B>  wirth-weber precedence relation  linear precedence functions in o n  steps  where n is the size of a grammer  the heart of the <B>algorithms</B>
32 Q0 3153 57 0.071253814 Lucene_47
 is examined in the context of a paged computer system  two parameterized <B>algorithms</B> which partition a <B>decomposition</B> approach and treating the closed system as a single server  the response times alocation parameters on the expected response times under the two <B>algorithms</B>  numerical solutions  cacm july  1979 hine  j  mitrani  <B>i</B>  tsur  s  queueing networks  paging  virtual memory  performance
32 Q0 2189 58 0.06784299 Lucene_47
 complete <B>graph</B> with n vertices  hamitonian circuits equivalent to  5 n - 1   specific permutations of n is determined by  e k    two <B>algorithms</B> treating the same example for five vertices are presented fairly efficiently by computer  cacm june  1971 harada  k  permutation  <B>graph</B> theory  scheduling
32 Q0 3138 59 0.06769007 Lucene_47
a mathematical programming updating <B>method</B> <B>using</B> modified givens transformations and applied to lp problems an efficient and numerically stable <B>method</B> is presented for the problem of updating an orthogonal <B>decomposition</B> of a <B>matrix</B> of column  or row  vectors  the fundamental idea is to add a column with an implementation of the revised simplex <B>method</B>  the algorithm is a general purpose one that does
32 Q0 1822 60 0.06664684 Lucene_47
shortest-path forest with topological ordering  algorithm  h   cacm november  1969 dial  r  b  shortest path  tree  network  directed <B>graph</B> 5.32 5.42 ca691108 jb february 15  1978 12 21 pm 1822 5 1822 1822 5 1822 1822 5 1822
32 Q0 1983 61 0.06664684 Lucene_47
spanning tree  h   algorithm 399  cacm october  1970 seppanen  j  j  <B>graph</B>  tree  spanning tree 5.32 ca701007 jb february 10  1978 9 24 am 1983 5 1983 1983 5 1983 1983 5 1983
32 Q0 2771 62 0.066568725 Lucene_47
 of solid objects to be synthesized and stored <B>using</B> a computer  synthesis begins with primitive solids <B>like</B> a cube  wedge  or cylinder  <B>any</B> solid can be moved  scaled  or rotated  solids may also be added together or subtracted  two <B>algorithms</B> to perform addition are described  for practical designers bounded by many faces  cacm april  1975 braid  <B>i</B>  c  computational geometry  computer-aided design
32 Q0 2769 63 0.06453758 Lucene_47
 algorithm  transitive closure  reachability <B>matrix</B>  directed <B>graph</B>  digraph  boolean <B>matrix</B>  binarya modification of warshall s algorithm for the transitive closure of binary relations an algorithm is given for computing the transitive closure of a binary relation that is represented by a boolean <B>matrix</B>  the algorithm is similar to warshall s although it executes faster for sparse matrices
32 Q0 2646 64 0.06432657 Lucene_47
 nature of the <B>i</B> o scheduling  these <B>algorithms</B> are restricted to classes of programs with predictable behavior  while the methods are not restricted to numerical computations  <B>matrix</B> and partial the background and <B>algorithms</B> for masking the rotational latency of a disk or drum  it discusses the anticipatory <B>using</B> a small amount of buffer memory  the methods discussed are independent of the overall size
32 Q0 1432 65 0.063902654 Lucene_47
  this <B>method</B> was used to control output of alphanumeric information on a digital <B>graph</B> plotter  cacm may
32 Q0 1350 66 0.063466236 Lucene_47
 -- gt  cy 1      y <B>m</B>    <B>m</B>  gt   o  where z and y <B>i</B>  are intermediate symbols and c a terminal symbol of <B>any</B> context-free grammar g  given an equivalent standard-form grammar gs  the structural information <B>describing</B> its derivation from the original context-free grammar  a technique for performing other parsing <B>algorithms</B>  a selective top-to-bottom algorithm similar to irons   error correcting
32 Q0 2520 67 0.06023978 Lucene_47
greatest common divisor of n integers and multipliers  algorithm c386  cacm april  1973 ragland  l  c  good  <B>d</B>  <B>i</B>  proof of <B>algorithms</B>  greatest common divisor  euclidean algorithm  inductive assertion <B>method</B> 3.15 4.42 5.10 5.24 ca730408 jb january 24  1978 9 27 am 2520 5 2520 2520 5 2520 2520 5 2520
32 Q0 1373 68 0.059294146 Lucene_47
gamma function  gamma function for range 1 to 2  reciprocal gamma function to real argument  gamma function  logarithm of gamma function  <B>algorithms</B> 34 s14   54 s14   80 s14   221 s14   291 s14   cacm september  1966 pike  <B>m</B>  c  hill  <B>i</B>  <B>d</B>  ca660909d jb march 23  1978 4 28 pm 1373 5 1373 1373 5 1373 1373 5 1373
32 Q0 3100 69 0.056757193 Lucene_47
an interference matching technique for inducing abstractions a <B>method</B> for inducing knowledge by abstraction from a sequence of training examples is described  the proposed <B>method</B>  interference matching  induces abstractions by finding relational properties common to two or more exemplars  three  j  rule induction  knowledge acquisition  partial matching  interference  <B>graph</B> matching  learning
32 Q0 3172 70 0.05418268 Lucene_47
 be reached safely  cacm october  1979 lozano-perez  t  wesley  <B>m</B>  path finding  collision-free paths  polyhedral objects  polyhedral obstacles  <B>graph</B> searching  growing objects 3.15 3.64 3.66 8.1 ca791005
32 Q0 1886 71 0.054169465 Lucene_47
  1969 breuer  <B>m</B>  a  factorization <B>algorithms</B>  code optimization  sequencing of operations  detection by first factoring the expressions  <B>i</B> e  finding a set of subexpressions each of which occurs in two feasible  <B>heuristic</B> procedures are applied  and hence global optimal results are not necessarily generated  the factorization <B>algorithms</B> are also applicable to the problem of factoring boolean
32 Q0 2444 72 0.05331747 Lucene_47
finding all cliques of an undirected <B>graph</B>  algorithm a457  cacm september  1973 bron  c  kerbosch  j  cliques  maximal complete subgraphs  clusters  backtracking algorithm  branch and bound technique  recursion 3.71 5.32 ca730911 jb january 23  1978 8 44 am 2444 5 2444 2444 5 2444 2444 5 2444
32 Q0 2155 73 0.05312152 Lucene_47
toward an understanding of data structures this paper presents a notation and formalism for <B>describing</B> the semantics of data structures  this is <B>based</B> on directed graphs with named edges and transformations on these graphs  in addition  an implementation facility is described which could be part to gain efficiency  cacm october 1971 earley  j  data structures  <B>graph</B>  implementation  semantic
32 Q0 1433 74 0.051646996 Lucene_47
 timeo cut down this expense  an ever increasing effort is made to design more efficient <B>algorithms</B>  this paper is meant to support the effort  it is attempted to <B>find</B> some characteristics of the way of repetitions is found  asymptotic formulas are given for the moments <B>using</B> a result from a paper of s <B>value</B> in a table  formulas provide a means of calculating the computer timings in this case  cacm may
32 Q0 2145 75 0.050164253 Lucene_47
 placed  help employs two methods of wiring  one is the <B>heuristic</B> <B>method</B>  which simulates human approaches to wiring design  and the other is the theoretically interesting but time-consuming <B>method</B>  cacm november  1971 aramaki  <B>i</B>  kawabata  t  kazuhiko  a  <B>heuristic</B> etching-pattern layout  wiringautomation of etching-pattern layout help  <B>heuristic</B> etching-pattern layout program
32 Q0 2923 76 0.050050754 Lucene_47
  this paper proposes a simple general <B>method</B> of high-level data flow analysis that allows free use of escape is presented  many of the graphs involved are constructed and analyzed before <B>any</B> programs  1977 rosen  b  k  data flow analysis  high-level language  control flow <B>graph</B>  structured
32 Q0 1159 77 0.048583888 Lucene_47
 halpern  <B>m</B>  <B>i</B>  ca651210 jb march 6  1978 3 44 pm 1159 4 1159 1988 4 1159 381 4 1159 1159 5 1159 for transferring programs  and <B>especially</B> compilers  from one computer to another  of the methods examined  the considerations that determine the applicability of bootstrapping in <B>any</B> specific case are discussed trends in computer design  and that it is this process of convergence in hardware design rather than <B>any</B>
32 Q0 2692 78 0.04830287 Lucene_47
 vertices introduced in sequence to describe <B>any</B> newly-cut edge or edges  the <B>algorithms</B> easily handlereentrant polygon clipping a new family of clipping <B>algorithms</B> is described  these <B>algorithms</B> the parts of the polygon which lie outside the volume  in two dimensions the <B>algorithms</B> permit clipping of the clipping window  the <B>algorithms</B> described achieve considerable simplicity by clipping separately
32 Q0 1456 79 0.048145723 Lucene_47
storage and retrieval of aspects of meaning in directed <B>graph</B> structures an experimental system that uses lisp to make a conceptual dictionary is described  the dictionary associates with each english word the syntactic information  definitional material  and references to the contexts in which  they are inadequate vehicles for language processing on <B>any</B> large scale-at east until they can use
32 Q0 1899 80 0.047319975 Lucene_47
simplex <B>method</B> procedure employing lu <B>decomposition</B>  algorithm 350  h   cacm may  1969 bartels  r  h  golub  g  h  simplex <B>method</B>  linear programming  lu <B>decomposition</B>  round-off errors  computational stability 5.41 ca690510 jb february 17  1978 3 21 pm 1899 5 1899 1899 5 1899 1899 5 1899
32 Q0 1935 81 0.047297664 Lucene_47
 <B>method</B> described is binary in nature and offers new potential for information retrieval systems  cacm february  1969 arora  s  r  dent  w  t  binary pattern  file examination  <B>graph</B> theory  information retrieval  mathematical model  partitioning  probabilistic <B>method</B>  random sequencing  search
32 Q0 2934 82 0.04712643 Lucene_47
comment on computing the k shortest paths in a <B>graph</B> cacm august  1977 lawler  e  l  <B>graph</B>  network  shortest path  algorithm  ranking 5.32 ca770809 jb december 28  1977 7 00 am 1086 4 2934 1132 4 2934 1234 4 2934 1263 4 2934 1265 4 2934 1270 4 2934 1323 4 2934 1358 4 2934 1379 4 2934 1380 4 2934 1453 4 2934 1464 4 2934 1484 4 2934 1491 4 2934 1498 4 2934 1613 4 2934 1614 4 2934 1781 4 2934 1825
32 Q0 2199 83 0.04701063 Lucene_47
a sparse <B>matrix</B> package  part <B>i</B>   f4   algorithm 408  cacm april  1971 mcnamee  j  <B>m</B>  <B>matrix</B>  sparse <B>matrix</B>  <B>matrix</B> manipulation 5.14 ca710406 jb february 3  1978 3 20 pm 2199 5 2199 2199 5 2199 2199 5 2199
32 Q0 2059 84 0.046174284 Lucene_47
a language for treating graphs a language for the representation of <B>graph</B> is described  and the formulation of <B>graph</B> operations such as node and or link deletion or insertion  union  intersection  comparison  and traversal of graphs is given  graphs are represented by linked lists  the language  oriented  nonoriented  multiple  colored <B>graph</B>  language extended algol  operator-precedence  syntax
32 Q0 1725 85 0.046042856 Lucene_47
 of both values  or of only one <B>value</B>  or contain no digits at all  <B>i</B> e  that the memory is empty the memory  lewin proves that  for the readout by the described <B>method</B> of <B>m</B> distinct binary words  2ma simple proof of lewin s ordered-retrieval theorem for associative memories an efficient <B>method</B> of ordered retrieval of binary words from an associative memory  as described by lewin  is <B>based</B>
32 Q0 3033 86 0.04571303 Lucene_47
 algorithm which  <B>like</B> dynamic programming  recognizes identical subproblems but which can be used to <B>find</B> both optimal and quasi optimal solutions  the <B>heuristic</B> search <B>method</B> introduced in this paper been tackled in the literature <B>using</B> two approaches  dynamic programming and branch-and-bound  the branch-and-bound technique uses a good <B>heuristic</B> to direct the search  but is cluttered up
32 Q0 2125 87 0.045644753 Lucene_47
a note on minimal length polygonal approximation to a digitized contour a <B>method</B> for extracting a smooth polygonal contour from a digitized image is illustrated  the ordered sequence of contour points and the connection <B>graph</B> of the image are first obtained by a modified ledley algorithm in one image scan  a minimal perimeter polygon subjected to specified constraints is then chosen
32 Q0 1924 88 0.045364007 Lucene_47
 system  it is shown that carefully designed <B>matrix</B> <B>algorithms</B> can lead to enormous savings in the number time  examination of addition  multiplication  and inversion <B>algorithms</B> shows that a partitioned <B>matrix</B> to the algorithm  cacm march  1969 mckellar  a  c  coffman jr   e  g  <B>matrix</B> <B>algorithms</B>  array processing  pagingorganizing matrices and <B>matrix</B> operations for paged memory systems <B>matrix</B> representations
32 Q0 1172 89 0.042715892 Lucene_47
conversion of limited-entry decision tables to computer programs decision tables are useful for <B>describing</B> a set of complex decision rules <B>based</B> on given sets of conditions  <B>algorithms</B> that can to computer users  two such <B>algorithms</B>  <B>based</B> on work done by <B>m</B>  s  montalbano  are described the conversion process  both pinpoint <B>any</B> contradictions or redundancies among the rules in a table  cacm
32 Q0 2657 90 0.042197045 Lucene_47
 algorithm <B>based</B> on the algorithm proposed by waldinger and lee in 1969 is given  in the old algorithm is obtained as soon as the proof is completed  this is achieved by <B>using</B> a modified variable tracing mechanism invented by green in 1969  the correctness of the improved algorithm is also proved  <B>i</B> e  c  l  waldinger  r  j  program-synthesizing <B>algorithms</B>  theorem proving  consequence finding
32 Q0 1931 91 0.042021822 Lucene_47
 papers  one by hansen and one by hansen and r  r  smith  have shown how interval arithmetic  <B>i</B>   can be used effectively to bound errors in <B>matrix</B> computations  in the present paper a <B>method</B> proposed  computational results show the accuracy and running times that can be expected when <B>using</B> <B>i</B>  for determinant evaluation  an application <B>using</B> <B>i</B>  determinants in a program to test a set of functions to see
32 Q0 1821 92 0.040838957 Lucene_47
permanent function of a square <B>matrix</B> <B>i</B> and ii  algorithm 361  g6   cacm november  1969 shriver  b  eberlein  p  j  dixon  r  <B>d</B>  <B>matrix</B>  permanent  determinant 5.30 ca691109 jb february 15  197812 18 pm 1821 5 1821 1821 5 1821 1821 5 1821
32 Q0 1181 93 0.040817168 Lucene_47
a simple data transmission system <B>using</B> the office telephone a <B>method</B> has evolved for transmitting data of a type originating in many laboratory situation direct to a central computer  the <B>method</B> requires almost no specialized equipment and uses <B>any</B> ordinary telephone on a  callup  basis  present time-sequence studies of nerve impulses  cacm october  1965 neilsen  <B>i</B>  r  ca651014 jb march 6  1978
32 Q0 1934 94 0.039988104 Lucene_47
  compiler design  <B>graph</B> theory  programming  storage minimization  topological ordering tree 4.12 5.32
32 Q0 3134 95 0.039771408 Lucene_47
 a <B>method</B> for the organization and retrieval of attribute <B>based</B> information systems  <B>using</B> the normal multiplication table as a directory for the information system  <B>algorithms</B> for the organization an <B>d</B> retrieval of information are described  this <B>method</B> is particularly suitable for queries of disk accesses and disk space are compared to other common approaches  <B>algorithms</B> evaluating
32 Q0 2453 96 0.03859856 Lucene_47
  the <B>method</B> is applicable to <B>any</B> limited entry decision table and does not require that actions have single published <B>heuristic</B> <B>algorithms</B>  compared to the optimal algorithm of reinwald and solandinformation theory applied to the conversion of decision tables to computer programs <B>using</B> ideas from information theory  this paper develops a <B>heuristic</B> algorithm that converts a limited entry
32 Q0 2051 97 0.038173534 Lucene_47
  <B>d</B>  g  comparative linguistics  natural language processing  comparative <B>method</B>  historicala pl <B>i</B> program to assist the comparative linguist a practical pl <B>i</B> program is described which can them  each pair of words is then assigned a relative <B>value</B> that is a function of the total frequency correspondence with all word-pairs showing that correspondence  unless their relative <B>value</B> is below
32 Q0 2523 98 0.0375092 Lucene_47
a region <B>coloring</B> technique for scene analysis a <B>method</B> of converting a picture into a  cartoon  or  map  whose regions correspond to differently textured regions is described  texture edges according to criteria <B>based</B> on topology and size  the <B>method</B> has been applied to the construction in  <B>using</B> a propagation process  the resulting map is cleaned by comparing the region colors
32 Q0 2389 99 0.037150916 Lucene_47
 of constraints  the <B>algorithms</B> used to solve problems expressed in this language rely on <B>heuristic</B> programming  both the language and the search <B>algorithms</B> are detailed  cacm february  1972 eastman  c  <B>m</B>  automated design  architecture  <B>heuristic</B> programs  space planning 3.20 3.40 3.64 3.66 ca720202 jb january
32 Q0 2094 100 0.036898024 Lucene_47
on an algorithm for nonlinear minimax approximation certain nonlinear minimax approximation problems are characterize <B>d</B> by properties which permit the application of special <B>algorithms</B>  mainly <B>based</B> on the exchange <B>algorithms</B> of remes  1934  1935   for their solution  in this paper the application specialist <B>method</B>  cacm march  1970 watson  g  a  minimax approximation  nonlinear approximation  linear
*************Query 33*************************

33 Q0 1954 1 0.1554816 Lucene_47
<B>eigenvalues</B> and <B>eigenvectors</B> of a <B>real</B> symmetric matrix  algorithm 384  f2   cacm december  1970 <B>stewart</B>  <B>g</B>  <B>w</B>  <B>real</B> symmetric matrix  <B>eigenvalues</B>  <B>eigenvectors</B>  qr algorithm 5.14 ca701209 jb february 9  1978 3 08 pm 1954 5 1954 1954 5 1954 1954 5 1954
33 Q0 2284 2 0.12910289 Lucene_47
solution of the matrix equation ax xb <B>c</B>  f4   algorithm a432  cacm september  1972 bartels  r  h  <B>stewart</B>  <B>g</B>  <B>w</B>  <B>linear</B> algebra  <B>matrices</B>  <B>linear</B> equations 5.14 ca720906 jb january 27  1978 4 31 pm 2284 5 2284 2284 5 2284 2284 5 2284
33 Q0 2043 3 0.10883713 Lucene_47
<B>eigenvalues</B> and <B>eigenvectors</B> of a <B>real</B> symmetric matrix  f2   algorithm 384  cacm june  1970 <B>stewart</B>  <B>g</B>  <B>w</B>  <B>real</B> symmetric matrix  <B>eigenvalues</B>  <B>eigenvectors</B>  qr algorithm 5.14 ca700612 jb february 13  1978 10 34 am 2043 5 2043 2043 5 2043 2043 5 2043 2349 5 2043 1648 6 2043 1716 6 2043 1794 6 2043 1894 6 2043 2043 6 2043 501 6 2043 613 6 2043 774 6 2043
33 Q0 2047 4 0.10813453 Lucene_47
 neither drawback  cacm june  1970 <B>stewart</B>  <B>g</B>  <B>w</B>  <B>eigenvalues</B>  <B>eigenvectors</B>  qr method  origin shiftsincorporating origin shifts into the qr algorithm for symmetric tridiagonal <B>matrices</B> the qr iteration for the <B>eigenvalues</B> of a symmetric tridiagonal matrix can be accelerated by incorporating  the direct method can unnecessarily degrade small <B>eigenvalues</B>  while the implicit method can effectively
33 Q0 2697 5 0.10382046 Lucene_47
  a  palmer  <B>j</B>  <B>numerical</B> <B>linear</B> algebra  <B>linear</B> systems  toeplitz <B>matrices</B>  tridiagonal <B>matrices</B> 5 5.1 5.11a fast method for solving a class of tridiagonal <B>linear</B> systems the solution of <B>linear</B> systems having <B>real</B>  symmetric  diagonally dominant tridiagonal coefficient <B>matrices</B> with constant diagonals is considered  it is proved that the diagonals of the lu <B>decomposition</B> converges when floating-point
33 Q0 1692 6 0.09500297 Lucene_47
 september  1968 <B>stewart</B> iii  <B>g</B>  lick  d  <B>w</B>  heat transfer problem  poisson equation  boundary value<B>numerical</B> solution of a thin plate heat transfer problem the <B>numerical</B> solution of a system of <B>linear</B> equations resulting from a discrete approximation to a thin plate heat transfer problem is considered  the slow convergence of point iterative methods is analyzed and shown to be caused by <B>one</B>
33 Q0 2695 7 0.09004822 Lucene_47
 is an important computational tool in <B>numerical</B> <B>linear</B> algebra  consider the class of sparse <B>matrices</B> which can be tridiagonalized using only row and <B>corresponding</B> column permutations  the advantages of using  otherwise  early rejection will occur  cacm january  1974 gibbs  n  e  poole  <B>w</B>  <B>g</B>  jr  tridiagonal matrix  <B>permutation</B>  algorithm  <B>eigenvalues</B>  graph  bandwidth  sparse matrix 5.14 5.32 ca740104 jb
33 Q0 2806 8 0.080785595 Lucene_47
 to norm-bound  condition numbers   <B>one</B>  for <B>linear</B> systems  is known  the other  for eigen systems  seems to be new  cacm january  1975 birkhoff  <B>g</B>  <B>matrices</B>  <B>eigenvalues</B>  norms  condition numbers  <B>error</B> <B>analysis</B>  gram-schmidt orthogonalization 5.11 5.14 ca750105 jb january 12  1978 10 37 am 2806 5 2806two hadamard numbers for <B>matrices</B> a discussion is given of two functions of the entries of a square
33 Q0 2554 9 0.07302845 Lucene_47
 are symmetric band <B>matrices</B> with b positive definite  if n is the order of the matrix and <B>m</B> the bandwidth  the <B>matrices</B> a and b are partitioned into <B>m</B>-by-<B>m</B> blocks  and the algorithm is described in terms of rutishauser and schwartz for the reduction of symmetric <B>matrices</B> to band form  the calculation <B>c</B> requires order mn 2 operation  the round-off <B>error</B> in the calculation of <B>c</B> is of the same order
33 Q0 2807 10 0.07152626 Lucene_47
 elimination solution  cacm january  1975 peters  <B>g</B>  wilkinson  <B>j</B>  h  gauss-jordan algorithm  gaussian elimination  back-substitution  backward <B>error</B> <B>analysis</B>  <B>bounds</B> for <B>error</B> in solution  bound the absolute <B>error</B> in the solution is strictly comparable with that <B>corresponding</B> to gaussian elimination algorithm with partial pivoting for the solution of general systems of <B>linear</B> equations is commonly
33 Q0 1423 11 0.065551385 Lucene_47
 of a matrix is important in <B>analysis</B> because it provides an extension of the concept of an inverse which applies to all <B>matrices</B>  it also has many applications in <B>numerical</B> <B>analysis</B>  but it is not widely-singular <B>matrices</B>  which gives the generalized inverse with little extra effort and with no additional storage requirements  the algorithm gives the generalized inverse for any <B>m</B> by n matrix a  including
33 Q0 3016 12 0.06010381 Lucene_47
  a means of estimating the <B>error</B> inherent in the <B>decomposition</B> of certain models is presented  cacm february  1978 <B>stewart</B>  <B>w</B>  markov models  <B>numerical</B> techniques  simultaneous iteration  neara comparison of <B>numerical</B> techniques in markov modeling this paper presents several <B>numerical</B> methods which may be used to obtain the stationary probability vectors of markovian models  an example
33 Q0 1147 13 0.05852021 Lucene_47
  1964 day  <B>j</B>  t  collins ii  <B>g</B>  <B>w</B>  ca640108 jb march 10  1978 5 32 am 1147 5 1147 1147 5 1147 1147 5on the <B>numerical</B> solution of boundary value problems for <B>linear</B> ordinary differential equations  a <B>numerical</B> method is presented for the solution of boundary value problems involving <B>linear</B> ordinary differential equations  the method described is noniterative and makes use of any <B>one</B>-step <B>numerical</B>
33 Q0 2281 14 0.054762416 Lucene_47
the eigen problem of block tridiagonal <B>matrices</B> cacm september  1972 khalil  h  <B>m</B>  <B>linear</B> algebra  <B>eigenvalues</B> and <B>eigenvectors</B>  partial differential equations 5.14 5.17 ca720909 jb january 27  1978 4 18 pm 2281 5 2281 2281 5 2281 2281 5 2281
33 Q0 2887 15 0.054594915 Lucene_47
  particularly for the learning user of cobol  cacm january  1976 litecky  <B>c</B>  r  <B>davis</B>  <B>g</B>  b  errors in programming  <B>error</B> correction  cobol  programming language errors  <B>error</B> <B>analysis</B>  diagnostics  <B>error</B>a study of errors  <B>error</B>-proneness  and <B>error</B> diagnosis in cobol this paper provides data on cobol <B>error</B> frequency for correction of errors in student-oriented compilers  improvement of teaching
33 Q0 1809 16 0.053727854 Lucene_47
 parter  s  v  ph  program  <B>numerical</B> <B>analysis</B>  course <B>separation</B>  education 1.52 ca691203 jb february<B>numerical</B> <B>analysis</B> in a ph  computer science program <B>numerical</B> <B>analysis</B> is the study of methods and procedures used to obtain  <B>approximate</B> solutions  to mathematical problems  much of the emphasis the question of background and emphasis  the <B>numerical</B> <B>analysis</B> program in the computer science department
33 Q0 2226 17 0.051877666 Lucene_47
  with two algorithms for the <B>zero</B>-<B>one</B> <B>linear</B> programming problem  an <B>error</B> in gue s paper is corrected  the utility of <B>one</B> of the algorithms as a suboptimizer is indicated  cacm january  1971 proll  l  <B>g</B>  operations research  integer programming  <B>zero</B>-<B>one</B> variables  algorithms 5.39 5.41 ca710108 jbfurther evidence for the <B>analysis</B> of algorithms for the <B>zero</B>-<B>one</B> programming problem the purpose
33 Q0 2186 18 0.051818985 Lucene_47
 <B>numerical</B> technique  in <B>particular</B> such useful properties as definiteness and reasonableness of condition  cacm june  1971 bosarge jr   <B>w</B>  e  johnson  o  <B>g</B>  splines  regulator problem  control theory  <B>numerical</B> <B>analysis</B> 5.1 ca710604 jb february 3  1978 10 12 am 2186 5 2186 2186 5 2186 2186 5 2186<B>numerical</B> properties of the ritz-trefftz algorithm for optimal control in this paper the ritz
33 Q0 1963 19 0.050132424 Lucene_47
condition numbers of pei <B>matrices</B> cacm november  1970 rokne  <B>j</B>  <B>matrices</B>  condition numbers  pei <B>matrices</B>  <B>eigenvectors</B>  <B>eigenvalues</B> 5.14 ca701116 jb february 9  1978 4 21 pm 1963 4 1963 1963 4 1963 1963 4 1963 909 5 1963 1963 5 1963 1963 5 1963 1963 5 1963 475 5 1963 750 5 1963
33 Q0 2000 20 0.047927245 Lucene_47
 value problems  the resulting method applies in <B>particular</B> to the <B>numerical</B> solution of optimal  1970 kimble  <B>g</B>  <B>w</B>  goodman-lance  boundary-value problems  newton s method  nonlinear equations  orthogonal <B>matrices</B> 3.21 5.15 5.17 ca700905 jb february 10  1978 1 39 pm 2000 5 2000 2000 5 2000
33 Q0 2335 21 0.04783327 Lucene_47
<B>eigenvalues</B> and <B>eigenvectors</B> of a <B>real</B> general matrix  algorithm r343  cacm june  1972 niessner  h  <B>eigenvalues</B>  <B>eigenvectors</B>  qr-algorithm  nonsymmetric <B>matrices</B>  general <B>matrices</B> 5.14 ca720610 jb january 30  1978 4 11 pm 1968 4 2335 2099 4 2335 2335 4 2335 1662 5 2335 2335 5 2335 2335 5 2335 2335 5 2335
33 Q0 3153 22 0.04752602 Lucene_47
 a <B>decomposition</B> approach and treating the <B>closed</B> system as a single server  the response times  cacm july  1979 hine  <B>j</B>  mitrani  <B>i</B>  tsur  s  queueing networks  paging  virtual memory  performance the main memory between two classes of jobs are considered  initially  a <B>closed</B> system consisting alocation parameters on the expected response times under the two algorithms  <B>numerical</B> solutions
33 Q0 2548 23 0.046818387 Lucene_47
normal deviate  s14   algorithm a442  cacm january  1973 hill  <B>g</B>  <B>w</B>  <B>davis</B>  a  <B>w</B>  normal distribution inverse  probit transform  taylor series approximation 5.12 5.5 ca730113 jb january 24  1978 3 39 pm 1157 4 2548 1779 4 2548 1920 4 2548 1944 4 2548 1987 4 2548 2548 4 2548 2548 5 2548 2548 5 2548 2548 5 2548 714 5 2548
33 Q0 1998 24 0.046656422 Lucene_47
complex matrix inversion versus <B>real</B> a comparison of complex matrix with <B>real</B> matrix inversion is made  it is shown that the complex inversion can be up to twice as fast as the <B>real</B> inversion  further  the rounding <B>error</B> bound for complex inversion is <B>about</B> <B>one</B>-eighth that of <B>real</B>  for gaussian  rounding <B>error</B> bound  <B>error</B> <B>bounds</B>  complex rounding <B>error</B> <B>bounds</B> 5.14 5.11 5.10 ca700907 jb february
33 Q0 1707 25 0.045794427 Lucene_47
 with a preassigned positive spectrum  cacm august  1968 hall  <B>c</B>  a  porsching  t  a  test <B>matrices</B>  positive <B>matrices</B>  similarity transformation  positive <B>eigenvalues</B> 5.1 5.14 ca680807 jb february 22generation of positive test <B>matrices</B> with known positive spectra sufficient conditions are given for a <B>real</B> matrix to be similar to a positive matrix  this result is used to construct a similarity
33 Q0 537 26 0.04314147 Lucene_47
a machine program for theorem-proving the program of a proof procedure is discussed in connection with trial runs and possible improvements  cacm july  1962 <B>davis</B>  <B>m</B>  logemann  <B>g</B>  loveland  d  ca620724 jb march 17  1978 8 11 pm 537 5 537 537 5 537 537 5 537
33 Q0 2544 27 0.042672027 Lucene_47
automatic <B>error</B> <B>bounds</B> for simple zeros of analytic functions the cauchy-ostrowski theorem on convergence of newton iterates for an analytic function in <B>one</B> variable is extended to include with <B>real</B> and complex roots and <B>one</B> example for the bessel function of the first kind  cacm february  1973 rokne  <B>j</B>  <B>real</B> intervals  complex intervals  <B>real</B> interval arithmetic  complex interval
33 Q0 1782 28 0.041899443 Lucene_47
  such a formulation is useful in fourier <B>analysis</B> to improve accuracy and ease of usage  a complete set of formulas for <B>numerical</B> fourier <B>analysis</B> is given  cacm january  1968 meisel  <B>w</B>  s  <B>numerical</B> integration  fourier <B>analysis</B>  integration 5.16 ca680112 jb february 23  1978 2 05 pm 1782 5 1782 1782 5a <B>numerical</B> integration formula useful in fourier <B>analysis</B> a <B>numerical</B> integration formula
33 Q0 1658 29 0.03962173 Lucene_47
<B>analysis</B> of algorithms for the <B>zero</B>-<B>one</B> programming problem this paper is concerned with a review and examination of several existing algorithms for the <B>zero</B>-<B>one</B> programming problem  computational  cacm december  1968 gue  r  l  liggett  <B>j</B>  <B>c</B>  cain  k  <B>c</B>  operations research  optimization theory  integer programming  <B>zero</B>-<B>one</B> variables  algorithms 5.39 5.41 ca681208 jb february 21  1978 1 31 pm
33 Q0 2809 30 0.038292743 Lucene_47
  in <B>particular</B> for the generalization of order unit norms  l-norms and <B>m</B>-norms  an example of application to operator norms is given concerning contraction properties of positive <B>operators</B>  cacm january  1975 bauer  f  l  <B>matrices</B>  norms  positivity  <B>numerical</B> range  positivity cones  vector lattice absolute
33 Q0 2805 31 0.03814744 Lucene_47
perturbations of <B>eigenvalues</B> of non-normal <B>matrices</B> the problem considered is to give <B>bounds</B> for finite perturbations of simple and multiple <B>eigenvalues</B> of nonnormal <B>matrices</B>  where these <B>bounds</B> are in terms of the <B>eigenvalues</B>  the departure from normality  and the frobenius norm attainable for any set of <B>matrices</B>  cacm january  1975 van der sluis  a  perturbation of <B>eigenvalues</B>
33 Q0 1662 32 0.037819423 Lucene_47
<B>eigenvalues</B> and <B>eigenvectors</B> of a <B>real</B> general matrix  f2   cacm december  1968 grad  <B>j</B>  brebner  <B>m</B>  a  <B>eigenvalues</B>  <B>eigenvectors</B>  latent roots  latent vectors  householder s method  qr algorithm  inverse iteration 5.14 ca681204 jb february 21  1978 1 42 pm 1662 5 1662 1662 5 1662 1662 5 1662 1968 5 1662 2099 5 1662 2335 5 1662 1662 6 1662 1662 6 1662 1662 6 1662 1707 6 1662 2099 6 1662
33 Q0 2408 33 0.03767797 Lucene_47
 for solving the biharmonic equation are compared  <B>one</B> method is direct  using <B>eigenvalue</B>-eigenvector <B>decomposition</B>  the other method is iterative  solving a poisson equation directly at each iteration  cacm november  1973 ehrlich  l  <B>w</B>  biharmonic  direct method  block iterative  eigenvector-<B>eigenvalue</B> <B>decomposition</B> 5.14 5.17 ca731118 jb january 19  1978 3 28 pm 2408 5 2408 2408 5 2408 2408 5 2408
33 Q0 1764 34 0.03766392 Lucene_47
 consisted of a panel discussion on computer appreciation  organized and chaired by elliot <B>i</B>  organick  the four panelists were charles h  davidson  bernard a  galler  richard  <B>w</B>  hamming  and alan <B>j</B> to papers by van dam and <B>kahn</B> or to the discussion during the first half of the session  pertinent papers are included in the references  cacm april  1968 organick  e  <B>i</B>  computer appreciation  students
33 Q0 1968 35 0.03764565 Lucene_47
<B>eigenvalues</B> and <B>eigenvectors</B> of a <B>real</B> general matrix  algorithm 343  f1   cacm november  1970 knight  <B>w</B>  mersereau  <B>w</B>  <B>eigenvalues</B>  <B>eigenvectors</B>  latent roots  householder s method  qr algorithm  inverse iteration 5.14 ca701111 jb february 9  1978 4 30 pm 1968 4 1968 1968 4 1968 2099 4 1968 2335 4 1968 1662 5 1968 1968 5 1968 1968 5 1968 1968 5 1968 2099 5 1968
33 Q0 3059 36 0.03752136 Lucene_47
  the models are formulated in terms of cpu <B>i</B> o and <B>i</B> o <B>i</B> o overlap and applied to the <B>analysis</B> for systems which are in <B>approximate</B> cpu <B>i</B> o utilization balance and for low degrees of multiprogrammingmodels for parallel processing within programs  application to cpu <B>i</B> o and <B>i</B> o <B>i</B> o overlap <B>approximate</B> queueing models for internal parallel processing by individual programs in a multiprogrammed
33 Q0 1143 37 0.036730736 Lucene_47
<B>analysis</B> of decay-type data  a comparative study has been made of a variety of <B>numerical</B> techniques for fitting experimental data of the decay type by forms involving the sums of exponentials techniques  <B>error</B> <B>bounds</B> can be so large that no great confidence can be placed even in them  it would and for analyzing the data  and then to consider as significant only relative results between <B>one</B> <B>subject</B>
33 Q0 2850 38 0.036209513 Lucene_47
  instead of supplying the normal inputs to a program  e <B>g</B>  numbers  <B>one</B> supplies symbols representing and program proving is also included  cacm july  1976 king  <B>j</B>  <B>c</B>  symbolic execution  program testing execution of conditional branch type statements  a <B>particular</B> system called effigy which provides programs written in a simple pl <B>i</B> style programming language  it includes many standard debugging features
33 Q0 2355 39 0.03600432 Lucene_47
 gentleman  <B>w</B>  <B>m</B>  clenshaw curtis  <B>numerical</B> integration  automatic quadrature  <B>error</B> estimates  chebyshevimplementing clenshaw-curtis quadrature  <B>i</B> methodology and experience clenshaw-curtis quadrature is a particularly important automatic quadrature scheme for a variety of reasons  <B>especially</B> the high of the fast fourier transform algorithm  this first part discusses the strategy and various <B>error</B>
33 Q0 3138 40 0.03584149 Lucene_47
 april  1979 hanson  r  wisniewski  <B>j</B>  <B>linear</B> programming  <B>numerical</B> <B>linear</B> algebra  modified givens an orthogonal <B>decomposition</B> of a matrix of column  or row  vectors  the fundamental idea is to add a column  or row  analogous to adding an additional row of data in a <B>linear</B> least squares problem  a column with an implementation of the revised simplex method  the algorithm is a general purpose <B>one</B> that does
33 Q0 2081 41 0.035836615 Lucene_47
  the paper investigates how the special structure of <B>matrices</B> can be described and utilized for efficient computing by saving memory space and superfluous operations  sequences of <B>matrices</B>  and sequences of sequences of <B>matrices</B>  are considered  and matrix <B>operators</B> areext ended to sequence <B>operators</B>some complete calculi for <B>matrices</B> a matrix calculus is introduced with the intention of developing
33 Q0 70 42 0.035830367 Lucene_47
construction of a set of test <B>matrices</B> this paper develops the equations and properties of a set of test <B>matrices</B> which are useful in the determination of the accuracy of routines for finding the inverse  determinant and or <B>eigenvalues</B> of a matrix  cacm august  1959 aegerter  <B>m</B>  <B>j</B>  ca590803 jb march 22  1978 6 09 pm 70 5 70 70 5 70 70 5 70
33 Q0 1363 43 0.03527241 Lucene_47
 by a self-starting  p-th order <B>numerical</B> integration method to solve an initial value problem  the procedure uses an estimate of the truncation <B>error</B> to calculate the step size  cacm october  1966 martin  <B>w</B>  <B>c</B>  paulson  k  <B>c</B>  sashkin  l  ca661004 jb march 2  1978 4 05 pm 1363 5 1363 1363 5 1363 1363 5 1363a general method of systematic interval computation for <B>numerical</B> integration of initial value
33 Q0 3125 44 0.034954634 Lucene_47
 computations and the moving of <B>invariant</B> computations out of loops are often done separately  with invariants to the entrance of the outermost loop in which it is <B>invariant</B>  this is done by solving a more general problem  <B>i</B> e  the elimination of computations performed twice on a given execution path execution cost is nearly <B>linear</B> with the size of the program  and that it leads to a smaller optimizer
33 Q0 1876 45 0.03461923 Lucene_47
generation of test <B>matrices</B> having certain sign patterns and prescribed positive spectra a class of orthogonal transformations is presented whose members transform a given positive diagonal matrix into a matrix having <B>one</B> of four special sign patterns  cacm july  1969 schneider  a  <B>j</B>  test <B>matrices</B>  positive <B>matrices</B>  sign patterns  orthogonal transformations  positive <B>eigenvalues</B> 5.1 5.14
33 Q0 1709 46 0.03427678 Lucene_47
 precision  cacm august  1968 breaux  h  <B>j</B>  multiple <B>linear</B> regression  statistical recurrence formulasa modification of efroymson s technique for stepwise regression <B>analysis</B> the computational technique conventionally used for stepwise multiple <B>linear</B> regression requires the storage of an n x n of presently used machinery  the near symmetry of the <B>matrices</B> involved permits a modification
33 Q0 2820 47 0.034165263 Lucene_47
  1976 wilcox  t  r  <B>davis</B>  a  <B>m</B>  tindall  <B>m</B>  h  interactive programming  table driven compilers and most semantic <B>analysis</B> is performed as the program is entered and as it is subsequently edited  <B>analysis</B> is performed character by character  the most remarkable feature of caps is its ability corrected  instead  caps interacts with the student to help him find the cause of his <B>error</B>  most
33 Q0 1501 48 0.034100596 Lucene_47
<B>eigenvectors</B> of a 2n x 2n matrix it has been known that the <B>eigenvalues</B> of a certain 2n x 2n matrix can be obtained by use of two smaller <B>matrices</B> of order n which can be easily constructed  an algorithm is given to obtain the <B>eigenvectors</B> of the 2n x 2n matrix by use of the <B>eigenvectors</B> of the smaller <B>matrices</B>  cacm december  1967 charmonman  s  ca671207 jb february 26  1978 2 22 pm 1501 5 1501
33 Q0 2824 49 0.03376714 Lucene_47
an improvement to martin s algorithm for computation of <B>linear</B> precedence functions cacm october  1976 duong-kien  <B>c</B>  hoffmann  h  <B>j</B>  muth  d  syntax <B>analysis</B>  precedence functions  boolean <B>matrices</B> 4.12 ca761007 jb january 3  1978 4 13 pm 1542 4 2824 1683 4 2824 1693 4 2824 1781 4 2824 1787 4 2824 1836 4 2824 1945 4 2824 2060 4 2824 2061 4 2824 2082 4 2824 2091 4 2824 2152 4 2824 2179 4 2824
33 Q0 1116 50 0.03332918 Lucene_47
 which relate the timetable problem to theorems on <B>matrices</B> of zeros and ones  and to theorems on bipartite graphs  some problems of applying the method to constructing timetables in <B>real</B> situations are noted  cacm march  1964 csima  <B>j</B>  gotlieb  <B>c</B>  <B>c</B>  ca640316 jb march 10  1978 2 34 am 1116 5 1116 1116 method for constructing timetables  based on an iteration involving boolean <B>matrices</B>  is described
33 Q0 2177 51 0.033288214 Lucene_47
 essentially as 2 <B>m</B> n  in case  <B>i</B>   or  n 2  win case  ii   a spanning tree with labeled edges on the type of graph  1  lt   <B>g</B>  lt   2  and both <B>bounds</B> are attained  values of <B>g</B> are derived blocks and cutnodes of an arbitrary undirected graph  the graph may be represented either  <B>i</B>  as an ordered list of edges or  ii  as a packed adjacency matrix  if <B>w</B> denotes the word length
33 Q0 1577 52 0.032907724 Lucene_47
<B>eigenvalues</B> and <B>eigenvectors</B> of a <B>real</B> symmetric matrix by the qr method  algorithm 254  f2   cacm june  1967 welsch  <B>j</B>  h  ca670607e jb march 23  1978 3 31 pm 1577 5 1577 1577 5 1577 1577 5 1577
33 Q0 1666 53 0.031727258 Lucene_47
solution of <B>linear</B> programs in 0-1 variables by implicit enumeration  algorithm 341  h   cacm november  1968 byrne  <B>j</B>  l  proll  l  <B>g</B>  <B>linear</B> programming  <B>zero</B>-<B>one</B> variables  partial enumeration 5.41 ca681113 jb february 21  1978 2 21 pm 1666 5 1666 1666 5 1666 1666 5 1666 2226 5 1666 1658 6 1666 1666 6 1666
33 Q0 85 54 0.03168489 Lucene_47
<B>error</B> <B>analysis</B> in floating point arithmetic cacm may  1959 carr iii  <B>j</B>  <B>w</B>  ca590501 jb march 22  1978 6 43 pm 1148 5 85 85 5 85 85 5 85 85 5 85 85 6 85
33 Q0 492 55 0.031595588 Lucene_47
   <B>g</B>  spruth  <B>w</B>  <B>g</B>  ca620836 jb march 17  1978 9 02 pm 911 5 492 1785 5 492 2203 5 492 2860 5 492 492<B>analysis</B> of a file addressing method this paper presents a new file addressing method based of the displacement of records from their calculated address  which is <B>one</B> less than the number of probes required to address a record  is computed on the basis of a markov chain model  for the reader not <B>interested</B>
33 Q0 2567 56 0.030811291 Lucene_47
 for some highly stiff systems  cacm december  1974 chu  s  <B>c</B>  berman  <B>m</B>  <B>numerical</B> solution  coupled  single-step method for the <B>numerical</B> solution of initial value problems for systems but to be <B>especially</B> efficient when dealing with stiff systems of differential equations  it is  in general  second order except for the case of a <B>linear</B> system with constant coefficients and <B>linear</B>
33 Q0 339 57 0.03076135 Lucene_47
<B>real</B> exponential integral  algorithm 20  cacm april  1961 alexander  <B>w</B>  <B>j</B>  thacher jr   h  <B>c</B>  ca610429 jb march 16  1978 11 36 pm 339 5 339 339 5 339 339 5 339
33 Q0 1441 58 0.030443544 Lucene_47
methods of <B>numerical</B> integration applied to a system having trivial function evaluations a study has been made to determine which methods of <B>numerical</B> integration require the least computation time for a given amount of truncation <B>error</B> when applied to a <B>particular</B> system of ordinary differential advantage over the others in the application to this <B>particular</B> problem  cacm april  1966 waters  <B>j</B>
33 Q0 1802 59 0.030441688 Lucene_47
regression using certain direct product <B>matrices</B>  algorithm 366  g2   cacm december  1969 claringbold  p  <B>j</B>  <B>analysis</B> of variance  <B>analysis</B> of covariance  regression <B>analysis</B>  experimental design  matrix direct product  protection operator  orthogonal matrix 5.14 5.5 ca691210 jb february 15  1978 2 23 pm 1801 5 1802 1802 5 1802 1802 5 1802 1802 5 1802 1802 6 1802
33 Q0 1014 60 0.029587597 Lucene_47
machine controls for <B>analysis</B> of variance a major problem in using the <B>analysis</B> of variance the experimenter may not be <B>interested</B> in these interactions it is impossible to ignore them in most experimental designs because of the problem of getting <B>error</B> terms  it is natural therefore to look to get the computer to do this is described  cacm august  1964 weldon  r  <B>j</B>  ca640816 jb march 9  1978
33 Q0 1766 61 0.029559927 Lucene_47
quasilinearization and the estimation of differential <B>operators</B> from <B>eigenvalues</B> given a <B>linear</B> ordinary differential operator containing several unknown constants and a number of its <B>eigenvalues</B>  <B>eigenvalues</B>  differential <B>operators</B>  nonlinear boundary-value problems  inverse problems <B>numerical</B> procedure for solution is indicated  the results of some computational experiments
33 Q0 2133 62 0.029513104 Lucene_47
algorithm for the assignment problem  rectangular <B>matrices</B>   h   algorithm 415  cacm december  1971 bourgeois  f  lassalle  <B>j</B>  <B>c</B>  operations research  optimization theory  assignment problem  rectangular <B>matrices</B> 5.39 5.40 ca711210 jb february 2  1978 9 38 am 2133 4 2133 2133 4 2133 2134 4 2133 124 5 2133 2133 5 2133 2133 5 2133 2133 5 2133 2134 5 2133
33 Q0 1135 63 0.029462917 Lucene_47
 characteristic of the <B>particular</B> application  furthermore local changes of a process  e <B>g</B>  changes affecting only <B>one</B> of the output files involved  can be effected by local modifications in the program  e <B>g</B>  modification of only <B>one</B> entry of the tables   this structure also allows for inexpensive are <B>one</B>-to-<B>one</B> translations of flowcharts   here an <B>invariant</B> pattern of procedure is identified
33 Q0 3094 64 0.029120443 Lucene_47
 actual <B>numerical</B> values <B>corresponding</B> to a given compiler-machine configuration  <B>one</B> can determine  1978 cohen  <B>j</B>  roth  <B>m</B>  syntactic <B>analysis</B>  <B>analysis</B> of algorithms top-down and bottom-up parsing and the program representing the algorithm <B>one</B> wishes to analyze  the approach is described by using
33 Q0 1404 65 0.029101014 Lucene_47
computational aspects of multiple covariance <B>analysis</B> on a multifactor structure the computational procedure for the <B>analysis</B> of multiple covariance in statistics is discussed with reference to the <B>analysis</B> of variance  a special operator calculus developed by hartly for programming <B>analysis</B> of variance for multifactor experiments is extended to cover the <B>analysis</B> of covariance  this extension
33 Q0 1727 66 0.028722938 Lucene_47
 estimation of the s ij   it is easier to estimate not s ij  but the quantities p ij  s ij  <B>c</B> <B>i</B>  sum s ij   <B>j</B> 1 n   where <B>c</B> <B>i</B>  is an arbitrary positive constant for each <B>i</B>  although the p ij of the number of jumps from the <B>i</B>-th instruction on to the <B>j</B>-th instruction in the run time  in the cases<B>one</B> way of estimating frequencies of jumps in a program for the segmentation of a program
33 Q0 1622 67 0.02869158 Lucene_47
 in multidimensional iterative networks  cacm march  1967 waite  <B>w</B>  <B>m</B>  ca670307 jb february 28  1978 1 18an efficient procedure for the generation of <B>closed</B> subsets an efficient algorithm is described for generating subsets of a set s which satisfy constraints of the form   if s <B>i</B>  is a member of the subset  then s <B>j</B>  must also be a member of the subset   the algorithm has been programmed in the wisp
33 Q0 2213 68 0.028374428 Lucene_47
roots of matrix pencils  the generalized <B>eigenvalue</B> problem  f2   algorithm 405  cacm february  1971 dell  a  <B>m</B>  weil  r  l  thompson  <B>g</B>  l  <B>eigenvalues</B>  matrix roots  pencil roots 5.1 5.3 ca710208 jb february 8  1978 8 37 am 2213 5 2213 2213 5 2213 2213 5 2213
33 Q0 2289 69 0.028318245 Lucene_47
  the adjacency matrix of a graph is easily mapped onto an array  each matrix element is stored in <B>one</B> is the determination of algorithms that exploit the possibilities for parallelism  <B>especially</B> for problems whose solutions appear to be inherently serial  in <B>particular</B>  several parallelized algorithms applications to wire routing  pert chart <B>analysis</B>  and the <B>analysis</B> of many types of networks
33 Q0 950 70 0.02817019 Lucene_47
 to the proposition that  in order to take full advantage for <B>real</B>-time computations of highly parallel computers as can be expected to be available in the near future  much of <B>numerical</B> <B>analysis</B> will have of the other subtasks  as an example  a method is proposed for  parallelizing  the <B>numerical</B>  cacm december  1964 nievergelt  <B>j</B>  ca641221 jb march 9  1978 3 09 pm 950 5 950 950 5 950 950 5 950
33 Q0 2592 71 0.02801533 Lucene_47
 and have a wide range of <B>numerical</B> characteristics  cacm october  1974 charnes  a  raike  <B>w</B>  <B>m</B>  stutz  <B>j</B>on generation of test problems for <B>linear</B> programming codes users of <B>linear</B> programming computer of the solutions provided by such codes  large scale <B>linear</B> programming codes at most installations are assumed and an illustrative implementation of a method for generating <B>linear</B> programming test problems
33 Q0 1946 72 0.027901372 Lucene_47
 in detail  cacm january  1969 ku  s  y  adler  r  <B>j</B>  resultant algorithm  <B>g</B> <B>c</B> d  algorithm  polynomial faster  in <B>particular</B> bezout s determinant proves to be strikingly superior in <B>numerical</B> accuracy are introduced  the extent of propagation of errors caused by truncation of <B>real</B> coefficients  memory
33 Q0 1529 73 0.027538035 Lucene_47
<B>decomposition</B> programming an <B>analysis</B> of matrix substructure a petroleum blending problem was analyzed in order to compare the primal and primal-dual <B>decomposition</B> algorithms  in the course of the <B>analysis</B>  a substructure was discovered which has relevance to the relative performance of the two without <B>decomposition</B>  cacm october  1967 bell  e  <B>j</B>  ca671004 jb february 27  1978 2 33 pm 1529 5 1529
33 Q0 1744 74 0.027511233 Lucene_47
 to an overdetermined system of <B>linear</B> equations is presented  that uses gaussian lu <B>decomposition</B> with rowstable <B>numerical</B> methods for obtaining the chebyshev solution to an overdetermined system of two equations simultaneously  cacm june  1968 bartels  r  h  golub  <B>g</B>  h  chebyshev solutions  overdetermined <B>linear</B> systems  <B>linear</B> equations exchange algorithm 5.13 5.14 5.41 ca680601 jb february 22
33 Q0 2977 75 0.027449254 Lucene_47
 the concept of a stage model  the <B>analysis</B> suggests an alternative model of budget growth and a <B>separation</B> between models of budgeting growth and growth stages in the development of the computer resource  cacm april  1977 lucac  h  <B>c</B>  jr  sutton  <B>j</B>  a  budgets  stage theories  stage hypothesis 3.50
33 Q0 2758 76 0.027186258 Lucene_47
a note on the lu factorization of a symmetric matrix cacm may  1975 evans  d  <B>j</B>  hatzopoulos  <B>m</B>  symmetric <B>matrices</B>  factorization  test <B>matrices</B>  matrix inversion  separable systems 5.14 ca750509 jb january 9  1978 2 26 pm 2758 5 2758 2758 5 2758 2758 5 2758
33 Q0 2711 77 0.026983036 Lucene_47
 are shown  demonstrating the usefulness of the model  cacm november  1975 salton  <B>g</B>  wong  a  yang  <B>c</B>  s  automatic information retrieval  automatic indexing  content <B>analysis</B>  document space 3.71 3.73  search requests   it appears that the best indexing  property  space is <B>one</B> where each entity lies be expressible as a function of the density of the object space  in <B>particular</B>  retrieval performance
33 Q0 1611 78 0.02697053 Lucene_47
scheduling project networks some of the basic concepts and terminology of project networking are developed  the critical path algorithm incorporated in the <B>c</B>-e-<B>i</B>-r proprietary scheduling system ramps  resource allocation and multi-project scheduling  is described  the <B>error</B> detection and network <B>analysis</B> features of the algorithm are also described  cacm april  1967 klein  <B>m</B>  <B>m</B>  ca670404 jb
33 Q0 1958 79 0.026963113 Lucene_47
 with the addition of two fortran statements  the two version is a significant improvement  a <B>numerical</B> example comparing the two is included  cacm december  1970 thompson  r  <B>j</B>  runge-kutta methods  ordinary differential equations  round-off <B>error</B>  <B>error</B> <B>analysis</B> 5.11 5.17 ca701205 jb february 9  1978 3  an improved version reduces round-off <B>error</B> significantly  in this note the heart of the scheme
33 Q0 1334 80 0.026485242 Lucene_47
 and typeset photographically on an s-560 photon system  cacm january  1965 gerard  <B>j</B>  <B>m</B>  izsak  <B>i</B>  <B>g</B>mechanization of tedious algebra  the newcomb <B>operators</B> of planetary theory a computer program has been written to generate tables of formulas for the newcomb <B>operators</B> of planetary theory  the newcomb <B>operators</B> are expressed as polynomials in two variables  <B>one</B> of which stands for a simple
33 Q0 1905 81 0.02595144 Lucene_47
  cacm may  1969 bartels  r  h  goulub  <B>g</B>  h  simplex method  <B>linear</B> programming  lu <B>decomposition</B>the simplex method of <B>linear</B> programming using lu <B>decomposition</B> standard computer implementations of dantzig s simplex method for <B>linear</B> programming are based upon forming the inverse of the basic-off <B>error</B> properties  this paper gives the theoretical background for an implementation which
33 Q0 1174 82 0.025942927 Lucene_47
inverse <B>permutation</B>  algorithm 250  g6   cacm november  1965 medlock  <B>c</B>  <B>w</B>  ca651107 jb march 6  1978 5 01 pm 1174 5 1174 1174 5 1174 1174 5 1174
33 Q0 2261 83 0.025930995 Lucene_47
 memory  and is easy to use is developed  the method  which uses a uniform <B>zero</B>-<B>one</B> random number sourcean <B>approximate</B> method for generating symmetric random variables a method for generating values  the method should be useful to simulation practitioners  cacm november  1972 ramberg  <B>j</B>  s  schmeiser  b  <B>w</B>  simulation  monte carlo  probability  statistics  approximations  random variables
33 Q0 2275 84 0.025812225 Lucene_47
  <B>j</B>  integral equations of the first kind  nonnegative constraints  singular value <B>analysis</B> 3.10 5.14integral equations of immunology the inversion of a <B>particular</B> integral equation of the first by using singular value <B>decomposition</B>   3  constrain the unknown function approximation  since it represents a probability distribution  to be nonnegative  a number of test cases are presented  <B>one</B> set
33 Q0 3086 85 0.02562238 Lucene_47
 of the computational model on the ease of <B>analysis</B> and on the results produced  cacm july  1978 fredman  <B>m</B>  weide  b  <B>analysis</B> of algorithms  combinatorial problems  computational complexity  computational models if comparisons between <B>linear</B> functions of the interval endpoints are allowed  the existence of an  n log n  lower bound to determine whether any two of n <B>real</B> numbers are within of each other is also
33 Q0 2825 86 0.025507905 Lucene_47
the bmd and bmdp series of statistical computer programs cacm october  1976 frane  <B>j</B>  <B>w</B>  <B>analysis</B> of variance  cluster <B>analysis</B>  contingency tables  data <B>analysis</B>  discriminant <B>analysis</B>  factor <B>analysis</B>  graphics  outliers  regression  time series  transformations 1.3 3.3 4.0 5.5 ca761006 jb january 3  1978 4 18 pm 2825 4 2825 2419 5 2825 2825 5 2825 2825 5 2825 2825 5 2825
33 Q0 2325 87 0.025141913 Lucene_47
<B>numerical</B> mathematics and computer science <B>numerical</B> mathematics is viewed as the <B>analysis</B> of continuous algorithms  four of the components of <B>numerical</B> mathematics are discussed  these are  foundations  finite precision number systems  computational complexity   synthesis and <B>analysis</B> of algorithms  <B>analysis</B> of <B>error</B>  programs and program libraries  cacm july  1972 traub  <B>j</B>  f  <B>numerical</B>
33 Q0 1047 88 0.025112756 Lucene_47
  <B>j</B>  <B>m</B>  ca640620 jb march 9  1978 8 50 pm 1047 4 1047 1047 5 1047 1047 5 1047 1047 5 1047 1707 5 1047generation of test <B>matrices</B> by similarity transformations a method for obtaining test <B>matrices</B> with a prescribed distribution of characteristic roots is given  the process consists of using particularly simple similarity transformations to generate full <B>matrices</B> from canonical forms  the <B>matrices</B>
33 Q0 1325 89 0.025029948 Lucene_47
remote  on-line  <B>real</B>-time computer diagnosis of the clinical electrocardiogram presented for the remote  online  <B>real</B>-time digital computer diagnosis of clinical electrocardiograms  it seems matched filters  the development of three dimensional pattern <B>analysis</B>  the <B>analysis</B> of parallel  tree-like branching decisions early in the diagnostic process  cacm january  1965 whipple  <B>g</B>  h
33 Q0 2986 90 0.024987837 Lucene_47
 relations and whose <B>operators</B> are composition  transitive closure  union  and inverse  can be computed efficiently  cacm march  1977 hunt  h  b  iii szymanski  t  <B>g</B>  ullman  <B>j</B>  d  computationaloperations on sparse relations various computations on relations  boolean <B>matrices</B>  or directed to compute <B>linear</B> precedence functions in o n 2  steps is shown  as well as how to compute <B>linear</B>
33 Q0 1260 91 0.02481416 Lucene_47
 the <B>analysis</B> on a small computer  the <B>analysis</B> has been carried out on an ibm 1410 computer with a 40,000 bcd core memory  cacm may  1965 marshall  s  <B>w</B>  nelson  <B>j</B>  a  wilenzick  r  <B>m</B>  ca650511 jb march 7least-squares <B>analysis</B> of resonance spectra on small computers the problem of analyzing data from a mossbauer effect experiment is discussed  by using the cut step procedure for convergence
33 Q0 325 92 0.02479397 Lucene_47
<B>numerical</B> solution of the polynomial equation  algorithm 30  cacm may  1961 alexander  <B>w</B>  <B>j</B>  ca610509 jb march 16  1978 10 58 pm 325 5 325 325 5 325 325 5 325
33 Q0 1482 93 0.02476203 Lucene_47
 be used for many types of applications  in <B>particular</B>  the authors have used the system for the <B>analysis</B> of <B>linear</B> graphs  the main concept of the system is the use of a collection of programmable pointers  which are visualized as a family of  bugs   cacm february  1966 ledley  r  s  jacobsen  <B>j</B>  belson  <B>m</B>  ca660205 jb march 3  1978 3 16 pm 1482 5 1482 1482 5 1482 1482 5 1482
33 Q0 481 94 0.024571102 Lucene_47
a <B>one</B>-day look at computing cacm september  1962 armerding  <B>g</B>  <B>w</B>  gruenberger  f  <B>j</B>  marks  s  l  parkin  t  r  ca620911 jb march 17  1978 7 30 pm 481 5 481 481 5 481 481 5 481
33 Q0 1353 95 0.024389891 Lucene_47
techniques for automatic tolerance control in <B>linear</B> programming in this technical note  the <B>numerical</B> steps for the simplex method of <B>linear</B> programming are reviewed and the tolerances needed in the <B>numerical</B> procedure are defined  objective criteria are given for accomplishing the <B>numerical</B> steps of the method and the calculation of necessary tolerances  cacm november  1966 clasen  r  <B>j</B>
33 Q0 184 96 0.024386741 Lucene_47
a short method for measuring <B>error</B> in a least-squares power series cacm june  1960 robinson  s  <B>m</B>  struble  <B>g</B>  <B>w</B>  ca600606 jb march 20  1978 9 41 pm 184 5 184 184 5 184 184 5 184
33 Q0 1104 97 0.024236314 Lucene_47
an undergraduate curriculum in <B>numerical</B> <B>analysis</B> cacm april  1964 forsythe  <B>g</B>  e  ca640404 jb march 10  1978 1 51 am 1104 5 1104 1104 5 1104 1104 5 1104 1205 5 1104 1100 6 1104 1104 6 1104 1107 6 1104 68 6 1104
33 Q0 441 98 0.02415202 Lucene_47
topological sorting of large networks topological sorting is a procedure required for many problems involving <B>analysis</B> of networks  an example of <B>one</B> such problem is pert  the present paper presents activities can be ordered in less than <B>one</B> hour of machine time  the method was developed  1962 <B>kahn</B>  a  b  ca621120 jb march 17  1978 5 58 pm 1050 4 441 1226 4 441 441 4 441 758 4 441 1723 5
33 Q0 2800 99 0.023864605 Lucene_47
connections between accuracy and stability properties of <B>linear</B> multistep formulas this paper is concerned with stability and accuracy of families of <B>linear</B> k-step formulas depending on parameters  with <B>particular</B> emphasis on the <B>numerical</B> solution of stiff ordinary differential equations  an upper with another constraint  implies strict stability  and  3  for certain <B>one</B>-parameter classes of formulas with p
33 Q0 2837 100 0.023850437 Lucene_47
 favorably with a recent algorithm by hyafil  cacm september  1976 yap  <B>c</B>  k  selection problem  algorithms  comparison problems  concrete computational complexity  upper <B>bounds</B>  worst-case <B>analysis</B> 5.25new upper <B>bounds</B> for selection the worst-case minimum number of comparisons complexity vi n  of the <B>i</B>-th selection problem is considered  a new upper bound for vi n  improves the bound given
*************Query 34*************************

34 Q0 2660 1 0.10743555 Lucene_47
addendum to m  <B>l</B>  patrick paper cacm april  1974 simmons  g  c  parallelism  <B>polynomial</B> <B>root</B> finding  real zeros 5.15 ca740410 jb february 1  1978 10 36 am 2660 4 2660 2266 5 2660 2660 5 2660 2660 5 2660 2660 5 2660
34 Q0 1893 2 0.09563196 Lucene_47
roots of polynomials by a <B>root</B>-squaring and resultant routine  algorithm 340  c2   cacm may  1969 noltemeier  a  <B>root</B> finders  roots of <B>polynomial</B> equations  <B>polynomial</B> zeros  <B>root</B>-squaring operations  graeffe method  resultant procedure  subresultant procedure  testing of roots  acceptance criteria 5.15 ca690517 jb february 17  1978 2 29 pm 1893 5 1893 1893 5 1893 1893 5 1893
34 Q0 1623 3 0.08999871 Lucene_47
  this paper is <B>more</B> concerned with the use of programming techniques in formac than with the actual engineering problem  although readers may be <B>interested</B> in the problem because it is stated in a general neidleman  <B>l</B>  d  ca670306 jb february 28  1978 1 27 pm 1623 5 1623 1623 5 1623 1623 5 1623
34 Q0 1667 4 0.08367796 Lucene_47
roots of polynomials by a <B>root</B>-squaring and resultant routine  algorithm 340  c2   cacm november  1968 noltemeier  a  <B>root</B> finders  roots of <B>polynomial</B> equations  <B>polynomial</B> zeros  <B>root</B>-squaring operations  graeffe method  resultant procedure  subresultant procedure  testing of roots  acceptance criteria 5.15 ca681112 jb february 21  1978 2 24 pm 1667 4 1667 1667 4 1667 1667 4 1667 178 5 1667
34 Q0 116 5 0.0795949 Lucene_47
the sumador chino on a <B>recent</B> motor trip through mexico  the writer came across on adding device which was referred to as a sumador chino  chinese adder   a survey of the <B>more</B> available literature on the history of mathematics and on instruments of calculation has uncovered no reference november  1960 rogers  j  <B>l</B>  ca601119 jb march 20  1978 6 50 pm 116 5 116 116 5 116 116 5 116
34 Q0 1763 6 0.07710238 Lucene_47
roots of low-order <B>polynomial</B> equations  algorithm 326  c2   cacm april  1968 nonweiler  t  f  <B>root</B> finders  <B>polynomial</B> equation roots  quadratic equation roots  cubic equation roots  biquadratic equation roots  <B>polynomial</B> zeros 5.15 ca680407 jb february 23  1978 10 27 am 1763 5 1763 1763 5 1763 1763 5 1763
34 Q0 2324 7 0.07634895 Lucene_47
 actually made in the next few years are <B>more</B> likely to be consolidations than theoretical of user oriented software  and comparisons of <B>currently</B> known algorithms to demonstrate which techniques are best for specific problems  cacm july  1972 shanno  d  f  weil  r  <B>l</B>  integer programming
34 Q0 1999 8 0.07501275 Lucene_47
optimal starting approximations for generating square <B>root</B> for slow or no divide on machine with slow or no division  it is preferable to use an iterative scheme for the square <B>root</B> different from the classical heron scheme  the problem of optimal initial approximants is considered  and some optimal <B>polynomial</B> initial approximations are tabulated  cacm september  1970 wilson  m  w  square <B>root</B>
34 Q0 2749 9 0.07499892 Lucene_47
significant event simulation this paper compares a new method of simulation organization  called the significant event method  with an <B>old</B> one  called the clock pulse method  using as examples two automobile traffic models  the significant event method is found to be <B>more</B> efficient than the clock efficiency is of sufficient importance  cacm june  1975 babich  a  f  grason  j  parnas  d  <B>l</B>
34 Q0 1524 10 0.06852316 Lucene_47
a stopping criterion for <B>polynomial</B> <B>root</B> finding when searching for the <B>root</B> of a <B>polynomial</B>  it is generally difficult to know just when to accept a number as an adequate approximation to the <B>root</B> on the basis of calculated bounds for the roundoff error which occurs in evaluating the <B>polynomial</B> means for accepting a complex number as a zero of a real <B>polynomial</B>  cacm october  1967 adams  d
34 Q0 2722 11 0.06602895 Lucene_47
 file are  insertion  o  log n   deletion of the <B>root</B>  o  n  k-1  k   deletion of a random node  o    these performances far surpass the best <B>currently</B> known algorithms for these tasks  an algorithm uses are given  cacm september  1975 bently  j  <B>l</B>  associative retrieval  binary search trees  key
34 Q0 1615 12 0.057746217 Lucene_47
an algorithm for generating <B>root</B> locus diagrams a technique for using a digital computer to draw both ordinary and time-lag <B>root</B> locus diagrams is described  ordinary diagrams are drawn much faster and <B>more</B> accurately than ever before  time-lag diagrams  which had been impossible to obtain  are drawn with the same speed and accuracy as ordinary diagrams  cacm march  1967 krall  a  m  fornaro  r
34 Q0 2897 13 0.056853503 Lucene_47
a case study of a new code generation technique for compilers <B>recent</B> developments in optimizing techniques have allowed a new design for compilers to emerge  such a compiler translates the parsed code  <B>more</B> elaborate optimizations can further improve the object code  for most contexts december  1977 carter  j  <B>l</B>  compiler structure  optimizing compiler  code generation  pl i compiler
34 Q0 1867 14 0.054960914 Lucene_47
on the expected lengths of sequences generated in sorting by replacement selecting in the replacement-selecting technique of sorting  one is <B>interested</B> in the ratio <B>l</B> j  of the expected length theory  it is shown that <B>l</B> j  - gt  2 and that  asymptotically  the average interval between sign changes of <B>l</B> j -2 is 2.6662  cacm july  1969 hooker  w  w  replacement selecting  sorting  sequence
34 Q0 1567 15 0.052150328 Lucene_47
on the representation of symmetric polynomials relations are given between certain symmetric polynomials in the light of the theory of the symmetric group  such an approach unifies earlier work and lends insight to previously published work by aaron booker  a generalization of graeffe s <B>root</B>-squaring technique for the determination of the roots of a <B>polynomial</B> is suggested  cacm july  1967 mckay
34 Q0 1932 16 0.052129805 Lucene_47
 initial approximation  cacm february  1969 king  r  f  phillips  d  <B>l</B>  square <B>root</B>  newton s methodthe logarithmic error and newton s method for the square <B>root</B> the problem of obtaining optimal starting values for the calculation of the square <B>root</B> using newton s method is considered  it has been relation  integer <B>root</B>  error curve 5.12 5.13 ca690206 jb february 20  1978 10 55 am 1440 4 1932 1932 4
34 Q0 1620 17 0.050184283 Lucene_47
methods of evaluating <B>polynomial</B> approximations in function evaluation routines the method of nested multiplication is commonly used in function evaluation routines to evaluate approximation polynomials  new <B>polynomial</B> evaluation methods have been developed in <B>recent</B> years which require fewer multiplications than nested multiplication and may therefore be preferable for use in function evaluation
34 Q0 1346 18 0.04823516 Lucene_47
  much <B>more</B> than in the <B>polynomial</B> case  in which the best approximation can be very nearly approached as well as to present some numerical results  cacm december  1966 gargantini  <B>l</B>  ca661204 jb march 2
34 Q0 435 19 0.046389647 Lucene_47
a decision matrix as the basis for a simple data input routine <B>currently</B> a great deal of time and effort is being spent on the development of bigger and better compiler languages  multiprogram executive systems  etc  since the implementation of of new methods and procedures is not instantaneous area that the author is <B>interested</B>  a method employing a decision matrix is presented
34 Q0 884 20 0.0449144 Lucene_47
orthogonal <B>polynomial</B> least squares surface fit  algorithm 164  cacm april  1963 clark  r  e  kubik  r  n  phillips  <B>l</B>  p  ca630407 jb march 14  1978 12 25 pm 884 5 884 884 5 884 884 5 884
34 Q0 1333 21 0.04254286 Lucene_47
reducing truncation errors using cascading accumulators when accumulating a large number of quantities as in numerical integration  the sum itself may become much larger than the individual addends  this results in truncation error  much of this error can be eliminated using cascading accumulators as noted in a <B>recent</B> article by wolfe  a simpler and slightly <B>more</B> flexible algorithm is presented
34 Q0 492 22 0.0424847 Lucene_47
analysis of a file addressing method this paper presents a new file addressing method based on the calculation of an address from the identification of a record  for large recirculating type files  it seems to be <B>more</B> advantageous than customary ones  the probability distribution to address a record  is computed on the basis of a markov chain model  for the reader not <B>interested</B>
34 Q0 531 23 0.0424847 Lucene_47
 because of name misspellings  changes of name upon marriage  and other problems  we are <B>interested</B> computer  honeywell 800   here we present in <B>more</B> detail our initial procedures for the person-matching
34 Q0 2657 24 0.04029971 Lucene_47
an improved program-synthesizing algorithm and its correctness an improved program-synthesizing algorithm based on the algorithm proposed by waldinger and lee in 1969 is given  in the <B>old</B> algorithm  the program-synthesizing problem is translated into a theorem-proving problem  and a program  c  <B>l</B>  waldinger  r  j  program-synthesizing algorithms  theorem proving  consequence finding
34 Q0 2266 25 0.040075146 Lucene_47
a highly parallel algorithm for approximating all zeros of a <B>polynomial</B> with only real zeros of a <B>polynomial</B> with only real zeros  the algorithm  which is conceptually suitable for parallel computation and their multiplicity are readily determined  at no point in the method is <B>polynomial</B> deflation used  cacm november  1972 patrick  m  <B>l</B>  parallel numerical algorithms  real polynomials  real zeros
34 Q0 2486 26 0.037535556 Lucene_47
computer photocomposition of technical text in computer assisted typesetting by means of photocomposition  special problems arise in highly technical <B>material</B> such as mathematical formulas  new solutions to several of these problems have been devised in the information system of the american of the next  and certain aspects of error correction  cacm june  1973 alt  f  <B>l</B>  yuni kirk  j
34 Q0 2135 27 0.03596613 Lucene_47
rapid computation of general interpolation formulas and mechanical quadrature rules let f have n continuous on a closed interval  a b  and let <B>l</B> be a linear functional  the attempt is made to approximate <B>l</B>  f  with <B>l</B>  q  where q is a <B>polynomial</B>  approximating f  algorithms are developed for rapid computation of <B>l</B>  q  for a wide class of selections of q which includes the lagrangian and hermitian
34 Q0 1633 28 0.035931516 Lucene_47
a modified newton method for polynomials a modified newton method for polynomials is discussed  it is assumed one has approximations for all the roots of the <B>polynomial</B>  three variations are described  if the roots are simple  it is shown that under appropriate conditions  two of the variations are cubically convergent  cacm february  1967 ehrlich  <B>l</B>  w  ca670209 jb february 28  1978 2 33 pm 1633
34 Q0 2254 29 0.034901503 Lucene_47
dynamic partitioning for array languages the classical process of partitioning an array into subarrays is extended to a <B>more</B> useful array language operation  various modes of partitioning are defined for different types of arrays  so that subarrays may vary over the original array in a nearly languages  the description presented in this paper is implemented in a new array language  ol 2  <B>currently</B>
34 Q0 2500 30 0.034901503 Lucene_47
 with other techniques to overcome a large portion of this overhead  the program  which is <B>currently</B> permit <B>more</B> comprehensive levels of deadlock prevention detection at additional cost  have not been
34 Q0 1812 31 0.034428306 Lucene_47
<B>more</B> on fortran random number generators cacm november  1969 grosenbaugh  <B>l</B>  r  random number generation  monte carlo  simulation 5.5 ca691118 jb february 15  1978 11 57 am 1812 5 1812 1812 5 1812 1812 5 1812
34 Q0 1875 32 0.03437596 Lucene_47
<B>polynomial</B> and spline approximation by quadratic programming the problem of approximation to a given function  or of fitting a given set of data  where the approximating function is required to have is a modified bernstein <B>polynomial</B> scheme  and the second is a spline fit  cacm july  1969 amos  d  e  slater  m  <B>l</B>  constant sign derivatives  bernstein polynomials  linear concavity constraints
34 Q0 3166 33 0.03398776 Lucene_47
  but two of the algorithms  one new  one <B>old</B>  are substantially <B>more</B> accurate on difficult problems than
34 Q0 2181 34 0.032898754 Lucene_47
 for management  to provide the committee with <B>material</B> for its study of curricular needs  five regional were covered  curricula for the general manager  computer-related <B>material</B> in required and functional committee is daniel teichroew  the university of michigan   cacm july  1971 mckenney  j  <B>l</B>  tonge  f
34 Q0 3039 35 0.032716513 Lucene_47
 detection and collection to be performed by an additional processor operating con-<B>currently</B> november  1978 dijkstra  e  lamport  <B>l</B>  martin  a  scholten  c  steffens  e  multiprocessing  fine
34 Q0 3127 36 0.032716513 Lucene_47
thoth  a portable real-time operating system thoth isa real-time operating system which is designed to be portable over a large set of machines  it is <B>currently</B> running on two minicomputers with quite different architectures  both the system and application programs which use it are written efficient interprocess communication primitives  cacm february  1979 cheriton  d  malcolm  m  melen  <B>l</B>
34 Q0 3018 37 0.031759273 Lucene_47
-complete  and if p  np then they do not admit <B>polynomial</B>-time approximation algorithms which always produce solutions within a factor less than 2 from the optimum  cacm february  1978 kou  <B>l</B>  stockmeyer  <B>l</B>  wong  c  watson  t  keyword conflicts  intersection graphs  node clique cover  edge clique cover  computational complexity  np-complete problems  <B>polynomial</B>-time heuristics 4.12 5.25 5.32 ca780205
34 Q0 2706 38 0.03144008 Lucene_47
a note on the set basis problem related to the compaction of character sets this note discusses the reduction of the set basis problem to the clique cover problem  cacm november  1975 kou  <B>l</B>  t  wong  c  k  compaction of character sets  set basis  set covering  computational complexity  <B>polynomial</B> completeness  clique cover 4.9 5.25 5.39 ca751106 jb january 6  1978 8 55 am 2706 4 2706 2643 5 2706
34 Q0 2779 39 0.03144008 Lucene_47
discrete least squares <B>polynomial</B> fits the recurrence relation between orthogonal polynomials is widely used for discrete least squares data fitting  a variant of the classical algorithm which has better numerical properties is presented and the reason for its improved performance is explained  cacm march  1975 shampine  <B>l</B>  f  orthogonal polynomials  data fitting  least squares  recurrence
34 Q0 1315 40 0.03127963 Lucene_47
 <B>material</B> purchased and or created in the triga reactor indicating the amounts received  used in millicuries  reactor-created radioisotopes in microcuries  cacm february  1965 lahners  e  <B>l</B>
34 Q0 585 41 0.03127963 Lucene_47
  the <B>material</B> that follows is a description of the evolution of the programming and hardware system landis  n  manos  a  turner  <B>l</B>  r  ca620520 jb march 17  1978 9 45 pm 585 5 585 585 5 585 585 5 585
34 Q0 1197 42 0.030831626 Lucene_47
finding zeros of a <B>polynomial</B> by the q-d algorithm a method which finds simultaneously all the zeros of a <B>polynomial</B>  developed by h  rutishauser  has been tested on a number of polynomials with real coefficients  this slowly converging method  the quotient-difference  q-d  algorithm  provides starting values for a newton or a bairstow algorithm for <B>more</B> rapid convergence  necessary
34 Q0 497 43 0.030387755 Lucene_47
further remarks on line segment curve-fitting using dynamic programming in a <B>recent</B> paper  bellman showed how dynamic programming could be used to determine the solution to a problem previously considered by stone  the problem comprises the determination  given n  of the n points of subdivision is considered <B>more</B> fully  and the similarities to some of stone s equations are indicated  it is further
34 Q0 1650 44 0.028659886 Lucene_47
 levels of one or <B>more</B> factors   3  separate analyses for some levels of a factor or for combinations of levels of <B>more</B> than one factor  these are performed simultaneously   4  the calculation of main sum of squares  excluding a replication sum of squares  is partitioned into all <B>polynomial</B> partitions
34 Q0 1931 45 0.028202763 Lucene_47
interval arithmetic determinant evaluation and its use in testing for a chebyshev system two <B>recent</B> papers  one by hansen and one by hansen and r  r  smith  have shown how interval arithmetic  i   can be used effectively to bound errors in matrix computations  in the present paper a method proposed if they form a chebyshev system is then presented  cacm february  1969 smith  <B>l</B>  b  interval
34 Q0 2526 46 0.027921204 Lucene_47
 from those of <B>more</B> conventional hierarchies  in particular  it is shown that it may not be necessary are <B>currently</B> under development which may have a very small read-time write-time ratio  this study
34 Q0 5 47 0.026769135 Lucene_47
two square-<B>root</B> approximations cacm november  1958 wadey  w  g  ca581102 jb march 22  1978 8 33 pm 5 5 5 5 5 5 5 5 5
34 Q0 1644 48 0.02673017 Lucene_47
on the computation of least squares polynomials rounding error accumulated during digital computation of a least squares <B>polynomial</B> makes the computed <B>polynomial</B> only an approximation to the true least square <B>polynomial</B>  a simple method for adjust ing the constant term of the computed <B>polynomial</B> to get a better approximation to the true least squares <B>polynomial</B> is described  cacm january  1967
34 Q0 1386 49 0.026716765 Lucene_47
 factors of a multi-variate <B>polynomial</B> with integer coefficients is presented  the algorithm is an extension of a technique used by kronecker in a proof that the prime factoring of any <B>polynomial</B> may of the given <B>polynomial</B> by kronecker s method and introducing the remaining variables by interpolation  1966 jordan  d  e  kain  r  y  clapp  <B>l</B>  c  ca660812 jb march 2  1978 7 06 pm 1396 5 1386 1386 5 1386
34 Q0 1046 50 0.026671942 Lucene_47
a compiler-building system developed by brooker and morris in a number of articles published during the past two years  r  a  brooker and d  morris  joined by j  rohl in their most <B>recent</B> paper have presented a very interesting programming system that they have developed for the ferranti atlas details  and in some comments  it does not intentionally depart from or add to the <B>material</B>
34 Q0 397 51 0.026570138 Lucene_47
 into two fields-reference <B>material</B> field  columns 1-67  and identification field  columns 68-80   the format for the reference <B>material</B> is flexible  while the format for the identification is rigid  the reference <B>material</B> includes basically an index  title  source  class  summary and cross reference a choice to identify <B>material</B> for personal as well as general files  since this card format
34 Q0 2306 52 0.026228104 Lucene_47
ancient babylonian algorithms the early origins of mathematics are discussed  emphasizing those aspects which seem to be of greatest interest from the standpoint of computer science  a number of <B>old</B> babylonian tablets  many of which have never before been translated into english  are quoted  cacm july  1972 knuth  d  e  history of computation  babylonian tablets  sexagesimal number system
34 Q0 2385 53 0.025881376 Lucene_47
zeros of a complex <B>polynomial</B>  c2   algorithm a419  cacm february  1972 jenkins  m  a  traub  j  f  roots  roots of a <B>polynomial</B>  zeros of a <B>polynomial</B> 5.15 ca720206 jb january 31  1978 4 14 pm 2385 5 2385 2385 5 2385 2385 5 2385
34 Q0 1882 54 0.02523818 Lucene_47
determination of the square <B>root</B> of a positive definite matrix  algorithm 298  f1   cacm june  1969 duke  b  j  matrix  symmetric matrix  positive definite matrix  matrix square <B>root</B> 5.14 ca690611 jb february 17  1978 9 53 am 1882 5 1882 1882 5 1882 1882 5 1882
34 Q0 1591 55 0.025023704 Lucene_47
 by the operating system  a course could therefore include text <B>material</B> interleaved with programming  1967 engvold  k  j  hughes  j  <B>l</B>  ca670601 jb february 28  1978 10 24 am 1591 5 1591 1591 5 1591
34 Q0 1680 56 0.025023704 Lucene_47
 into instructional <B>material</B> without reprogramming  illustrations of the various applications are presented and their implications are discussed  cacm october  1968 engvold  k  j  hughes  j  <B>l</B>  computer-assisted
34 Q0 2345 57 0.025023704 Lucene_47
curriculum recommendations for graduate professional programs in information systems the need for education related to information systems in organizations is discussed  and a curriculum is proposed for graduate professional programs in universities  at the master s level  <B>material</B> necessary  1972 ashenhurst  r  <B>l</B>  education  management systems  systems analysis  management information systems
34 Q0 1949 58 0.024946978 Lucene_47
finiteness assumptions and intellectual <B>isolation</B> of computer scientists cacm december  1970 wagner  r  a  algol vs  fortran  finiteness assumptions  intellectual <B>isolation</B>  integer variable range  memory finiteness  finite word size 2.2 4.22 5.23 ca701215 jb february 9  1978 2 38 pm 249 4 1949 254 4 1949 272 4 1949 1102 4 1949 1109 4 1949 1140 4 1949 1188 4 1949 1306 4 1949 1464 4 1949 1491 4
34 Q0 2709 59 0.024310205 Lucene_47
 and jacopini on the theoretical completeness of if-then-else and while-do is discussed  several <B>recent</B> are discussed  it is argued further that there is insufficient evidence to warrant <B>more</B> than if-then-else
34 Q0 971 60 0.024099812 Lucene_47
 of a predefined priority  the various subprograms within the real-time system  in this paper the <B>more</B> interesting aspects of the time-sharing program are outlined  cacm november  1964 green  <B>l</B>  e  s  ca641112 jb
34 Q0 2808 61 0.023526201 Lucene_47
  this <B>material</B> can be used for teaching purposes  and there is much relevant and interesting historical <B>material</B>  the acceleration methods developed for the purpose of evaluating these constants are useful
34 Q0 1440 62 0.02318275 Lucene_47
starting approximations for square <B>root</B> calculation on ibm system 360 several starting approximations for square <B>root</B> calculation by newton s method are presented in a form to facilitate their use in ibm system 360 square <B>root</B> routines  these approximations include several for the range  1 16  1   which is the interval of primary interest on ibm system 360  cacm april  1966 fike  c  t  ca660409
34 Q0 1014 63 0.022949591 Lucene_47
machine controls for analysis of variance a major problem in using the analysis of variance  as the number of factors increases  is the exponential rise in the number of interactions  even though the experimenter may not be <B>interested</B> in these interactions it is impossible to ignore them in most experimental designs because of the problem of getting error terms  it is natural therefore to look
34 Q0 1520 64 0.022307614 Lucene_47
absolute value and square <B>root</B> of a complex number  algorithm 312  a2   cacm october  1967 friedland  p  ca671012a jb february 27  1978 1 49 pm 1520 5 1520 1520 5 1520 1520 5 1520
34 Q0 1618 65 0.022307614 Lucene_47
determination of the square-<B>root</B> of a positive definite matrix  algorithm 298  f1   cacm march  1967 spath  h  ca670311b jb march 23  1978 4 09 pm 1618 5 1618 1618 5 1618 1618 5 1618
34 Q0 334 66 0.022307614 Lucene_47
division and square <B>root</B> in the quater-imaginary number system cacm april  1961 nadler  m  ca610334 jb march 16  1978 11 16 pm 334 5 334 334 5 334 334 5 334
34 Q0 35 67 0.022307614 Lucene_47
a machine method for square-<B>root</B> computation cacm january  1958 bemer  r  w  ca580101 jb march 22  1978 9 27 pm 35 5 35 35 5 35 35 5 35 848 5 35 26 6 35 35 6 35
34 Q0 848 68 0.02208341 Lucene_47
a note on range transformations for square <B>root</B> and logarithm there was the germ of an idea in two previous papers  1,2  which no one seems to have picked up in almost five years  for certain functions it seems desirable to transform the argument to a short range symmetric about 10.1 will give examples of this usage for the square <B>root</B> and logarithm function for both binary and decimal machines
34 Q0 2194 69 0.021231847 Lucene_47
 instruction is assumed to be either  long  or  short    long   if the memory location addressed is <B>more</B>-bit addressing of all of memory  when assembling or compiling two or <B>more</B> blocks of instructions operations on the column vectors of a ternary matrix  cacm may  1971 richards  d  <B>l</B>  addressing
34 Q0 1643 70 0.0207051 Lucene_47
an improvement to iterative methods of <B>polynomial</B> factorization methods of <B>polynomial</B> factorization which find the zeros one at a time require the division of the <B>polynomial</B> by the accepted factor  it is shown how the accuracy of this division may be increased by dividing in order of both ascending and descending powers of the variable and choosing a crossover point which minimizes a very simply
34 Q0 672 71 0.020688184 Lucene_47
<B>recent</B> developments affecting adp in tax administration cacm december  1963 leibowitz  g  j  ca631202 jb march 13  1978 3 14 pm 672 5 672 672 5 672 672 5 672
34 Q0 1117 72 0.020656982 Lucene_47
 should be considered whenever a sort is written to operate on five or <B>more</B> tapes that cannot be read is increased  cacm march  1964 mcalester  r  <B>l</B>  ca640315 jb march 10  1978 2 38 am 1117 4 1117 1117 4 1117
34 Q0 1171 73 0.020656982 Lucene_47
a comparison of the primal-simplex and primal-dual algorithms for linear programming a statistical comparison of the primal-dual and the <B>more</B> commonly used primal-simplex algorithm for solving linear programming problems has been made under the assumption of starting with a full artificial basis  cacm november  1965 mueller  r  k  cooper  <B>l</B>  ca651110 jb march 6  1978 4 50 pm 1171 5 1171 1171 5
34 Q0 2570 74 0.020656982 Lucene_47
a comparison of list schedules for parallel processing systems the problem of scheduling two or <B>more</B> processors to minimize the execution time of a program which consists of a set of partially ordered tasks is studied  cases where task execution times are deterministic and others in which execution is presented  cacm december  1974 adam  t  <B>l</B>  chandy  k  m  dickson  j  r  parallel processing
34 Q0 2581 75 0.020656982 Lucene_47
  these local structures are used as  islands of reliability  to guide the search for <B>more</B> highly garbled words which might complete the utterance  cacm november  1974 miller  p  <B>l</B>  parsing  speech recognition
34 Q0 1051 76 0.02064327 Lucene_47
multiword list items the list concept as originally proposed by newell  simon and shaw specified single computer words as elements of a list  this report describes the use of two or <B>more</B> consecutive  this paper attempts to draw together various <B>recent</B> papers which have applied some of these concepts in different ways  and indicate how they relate to the <B>more</B> general problems  cacm june  1964 comfort  w
34 Q0 464 77 0.020078775 Lucene_47
  the present account of the language and the subroutine contains a summary of <B>material</B> that has been to the <B>more</B> general questions of problem-oriented languages and string transformations  cacm october
34 Q0 2093 78 0.019713754 Lucene_47
  comparisons are based on x r     the inclusion of the noninteger powers makes this <B>more</B> realistic than the usual <B>polynomial</B> based comparison  behavior near the singularity was found to be the dominant
34 Q0 2744 79 0.019671077 Lucene_47
addition in an arbitrary base without radix conversion this paper presents a generalization of an <B>old</B> programming technique  using it one may add and subtract numbers represented in any radix  including a mixed radix  and stored one digit per byte in bytes of sufficient size  radix conversion is unnecessary  no looping is required  and numbers may even be stored in a display  i o  format
34 Q0 1389 80 0.018172164 Lucene_47
a programmer s description of <B>l</B> 6 bell telephone laboratories  low-linked list language <B>l</B> 6  pronounced  <B>l</B>-six   is a new programming language for list structure manipulations  it contains many of the facilities which underlie such list processors as ipl  lisp  comit ad snobol  but permits the user to get much closer to machine code in order to write faster-running programs  to use storage <B>more</B>
34 Q0 1080 81 0.017931143 Lucene_47
chebyshev <B>polynomial</B> coefficients  algorithm 227  cacm may  1964 cyvin  s  j  ca640509 jb march 9  1978 11 57 pm 1080 5 1080 1080 5 1080 1080 5 1080
34 Q0 2458 82 0.017931143 Lucene_47
localization of the roots of a <B>polynomial</B>  algorithm r429  cacm august  1973 williams  e  j  ca730816 jb january 23  1978 10 26 am 2458 5 2458 2458 5 2458 2458 5 2458
34 Q0 2676 83 0.017931143 Lucene_47
zeros of a complex <B>polynomial</B>  algorithm r419  cacm march  1973 withers  d  h  ca740307 jb january 18  1978 11 11 am 2676 5 2676 2676 5 2676 2676 5 2676
34 Q0 341 84 0.017931143 Lucene_47
chebyschev <B>polynomial</B>  algorithm 10  cacm april  1961 herndon  j  ca610427 jb march 16  1978 11 38 pm 341 5 341 341 5 341 341 5 341
34 Q0 842 85 0.017931143 Lucene_47
a posteriori bounds on a zero of a <B>polynomial</B>  algorithm 174  cacm june  1963 gibb  a  ca630607 jb march 14  1978 10 21 am 842 5 842 842 5 842 842 5 842
34 Q0 1031 86 0.01784609 Lucene_47
a note on starting the newton-raphson method determination of a suitable initial estimate for a <B>root</B> of an equation f x    0 by means of computing the roots of a sequence of related equations is described  cacm july  1964 beyer  w  a  ca640716 jb march 9  1978 7 44 pm 1031 5 1031 1031 5 1031 1031 5 1031
34 Q0 1803 87 0.01784609 Lucene_47
complex <B>root</B> finding  algorithm 365  c5   cacm december  1969 bach  h  downhill method  complex relaxation method  complex iteration  complex equation  transcendental complex equation  algebraic complex equation 5.15 ca691209 jb february 15  1978 2 25 pm 1803 4 1803 1806 5 1803 1803 5 1803 1803 5 1803 1803 5 1803
34 Q0 1832 88 0.01784609 Lucene_47
minimax logarithmic error cacm october  1969 dunham  c  b  logarithmic error  transformed rational approximation  square <B>root</B> 5.10 ca691014 jb february 15  1978 1 38 pm 1832 4 1832 1999 4 1832 2159 4 1832 1832 5 1832 1832 5 1832 1832 5 1832 1932 5 1832
34 Q0 2449 89 0.017641352 Lucene_47
a simple technique for structured variable lookup a simple technique for the symbol-table lookup of structured variables based on simple automata theory is presented  the technique offers a deterministic solution to a problem which is <B>currently</B> handled in a nondeterministic manner in pl i and cobol compilers  cacm september  1973 gates  g  w  poplawski  d  a  symbol table organization  pl i
34 Q0 3114 90 0.017640177 Lucene_47
 and datum files  cacm april  1978 heckel  p  difference <B>isolation</B>  word processing  text editing
34 Q0 2999 91 0.017554507 Lucene_47
an approach to multidimensional data array processing by computer some <B>recent</B> work on the development of general-purpose computer-based statistical and data processing capabilities for handling multidimensional arrays of data is presented  attention is first given to some of the general problems of multidimensional table and array processing  this is followed by a summary of some <B>recent</B>
34 Q0 1769 92 0.017214153 Lucene_47
 these barriers is the universal need for processing information  ever <B>more</B> urgent as the greater part  and in analyzing possible solutions  cacm april  1968 harder  e  <B>l</B>  barriers  philosophy  developments
34 Q0 2420 93 0.017214153 Lucene_47
experiments with an automatic theorem-prover havingpartial ordering inference rules automatic theorem-provers need to be made much <B>more</B> efficient  with this in mind  slagle has shown how the axioms for partial ordering can be replaced by built-in inference rules when using a particular theorem  1973 slagle  j  r  norton  <B>l</B>  m  theorem-proving  partial ordering  resolution  hyper-resolution
34 Q0 2946 94 0.017214153 Lucene_47
an alternative to event queues for synchronization in monitors in the monitor concept  as proposed by brinch hansen and hoare  event are used for synchronization  this paper describes another synchronizing primitive which is nearly as expressive as the conditional wait  but can be implemented <B>more</B> of information streams sharing a finite buffer pool  cacm july  1977 kessels  j  <B>l</B>  w  monitor
34 Q0 3001 95 0.017214153 Lucene_47
 is error-free and suitable for most cases  the second solution is slightly <B>more</B> elegant and allows for the second method and an empirical study is reported  cacm january  1977 zobrist  a  <B>l</B>  carlson
34 Q0 332 96 0.017214153 Lucene_47
an indirect chaining method for addressing on secondary keys methods for entering random access files on the basis of one key are briefly surveyed  the widely used chaining method  based on a pseudo-random key transformation  is reviewed in <B>more</B> detail  an efficient generalization of the chaining method which permits recovery on additional keys is then presented  cacm may  1961 johnson  <B>l</B>  r
34 Q0 1689 97 0.016905643 Lucene_47
calculation of a <B>polynomial</B> and its derivative values by horner scheme  algorithm 337  c1   cacm september  1968 pankiewicz  w  function evaluation  <B>polynomial</B> evaluation  algol procedure  horner s scheme 5.12 4.22 ca680912 jb february 21  1978 4 33 pm 1689 5 1689 1689 5 1689 1689 5 1689
34 Q0 1940 98 0.016905643 Lucene_47
calculation of a <B>polynomial</B> and its derivative values by horner scheme  algorithm 337  c1   cacm january  1969 smith  o  k  function  evaluation  <B>polynomial</B> evaluation  algol procedure  horner s scheme 4.22 5.12 ca690109 jb february 20  1978 11 46 am 1940 5 1940 1940 5 1940 1940 5 1940
34 Q0 2090 99 0.016905643 Lucene_47
symbolic expansion of algebraic expressions  algorithm 377  r2   cacm march  1970 levine  m  j  algebra  symbolic algebra  symbolic multiplication  algebraic distribution  algebraic multiplication  distribution algorithm  multiplication algorithm  product algorithm  <B>polynomial</B> distribution  <B>polynomial</B> expansion 3.10 3.17 3.20 4.13 4.90 ca700308 jb february 13  1978 3 49 pm 2090 5 2090 2090 5 2090
34 Q0 1456 100 0.01680443 Lucene_47
storage and retrieval of aspects of meaning in directed graph structures an experimental system that uses lisp to make a conceptual dictionary is described  the dictionary associates with each english word the syntactic information  definitional <B>material</B>  and references to the contexts in which or passive actions are used as definitional <B>material</B>  the resulting structure serves as a powerful
*************Query 35*************************

35 Q0 2932 1 0.3521521 Lucene_47
  illustrative <B>examples</B> of practical and theoretical significance are given  directions for new research are discussed  cacm september  1977 <B>rabin</B>  <B>m</B>  o  complexity of computations  <B>algebraic</B> complexity  in tractable problems  <B>probabilistic</B> <B>algorithms</B> 5.25 ca770901 jb december 28  1977 6 54 am 2932 5 2932
35 Q0 2836 2 0.15036957 Lucene_47
  the correctness of the <B>algorithm</B> is established  the method may be applied to problems involving <B>probabilistic</B> parsing or combinatorial optimization  cacm september  1976 loui  <B>m</B>  c  derivation tree  parse tree  <B>probabilistic</B> grammar  structural ambiguity  combinatorial optimization 5.23 5.49 functions over the vocabulary of a context-free grammar  an <B>algorithm</B> is presented for constructing
35 Q0 1474 3 0.14567116 Lucene_47
tests of <B>probabilistic</B> models for propagation of roundoff errors in any prolonged computation it is generally assumed that the accumulated effect of roundoff errors is in <B>some</B> sense statistical  the purpose of this paper is to give precise descriptions of certain <B>probabilistic</B> models for roundoff error  and then to describe a series of experiments for <B>testing</B> the validity of these models
35 Q0 3175 4 0.13480666 Lucene_47
breaking substitution ciphers using a relaxation <B>algorithm</B> substitution ciphers are codes in which  in this paper the problem of breaking substitution ciphers is represented as a <B>probabilistic</B> labeling is applies successfully to two <B>examples</B>  cacm november  1979 peleg  s  rosenfeld  a  cryptography  substitution ciphers  <B>probabilistic</B> classification  relaxation 3.42 3.63 ca791103 db january 23  1980 11
35 Q0 2090 5 0.11976144 Lucene_47
<B>symbolic</B> expansion of <B>algebraic</B> expressions  <B>algorithm</B> 377  r2   cacm march  1970 levine  <B>m</B>  j  algebra  <B>symbolic</B> algebra  <B>symbolic</B> multiplication  <B>algebraic</B> distribution  <B>algebraic</B> multiplication  distribution <B>algorithm</B>  multiplication <B>algorithm</B>  product <B>algorithm</B>  <B>polynomial</B> distribution  <B>polynomial</B> expansion 3.10 3.17 3.20 4.13 4.90 ca700308 jb february 13  1978 3 49 pm 2090 5 2090 2090 5 2090
35 Q0 3071 6 0.11595623 Lucene_47
an <B>algorithm</B> using <B>symbolic</B> techniques for the bel-petrov classification of gravitational fields in this note  an <B>algorithm</B> is presented for the <B>symbolic</B> calculation of certain <B>algebraic</B> invariants book  an appendix contains <B>examples</B> illustrating the use of the <B>algorithm</B>  cacm september  1978 harris  r  zund  j  general relativity  bel-petrov types  formac  <B>symbolic</B> <B>manipulation</B>  tensors 3.11
35 Q0 2165 7 0.10554122 Lucene_47
general relativity and the application of <B>algebraic</B> manipulative systems the paper describes <B>some</B> applications of <B>symbolic</B> algebra systems to problems of general relativity including the derivation of the <B>field</B> equations  the petrov classification of a metric  and the solution of the <B>field</B> nonnumerical mathematics  general relativity  <B>algebraic</B> <B>manipulation</B>  equation <B>manipulation</B> 1.3 3.11 5.10
35 Q0 2580 8 0.08139805 Lucene_47
a method for composing simple traditional music by computer a method is described for composing musical rounds by computer  this method uses <B>some</B> music theory plus additional heuristics  fundamental scientists  cacm november  1974 rader  g  <B>m</B>  artificial intelligence  heuristic programming  models of cognitive processes  computer music  computer composition  music theory  formal languages  <B>probabilistic</B>
35 Q0 2166 9 0.07763703 Lucene_47
automated <B>algebraic</B> <B>manipulation</B> in celestial mechanics in this paper we consider <B>some</B> of the applications of automated <B>algebraic</B> <B>manipulation</B> which have been made in celestial mechanics  particular with <B>those</B> for general <B>manipulation</B> packages  <B>some</B> future directions for research using these systems are briefly outlined  to illustrate the relative simplicity of the <B>algorithm</B> required in celestial
35 Q0 2560 10 0.07401585 Lucene_47
a queuing model of a multiprogrammed computer with a two-level storage system the results are presented of an analysis of a <B>probabilistic</B> model of a multiprogrammed computer system with a two-level storage system in which there is sequential dependency of accesses between the devices  expressions  <B>some</B> numerical results are given which quantify the gains in cpu utilization obtainable
35 Q0 2681 11 0.072128445 Lucene_47
dynamic memory repacking a <B>probabilistic</B> model of a multiprogramming system is exercised in order to determine the conditions under which the dynamic repacking of main memory is beneficial  an expression is derived for the maximum interference that a repacking process may introduce before compaction storage fragmentation  multiprogramming system model  <B>probabilistic</B> model  central processor
35 Q0 2645 12 0.06555519 Lucene_47
 processor is a set of procedures for <B>algebraic</B> <B>manipulation</B> which can be called by the user to operate on the formula produced by the first processor  <B>examples</B> of the usage of the two languages  zuckerman  c  programming languages  syntax-directed translation  <B>symbolic</B> <B>manipulation</B>  program is a syntax-directed translator which compiles a program into a <B>symbolic</B> formula representing the execution
35 Q0 2323 13 0.0640597 Lucene_47
 for the <B>field</B> of <B>algebraic</B> <B>manipulation</B> is given  then the prospects for a general theory of functions defined  hypergeometric   cacm july  1972 moses  j  <B>algebraic</B> <B>manipulation</B>  special functions  <B>algebraic</B> simplification  <B>symbolic</B> integration  <B>algebraic</B> geometry  differential algebra 1.50 3.15 5.19 5.9 ca720705 jb january to differential equations  such a theory is preferable to a less general effort to make <B>algebraic</B>
35 Q0 1386 14 0.059810106 Lucene_47
<B>symbolic</B> factoring of polynomials in several variables an <B>algorithm</B> for finding the <B>symbolic</B> factors of a multi-variate <B>polynomial</B> with integer coefficients is presented  the <B>algorithm</B> be found in a <B>finite</B> number of steps  the <B>algorithm</B> consists of factoring single-variable instances  techniques for implementing the <B>algorithm</B> and several <B>examples</B> are discussed  the <B>algorithm</B> promises
35 Q0 1397 15 0.053773373 Lucene_47
proceedings of the acm symposium on <B>symbolic</B> and <B>algebraic</B> <B>manipulation</B> the acm symposium on <B>symbolic</B> and <B>algebraic</B> <B>manipulation</B> brought together over four hundred people interested in programming languages designed for <B>manipulation</B> of <B>algebraic</B> formulas and symbol strings  in their applications  the conference was sponsored by the acm special interest committee on <B>symbolic</B> and <B>algebraic</B>
35 Q0 2516 16 0.051002517 Lucene_47
hierarchical storage in information retrieval a <B>probabilistic</B> analysis is employed to determine the effect of hierarchical storage organizations on information retrieval operations  the data storage hardware is assumed to consist on n-levels of linearly connected memory hardware with increasing data access times and increasing data storage capabilities  a system might  for example  consist
35 Q0 1696 17 0.047330584 Lucene_47
an <B>algorithm</B> for identifying the ergodic subchains and transient states of a stochastic matrix an <B>algorithm</B> for identifying the ergodic subchains and transient states of a stochastic matrix are reviewed  and an updating procedure for <B>dealing</B> with certain sequences of stochastic matrices is discussed  computation times are investigated experimentally and compared with <B>those</B> of another
35 Q0 2437 18 0.04721091 Lucene_47
 the key space according to a certain <B>probabilistic</B> selection <B>algorithm</B>  all files with the same number of keys selected from this key space will be suitably weighted in accordance with the <B>algorithm</B>
35 Q0 265 19 0.046962 Lucene_47
low level language subroutines for use within fortran this paper describes <B>some</B> subroutines  coded in <B>symbolic</B> languages and for use within fortran coded programs  to deal with  special arithmetic   e g  multi-precision arithmetic   symbol <B>manipulation</B>  bit <B>manipulation</B> and expanded character set input-output  and visual display  cacm november  1961 barnett  <B>m</B>  p  ca611103 jb march 15  1978 10 59
35 Q0 2167 20 0.04483605 Lucene_47
 of automatic simplification capabilities in an <B>algebraic</B> <B>manipulation</B> system  systems are divided of expressions  finally we discuss <B>some</B> of the theoretical results related to <B>algebraic</B> simplification for certain classes of expressions are included  cacm august  1971 moses  j  <B>algebraic</B> <B>manipulation</B><B>algebraic</B> simplification  a guide for the perplexed <B>algebraic</B> simplification is examined first from
35 Q0 2164 21 0.043607153 Lucene_47
 to moses  sin  the second  from <B>algebraic</B> <B>manipulation</B>  led to manove s implementation and to horowitz  and tobey s reexamination of the hermite <B>algorithm</B> for integrating rational functions  the third<B>symbolic</B> integration  the stormy decade three approaches to <B>symbolic</B> integration in the 1960 s <B>algorithm</B> to a class of special functions and programs for solving differential equations and for finding
35 Q0 2567 22 0.04299613 Lucene_47
 but to be <B>especially</B> efficient when <B>dealing</B> with stiff systems of differential equations for <B>some</B> highly stiff systems  cacm december  1974 chu  s  c  berman  <B>m</B>  numerical solution
35 Q0 1935 23 0.042502094 Lucene_47
 retrieval  mathematical model  partitioning  <B>probabilistic</B> method  random sequencing  search
35 Q0 2402 24 0.038651392 Lucene_47
 function  <B>especially</B> for large structures  this is significant  for crystallography of biological macromolecules hasbeen and will continue to be a <B>field</B> of intense interest  cacm january  1972 lesk  a  <B>m</B> encourages the development of <B>algorithms</B> adapted to this environment  pictorial pattern recognition recognition <B>algorithms</B> is hindered by the fact that the cross-correlation between a model
35 Q0 2169 25 0.03795965 Lucene_47
  1971 hall jr   a  d  <B>symbolic</B> algebra  rational function <B>manipulation</B>  <B>polynomial</B> <B>manipulation</B>the altran system for rational function <B>manipulation</B>-a survey altran is a complete system for <B>symbolic</B> computation with rational functions in several variables with integer coefficients  it has been designed and implemented to handle large problems with ease and efficiency  considerable effort has
35 Q0 3203 26 0.03657232 Lucene_47
grad assistant - a program for <B>symbolic</B> <B>algebraic</B> <B>manipulation</B> and differentiation the general functions which symbolically manipulate abd differentiate <B>algebraic</B> expressions  it is designed for use with problemms in which a large amount of routine <B>manipulation</B> is to be done by a program  while <B>some</B> complicated expressions  notably ones involving nested radicals and trigonometric
35 Q0 2414 27 0.036236614 Lucene_47
arithmetic overa <B>finite</B> <B>field</B>  a1   <B>algorithm</B> a469  cacm november  1973 lam  c  mckay  j  algebra 5.19 ca731112 jb january 20  1978 9 25 am 2414 5 2414 2414 5 2414 2414 5 2414
35 Q0 717 28 0.035610482 Lucene_47
partitioning <B>algorithms</B> for <B>finite</B> sets the partitions of a set with n elements are represented by certain n-tuples of positive integers  <B>algorithm</B> are described which generate without repetitions set into <B>m</B> or fewer sets  1  lt   <B>m</B>  lt   n   and  3  all partitions of the given set into exactly <B>m</B> sets  1  lt   <B>m</B>  lt   n   cacm october  1963 hutchinson  g  ca631008 jb march 13  1978 5 57 pm 717 5
35 Q0 3007 29 0.034186214 Lucene_47
complexity of computations  corrigendum  cacm march  1978 <B>rabin</B>  <B>m</B>  ca780306 jb march 28  1978 1 02 pm 3007 5 3007 3007 5 3007 3007 5 3007
35 Q0 2266 30 0.03349547 Lucene_47
a highly parallel <B>algorithm</B> for approximating all zeros of a <B>polynomial</B> with only real zeros an <B>algorithm</B> is described based on newton s method which simultaneously approximates all zeros of a <B>polynomial</B> with only real zeros  the <B>algorithm</B>  which is conceptually suitable for parallel computation  cacm november  1972 patrick  <B>m</B>  l  parallel numerical <B>algorithms</B>  real polynomials  real zeros
35 Q0 2170 31 0.032519713 Lucene_47
applications of symbol <B>manipulation</B> in theoretical physics this paper surveys the applications of <B>symbolic</B> computation techniques to problems in theoretical physics  particular emphasis is placed on applications in quantum electrodynamics where the most activity has occurred  cacm august  1971 hearn  a  c  symbol <B>manipulation</B>  <B>algebraic</B> simplification  computational physics  quantum
35 Q0 1893 32 0.031844866 Lucene_47
roots of polynomials by a root-squaring and resultant routine  <B>algorithm</B> 340  c2   cacm may  1969 noltemeier  a  root finders  roots of <B>polynomial</B> equations  <B>polynomial</B> zeros  root-squaring operations  graeffe method  resultant procedure  subresultant procedure  <B>testing</B> of roots  acceptance criteria 5.15 ca690517 jb february 17  1978 2 29 pm 1893 5 1893 1893 5 1893 1893 5 1893
35 Q0 2385 33 0.031377636 Lucene_47
zeros of a complex <B>polynomial</B>  c2   <B>algorithm</B> a419  cacm february  1972 jenkins  <B>m</B>  a  traub  j  f  roots  roots of a <B>polynomial</B>  zeros of a <B>polynomial</B> 5.15 ca720206 jb january 31  1978 4 14 pm 2385 5 2385 2385 5 2385 2385 5 2385
35 Q0 719 34 0.031163882 Lucene_47
variable width stacks character addressable  variable <B>field</B> computers permit ready establishment and <B>manipulation</B> of variable width stacks  single machine commands may push variable <B>field</B> items down into such stacks or pop them up  the availability of a variety of <B>field</B> delimiters allows operations can be made the basis of compiler decoding <B>algorithms</B> the proper use of machines
35 Q0 2850 35 0.030225694 Lucene_47
<B>symbolic</B> execution and program <B>testing</B> this paper describes the <B>symbolic</B> execution of programs <B>symbolic</B> execution for program <B>testing</B> and debugging is also described  it interpretively executes  the ability to manage and to prove things about <B>symbolic</B> expressions  a simple program <B>testing</B> and program proving is also included  cacm july  1976 king  j  c  <B>symbolic</B> execution  program <B>testing</B>
35 Q0 2253 36 0.029442534 Lucene_47
index ranges for matrix calculi the paper describes a scheme for <B>symbolic</B> <B>manipulation</B> of index expressions which arise as a by-product of the <B>symbolic</B> <B>manipulation</B> of expressions in the matrix optimization  range operations  <B>symbolic</B> <B>manipulation</B>  syntactic analysis  well-formed expressions by transforming the original <B>algorithm</B> rather than the machine code  the goal is to automatically generate
35 Q0 2931 37 0.029126083 Lucene_47
 and of nets  though most in teresting for dynamics  have formalized only a portion of the <B>field</B>  and there has been perhaps too much concentration on the <B>finite</B>-state and <B>algebraic</B> aspects  it would  though we have many <B>examples</B>  we have still to give wide-ranging mathematical answers to these queries
35 Q0 1154 38 0.029107917 Lucene_47
 than <B>finite</B> automata and less powerful than general turing machines is presented  it is felt that the machines in this category are as closely related to digital computers as either the <B>finite</B> automata-state memory to a <B>finite</B>-state machine and then performing any or all of the following   1  restrict of steps allowed for a computation by <B>some</B> increasing recursive function of the length of the input   3
35 Q0 1216 39 0.02804463 Lucene_47
<B>symbolic</B> derivatives without list processing  subroutines  or recursion a routine has been developed which computes and prints out the <B>symbolic</B> derivative of an absolutely continuous elementary is applied and the result is edited to produce results as elegant and efficient as <B>those</B> obtained by hand into an  <B>algebraic</B>  programming language  cacm august  1965 smith  p  j  ca650808 jb march 6  1978 8
35 Q0 1667 40 0.027864259 Lucene_47
roots of polynomials by a root-squaring and resultant routine  <B>algorithm</B> 340  c2   cacm november  1968 noltemeier  a  root finders  roots of <B>polynomial</B> equations  <B>polynomial</B> zeros  root-squaring operations  graeffe method  resultant procedure  subresultant procedure  <B>testing</B> of roots  acceptance criteria 5.15 ca681112 jb february 21  1978 2 24 pm 1667 4 1667 1667 4 1667 1667 4 1667 178 5 1667
35 Q0 1806 41 0.0278519 Lucene_47
 toward a root  <B>some</B> modifications of the original method are proposed and a program  fortran  based on the modified method is given in <B>algorithm</B> 365  <B>some</B> numerical <B>examples</B> are included  cacm december  transcendental complex equation  <B>algebraic</B> complex equation 5.15 ca691206 jb february 15  1978 2 54 pm
35 Q0 1210 42 0.027241005 Lucene_47
file-handling within fortran this note describes <B>some</B> fortran subroutines to facilitate handling of tape files  they allow <B>symbolic</B> naming of information files  without violating the casual scientific programmer s idea of simplicity  <B>some</B> comments on two years use of these subroutines are given  cacm august  1965 harrison  <B>m</B>  c  ca650814 jb march 6  1978 7 59 pm 1210 5 1210 1210 5 1210 1210 5
35 Q0 2450 43 0.027038043 Lucene_47
empirical working set behavior the working set model for program behavior has been proposed in recent years as a basis for the design of scheduling and paging <B>algorithms</B>  although the words  working set  are now commonly encountered in the literature <B>dealing</B> with resource allocation  there is a dearth of published data on program measurements  in the hope that workers in the <B>field</B> might find
35 Q0 1214 44 0.026554931 Lucene_47
<B>some</B> experiments in <B>algebraic</B> <B>manipulation</B> by computer a set of subroutines to allow <B>algebraic</B> manipulations on the ibm 7094 computer has been written a list processor  slip  a series of four problems of increasing difficulty were solved using these routines  cacm august  1965 lapidus  a  goldstein  <B>m</B>  ca650810 jb march 6  1978 8 10 pm 1024 4 1214 1051 4 1214 1098 4 1214 1214 4 1214 1214 4 1214
35 Q0 1699 45 0.026069153 Lucene_47
  man-machine  language and on <B>some</B> of the mechanical and psychological limitations in their design experiments and the conclusions resulting from them are detailed  cacm september  1968 rubinoff  <B>m</B>  bergman  s  franks  w  rubinoff  e  information retrieval <B>testing</B>  information system evaluation command language  <B>symbolic</B> command language  interactive systems  user learning factors  on-line
35 Q0 2490 46 0.0232226 Lucene_47
efficient <B>algorithms</B> for graph <B>manipulation</B>  h   <B>algorithm</B> a447  efficient <B>algorithms</B> are presented  r  graphs analysis of <B>algorithms</B>  graph <B>manipulation</B> 5.32 ca730610 jb january 23  1978 1 55 pm 2490  the <B>algorithm</B> for partitioning of a graph into simple paths is iterative and each iteration produces a new is the number of vertices and e is the number of edges  each <B>algorithm</B> requires time and space
35 Q0 1392 47 0.023101147 Lucene_47
experience with formac <B>algorithm</B> design various facets of the design and implementation of mathematical expression <B>manipulation</B> <B>algorithms</B> are discussed  concrete <B>examples</B> are provided by the formac expand and differentiation <B>algorithms</B>  a basic formac utility routine  and an experiment of general relevance in the design of <B>algorithms</B> for manipulating mathematical expressions  cacm
35 Q0 1393 48 0.02275395 Lucene_47
pm  a system for <B>polynomial</B> <B>manipulation</B> pm is an ibm 7094 program system for formal <B>manipulation</B> of polynomials in any number of variables  with integral coefficients unrestricted in size  <B>some</B> of the formal operations which can be performed by the system are sums  differences  products  quotients for polynomials  a new <B>algorithm</B> for <B>polynomial</B> greatest common divisor calculation is mentioned  and exaples
35 Q0 2283 49 0.022439513 Lucene_47
thinning <B>algorithms</B> on rectangular  hexagonal  and triangular arrays in this report three thinning <B>algorithms</B> are developed  one each for use with rectangular  hexagonal  and triangular arrays  the approach to the development of each <B>algorithm</B> is the same  pictorial results produced by each of the <B>algorithms</B> are presented and the relative performances of the <B>algorithms</B> are compared  it is found
35 Q0 1543 50 0.022435704 Lucene_47
  that is  <B>symbolic</B> <B>algebraic</B> <B>manipulation</B> and differentiation  to illustrate the techniques involved  by the use of tensor calculus and a computer language designed to facilitate <B>symbolic</B> mathematical
35 Q0 1948 51 0.022365114 Lucene_47
 <B>manipulation</B> systems  in this survey the more important <B>algorithms</B> in use are described and contrasted  subgroup lattices  automorphism groups of <B>finite</B> groups  character tables  and commutator calculus groups  abelian groups  discrete mathematics  non-numerical programming  symbol <B>manipulation</B>  survey 1.3
35 Q0 1743 52 0.022014983 Lucene_47
reliable full-duplex file transmission over half-duplex telephone lines a <B>field</B>-proven scheme for achieving reliable duplex transmission over a half-duplex communication line is presented  and to demonstrate the difficulty of the problem  another similar scheme  which is only slightly unreliable  is also presented  a flowchart for the reliable scheme and <B>some</B> interesting <B>examples</B> are given  cacm
35 Q0 1595 53 0.021921359 Lucene_47
on the computer enumeration of <B>finite</B> topologies the problem of enumerating the number of topologies which can be formed from a <B>finite</B> point set is considered both theoretically and computationally  certain fundamental results are established  leading to an <B>algorithm</B> for enumerating <B>finite</B> result underscores its continuing usefulness in this area  cacm may  1967 evans  j  w  harary  f  lynn  <B>m</B>
35 Q0 284 54 0.021541156 Lucene_47
<B>manipulation</B> of <B>algebraic</B> expressions an <B>algorithm</B> for algebraically manipulating expressions for systems analysis problems  this <B>algorithm</B> enablesus to derive over-all system transfer functions  the machine representation of the derived expression  is  by virtue of the <B>algorithm</B>  in a form which simplifies the task of compiling  the <B>algorithm</B> was developed for a particular purpose in connection
35 Q0 179 55 0.02134672 Lucene_47
evaluation of the legendre <B>polynomial</B> pn x  by recursion  <B>algorithm</B>  cacm june  1960 galler  g  <B>m</B>  ca600611 jb march 20  1978 9 35 pm 179 5 179 179 5 179 179 5 179
35 Q0 180 56 0.02134672 Lucene_47
evaluation of the laguerre <B>polynomial</B> ln x  by recursion  <B>algorithm</B>  cacm june  1960 galler  g  <B>m</B>  ca600610 jb march 20  1978 9 36 pm 180 5 180 180 5 180 180 5 180
35 Q0 181 57 0.02134672 Lucene_47
evaluation of the hermite <B>polynomial</B> hn x  by recursion  <B>algorithm</B>  cacm june  1960 galler  g  <B>m</B>  ca600609 jb march 20  1978 9 37 pm 181 5 181 181 5 181 181 5 181
35 Q0 182 58 0.02134672 Lucene_47
evaluation of the chebyshev <B>polynomial</B> tn x  by recursion  <B>algorithm</B>  cacm june  1960 galler  g  <B>m</B>  ca600608 jb march 20  1978 9 38 pm 182 5 182 182 5 182 182 5 182
35 Q0 2199 59 0.02134672 Lucene_47
a sparse matrix package  part i   f4   <B>algorithm</B> 408  cacm april  1971 mcnamee  j  <B>m</B>  matrix  sparse matrix  matrix <B>manipulation</B> 5.14 ca710406 jb february 3  1978 3 20 pm 2199 5 2199 2199 5 2199 2199 5 2199
35 Q0 1524 60 0.020998782 Lucene_47
a stopping criterion for <B>polynomial</B> root finding when searching for the root of a <B>polynomial</B>  in this paper an <B>algorithm</B> is presented which allows one to terminate the iteration process on the basis of calculated bounds for the roundoff error which occurs in evaluating the <B>polynomial</B>  this stopping criterion has been tested on numerous <B>examples</B> and has been found to serve as a satisfactory
35 Q0 1619 61 0.020922754 Lucene_47
error-free methods for statistical computations neely has discussed computational error generated by <B>some</B> <B>algorithms</B> used to compute various statistics  in the present paper methods are described which are error-free  simple in concept  and usually less costly in machine time than <B>those</B> mentioned by neely  cacm march  1967 rodden  b  e  ca670310 jb february 28  1978 1 02 pm 1619 4 1619 3166 4
35 Q0 2231 62 0.020571401 Lucene_47
 projections of a <B>finite</B> binary pattern f  can we construct the original pattern f  in this paper we give a characterization of patterns that are reconstructable from their projection  three <B>algorithms</B> pattern can be perfectly reconstructed in time <B>m</B> x n and that a pattern similar to an ambiguous pattern can also be constructed in time <B>m</B> x n  where <B>m</B>  n are the dimensions of the pattern frame  cacm
35 Q0 3094 63 0.0203586 Lucene_47
  1978 cohen  j  roth  <B>m</B>  syntactic analysis  analysis of <B>algorithms</B> top-down and bottom-up parsinganalyses of deterministic parsing <B>algorithms</B> this paper describes an approach for determining  these quantities are presented in the form of <B>symbolic</B> formulas  called time-formulas  the variables and the program representing the <B>algorithm</B> one wishes to analyze  the approach is described by using
35 Q0 1862 64 0.020151936 Lucene_47
 than an ibm 360 40  with <B>some</B> exception  computing science academic programs are rare  this situation is by no means attributable to <B>those</B> responsible for computing developments  who strive for excellence  rather the  system  is hard to over-come  universities  <B>especially</B> <B>those</B> with strong european
35 Q0 892 65 0.01999459 Lucene_47
recol-a retrieval command language an interrogation scheme is described for the retrieval and <B>manipulation</B> of data file records  the language of the interrogation scheme allows for selecting file records with the are of logical condition statements  defining record classes  associating file records  editing printed output  and summarizing the results of the above operations  <B>some</B> <B>examples</B>
35 Q0 1020 66 0.019771231 Lucene_47
free <B>field</B> read  <B>algorithm</B> 239  i5   cacm august  1964 mckeeman  w  <B>m</B>  ca640810 jb march 9  1978 6 56 pm 1020 5 1020 1020 5 1020 1020 5 1020 1705 5 1020 984 6 1020 986 6 1020 1020 6 1020 1321 6 1020
35 Q0 2767 67 0.019374348 Lucene_47
  the <B>algorithms</B> are tested with a set of typical stochastic scheduling distributions <B>especially</B> chosen to show the advantages and limitations of the <B>algorithms</B>  the end-order tree <B>algorithm</B> is showna comparison of simulation event list <B>algorithms</B> four <B>algorithms</B> are considered which can be used to schedule events in a general purpose discrete simulation system  two of the <B>algorithms</B> are new
35 Q0 1644 68 0.019092027 Lucene_47
 computation of a least squares <B>polynomial</B> makes the computed <B>polynomial</B> only an approximation to the true least square <B>polynomial</B>  a simple method for adjust ing the constant term of the computed <B>polynomial</B> to get a better approximation to the true least squares <B>polynomial</B> is described  cacm january  1967 goldberg  <B>m</B>  ca670111 jb february 28  1978 4 24 pm 1644 5 1644 1644 5 1644 1644 5 1644
35 Q0 1664 69 0.019077925 Lucene_47
an <B>algorithm</B> for deriving the equations of mathematical physics by <B>symbolic</B> <B>manipulation</B> a method is described whereby a digital computer can be used to derive the equations of mathematical physics in any curvilinear coordinate system requested by the user  the effectiveness of the technique  tensor  tensor equation  curvilinear coordinate systems  fortran  <B>symbolic</B> <B>manipulation</B> 3.21 3.25
35 Q0 2956 70 0.018949267 Lucene_47
<B>some</B> ideas on data types in high-level languages a number of issues are explored concerning the notion that a data type is a set of values together with a set of primitive operations on <B>those</B> values  among these are the need for a notation for iterating over the elements of any <B>finite</B> set  instead of the more narrow for i   1 to n notation   the use of the domain of an array as a data type
35 Q0 1999 71 0.018463172 Lucene_47
optimal starting approximations for generating square root for slow or no divide on machine with slow or no division  it is preferable to use an iterative scheme for the square root different from the classical heron scheme  the problem of optimal initial approximants is considered  and <B>some</B> optimal <B>polynomial</B> initial approximations are tabulated  cacm september  1970 wilson  <B>m</B>  w  square root
35 Q0 2399 72 0.018463172 Lucene_47
a crt editing system a test-editing and <B>manipulation</B> program is described  the program operates from low-cost cathode-ray tube entry and display stations with keyboard and 13 function buttons  applications  potential economy of operation  and <B>some</B> aspects of implementation are discussed  cacm january  1972 irons  e  t  djorup  f  <B>m</B>  editing  text  cathode-ray tube entry display  time-sharing 3.7
35 Q0 1411 73 0.018282184 Lucene_47
comparison of several <B>algorithms</B> for computation of means  standard deviations and correlation coefficients several <B>algorithms</B> for computation of basic statistics are compared by their performance and correlation coefficient  for each statistic  the <B>algorithm</B> included the usual computing formulas noted for <B>some</B> calculation using the usual computing formulas  the most reliable technique
35 Q0 3201 74 0.018267872 Lucene_47
<B>symbolic</B> <B>manipulation</B> of poisson series poisson series of three variables are manageable symbolically through as a set of formal subroutines written partially in the ibm 7094 machine language  but to be called in the fortran language for use in fortran programs  an effort has been made to supply <B>those</B> operations which are most required by celestial mechanics  the routines are entirely self
35 Q0 3006 75 0.018265631 Lucene_47
anomalies with variable partition paging <B>algorithms</B> five types of anomalous behavior which may the fact that  with certain reference strings and paging <B>algorithms</B>  an increase in mean memory allocation may result in an increase in fault rate  two paging <B>algorithms</B>  are examined in terms of their anomaly potential  and reference string <B>examples</B> of various anomalies are presented  two paging
35 Q0 1121 76 0.018091066 Lucene_47
comments on  a continued operation notation   this note is intended to clarify and correct several points in a recent paper describing <B>some</B> notations for symbol <B>manipulation</B> by <B>m</B>  barnett  comm  acm 6 august  1963    cacm march  1964 barnett  <B>m</B>  p  gerard  j  <B>m</B>  sambles  a  w  ca640310 jb march 10  1978 2 45 am 1062 4 1121 1121 4 1121 1121 4 1121 1139 4 1121 1265 4 1121 1781 4 1121 659 4 1121 720
35 Q0 1433 77 0.017962981 Lucene_47
a note on linear programming <B>algorithm</B> design  a combinatorial problem as linear programming models timeo cut down this expense  an ever increasing effort is made to design more efficient <B>algorithms</B>  this paper is meant to support the effort  it is attempted to find <B>some</B> characteristics of the way memory is considered  after <B>some</B> simplification  the problem is restated in a general way
35 Q0 2081 78 0.017782701 Lucene_47
 and cumulative operators  <B>algorithms</B> are given which use symbol <B>manipulation</B> of matrix expressions so<B>some</B> complete calculi for matrices a matrix calculus is introduced with the intention of developing data structures suitable for a high level algorithmic language for mathematical programming  programming languages  sequence operations  symbol <B>manipulation</B> 4.12 4.22 5.14 5.41 ca700403 jb february 13
35 Q0 1589 79 0.017708462 Lucene_47
dialog  a conversational programming system with a graphical orientation dialog is an <B>algebraic</B> language for online use with a graphical input-output console device  it is a computational aid to <B>those</B> which are syntactically correct  dialog has been in daily operation at the iit research institute since february  1966  cacm june  1967 cameron  s  h  ewing  d  liveright  <B>m</B>  ca670603 jb
35 Q0 2702 80 0.01768753 Lucene_47
 k there exists an o n k 2   <B>algorithm</B> for <B>testing</B> the lr k  property  where n is the sizeon the complexity of lr k  <B>testing</B> the problem of determining whether an arbitrary context-free grammar is a member of <B>some</B> easily parsed subclass of grammars such as the lr k  grammars is considered  the time complexity of this problem is analyzed both when k is considered to be a fixed integer
35 Q0 2202 81 0.017602779 Lucene_47
  and <B>testing</B> facilities of the processor  a microassembly language is developed and the overhead involved as to its overhead for various subroutine characteristics  finally  three <B>examples</B> of problem language version  with the technology normalized  cacm april  1971 tucker  a  b  flynn  <B>m</B>  j
35 Q0 3018 82 0.017578963 Lucene_47
-complete  and if p  np then they do not admit <B>polynomial</B>-time approximation <B>algorithms</B> which always presented a method for determining keyword conflicts and described a heuristic <B>algorithm</B> which solves this edge-clique-cover problem and the graph coloring problem is established which allows <B>algorithms</B> for either one of these problems to be constructed from <B>algorithm</B> for the other  as consequences
35 Q0 2809 83 0.01753803 Lucene_47
positivity and norms following <B>some</B> lines of joint work with a  s  householder  the character and use of <B>algebraic</B> methods in the theory of norms is demonstrated  new results concerning norms with values in an archimedian vector lattice  not necessarily being totally ordered  are given  in particular for the generalization of order unit norms  l-norms and <B>m</B>-norms  an example of application
35 Q0 1681 84 0.017237715 Lucene_47
 syntactical form  <B>examples</B> of which are presented   and this form is then transformed into an equivalent query expressed in the retrieval system s original <B>symbolic</B> command language  which is briefly demonstration  cacm october  1968 rubinoff  <B>m</B>  bergman  s  cautin  h  rapp  f  natural language communication retrieval language  <B>symbolic</B> command language 3.74 3.81 4.19 ca681006 jb february 21  1978 3 59 pm 1681 4
35 Q0 2094 85 0.017205704 Lucene_47
  is considered  <B>examples</B> are given to illustrate that this <B>algorithm</B> can give satisfactory resultson an <B>algorithm</B> for nonlinear minimax approximation certain nonlinear minimax approximation problems are characterize d by properties which permit the application of special <B>algorithms</B>  mainly based on the exchange <B>algorithms</B> of remes  1934  1935   for their solution  in this paper the application
35 Q0 2997 86 0.017093189 Lucene_47
convex hulls of <B>finite</B> sets of poin ts in two and three dimensions the convex hulls of sets of n <B>algorithms</B> use the  divide and conquer  technique and recursively apply a merge procedure for two nonin tersecting convex hulls  since any convex hull <B>algorithm</B> requires at least o n log n  operations  the time complexity of the proposed <B>algorithms</B> is optimal within a multiplicative constant  cacm
35 Q0 327 87 0.017077375 Lucene_47
zeros of a real <B>polynomial</B> by resultant procedure  <B>algorithm</B> 59  cacm may  1961 bareiss  e  h  fisherkeller  <B>m</B>  a  ca610507 jb march 16  1978 11 01 pm 1667 5 327 327 5 327 327 5 327 327 5 327 178 6 327 1242 6 327 327 6 327
35 Q0 1870 88 0.016593128 Lucene_47
<B>some</B> techniques for using pseudorandom numbers in computer simulation an <B>algorithm</B> is described by which uniform pseudorandom integers may be used to construct binary  numbers  in which the probability that each bit in the word is a 1-bit and can assume any desired parameter value  techniques  random numbers  simulation  boolean algebra  bit <B>manipulation</B> 5.19 5.39 ca690710 jb february 17  1978
35 Q0 2959 89 0.016551513 Lucene_47
 their applications on a computer  the user of sba views his application as <B>manipulation</B> of information in two automate this application by giving  <B>examples</B>  to the system of how he manually manipulates june  1977 zloof  <B>m</B>  <B>m</B>  de jong  s  p  programming language  graphics  user in terface  data flow
35 Q0 1144 90 0.016411887 Lucene_47
digital computer determination of alpha source activity a technique is described for determining the activity and homogeneity of an alpha source  it is believed that the technique  using a digital computer  has many uses and applications in the <B>field</B> of nuclear physics  the technique involves computer <B>manipulation</B> of the digital image of the nuclear source  experimental details are given  cacm
35 Q0 1049 91 0.016399033 Lucene_47
  the more difficult method of <B>finite</B> differences can often be used to obtain a solution  this paper gives <B>examples</B> and discusses the <B>finite</B> difference method for non-linear two-point boundary-valuenumerical solution of nonlinear two-point boundary problems by <B>finite</B> difference methods solution of nonlinear two-point boundary-value problems is often an extremely difficult task  quite apart from
35 Q0 1946 92 0.016369624 Lucene_47
computing <B>polynomial</B> resultants  bezout s determinant vs  collins  reduced p  <B>algorithm</B> <B>algorithms</B> to bezout s determinant and collins  reduced <B>polynomial</B> remainder sequence  p r s   <B>algorithm</B>  detailed in detail  cacm january  1969 ku  s  y  adler  r  j  resultant <B>algorithm</B>  g c d  <B>algorithm</B>  <B>polynomial</B>  euclidean <B>algorithm</B>  multivariate <B>polynomial</B> equations 4.40 5.10 5.15 5.41 ca690103 jb february 20  1978 12
35 Q0 2471 93 0.016281415 Lucene_47
  the program uses somewhat different principles of artificial intelligence from <B>those</B> used in programs <B>polynomial</B> evaluation to choose a move  our program wins approximately two-thirds of its games in tournament situations  and has defeated championship players  cacm august  1973 smith  <B>m</B>  h  artificial
35 Q0 2217 94 0.016238533 Lucene_47
 for pp  a multiple regression program was used to produce optimal coefficients for linear <B>polynomial</B> were in the same domain as <B>those</B> used for collection learning data  learning was also shown to generalize successfully to domains other than <B>those</B> used for data collection  another experiment domain and on problems in a variety of domains  <B>some</B> variations of the learning program were also tested
35 Q0 393 95 0.016138164 Lucene_47
two subroutines for symbol <B>manipulation</B> with an <B>algebraic</B> compiler cacm february  1961 carr iii  j  w  hanson  j  w  ca610205 jb march 17  1978 12 59 am 393 5 393 393 5 393 393 5 393 561 5 393 393 6 393 77 6 393
35 Q0 3078 96 0.01611599 Lucene_47
 in this paper  these results are obtained by using various computer-aided <B>algebraic</B> <B>manipulation</B> <B>manipulation</B> programs  since many physical systems can be modeled by markov and semi-markov processes analyzed here  cacm july  1978 chattergy  r  pooch  u  computer-aided algebra  symbol <B>manipulation</B>
35 Q0 1197 97 0.015933298 Lucene_47
finding zeros of a <B>polynomial</B> by the q-d <B>algorithm</B> a method which finds simultaneously all the zeros of a <B>polynomial</B>  developed by h  rutishauser  has been tested on a number of polynomials with real coefficients  this slowly converging method  the quotient-difference  q-d  <B>algorithm</B>  provides starting values for a newton or a bairstow <B>algorithm</B> for more rapid convergence  necessary
35 Q0 1624 98 0.015800366 Lucene_47
automatic dimensioning <B>examples</B> of <B>algorithm</B> that will accomplish automatic storage reservation without the need for explicit array declarations are described  cacm march  1967 klerer  <B>m</B>  may  j  ca670305 jb february 28  1978 1 28 pm 1396 4 1624 1624 4 1624 1083 5 1624 1624 5 1624 1624 5 1624 1624 5 1624
35 Q0 2314 99 0.015707208 Lucene_47
requirements for advanced programming systems for list processing list processing systems should be designed to facilitate production of large programs to manipulate large complex <B>symbolic</B> data  rather than focusing just on language features  since <B>algorithms</B> must be not only coded in a language features are described to facilitate program composition  entry  <B>testing</B>  debugging  editing  optimization
35 Q0 2341 100 0.015646432 Lucene_47
 of program-defined connection points  <B>some</B> blocks adapt in size and shape to their environment  blocks purpose device-independent output formation mechanism <B>especially</B> suitable for nonnumerical work  cacm june  1972 gimpel  j  f  character <B>manipulation</B>  output formatting  string processing  graphics
*************Query 36*************************

36 Q0 2030 1 0.77489144 Lucene_47
<B>context</B>-sensitive <B>parsing</B> this paper presents a canonical form for <B>context</B>-sensitive derivations and a <B>parsing</B> <B>algorithm</B> which finds each <B>context</B>-sensitive analysis once and only once  the amount involved  cacm july  1970 woods  w  a  <B>context</B>-sensitive grammars  <B>context</B>-sensitive <B>parsing</B>  formal grammars  formal <B>language</B> theory  <B>parsing</B>  <B>parsing</B> algorithms  <B>recognition</B> algorithms 3.42 5.22 5.23
36 Q0 2061 2 0.54586196 Lucene_47
an <B>algorithm</B> for the construction of bounded-<B>context</B> parsers an <B>algorithm</B> is described which accepts an arbitrary <B>context</B>-<B>free</B> grammar and constructs a bounded-<B>context</B> parser for it whenever such a parser exists  in the first part of the paper the definition of a <B>context</B>-<B>free</B> grammar and the working of a bounded-<B>context</B> parser are recalled  the notion of reduction class for a <B>context</B>-<B>free</B> grammar
36 Q0 1350 3 0.53112715 Lucene_47
 predictive analyzer as a <B>parsing</B> <B>algorithm</B> for arbitrary <B>context</B>-<B>free</B> languages is compared with twothe augmented predictive analyzer for <B>context</B>-<B>free</B> languages-its relative efficiency it has been proven by greibach that for a given <B>context</B>-<B>free</B> grammar g  a standard-form grammar gs can of any <B>context</B>-<B>free</B> grammar g  given an equivalent standard-form grammar gs  the structural
36 Q0 2110 4 0.49358147 Lucene_47
an efficient <B>context</B>-<B>free</B> <B>parsing</B> <B>algorithm</B> a <B>parsing</B> <B>algorithm</B> which seems to be the most efficient general <B>context</B>-<B>free</B> <B>algorithm</B> known is described  it is similar to both knuth s lr k  <B>algorithm</B>  <B>parsing</B>  <B>context</B>-<B>free</B> grammar  compilers  computational complexity 4.12 5.22 5.23 ca700205 jb in linear time on a large class of grammars  which seems to include most practical <B>context</B>-<B>free</B>
36 Q0 2112 5 0.4609852 Lucene_47
 expression  transduction expression  <B>context</B>-<B>free</B> languages  translation  recognizers  <B>parsing</B>  metatranslation equations input limited transduction expressions  or translation equations  are used to describe the syntax and left-<B>context</B> sensitive semantics for <B>context</B>-<B>free</B> languages  a formal of a pushdown stack  within the framework described string <B>recognition</B> and <B>parsing</B> may be treated as special
36 Q0 2739 6 0.44453868 Lucene_47
the restriction <B>language</B> for computer grammars of natural <B>language</B> over the past few years  a number of systems for the computer analysis of natural <B>language</B> sentences have been based on augmented <B>context</B>-<B>free</B> grammars  a <B>context</B>-<B>free</B> grammar which defines a set of parse trees for a sentence  plus of the linguistic string parser  cacm july 1975 sager  n  grishman  r  natural <B>language</B>  <B>parsing</B>  grammar
36 Q0 2754 7 0.40547082 Lucene_47
  <B>context</B>-<B>free</B> grammar  bottom-up <B>parsing</B>  electrocardiogram  3.12 3.24 3.34 3.63 4.19 5.13 5.23a syntactic <B>algorithm</B> for peak detection in waveforms with applications to cardiography peaks in a digitized waveform are detected by an <B>algorithm</B> incorporating piecewise linear approximation and tabular <B>parsing</B> techniques  several parameters serve to identify the waveform <B>context</B> enabling accurate
36 Q0 2794 8 0.3728243 Lucene_47
 types of representations in this manner  a representation of the <B>language</B> <B>recognition</B> problem which is based on the cocke <B>parsing</B> <B>algorithm</B> is used as an illustration  a method for representing proving  <B>language</B> <B>recognition</B> 3.64 ca750205 jb january 12  1978 8 27 am 2794 5 2794 2794 5 2794 2794 5
36 Q0 1012 9 0.37130904 Lucene_47
 of the set t  every <B>context</B>-<B>free</B> <B>language</B> can be analyzed by a directed production analyzer  the kunoformal <B>parsing</B> systems automatic syntactic analysis has recently become important for both natural <B>language</B> data processing and syntax-directed compilers  a formal <B>parsing</B> system g    v u t r analyzer and of a working <B>parsing</B> <B>algorithm</B>  the connection between structures assigned by the analyzer
36 Q0 2836 10 0.36825076 Lucene_47
weighted derivation trees the nodes of a weighted derivation tree are associated with weighting functions over the vocabulary of a <B>context</B>-<B>free</B> grammar  an <B>algorithm</B> is presented for constructing  the correctness of the <B>algorithm</B> is established  the method may be applied to problems involving probabilistic <B>parsing</B> or combinatorial optimization  cacm september  1976 loui  m  c  derivation tree
36 Q0 2698 11 0.36779925 Lucene_47
syntax-directed least-errors analysis for <B>context</B>-<B>free</B> languages  a practical approach a least of bellman s dynamic programming  the analyzer takes a general class of <B>context</B>-<B>free</B> grammars as drivers  and any finite string as input  <B>recognition</B> consists of a least-errors count for a corrected aspects which help in programming it  cacm january  1974 lyon  g  arbitrary input strings  <B>context</B>-<B>free</B>
36 Q0 2476 12 0.33640715 Lucene_47
equivalence between and or graphs and <B>context</B>-<B>free</B> grammars cacm july  1973 hall  p  a  v  artificial intelligence  and or graphs  <B>language</B> theory  <B>context</B>-<B>free</B> grammars 3.60 3.64 5.23 ca730710 jb january 23  1978 11 21 am 2476 5 2476 2476 5 2476 2476 5 2476
36 Q0 1265 13 0.33499083 Lucene_47
on the relative efficiencies of <B>context</B>-<B>free</B> grammar recognizers a number of diverse <B>recognition</B> procedures that have been proposed for <B>parsing</B> sentences with respect to a <B>context</B>-<B>free</B> grammar are described in this paper by means of a common device  each procedure is defined by giving an <B>algorithm</B> on the univac m-460 computer  several algorithms for producing grammars equivalent to a given <B>context</B>-<B>free</B>
36 Q0 2703 14 0.33388734 Lucene_47
 attribute grammars are an extension of <B>context</B>-<B>free</B> grammars devised by knuth as a mechanism for including the semantics of a <B>context</B>-<B>free</B> <B>language</B> with the syntax of the <B>language</B>  the circularity problem jazayeri  m  ogden  w  f  rounds  w  c  attribute grammars  circularity problem  <B>context</B>-<B>free</B> grammars  specifically  it is shown that any deterministic <B>algorithm</B> which solves the problem must for infinitely
36 Q0 2702 15 0.32138848 Lucene_47
  computational complexity  <B>context</B>-<B>free</B> grammars  <B>parsing</B>  lr k  grammars  np-complete problems 4.12 5.23 5.25on the complexity of lr k  testing the problem of determining whether an arbitrary <B>context</B>-<B>free</B> grammar is a member of some easily parsed subclass of grammars such as the lr k  grammars is considered k there exists an o n k 2   <B>algorithm</B> for testing the lr k  property  where n is the size
36 Q0 2084 16 0.31499907 Lucene_47
a note on the complement of inherently ambiguous <B>context</B>-<B>free</B> languages cacm march  1970 maurer  h  a  ambiguity  inherent ambiguity  complement  <B>context</B>-<B>free</B> <B>language</B>  chomsky-<B>language</B>  phrase structure <B>language</B>  production system  type 2 <B>language</B>  bounded <B>language</B> 5.22 5.24 ca700314 jb february 13  1978 3 37 pm 2084 5 2084 2084 5 2084 2084 5 2084
36 Q0 2733 17 0.27689657 Lucene_47
  these methods involve the use of ambiguous <B>context</B>-<B>free</B> grammars together with rules to resolvedeterministic <B>parsing</B> of ambiguous grammars methods of describing the syntax of programming  programming <B>language</B> specification  parser generation  translator writing systems  syntax analysis  lr <B>parsing</B>  ll <B>parsing</B>  ambiguous grammars 4.12 4.22 5.23 ca750802 jb january 9  1978 9 28 am 1323 4 2733
36 Q0 1768 18 0.27598503 Lucene_47
a global parser for <B>context</B>-<B>free</B> phrase structure grammars an <B>algorithm</B> for analyzing any <B>context</B>-<B>free</B> phrase structure grammar and for generating a program which can then parse any sentence in the <B>language</B>  or indicate that the given sentence is invalid  is described  the parser is of the  top compiler  <B>context</B>-<B>free</B> grammars  syntactic analysis  translators 3.42 4.12 5.24 ca680402 jb
36 Q0 2811 19 0.26949507 Lucene_47
structural pattern <B>recognition</B> of carotid pulse waves using a general waveform <B>parsing</B> system a general waveform <B>parsing</B> system with application to structural pattern <B>recognition</B> of carotid pulse variations  the waveform <B>parsing</B> system is modeled on a compiler-compiler system and allows the user to other waveforms  cacm december  1976 stockman  g  kanal  l  kyle  m  c  structural pattern <B>recognition</B>
36 Q0 2301 20 0.26044068 Lucene_47
 presents a bottom-up scheme for <B>parsing</B> them  based on an extension of floyd production <B>language</B>  fpl grammars  cacm august  1972 crowe  d  algorithmic <B>language</B> processing bottom-up <B>parsing</B>  floyd production <B>language</B>  <B>parsing</B>  syntax directed compiling  translator writing systems  two-level grammars 3.42 by koster to be equal in power to van wijngaarden grammars  they are much more suited to <B>parsing</B> than
36 Q0 1825 21 0.25435477 Lucene_47
 november  1969 korenjak  a  j  lr k  grammar  syntactic analysis  parser  deterministic <B>language</B>  syntax-directed compiler  <B>language</B> processor  <B>context</B>-<B>free</B> <B>language</B> algol 4.12 5.2 5.23 ca691105 jb  processors is developed  these processors are capable of recognizing and <B>parsing</B> an input during  processor can be constructed for each part  using knuth s <B>algorithm</B>  and if certain conditions
36 Q0 2113 22 0.25227678 Lucene_47
 the input hierarchical structures  cacm february  1970 von glasersfeld  e  <B>parsing</B>  syntactic analysis  natural-<B>language</B> analysis  linguistic data processing  computational linguistics  correlational grammar  structure <B>recognition</B>  pattern <B>recognition</B>  matching procedures  tree-structure interpretation
36 Q0 2340 23 0.24945459 Lucene_47
 associated with classes of conflict-<B>free</B> grammars is illustrated through an example  cacm june  1972 martin  d  f  precedence grammars  <B>context</B>-<B>free</B> <B>parsing</B> 4.12 ca720605 jb january 30  1978 4 28 pm with a conflict-<B>free</B> matrix of precedence relations is given  this <B>algorithm</B> not only detects when
36 Q0 1612 24 0.24687582 Lucene_47
top-to-bottom <B>parsing</B> rehabilitated  this note is concerned with the efficiency of the top-to-bottom <B>parsing</B> <B>algorithm</B> as used in connection with programming <B>language</B> grammars  it is shown  for instance  that retracing of unprofitable paths can often be eliminated by a suitable rearrangement of the productions defining the grammar  the essential weakness of the method is in dealing
36 Q0 1855 25 0.22962634 Lucene_47
 information  cacm august  1969 dewar  h  bratley  p  syntactic analysis  <B>language</B> processing  <B>language</B> analysis  <B>parsing</B>  analysis procedure  <B>recognition</B> procedure  english sentences  linguistics
36 Q0 1399 26 0.22427396 Lucene_47
on top-to-bottom <B>recognition</B> and left recursion a procedure is given for obtaining structural descriptions in a <B>context</B>-<B>free</B> grammar by performing the <B>recognition</B> according to a strongly equivalent  left-recursion-freegrammar  the effect of allowing null strings in the rewriting rules is discussed  cacm july  1966 kurki-suonio  r  ca660713 jb march 2  1978 8 29 pm 1350 4 1399 1399 4 1399 1659 4
36 Q0 2921 27 0.22363481 Lucene_47
regular right part grammars and their parsers this paper in troduces an alternative to <B>context</B>-<B>free</B> grammars called regular right part  rrp  grammars  which resemble pascal syntax diagrams  formally  rrp grammars have production right parts  which are nondeterministic finite state machines  fsms  syntax diagrams lr k  grammars  parser construction  <B>parsing</B>  programming languages  <B>language</B> generation
36 Q0 2581 28 0.19759926 Lucene_47
 which might complete the utterance  cacm november  1974 miller  p  l  <B>parsing</B>  speech <B>recognition</B>  speech understanding  augmented transition network  local <B>parsing</B> 3.42 3.65 3.69 ca741103 jb januarya locally-organized parser for spoken input this paper describes lpars  a locally-organized <B>parsing</B> system  designed for use in a continuous speech recognizer  lpars processes a string of phonemes
36 Q0 1836 29 0.18412538 Lucene_47
 linear precedence functions  a new <B>algorithm</B> is presented for obtaining the linear precedence functions when given the precedence matrix  this <B>algorithm</B> is shown to possess several computational advantages  cacm october  1969 bell  j  r  boolean matrices  syntax  precedence grammar <B>context</B>-<B>free</B> <B>parsing</B>
36 Q0 1527 30 0.17355786 Lucene_47
  through questions posed in natural <B>language</B> sentences  this procedure makes use of a sentence <B>recognition</B> device for the class of grammars which will correctly decide between the grammatical and ungrammatical sentences of a natural <B>language</B>  it is possible to make use of a <B>recognition</B> device <B>language</B>  a set which can be exhaustively and exclusively generated by a grammar  based upon
36 Q0 2179 31 0.16069424 Lucene_47
simple lr k  grammars a class of <B>context</B>-<B>free</B> grammars  called the  simple lr k   or slr k  grammars is defined  this class has been shown to include weak precedence and simple precedence grammars of the resulting parsers  cacm july  1971 deremer  f  l  <B>context</B>-<B>free</B> grammar  lr k  grammar  precedence grammar  syntactic analysis  <B>parsing</B> <B>algorithm</B>  parser  finite-state machine  deterministic pushdown
36 Q0 2643 32 0.15894115 Lucene_47
the minimization of spatially-multiplexed character sets the paper describes a technique for compacting character sets in a digital computer while retaining <B>fast</B> access to individual bits  it considers the problem of minimizing the storage needed to contain such tables  reduction techniques  <B>parsing</B>  lexical analysis scanning  string processing  spatial multiplexing 4.9 ca740603 jb january 17
36 Q0 2795 33 0.15440243 Lucene_47
sentence paraphrasing from a conceptual base a model of natural <B>language</B> based on an underlying <B>language</B>-<B>free</B> representation of meaning is described  a program based on this model is able to produce sentence paraphrases which demonstrate understanding with respect to a given <B>context</B>  this generator operates in conjunction with a natural <B>language</B> analyzer and a combined memory and inference model
36 Q0 1453 34 0.14769475 Lucene_47
 of the <B>algorithm</B> to all of algol is given  thus expressing the revised algol 1960 syntax in completely nonrecursive terms  as far as its <B>context</B>-<B>free</B> portion is concerned  this description in many ways is far for describing algebraic <B>language</B> syntax  in particular of algol  is described in this paper  a fortran ii computer program for carrying out the elimination <B>algorithm</B> of gorn similar to gaussian
36 Q0 2546 35 0.14747119 Lucene_47
 class of <B>context</B>-<B>free</B> grammars  cacm february  1973 crespi-reghizzi  s  melkanoff  m  a  lichten  l programming <B>language</B> and in extending an existing <B>language</B>  the designer is faced with the problem of deriving a  natural  grammar for the <B>language</B>  we are proposing an interactive approach to the grammar to a grammatical inference <B>algorithm</B>  the <B>algorithm</B> then constructs a grammar which is a reasonable
36 Q0 1184 36 0.14718759 Lucene_47
a <B>fast</B> storage allocator a <B>fast</B> storage bookkeeping method is described which is particularly appropriate for list-structure operations and other situations involving many sizes of blocks-level list <B>language</B>   makes available blocks of computer registers in several different sizes are reconstituted if and when their parts are simultaneously <B>free</B>  cacm october  1965 knowlton  k  ca651011
36 Q0 3094 37 0.14107189 Lucene_47
analyses of deterministic <B>parsing</B> algorithms this paper describes an approach for determining and the program representing the <B>algorithm</B> one wishes to analyze  the approach is described by using the proposed approach by applying it to the analyses of parsers for a simple programming <B>language</B>  cacm june  1978 cohen  j  roth  m  syntactic analysis  analysis of algorithms top-down and bottom-up <B>parsing</B>
36 Q0 2886 38 0.13866875 Lucene_47
 be evaluated in a single pass over the derivation tree  and an <B>algorithm</B> is discussed which decides how the attribute grammar of a given programming <B>language</B> to the left-to-right evaluation scheme  semantic attributes  left-to-right <B>parsing</B>  multipass compilers  semantic evaluation  semantic
36 Q0 2980 39 0.13505898 Lucene_47
 is equivalent to <B>fast</B> graph operations  a number of examples are shown  cacm april  1977 tanimoto  s  l  pavlidis  t  picture processing  pattern <B>recognition</B>  segmentation  region editing 3.63 ca770402 jb
36 Q0 1917 40 0.13348776 Lucene_47
an algol procedure for the <B>fast</B> fourier transform with arbitrary factors  <B>algorithm</B> 339  c6   cacm march  1969 singleton  r  c  <B>fast</B> fourier transform  complex fourier transform  multivariate fourier transform  fourier series  harmonic analysis  spectral analysis  orthogonal polynomials  orthogonal transformation  virtual core memory  permutation 3.15 3.83 5.12 5.14 ca690310 jb february 20  1978
36 Q0 1665 41 0.13169912 Lucene_47
 allowable in a <B>language</B> given in terms of a subset of regular expressions  the output of the system was a processor which completely eliminated backup or rereading  which was nearly as <B>fast</B> as hand-coded processors  which would analyze the <B>language</B> and detect errors  and which would be convenient machine  <B>parsing</B>  plex structure  regular expressions sequential machine  syntactic analysis 3.63
36 Q0 2050 42 0.1259201 Lucene_47
automatic <B>parsing</B> for content analysis although automatic syntactic and semantic analysis is not yet possible for all of an unrestricted natural <B>language</B> text  some applications  of which content is normally processed  cacm june  1970 damerau  f  j  content analysis  <B>parsing</B>  syntactic analysis  natural <B>language</B> processing  information retrieval  <B>language</B> analysis  text processing 3.42 3.71 ca700605 jb
36 Q0 1787 43 0.12200545 Lucene_47
  translation  grammar  <B>context</B>-<B>free</B> <B>language</B>  formal <B>language</B>  <B>parsing</B> 4.12 5.23 ca680107 jb february 23use of transition matrices in compiling an algorithms is described which constructs from a suitable bnf grammar an efficient left-right recognizer for sentences of the corresponding <B>language</B>  the type of recognizer  used in a number of compilers  operates with a pushdown stack and with a transition
36 Q0 2880 44 0.12180045 Lucene_47
a <B>fast</B> division technique for constant divisors a <B>fast</B> <B>algorithm</B> for division by constant divisors is presented  the method has proved very useful implemented as microcode ona binary machine  and can be adapted directly into hardware  the mathematical foundations of the <B>algorithm</B> are presented as well as some performance measures  cacm february  1976 artzy  e  hinds  j  a  saal  h  j  constant
36 Q0 1989 45 0.121124744 Lucene_47
  linguistics  natural <B>language</B> analysis  <B>parsing</B>  semantic interpretation  transition network grammarstransition network grammars for natural <B>language</B> analysis the use of augmented transition network grammars for the analysis of natural <B>language</B> sentences is described  structure-building actions rule out meaningless analyses and take advantage of semantic information to guide the <B>parsing</B>
36 Q0 1170 46 0.120281264 Lucene_47
analyzing english syntax with a pattern-learning parser a dependency analysis system based on pattern <B>recognition</B> and learning logic was developed to infer word classes and rules of syntactic combination from experience with text which had been analyzed  the characteristics used to form word a probability of  9 for accurately <B>parsing</B> each new sentence it encountered  it was concluded that the system
36 Q0 2786 47 0.11914143 Lucene_47
 of the <B>language</B> is specified by a small <B>context</B>-<B>free</B> grammar  a compiler-compiler is used to make a compiler that translates this <B>language</B> into typesetting commands  output maybe produced on either for typesetting mathematics  the <B>language</B> has been designed to be easy to learn and to use  experience indicates that the <B>language</B> can be learned in an hour or so  for it has few rules
36 Q0 1683 48 0.1182255 Lucene_47
boolean matrix methods for the detection of simple precedence grammars a mechanical procedure is derived for determining whether a given <B>context</B>-<B>free</B> phrase structure grammar is a simple precedence analysis  precedence analysis  simple precedence grammar  simple precedence <B>language</B>  operator grammar  operator precedence  compilers  bounded-<B>context</B> syntactic analysis  boolean matrices  relations
36 Q0 1668 49 0.11680179 Lucene_47
an algol procedure for the <B>fast</B> fourier transform with arbitrary factors  <B>algorithm</B> 339  c6   cacm november  1968 singleton  r  c  <B>fast</B> fourier transform  multivariate fourier transform  fourier series  harmonic analysis  spectral analysis  orthogonal polynomials  orthogonal transformation  virtual core memory  permutation 3.15 3.83 5.12 5.14 ca681111 jb february 21  1978 2 26 pm 1668 4 1668 1668
36 Q0 1837 50 0.11680179 Lucene_47
an algol convolution procedure based on the <B>fast</B> fourier transform  <B>algorithm</B> 345  c6   cacm october  1969 singleton  r  c  <B>fast</B> fourier transform  complex fourier transform  multivariate fourier transform  fourier series  harmonic analysis  spectral analysis  orthogonal polynomials  orthogonal transformation  convolution  auto covariance  autocorrelation  cross-correlation  digital filtering
36 Q0 1921 51 0.11680179 Lucene_47
an algol convolution procedure based on the <B>fast</B> fourier transform  <B>algorithm</B> 345  c6   cacm march  1969 singleton  r  c  <B>fast</B> fourier transform  complex fourier transform  multivariate fourier transform  fourier series  harmonic analysis  spectral analysis  orthogonal polynomials  orthogonal transformation  convolution  auto covariance  autocorrelation  cross-correlation  digital filtering
36 Q0 2195 52 0.111937605 Lucene_47
 is presented  in this technique the heuristic of the problem is not embedded in the <B>recognition</B> <B>algorithm</B> but is expressed in a figure of merit  a multistage decision process is then able to recognize processing  picture <B>recognition</B>  picture description  curve detection  line detection  edge detection optimal detection  heuristic methods  global <B>recognition</B>  parallel processing  dynamic programming
36 Q0 2423 53 0.110935 Lucene_47
 to a  possibly empty   code generator  realizable as an assembly <B>language</B>  fortran or algol  subroutine memory of which 140 words are <B>parsing</B> table entries and 82 words are links to code generators  cacm  compression <B>algorithm</B> 4.12 5.22 5.23 ca731103 jb january 20  197810 41 am 2179 4 2423 2423 4 2423
36 Q0 2641 54 0.109232634 Lucene_47
a minimal spanning tree clustering method  z   <B>algorithm</B> a479  cacm june  1974 page  r  l  clustering  pattern <B>recognition</B>  feature selection  minimal spanning trees 3.63 5.39 5.5 ca740605 jb january 17  1978 3 06 pm 2641 4 2641 2363 5 2641 2641 5 2641 2641 5 2641 2641 5 2641
36 Q0 1525 55 0.10657203 Lucene_47
on computing the <B>fast</B> fourier transform cooley and tukey have proposed a <B>fast</B> <B>algorithm</B>  in this paper  the <B>fast</B> fourier transform <B>algorithm</B> is briefly reviewed and <B>fast</B> difference equation methods transforms on a digital computer  with n a power of two  computing time for this <B>algorithm</B> is proportional large mixed radix transforms  a scaling plan for computing the <B>fast</B> fourier transform with fixed-point
36 Q0 2310 56 0.10604092 Lucene_47
<B>language</B> analysis in the humanities the use of the computer in the <B>language</B>-oriented humanities  this paper argues that the computer s major role as to <B>language</B> analysis in the humanities be a critically important facilitator  cacm july  1972 sedelow  s  y  <B>language</B> analysis  humanities  science of the humanities  pattern <B>recognition</B>  pattern generation  interdisciplinary cooperation
36 Q0 1548 57 0.10530606 Lucene_47
<B>parsing</B> of decision tables reduction in the size of decision tables can be accomplished by several techniques  the techniques considered in this paper are on the <B>parsing</B> of decision tables with regard to horizontal and vertical data structures  job identity  hardware and job priorities  and <B>context</B> relationships  such <B>parsing</B> rests upon some conventions for the linkage of decision tables  cacm
36 Q0 1737 58 0.102536395 Lucene_47
a global parser for <B>context</B>-<B>free</B> phrase structure grammars cacm june  1968 unger  s  h  ca680608 jb february 22  1978 4 08 pm 1737 5 1737 1737 5 1737 1737 5 1737
36 Q0 2922 59 0.100585274 Lucene_47
 for <B>language</B> allowing direct control of nondeterministic features  the proposed attitude aims at retaining at the choice level is a <B>free</B> of contexts  the leaves are computational environments  each holding strategy planning  <B>context</B> tree 3.64 4.22 ca771004 jb december 27  1977 11 30 am 2625 4 2922 2922 4 2922
36 Q0 949 60 0.100585274 Lucene_47
integer and signed constants in algol a few remarks are given on the relations between syntax and semantics in the programming languages  the aim is to point out that  if it is true that the grammar of a <B>context</B>-<B>free</B> <B>language</B> should be conceived not only as a strings-generating device but also as a method for expressing a meaning  then the grammar of algol is open to some criticism  cacm december
36 Q0 1669 61 0.10011583 Lucene_47
algol procedures for the <B>fast</B> fourier transform  <B>algorithm</B> 338  c6   cacm november  1968 singleton  r  c  <B>fast</B> fourier transform  complex fourier transform  multivariate fourier transform  fourier series  harmonic analysis  spectral analysis  orthogonal polynomials  orthogonal transformation  virtual core memory  permutation 3.15 3.83 5.12 5.14 ca681110 jb february 21  1978 2 29 pm 1668 4 1669
36 Q0 1902 62 0.099414855 Lucene_47
an automatic grading scheme for simple programming exercises a discussion is given of alterations that were made to a typical university operating system to record the results of programming exercises in three different languages  including assembly <B>language</B>  in this computer-controlled grading <B>recognition</B> of exercises by the operators is necessary  cacm may  1969 hext  j  b  winings  j  w  automatic
36 Q0 3132 63 0.09928864 Lucene_47
-class pattern <B>recognition</B>  it is a standard technique to have an <B>algorithm</B> finding hyperplanes which  although frequently used practice  the modified relaxation <B>algorithm</B> is very poor  three algorithms <B>recognition</B>  pattern classification  linear discriminants  central hyperplanes  centering  centrality criteria  dead zone  hyperplane  linearly separable  relaxation <B>algorithm</B>  accelerated relaxation 3.62 3.63
36 Q0 2149 64 0.098429635 Lucene_47
entcaf and entcre  evaluation of normalized taylor coefficients of an analytic function  c5   <B>algorithm</B> 413  cacm october  1971 lyness  j  n  taylor coefficients  taylor series  cauchy integral  numerical integration  numerical differentiation  interpolation  complex variable  complex arithmetic  <B>fast</B> fourier transform 5.12 5.13 5.16 ca711007 jb february 2  1978 11 53 am 2119 4 2149 2149 4 2149
36 Q0 3079 65 0.098429635 Lucene_47
an <B>algorithm</B> for reasoning about equality a simple technique for reasoning about equalities that is <B>fast</B> and complete for ground formulas with function symbols and equality is presented  a proof of correctness is given as well  cacm july  1978 shostak  r  theorem proving  deduction  program verification  equality 3.64 3.66 5.21 ca780709 dh february 7  1979 3 41 pm 3079 5 3079 3079 5 3079 3079 5
36 Q0 2000 66 0.09541881 Lucene_47
 that the variation is nearly twice as <B>fast</B> on some problems in the latter <B>context</B>  cacm september
36 Q0 1910 67 0.094960205 Lucene_47
an <B>algorithm</B> for solving a special class of tridiagonal systems of linear equations an <B>algorithm</B> is presented for solving a system of linear equation bu k where b is tridiagonal and of a special form  it is shown that this <B>algorithm</B> is almost twice as <B>fast</B> as the gaussian elimination method usually suggested for solving such systems  in addition  explicit formulas for the inverse and determinant
36 Q0 3176 68 0.09436472 Lucene_47
 a simpler <B>algorithm</B> used for compressing lr <B>parsing</B> tables works so well  cacm november  1979 tarjan  r  yao  a  gaussian elimination  <B>parsing</B>  searching  sparse matrix  table compression  table lookup
36 Q0 2287 69 0.09297845 Lucene_47
a new approach to automatic scanning of contour maps the problem of automatic digitizing of contour maps is discussed  the structure of a general contour map is analyzed  and its topological properties are utilized in developing a new scanning <B>algorithm</B>  the problem of detection and <B>recognition</B>  automatic scanning  contour maps  digitizing  contour lines  topology  detection and <B>recognition</B>
36 Q0 1309 70 0.09131261 Lucene_47
a computer user-oriented system a computer <B>language</B> system has been developed which makes possible <B>fast</B> preparation of management reports  regardless of computational complexity or format variety  costs are sufficiently low so that individually tailored reports can be prepared for every manager  the system requires initial preparation of large data banks containing data in elementary form  use
36 Q0 1679 71 0.090189956 Lucene_47
a <B>fast</B> fourier transform <B>algorithm</B> for real-valued series a new procedure is presented for an example where the number of points in the series is an integral power of two  this <B>algorithm</B> preserves the order and symmetry of the cooley-turkey <B>fast</B> fourier transform <B>algorithm</B> while  also discussed are hardware and software implementations of the <B>algorithm</B> which perform only  n 4
36 Q0 2184 72 0.08603704 Lucene_47
 <B>language</B>  functions  names  <B>context</B>  file directory  file dictionary  lambda calculus  theory between the data names of a programming <B>language</B> and the file names of an operating system  the two and a storable object of type <B>context</B>  manipulations with contexts are then discussed at length with these ideas of <B>context</B> manipulation  whereas a function can be regarded as the abstraction based upon
36 Q0 3001 73 0.08430167 Lucene_47
 is error-<B>free</B> and suitable for most cases  the second solution is slightly more elegant and allows  f  r  jr  coding  hash coding  retrieval  secondary keys  pattern <B>recognition</B>  artificial
36 Q0 2545 74 0.083825946 Lucene_47
a theory of discrete patterns and their implementation in snobol4 the notion of a discrete pattern is formalized and certain properties deduced  a pattern is shown to be a generalization of a formal <B>language</B>  algorithms for implementing the kinds of patterns in snobol4 are given  the general february  1973 gimpel  j  f  patterns  snobol4  pattern theory  <B>parsing</B>  pattern matching  string
36 Q0 2060 75 0.08340094 Lucene_47
gedanken-a simple typeless <B>language</B> based on the principle of completeness and the reference concept gedanken is an experimental programming <B>language</B> with the following characteristics   1  any value which is permitted in some <B>context</B> of the <B>language</B> is permissible in any other meaningful <B>context</B>  typeless <B>language</B>  applicative <B>language</B>  lambda calculus  list processing  nondeterministic <B>algorithm</B>
36 Q0 1569 76 0.08202912 Lucene_47
implementing phrase-structure productions in pl i a method is described for implementing the productions of a <B>context</B>-<B>free</B> phrase structure grammar in a pl i procedure whose structure and statements parallel the structure and notation of the grammar  cacm july  1967 irwin  l  ca670704 jb february 28  1978 9 01 am 1569 5 1569 1569 5 1569 1569 5 1569
36 Q0 2832 77 0.08176488 Lucene_47
faster retrieval from <B>context</B> trees  corrigendum  <B>context</B> trees provide a convenient way of storing data which is to be viewed as a hierarchy of contexts  this note presents an <B>algorithm</B> which improves on previous <B>context</B> tree retrieval algorithms  it is based on the observation that in typical uses <B>context</B> changes are infrequent relative to retrievals  so that data can be cached to speed up
36 Q0 2986 78 0.07780939 Lucene_47
operations on sparse relations various computations on relations  boolean matrices  or directed graphs  such as the computation of precedence relations for a <B>context</B>-<B>free</B> grammar  can be done by a practical <B>algorithm</B> that is asymptotically faster than those in common use  for example  how to compute operator precedence or wirth-weber precedence relations in o n 2  steps is shown  as well as how
36 Q0 2211 79 0.07754979 Lucene_47
 indicate that flicker-<B>free</B> displays of large amounts of data are possible with reasonably <B>fast</B>
36 Q0 1915 80 0.074580595 Lucene_47
an <B>algorithm</B> for hidden line elimination the <B>algorithm</B> presented causes the elimination of hidden lines in the representation of a perspective view of concave and convex plane-faced objects of edges  the <B>algorithm</B> takes advantage of a reduced number of concave points and automatically line <B>recognition</B>  three-dimensional representation  plane-faced objects  perspective view  machine
36 Q0 1179 81 0.07445912 Lucene_47
pufft-the purdue university <B>fast</B> fortran translator a core resident  compile-and-go system designed for the ibm 7090 7094 computer is described  in little more than half of the 32k word core memory pufft provides a monitor for job sequencing  a translator for the full fortran iv <B>language</B> source <B>language</B> programs are processed at very high speeds  <B>language</B> compatibility has been maintained
36 Q0 2701 82 0.07401296 Lucene_47
a <B>fast</B> and usually linear <B>algorithm</B> for global flow analysis  abstract only--complete paper jacm 23,1 january  1976  a new <B>algorithm</B> for global flow analysis on reducible graphs is presented  the <B>algorithm</B> is shown to treat a very general class of function spaces  for a graph of e edges  the <B>algorithm</B> has a worst case time bound of o e log e  function operations  it is also shown
36 Q0 1088 83 0.07382223 Lucene_47
menu planning by computer a computer code has been developed which plans menus by finding minimum cost combinations of menu items such that the daily dietary  gastronomic and production requirements can be satisfied for a sequence of days  a <B>fast</B>  special integer programming <B>algorithm</B> is described which approximates the theoretical solution to the problem  if necessary  any menu can be changed
36 Q0 2350 84 0.07382223 Lucene_47
clenshaw-curtis quadrature  d1   <B>algorithm</B> a424  cacm may  1972 gentleman  w  quadrature  chebyshev series  cosine transform  <B>fast</B> fourier transform 5.1 ca720510 jb january 31  1978 9 37 am 2355 4 2350 2355 4 2350 2350 4 2350 2350 4 2350 2350 4 2350 2354 4 2350 2354 4 2350 2640 4 2350 1418 5 2350 2350 5 2350 2350 5 2350 2350 5 2350 2354 5 2350 2355 5 2350 1418 6 2350 1418 6 2350 1521 6 2350 1521
36 Q0 2492 85 0.0727569 Lucene_47
the development of decision tables via <B>parsing</B> of complex decision situations a new <B>parsing</B> technique is proposed which allows <B>parsing</B> based only on syntactical characteristics of the decision problem  it requires a description of the problem in decision grid chart format and allows the development of conditions and actions in the resulting tables  cacm june  1973 strunz  h  decision tables  <B>parsing</B>
36 Q0 2603 86 0.072504185 Lucene_47
 that  in fact  the first class is equivalent to the class of deterministic <B>context</B> <B>free</B> languages  deterministic <B>context</B>-<B>free</B> grammars 4.12 5.23 ca740905 jb january 17  1978 8 52 am 1215 4 2603 1542 4 2603
36 Q0 3165 87 0.071840875 Lucene_47
 class labels identify the regions bordering each segment on either side  the approximation <B>algorithm</B> presented operates on such an organization  eliminating the need for the <B>recognition</B> of region illustrated by the outline of algorithms for area computation and point inclusion  the <B>algorithm</B> is applied
36 Q0 2252 88 0.07056421 Lucene_47
 can be nested  such as algol and pl i   the method permits editing of the source <B>language</B> using of entire routines  the essential points of the method are   1  the syntax of the <B>language</B> is restricted commands has been received  and  4  the <B>parsing</B> and compilation are factored into two parts  that done december  1972 earley  j  caizergues  p  incremental compiler  interactive programming <B>language</B> 4.12 4.22
36 Q0 1131 89 0.06979823 Lucene_47
on <B>context</B> and ambiguity in <B>parsing</B>  cacm february  1964 ross  d  t  ca640212 jb march 10  1978 3 43 am 1131 5 1131 1131 5 1131 1131 5 1131 1781 5 1131 123 6 1131 196 6 1131 919 6 1131 990 6 1131 1007 6 1131 1046 6 1131 1131 6 1131 1139 6 1131 1140 6 1131 1149 6 1131 1198 6 1131 1215 6 1131 1223 6 1131 1265 6 1131 1303 6 1131 1323 6 1131 1358 6 1131 1366 6 1131 1421 6 1131 1460 6 1131 1462 6 1131
36 Q0 3172 90 0.06915256 Lucene_47
an <B>algorithm</B> for planning collision-<B>free</B> paths among polyhedral obstacles this paper describes a collision avoidance <B>algorithm</B> for planning a safe path for a polyhedral object moving among known polyhedral objects  the <B>algorithm</B> transforms the obstacles so that they represent the locus of forbidden point which avoids all forbidden regions is <B>free</B> of collisions  trajectories are found by searching
36 Q0 3135 91 0.0682704 Lucene_47
detection of three-dimensional patterns of atoms in chemical structures an <B>algorithm</B> for detecting occurrences of a three-dimensional pattern of objects within a larger structure is presented  the search technique presented uses the geometric structure of the pattern to define characteristics containing specified substructures  cacm april  1979 lesk  a  three-dimensional pattern <B>recognition</B>  chemical
36 Q0 2208 92 0.067828715 Lucene_47
 <B>algorithm</B> the utilization of storage is studied in a two-level memory hierarchy  the first storage level  which is the <B>fast</B> store  is divided into a number of storage areas  when an entry is to be filed in the hierarchy  a hashing <B>algorithm</B> will attempt to place the entry into one of these areas used  by means of examples  storage utilization is then studied as a function of the hashing <B>algorithm</B>
36 Q0 2963 93 0.067828715 Lucene_47
a <B>fast</B> <B>algorithm</B> for computing longest common subsequences previously published algorithms for finding the longest common subsequence of two sequences of length n have had a best-case running time of o n 2   an <B>algorithm</B> for this problem is presented which has a running time of o  r   n log n in the worst case the <B>algorithm</B> has a running time of o n 2 log n   however  for those applications where
36 Q0 2556 94 0.06706076 Lucene_47
adaptive correction of program statements a method of analyzing statements in a programming <B>language</B> which can tolerate a considerable inaccuracy in their specification is proposed  this method involves principles at present mainly confined to studies in the area of artificial intelligence <B>parsing</B>  approximate match  compiler  program statement analysis  syntax analysis 3.62 3.63 3.65
36 Q0 2785 95 0.06601234 Lucene_47
glypnir-a programming <B>language</B> for illiac iv glypnir is one of the earliest existing languages designed for programming the illiac iv computer  the syntax of the <B>language</B> is based on algol 60  but has been extended to allow the programmer explicitly to specify the parallelism of his <B>algorithm</B> of the <B>language</B>  and discusses some of the problems associated with parallel computer architectures  cacm march
36 Q0 185 96 0.065088995 Lucene_47
multiprogram scheduling parts 1 and 2  introduction and theory  in order to exploit fully a <B>fast</B> computer which possesses simultaneous processing abilities  it should to a large extent schedule its concurrently and which sequentially with respect to each other  a concise scheduling <B>algorithm</B> of it   subject to external constraints such as precedence  urgency  etc  the <B>algorithm</B> is applicable
36 Q0 2903 97 0.065088995 Lucene_47
 programs with a very efficient running time  in particular  it is shown how the <B>fast</B> linear pattern matching <B>algorithm</B> of knuth  morris  and pratt can be derived in a few steps from a simple nonlinear stack <B>algorithm</B>  cacm november  1977 bird  r  s  program transformation  optimization of programs
36 Q0 2925 98 0.065088995 Lucene_47
 to the problem of finding certain minimum cost cycles in a directed toroidal graph  a new <B>fast</B> <B>algorithm</B> for finding such cycles is utilized  also developed is a closed-form expression  in term the <B>algorithm</B>  an illustrated example which involves the construction of a minimum area surface describing
36 Q0 3075 99 0.065088995 Lucene_47
<B>fast</B> parallel sorting algorithms a parallel bucket-sort <B>algorithm</B> is presented that requires time o log n  and the use of n processors  the <B>algorithm</B> makes use of a technique that requires more space than the product of processors and time  a realistic model is used model is used in which no memory contention is permitted  a procedure is also presented to sort n numbers in time o k log n  using n
36 Q0 1178 100 0.06363016 Lucene_47
algol 60 reference <B>language</B> editor  <B>algorithm</B> 268  r2   cacm november  1965 mckeeman  w  m  ca651103 jb march 6  1978 5 06 pm 1178 5 1178 1178 5 1178 1178 5 1178
*************Query 37*************************

37 Q0 2265 1 0.34581497 Lucene_47
 classes of objects  <B>e</B> <B>g</B>  numbers  strings  labels and functions   for <B>correct</B> compilation and execution corresponding lambda calculus expression to one of <B>two</B> normal forms  the constant  <B>correct</B>  for a <B>type</B>-wise  and the attendant problems faced for <B>any</B> <B>notion</B> of <B>type</B> checking are discussed  cacm november  1972 ledgard  h  this paper attempts to isolate the <B>notion</B> of <B>type</B> checking and presents a partial solution to the <B>type</B>
37 Q0 2956 2 0.18304779 Lucene_47
<B>some</B> ideas on <B>data</B> <B>types</B> in high-level languages a number of issues are explored concerning the <B>notion</B> that a <B>data</B> <B>type</B> is a set of values together with a set of primitive operations on those values of the more narrow for <B>i</B>   1 to n notation   the use of the domain of an array as a <B>data</B> <B>type</B> june  1977 gries  d  gehani  n  <B>data</B> <B>types</B>  generic procedures  programming languages 4.12 4.20 4.22
37 Q0 2912 3 0.147161 Lucene_47
 have obtained an incorrect result  and <B>two</B> techniques for transmitting <B>messages</B> <B>between</B> <B>processes</B>concurrent reading and writing the problem of sharing <B>data</B> among asynchronous <B>process</B> is considered  it is assumed that only one <B>process</B> at a time can modify the <B>data</B>  but concurrent reading and writing is permitted  <B>two</B> general theorems are proved  and <B>some</B> algorithms are presented to illustrate
37 Q0 3142 4 0.14186059 Lucene_47
 with which errors may be encountered by the end targets of a computerized <B>process</B> is assessed  how many and <B>what</B> <B>type</B> of errors occur  how easily are they corrected  <B>what</B> is the reaction of consumers to errors-to a failure to <B>correct</B> them  <B>what</B> can be learned by designers of large management packages to be difficult and not always successful  there appears to be <B>some</B> conflict <B>between</B> computer-using
37 Q0 3031 5 0.13663013 Lucene_47
 of an implementation of an abstract <B>data</B> <B>type</B>  second  semi-automatic tools are described which can be used <B>both</B> implementation is accomplished  cacm december  1978 guttag  j  horowitz  <B>e</B>  musser  d  abstract <B>data</B> <B>type</B>abstract <B>data</B> <B>types</B> and software validation a <B>data</B> abstraction can be naturally specified using specification of a <B>data</B> <B>type</B>  an example is given which shows how to employ algebraic axioms
37 Q0 2850 6 0.12890907 Lucene_47
 execution of conditional branch <B>type</B> statements  a <B>particular</B> <B>system</B> called effigy which provides  instead of supplying the normal inputs to a program  <B>e</B> <B>g</B>  numbers  one supplies symbols representing manager  and a program verifier  a brief discussion of the <B>relationship</B> <B>between</B> symbolic execution programs written in a simple pl <B>i</B> style programming language  it includes many standard debugging features
37 Q0 2321 7 0.12795256 Lucene_47
 for a <B>particular</B> computer-communications <B>system</B> interface  cacm july  1972 fraser  a  <B>g</B>  communicationson the interface <B>between</B> computers and <B>data</B> communications systems future systems that combine to the communications systems will be required  <B>when</B> specifying these interfaces  consideration must be given to problems of coordination  <B>synchronization</B>  error control  signaling  <B>stream</B> multiplexing  and switch
37 Q0 2957 8 0.12681983 Lucene_47
 in conceptualizing the real world  aggregation transforms a <B>relationship</B> <B>between</B> objects into a higher-level object  a new <B>data</B> <B>type</B>  called aggregation  is developed which  under certain criteria  smith  d  c  p  <B>data</B> abstraction  relational database  <B>data</B> <B>type</B>  aggregation  database design  update operations on such databases must preserve <B>two</B> invariants  well-defined relations are distinct
37 Q0 2060 9 0.12288232 Lucene_47
 that <B>any</B> <B>process</B> which accepts <B>some</B> <B>data</B> structure will accept <B>any</B> logically equivalent structure  regardless of its internal representation  more generally  <B>any</B> <B>data</B> structure may be implicit  <B>i</B> <B>e</B> which is permitted in <B>some</B> context of the language is permissible in <B>any</B> other meaningful context in turn possess other values  the assignment operation always affects the relation <B>between</B> <B>some</B>
37 Q0 2341 10 0.121968046 Lucene_47
  nonnumerical programming  snobol4  <B>data</B> <B>types</B>  <B>two</B>-dimensional mathematics  test processingblocks-a new <B>data</B> <B>type</B> for snobol4 a new <B>data</B> <B>type</B>  called a block  has been implemented for overstriking   blocks may be printed  concatenated in <B>any</B> of three dimensions  and merged on the basis of program-defined connection points  <B>some</B> blocks adapt in size and shape to their environment  blocks
37 Q0 3105 11 0.121565185 Lucene_47
 checking similar to <B>type</B> checking  the approach can be used to extend <B>any</B> strongly-typed language  but is particularly suitable for extending languages that support the <B>notion</B> of abstract <B>data</B> <B>types</B>  cacm may  1978 jones  a  liskov b  programming languages  access control  <B>data</B> <B>types</B>  abstract <B>data</B>  the extension permits expression of access constraints on shared <B>data</B>  access constraints can apply <B>both</B>
37 Q0 2632 12 0.12041036 Lucene_47
  this philosophy is realized through the introduction of a generalized <B>notion</B> of  resource   <B>both</B> physical the creation of new <B>types</B>  specification of new operations applicable to a given <B>type</B>  sharing of the <B>system</B> in <B>two</B> directions  the introduction of new facilities  and the creation of highly securehydra  the kernel of a multiprocessor operating <B>system</B> this paper describes the design philosophy
37 Q0 2342 13 0.10980297 Lucene_47
 of parallel <B>processes</B> is regarded as a machine which proceeds from one state s  <B>i</B> <B>e</B>  a collection of pertinent <B>data</B> values and <B>process</B> configurations  to a next state s  in accordance with a transition ruleinterference <B>between</B> communicating parallel <B>processes</B> various kinds of interference <B>between</B>  the formation of partial rules and the calculation of transition rules are <B>both</B> applicable to hardware <B>processes</B>
37 Q0 3103 14 0.10909855 Lucene_47
 with abstract <B>data</B> <B>types</B> such as sets and lists  programmer time can be saved by automating abstract <B>types</B> were then inefficient in space or time  in this paper a <B>system</B> for automatically  this <B>process</B> is discussed in detail for an example program  general issues in <B>data</B> structure selection are also reviewed  cacm may  1978 low  j  abstract <B>data</B> <B>types</B>  automatic programming  <B>data</B>
37 Q0 2560 15 0.10909831 Lucene_47
 by multiprogramming in the presence of this <B>type</B> of storage <B>system</B>  cacm january  1973 shedler  <B>g</B>  sa queuing model of a multiprogrammed computer with a <B>two</B>-level storage <B>system</B> the results are presented of an analysis of a probabilistic model of a multiprogrammed computer <B>system</B> with a <B>two</B>-level storage <B>system</B> in which there is sequential dependency of accesses <B>between</B> the devices  expressions
37 Q0 2233 16 0.10840446 Lucene_47
  these simulations provide convincing evidence that the signatures are <B>both</B> <B>process</B> and <B>data</B> dependent the cyphers  authenticity  it has been alleged that the  known solution  to cypher number <B>two</B>  115  73  24  818  37  52  49      <B>i</B> have deposited in the county of bedford about four miles from buford s computer technology could obviously perform signature analyses the <B>process</B> of encoding itself so
37 Q0 2794 17 0.106770046 Lucene_47
state-space  problem-reduction  and theorem proving-<B>some</B> relationships this paper suggests a bidirectional <B>relationship</B> <B>between</B> state-space and problem-reduction representations  it presents problems in first-order logic in such a <B>way</B> that the inference <B>system</B> employed by a resolution-based  and the terminology used to refer to them  are noted  the <B>relationship</B> <B>between</B> problem-reduction
37 Q0 695 18 0.10254372 Lucene_47
  physical characteristics of the <B>two</B>-disk <B>system</B>  4,194,304 72-<B>bit</B> words  8 usec-per-word transmission appear to have disk connotations  cacm october  1963 carlson  b  <B>g</B>  voorhes  <B>e</B>  a  ca631030 jb marchuse of the disk file on stretch the paper begins by briefly <B>describing</B> the stretch  ibm 7030  are not currently filed on the disk  certain programming techniques are discussed for transmitting words <B>between</B>
37 Q0 2184 19 0.09175408 Lucene_47
 <B>between</B> the <B>data</B> names of a programming language and the file names of an operating <B>system</B>  the <B>two</B> to which they overlap  it is suggested that there is <B>some</B> similarity <B>between</B> the idea of a file directory and a storable object of <B>type</B> context  manipulations with contexts are then discussed at length name list  value list  expression   cacm july  1971 fraser  a  <B>g</B>  file  operating <B>system</B>  programming
37 Q0 2941 20 0.090113685 Lucene_47
-are discussed  and <B>some</B> implications for mesa and similar programming languages are suggested  the specific topics addressed are  module structure and its use in defining abstractions  <B>data</B>-structuring facilities in mesa  an equivalence algorithm for <B>types</B> and <B>type</B> coercions  the benefits of the <B>type</B>  <B>types</B>  modules  <B>data</B> structures  systems programming 4.22 ca770802 jb december 28  1977 8 07 am
37 Q0 2003 21 0.09001808 Lucene_47
an interactive software <B>system</B> for computers-aided design  an application to circuit project the characteristics of an interactive software <B>system</B>  intended to constitute an interface <B>between</B> designer and computer during various steps of the design <B>process</B>  are presented  the main emphasis is given to the description of the features of the <B>two</B> high level user oriented languages  operating
37 Q0 2651 22 0.08829321 Lucene_47
 <B>types</B>  modes  mode unions  <B>type</B> conversion  coercion  generic functions  extensible languages  <B>data</B>the treatment of <B>data</B> <B>types</B> in el1 in constructing a general purpose programming language  a key issue is providing a sufficient set of <B>data</B> <B>types</B> and associated operations in a manner that permits treatment of <B>data</B> <B>types</B> includes provision for programmer-defined <B>data</B> <B>types</B> <B>data</B> <B>types</B> and generic
37 Q0 3021 23 0.08697895 Lucene_47
 <B>when</B> the result is divided by the publicly specified product  n  of <B>two</B> large secret prime numbers p the corresponding decryption key  this has <B>two</B> important consequences   1  couriers or other secure means are not needed to transmit keys  since a <B>message</B> can be enciphered using an encryption key publicly revealed by the intended recipient  only he can decipher the <B>message</B>  since only he knows
37 Q0 1135 24 0.0789262 Lucene_47
 characteristic of the <B>particular</B> application  furthermore local changes of a <B>process</B>  <B>e</B> <B>g</B>  changes to emphasizing formal  <B>i</B> <B>e</B>   contents-independent  syntactical definitions  it relies exclusively on nonprocedural representation of <B>process</B> as sets  tables  of relations <B>between</B> <B>data</B> and results common to all <B>processes</B> of such class  permits writing extremely compact programs  even for comparatively
37 Q0 1181 25 0.078924455 Lucene_47
a simple <B>data</B> transmission <B>system</B> using the office telephone a method has evolved for transmitting <B>data</B> of a <B>type</B> originating in many laboratory situation direct to a central computer  the method requires almost no specialized equipment and uses <B>any</B> ordinary telephone on a  callup  basis  present time-sequence studies of nerve impulses  cacm october  1965 neilsen  <B>i</B>  r  ca651014 jb march 6  1978
37 Q0 2376 26 0.078806795 Lucene_47
<B>synchronization</B> of communicating <B>processes</B> formalization of a well-defined <B>synchronization</B> mechanism can be used to prove that concurrently running <B>processes</B> of a <B>system</B> communicate correctly  this is demonstrated for a <B>system</B> consisting of many sending <B>processes</B> which deposit <B>messages</B> in a buffer and many receiving <B>processes</B> which remove <B>messages</B> from that buffer  the formal description
37 Q0 2229 27 0.07796203 Lucene_47
  there are basically <B>two</B> approaches  the binomial theorem and the iteration methods  <B>both</B> methods are described here  and the <B>relationship</B> <B>between</B> them is pointed out  <B>some</B> well-known classical formulasconstruction of rational and negative powers of a formal series <B>some</B> methods are described for the generation of fractional and negative powers of <B>any</B> formal series  such as poisson series
37 Q0 2815 28 0.07493278 Lucene_47
high-level binding with low-level linkers an easy to implement scheme is described by which a compiler can enforce agreement <B>between</B> complex <B>data</B> <B>types</B> in separately compiled modules  the scheme is designed to work with <B>any</B> existing link editor or linking loader  no matter how deficient  obscure time  cacm november  1976 hamlet  r  <B>g</B>  separate compilation  binding  linking  strong typing 4.10 4.22
37 Q0 409 29 0.074141696 Lucene_47
 and instances of large and complex <B>data</B> sets  as well as algorithms defined on these <B>data</B> sets  <B>both</B> <B>data</B> of distinct <B>data</B> descriptions and the content and use of such descriptions are discussed in <B>some</B> detail  cacm january  1961 cheatham jr   t  <B>e</B>  collins jr   <B>g</B>  o  leonard  <B>g</B>  f  ca610105 jb march 17  1978cl-1  an environment for a compiler a flexible  large-scale programming <B>system</B> to facilitate
37 Q0 2369 30 0.0740623 Lucene_47
 the visible and hidden line <B>relationship</B> <B>between</B> <B>two</B> polygons  additional work must be done of three-dimensional objects are visible and which are invisible <B>when</B> the objects are rotated about <B>some</B> axis  this paper describes a polygon comparison scheme in which the relationships of <B>two</B> polygons can be classified into tree <B>types</B>  and also discusses how the <B>relationship</B> is changed for each pair
37 Q0 3153 31 0.07358178 Lucene_47
 is examined in the context of a paged computer <B>system</B>  <B>two</B> parameterized algorithms which partition the main memory <B>between</B> <B>two</B> classes of jobs are considered  initially  a closed <B>system</B> consisting a decomposition approach and <B>treating</B> the closed <B>system</B> as a single server  the response times are obtained  a <B>way</B> of applying the results to systems with more than <B>two</B> job classes is indicated
37 Q0 1844 32 0.07250305 Lucene_47
 <B>system</B> if compatible computers are used  cacm october  1969 baskin  h  b  horowitz  <B>e</B>  b  tennison  r  da modular computer sharing <B>system</B> an alternative approach to the design and organization of a general purpose interactive multiterminal computing <B>system</B> is presented  the <B>system</B> organization is a memory processor pair  that are assigned to <B>process</B> terminal jobs as they arrive  one of the computers
37 Q0 243 33 0.068636 Lucene_47
  effectiveness of the codes is increased by introducing a  <B>system</B> <B>check</B> <B>bit</B>   which is essentially a parity <B>check</B> on the other parity bits  only three-dimensional codes are discussed in this paper with parity of codes for detecting and correcting multiple errors in a binary-coded <B>message</B>  the <B>message</B> itself is arranged  conceptually  into a multidimensional rectangular array  the <B>processes</B> of encoding
37 Q0 618 34 0.06845147 Lucene_47
computers- the key to total systems control  an industrial viewpoint man-man-machine <B>processes</B> are characterized in five main <B>types</B>  and the markets for each <B>type</B> are shown for 1950 and 1960 and estimated for 1970  cacm march  1962 carlson  w  m  ca620314 jb march 20  1978 2 53 pm 618 5 618 618 5 618 618 5 618
37 Q0 2051 35 0.06723237 Lucene_47
 correspondence <B>types</B> with their frequency of occurrence in the <B>data</B>  and a separate listing of eacha pl <B>i</B> program to assist the comparative linguist a practical pl <B>i</B> program is described which can assist comparative linguists to determine the regular sound correspondences <B>between</B> genetically related languages  the investigator must arrange <B>data</B> for input by aligning pairs of suspected cognates
37 Q0 867 36 0.06499281 Lucene_47
 to surfaces z <B>g</B> x y  defined over certain <B>types</B> of subareas of the  x y -space  the first model successive approximations to optimal fits for <B>any</B> <B>type</B> of closed area  finally  applications
37 Q0 2958 37 0.06357809 Lucene_47
abstract <B>data</B> <B>types</B> and the development of <B>data</B> structures abstract <B>data</B> <B>types</B> can play and complete  cacm june  1977 guttag  j  abstract <B>data</B> <B>type</B>  correctness proof  <B>data</B> <B>type</B>  <B>data</B> presents and discusses the application of an algebraic technique for the specification of abstract <B>data</B> <B>types</B>  among the examples presented is a top-down development of a symbol table for a block structured
37 Q0 1474 38 0.0635558 Lucene_47
tests of probabilistic models for propagation of roundoff errors in <B>any</B> prolonged computation it is generally assumed that the accumulated effect of roundoff errors is in <B>some</B> sense statistical  it is concluded that the models are in general very good  discrepancies are <B>both</B> rare and mild  the test techniques can also be used to experiment with various <B>types</B> of special arithmetic  cacm february
37 Q0 1426 39 0.061979067 Lucene_47
 for stabilization of admission and census rates while maintaining a reasonably full hospital  there <B>types</B> or minus a constant  and fixed authorizations independent of discharge rates  the last <B>type</B> policy produced more stable simulated results  and <B>when</B> put into practice  improvements were realized  cacm may  1966 smith  w  <B>g</B>  solomon jr   m  b  ca660511 jb march 3  1978 9 42 am 1426 5 1426 1426 5 1426 1426 5
37 Q0 1143 40 0.061542425 Lucene_47
analysis of decay-<B>type</B> <B>data</B>  a comparative study has been made of a variety of numerical techniques for fitting experimental <B>data</B> of the decay <B>type</B> by forms involving the sums of exponentials and for analyzing the <B>data</B>  and then to consider as significant only relative results <B>between</B> one subject to artificially-generated sets of <B>data</B> as well as to the results of experiments with radioactive tracers
37 Q0 2033 41 0.060051795 Lucene_47
 computational factors a given set of <B>messages</B>  <B>two</B> new hash-coding methods are examined and compared with a <B>particular</B> conventional hash-coding method  the computational factors considered are the size of the hash area  space   the time required to identify a <B>message</B> as a nonmember of the given set of errors of commission may be tolerable in <B>some</B> applications  in <B>particular</B>  applications in which a large
37 Q0 2558 42 0.059535768 Lucene_47
protection in programming languages linguistic mechanisms which can be used to protect one subprogram from another s malfunctioning are described  function-producing functions and various <B>type</B>-tagging schemes are considered  an <B>attempt</B> is made to distinguish <B>between</B> access limitation and authentication  cacm january  1973 morris  j  h  jr  protection  <B>types</B>  environments trademarks  seals  access
37 Q0 1847 43 0.059094958 Lucene_47
  one stage in the <B>process</B> is to take the top element v of the pushdown list and examine it  <B>i</B> <B>e</B> as n 2 and the time as n <B>g</B> where <B>g</B> depends on the <B>type</B> of graph involved  <B>g</B> is bounded below by 2 and above by 3  and it is shown that <B>both</B> bounds are attained  in terms of storage our algorithm efficient  <B>g</B> 2  on random graphs  cacm september  1969 paton  k  fundamental cycle set  graph
37 Q0 2527 44 0.059041325 Lucene_47
 from one <B>type</B> to another  checks subscripts  and automatically detects many <B>types</B> of programmer errors  cacm april  1973 hassitt  a  lageschulte  j  w  lyon  l  <B>e</B>  computer architecture  high level
37 Q0 3048 45 0.05897753 Lucene_47
 model of a <B>system</B>  in the model a control <B>stream</B> replaces the instruction and <B>data</B> streams of the real <B>system</B>  simulation of the <B>system</B> model yields the timing and resource usage statistics needed for performance evaluation  without the necessity of emulating the <B>system</B>  as a case study  the results of evaluating <B>some</B> alternative <B>system</B> designs are discussed  the experiments reveal
37 Q0 1625 46 0.058929894 Lucene_47
  the simplifications are based on the form of the program and the knowledge obtained by a processor  without <B>any</B> understanding of <B>what</B> the program is supposed to do  these methods have been implemented in a processor be shorter and may be executed faster than the original  sure is described  <B>some</B> of the problems encountered in automatic improvement at the source-language level are discussed  and further <B>types</B>
37 Q0 2513 47 0.058256816 Lucene_47
a nonrecursive list moving algorithm an efficient  nonrecursive algorithm is given for moving <B>any</B> lisp-<B>type</B> list  in <B>particular</B>  the algorithm requires no storage other than the new nodes into which the list is to be moved  and no additional bits per node for marking  the algorithm runs in time as it is moved  cacm may  1973 reingold  <B>e</B>  m  list moving  list copying  list traversal  garbage collection lisp
37 Q0 1646 48 0.058136016 Lucene_47
 and the <B>particular</B> techniques employed to provide the diagnostic features  the handling of error <B>messages</B> by instructors are noted  cacm january  1967 moulton  p  <B>g</B>  muller  m  <B>e</B>  ca670109 jb february 28  1978 4 basic fortran with rather extensive error checking capabilities <B>both</B> at compilation time and during execution of a program  the need for improved diagnostic capabilities and <B>some</B> objectives to be met
37 Q0 2194 49 0.057095643 Lucene_47
  <B>some</B> computers permit either 8-<B>bit</B> addressing  interpreted relative to the location counter  or full 16-<B>bit</B> addressing of all of memory  <B>when</B> assembling or compiling <B>two</B> or more blocks of instructions of the blocks of coding produced by an assembler or compiler <B>when</B>  1  the length of each computer of this <B>type</B> can be formulated as covering problems solvable by means of elementary arithmetic
37 Q0 1415 50 0.056562316 Lucene_47
 conducting automatic retrieval of natural language <B>messages</B>  to explore the prospects of such a step idea was to extract the subject  verb and object  if <B>any</B>  of each clause and to reassemble immediate prospects for improving the performance of automatic <B>message</B> retrieval systems  they may interpretation of a sentence  cacm june  1966 carmody  b  t jones jr   p  <B>e</B>  ca660606 jb march 3  1978
37 Q0 2002 51 0.056249443 Lucene_47
amesplot-a higher level <B>data</B> plotting software <B>system</B> amesplot is an extensible software <B>system</B> designed to make the display of <B>data</B> as simple  painless  and neat as possible  the <B>system</B> described manufacturers  having diverse configurations  the elements common to all <B>types</B> of <B>data</B> plots are outlined and the <B>way</B> in which these elements may be combined into a <B>system</B> based on simple modules
37 Q0 3039 52 0.055712778 Lucene_47
-grained interleaving  cooperation <B>between</B> sequential <B>processes</B> with minimized mutual exclusionon-the-fly garbage collection  an exercise in cooperation as an example of cooperation <B>between</B> sequential <B>processes</B> with very little mutual interference despite frequent manipulations of a large shared <B>data</B> space  a technique is developed which allows nearly all of the activity needed for garbage
37 Q0 1591 53 0.052672286 Lucene_47
  the advantages of this <B>type</B> of <B>system</B> for computer programming and operation are also considered  cacm junea model for a multifunctional teaching <B>system</B> a teaching <B>system</B> model that was incorporated into an operating <B>system</B> of a large computer is described  the model transferred control to the operating <B>system</B> to execute functions other than teaching  and then recovered control in order to resume
37 Q0 1768 54 0.052663177 Lucene_47
a global parser for context-free phrase structure grammars an algorithm for analyzing <B>any</B> context-free phrase structure grammar and for generating a program which can then parse <B>any</B> sentence-to-bottom  <B>type</B> and is recursive   a number of heuristic procedures whose purpose is to shorten to the target nonterminal symbols are included  <B>both</B> the generating algorithm and the parser have
37 Q0 2631 55 0.052254926 Lucene_47
 june  1974 barton  <B>i</B>  j  creasey  s  <B>e</B>  lynch  m  f  snell  m  j  text searching  information theory  file organization  direct access  information retrieval  character string  <B>bit</B> vector 3.42 3.70 3.73 computer files of bibliographic information  an <B>attempt</B> is made to overcome one of the problems often of strings such that their frequencies of occurrence are more even than those of word <B>types</B>  the members
37 Q0 2705 56 0.05190057 Lucene_47
 literature  <B>i</B> <B>e</B>  programs  of general utility and studies of questions related to program style  cacmprogramming languages  natural languages  and mathematics <B>some</B> social aspects of programming <B>between</B> pure and applied mathematics is found similarly in programming  the development of natural languages toward flexion less  word-order based language <B>types</B> speaks for programming language design
37 Q0 1398 57 0.05093004 Lucene_47
robot <B>data</B> screening  a solution to multivariate <B>type</B> problems in the biological and social sciences a new approach is outlined toward the solution of the <B>type</B> of multivariate problem that is found  algorithm are developed by which <B>some</B> variables are kept on for further analysis while others are eliminated  criteria for the acceptance of a variable as well as the termination of the searching <B>process</B>
37 Q0 3128 58 0.04998944 Lucene_47
<B>synchronization</B> with eventcounts and sequencers <B>synchronization</B> of concurrent <B>processes</B> requires controlling the relative ordering of events in the <B>processes</B>  a new <B>synchronization</B> mechanism mechanisms in the <B>system</B> is explained  in <B>particular</B>  eventcounts are shown to be applicable in a <B>system</B> with shared memory is described  cacm february  1979 reed  d  kanodia  r  <B>process</B>
37 Q0 2402 59 0.0499524 Lucene_47
 building  <B>i</B> <B>e</B>  the use of chemical information to frame  structural hypotheses  which can computationally be tested and refined by reference to the experimental <B>data</B>  application of standard pattern recognition algorithms is hindered by the fact that the cross-correlation <B>between</B> a model and the <B>correct</B> structure cannot be computed because of a fundamental incompleteness in the measured <B>data</B>
37 Q0 1309 60 0.049794488 Lucene_47
  the <B>system</B> requires initial preparation of large <B>data</B> banks containing <B>data</B> in elementary form  use of <B>two</B> special languages  extract and matran  permits selective extraction of <B>any</B> <B>data</B> subset  efficient processing through <B>any</B> computational sequence  and flexible presentation of results in eithera computer user-oriented <B>system</B> a computer language <B>system</B> has been developed which makes possible
37 Q0 2113 61 0.04878886 Lucene_47
  <B>particular</B> emphasis is given to the <B>system</B> of  significant addresses  by means of which processing english sentence analyzer  by structuring an area of the computer s central core storage in such a <B>way</B> that the individual locations of bytes and bits come to represent the <B>data</B> involved in the matching determines the operational flow of the procedure  the method could be implemented with <B>any</B> interpretive
37 Q0 242 62 0.048295576 Lucene_47
notes on geometric weighted <B>check</B> digit verification this note describes a method for utilizing geometric weight modulus 11 checking digits on a computer which does not have either multiplication or division  in addition <B>some</B> <B>attempt</B> has been made to show <B>some</B> limitations of this <B>system</B>  cacm december  1961 wilson  j  <B>g</B>  ca611208 jb march 15  1978 10 17 pm 242 5 242 242 5 242 242 5 242
37 Q0 1543 63 0.046896 Lucene_47
 the numerical <B>data</B> processing stage  moreover  this <B>particular</B> problem serves to illustrate the advantages will derive the equations of motion in <B>any</B> coordinate <B>system</B> requested by the user  results for extending the area of application of digital computers beyond the numerical <B>data</B> processing stage and reducing the need for human participation in the formulation of certain <B>types</B> of computer problems
37 Q0 2931 64 0.04604351 Lucene_47
  <B>what</B> is a machine  <B>what</B> is a computable <B>process</B>  how  or how well  does a machine simulate a <B>process</B>  programs naturally enter in giving descriptions of <B>processes</B>  the definition of the precise meaning of a program then requires us to explain <B>what</B> are the objects of computation  in a <B>way</B> with the method of <B>data</B> <B>types</B> as lattices  or partial orderings  under an information content ordering
37 Q0 2920 65 0.04604081 Lucene_47
 informally as the determination  from <B>some</B> a priori information about the <B>processes</B>  resources  operating <B>system</B>  etc   of the  safe situations  which may be realized without endangering the smooth running of the <B>system</B>  <B>when</B> each <B>process</B> specifies its future needs by a flowchart of need-defined <B>system</B> and the <B>processes</B> allows formalization of risk and safety concepts  the bipartite graph
37 Q0 1637 66 0.04561566 Lucene_47
 to use certain large sample results in measuring stability  analogies <B>between</B> autocorrelated <B>data</B> and independent observations are described  a <B>way</B> to test the difference of the mean of <B>two</B> of the generating <B>process</B>  and estimation of the quantities of interest is described  the results expand  1967 fishman  <B>g</B>  s  ca670205 jb february 28  1978 3 34 pm 1637 5 1637 1637 5 1637 1637 5 1637
37 Q0 2083 67 0.045364514 Lucene_47
 communications of <B>data</B> <B>between</B> routines  the described <B>system</B> has been implemented on the ibm 7094  cdc of common in many large-scale programs  cacm april  1970 desalvio  a  j  purdy  j  <B>g</B>  rau  j  <B>data</B>creation and control of internal <B>data</B> bases under a fortran programming environment a method common  dimension  equivalence  and <B>type</B> declarations for each of the user s routines
37 Q0 1719 68 0.045231387 Lucene_47
a methodology for calculating and optimizing real-time <B>system</B> performance the continually increasing size  complexity  number of <B>types</B>  and cost of <B>data</B> processing systems are causing serious re <B>data</B> processing <B>system</B> cost and performance  real-time <B>data</B> processing systems as typified <B>message</B> switching <B>system</B>  cacm july  1968 stimler  s  brons  k  a  real-time <B>system</B> analysis  real
37 Q0 3141 69 0.044694275 Lucene_47
an improved algorithm for decentralized extrema-finding in circular configurations of <B>processes</B> of uniquely numbered <B>processes</B> arranged in a circle  in which no central controller exists and the number of <B>processes</B> is not known a priori  this decentralized algorithm uses a technique of selective <B>message</B> extinction in order to achieve an average number of <B>message</B> passes of order  n log n
37 Q0 1062 70 0.044572227 Lucene_47
 formed in <B>any</B> <B>way</B>  function-<B>type</B> subroutines are included for intermediate manipulations  whichsymbol manipulation in fortran-sasp <B>i</B> subroutines a set of subroutines for use in fortran are described whose purpose is to synthesize output strings from  <B>i</B>  input strings which have been analyzed <B>way</B> in which an internal representation for each newly created substring is stored sequentially
37 Q0 1828 71 0.04443795 Lucene_47
 for an on-line file <B>system</B>  methods for <B>synchronization</B> of <B>processes</B> are examined  their validity<B>synchronization</B> in a parallel-accessed <B>data</B> base the following problem is considered  given a <B>data</B> base which can be manipulated simultaneously by more than one <B>process</B>  <B>what</B> are the rules for <B>synchronization</B> which will maximize the amount of parallel activity allowed  it is assumed that the <B>data</B>
37 Q0 2939 72 0.044158943 Lucene_47
 liskov  b  snyder  a  atkinson  r  schaffert  c  programming languages  <B>data</B> <B>types</B>  <B>data</B> that three kinds of abstractions-procedural  control  and especially <B>data</B> abstractions-are useful in the programming <B>process</B>  of these  only the procedural abstraction is supported well by conventional mechanisms that support the use of <B>data</B> and control abstractions  this paper provides
37 Q0 2911 73 0.04399471 Lucene_47
 simulation <B>data</B> showing that  in dynamic memory allocation  the average free-to-allocated-block ratio can differ considerably and in <B>both</B> directions from the predictions of the 50 percent rule  a new frequently  on the basis of the simulation <B>data</B> and the derivation  it is hypothesized of the release <B>process</B>  additional simulations support this hypothesis  systematic placement  which refers
37 Q0 1698 74 0.043481056 Lucene_47
 the model we answer questions like  how many <B>processes</B> are suspended waiting for console input  <B>what</B> is the maximum rate at which a <B>process</B> can execute  <B>what</B> bounds can be set on overall buffer requirementsa statistical model for console behavior in multiuser computers the ability of a computer <B>system</B> computations efficiently  it is quite difficult to characterize a <B>particular</B> user  but rather easy
37 Q0 2289 75 0.042708557 Lucene_47
cellular arrays for the solution of graph problems a cellular array is a <B>two</B>-dimensional  checkerboard <B>type</B> interconnection of identical modules  or cells   where each cell contains a few bits whose solutions appear to be inherently serial  in <B>particular</B>  several parallelized algorithms applications to wire routing  pert chart analysis  and the analysis of many <B>types</B> of networks
37 Q0 2177 76 0.042684536 Lucene_47
  for <B>both</B> representations the time required to analyze a graph on n nodes increases as n <B>g</B> where <B>g</B> depends on the <B>type</B> of graph  1  lt   <B>g</B>  lt   2  and <B>both</B> bounds are attained  values of <B>g</B> are derived blocks and cutnodes of an arbitrary undirected graph  the graph may be represented either  <B>i</B> essentially as 2 m n  in case  <B>i</B>   or  n 2  win case  ii   a spanning tree with labeled edges
37 Q0 1432 77 0.04225915 Lucene_47
incorporation of nonstandard input output devices into fortran systems a fortran <B>system</B> may readily be modified to handle input output with nonstandard media on the same basis on which it handles medium and arranged to be called by an otherwise unused output statement <B>type</B> or unit number  1966 cohn  c  <B>e</B>  ca660505 jb march 3  1978 10 01 am 1432 5 1432 1432 5 1432 1432 5 1432
37 Q0 2406 78 0.041193563 Lucene_47
 on a computer <B>system</B>  however  the need for <B>data</B> definition languages which describe <B>both</B> the logical in the <B>data</B> definition language for <B>describing</B> <B>both</B> logical and physical aspects of <B>data</B>  applications of these  generalized  <B>data</B> definition languages are also discussed  cacm december  1973 sibley  <B>e</B>  ha <B>data</B> definition and mapping language a <B>data</B> definition language <B>i</B> sa declarative computer
37 Q0 676 79 0.041112646 Lucene_47
on the computation of a certain <B>type</B> of incompletebeta functions cacm november  1963 tang  <B>i</B>  c  ca631116 jb march 13  1978 3 27 pm 676 5 676 676 5 676 676 5 676
37 Q0 2937 80 0.04090339 Lucene_47
an experimental evaluation of <B>data</B> <B>type</B> conventions the language in which programs are written can have a substantial effect on the reliability of the resulting programs  this paper discusses to reasonably small problems shows that the subjects had difficulty manipulating the representation of <B>data</B>  cacm august  1977 gannon  j  d  <B>data</B> <B>types</B>  experimentation  language design  redundancy  reliable
37 Q0 2948 81 0.040811636 Lucene_47
a terminal-oriented communication <B>system</B> this paper describes a <B>system</B> for full-duplex communication <B>between</B> a time-shared computer and its terminals  the <B>system</B> consists of a communications computer of terminals of various <B>types</B>  the overall <B>system</B> design is presented along with the algorithms used  and multiplexing of character output  cacm july  1977 heckel  p  <B>g</B>  lampson  b  w  terminal <B>system</B>
37 Q0 251 82 0.040544283 Lucene_47
ballistic cam design this paper presents a digital computer program for the rapid calculation of manufacturing <B>data</B> essential to the design of preproduction cams which are utilized in ballistic computers of tank fire control systems  the cam profile generated introduces the superelevation angle required by tank main armament for a <B>particular</B> <B>type</B> ammunition  cacm november  1961 archambault  m
37 Q0 40 83 0.04049429 Lucene_47
  a careful review of the significance of decimal and binary addressing and <B>both</B> binary and decimal <B>data</B>fingers or fists   the choice of decimal or binary representation  the binary number <B>system</B> offers  the greater simplicity of a binary arithmetic unit and the greater compactness of binary numbers <B>both</B> contribute directly to arithmetic speed  less obvious and perhaps more important is the <B>way</B> binary
37 Q0 2167 84 0.040268436 Lucene_47
 of automatic simplification capabilities in an algebraic manipulation <B>system</B>  systems are divided into five <B>types</B>  each <B>type</B> provides different facilities for the manipulation and simplification of expressions  finally we discuss <B>some</B> of the theoretical results related to algebraic simplification of view of a designer who wants to construct a useful and efficient <B>system</B>  first we describe various
37 Q0 2749 85 0.03988236 Lucene_47
 aids in choosing <B>between</B> the <B>two</B> simulation methods for a <B>particular</B> experiment  it is concluded that the significant event method can be of value in the simulation of <B>some</B> systems <B>when</B> computational the significant event method  with an old one  called the clock pulse method  using as examples <B>two</B> pulse method at low levels of <B>system</B> interaction and less efficient at high levels  a simple
37 Q0 2353 86 0.03980083 Lucene_47
fast finite-difference solution of biharmonic problems setting the reynolds number equal to zero  in a method for solving the navier-strokes equations numerically  results in a fast numerical method for biharmonic problems  the equation is treated as a <B>system</B> of <B>two</B> second order equations and a simple smoothing <B>process</B> is essential for convergence  an application is made to a crack-<B>type</B> problem
37 Q0 1412 87 0.039672937 Lucene_47
 to real-time  direct access processing has led to development within <B>some</B> banks of the central file of <B>data</B> base approach toward a banking information <B>system</B>  the banking information <B>system</B> now servesthe banking information <B>system</B> concept most large commercial banks have progressed to the point where their major accounting applications have been automated and more sophisticated usage of <B>data</B>
37 Q0 1827 88 0.039633647 Lucene_47
 are further identified by job and <B>type</B>  the overhead associated with <B>data</B> collection and its interferenceperformance monitoring in a time-sharing <B>system</B> a software measurement facility which is part of a general purpose time-sharing <B>system</B> is described  the date collection facility  dcf  has been implemented in the michigan terminal <B>system</B>  mts  for the <B>system</B> 360 model 67  it exists for the purpose
37 Q0 1747 89 0.039596383 Lucene_47
 clock  the <B>synchronization</B> of parallel <B>processes</B>  protection in multiprogrammed systems  and the assignment of capability indexes  cacm may  1968 van horn  <B>e</B>  c  computer design  computer design <B>system</B> should adopt explicit criteria for accepting or rejecting proposed <B>system</B> features  three of the criteria  the <B>notion</B> of an abstract machine of a programming language and the <B>notion</B> of a virtual
37 Q0 1410 90 0.038992878 Lucene_47
 general-purpose time-sharing <B>system</B>  tss   the input <B>process</B> is assumed to be stationary or triphase hyperexponential distribution  cacm july  1966 coffman  <B>e</B>  <B>g</B>  wood  r  c  ca660704 jbinterarrival statistics for time sharing systems the optimization of time-shared <B>system</B> performance requires the description of the stochastic <B>processes</B> governing the user inputs and the program
37 Q0 2470 91 0.03892446 Lucene_47
 how the <B>system</B> can be used to build composite <B>data</B> <B>types</B> out of simper ones with the operations be introduced into languages through the mechanism of singleton <B>data</B> <B>types</B>  <B>both</B> deterministic the notions of <B>data</B> item  function  and relation  it is argued that the <B>system</B> is more suitable than set  formal systems  lambda-calculus  extensible languages  <B>data</B> <B>types</B>  modes  axioms  correctness  formal
37 Q0 1003 92 0.038909893 Lucene_47
 of rapid biochemical reactions it is necessary to <B>correct</B> the temperature <B>data</B> for transient heat of a <B>process</B> are used explicitly in the program  usually this results in by <B>passing</B> much the temperature distribution of the <B>system</B> as a function of radius and time  this distribution the reactants and the flow of heat packets  in such a <B>way</B> that the computer continually stores the heat
37 Q0 1455 93 0.038884014 Lucene_47
 procedures for accepting  naming and storing <B>any</B> character string from the typewriter  for modifying <B>any</B> string in <B>any</B> <B>way</B>  for <B>treating</B> <B>any</B> string at <B>any</B> time as an executable procedure  or as a name  or as text  and for printing out <B>any</B> string  the trac language is based upon an extensiontrac  a procedure-<B>describing</B> language for the reactive typewriter a description of the trac  text
37 Q0 3164 94 0.038124982 Lucene_47
  algorithm accepts are requests and maintains a graph in an acyclic state  <B>when</B> a request creates a cycle  nodes are   detached  until the new are can be entered acyclically this <B>process</B> is important of actions  <B>two</B> pad algorithms are presented  one uses a simple path matrix representation is considerably faster  though <B>both</B> are asymptotically o nr   where n is the number of nodes and r
37 Q0 1441 95 0.037662704 Lucene_47
 for a given amount of truncation error <B>when</B> applied to a <B>particular</B> <B>system</B> of ordinary differentialmethods of numerical integration applied to a <B>system</B> having trivial function evaluations a study are compared with classic runge-kutta  kutta-nystrom and adams methods  <B>some</B> of the newer one-step methods due to butcher are found to be slightly superior  but no one method is found to have <B>any</B> great
37 Q0 1748 96 0.036784224 Lucene_47
 for the design and analysis of multiprocessing systems  the notions of <B>process</B> and state vector are discussed  and the nature of basic operations on <B>processes</B> is considered  <B>some</B> of the connections <B>between</B> <B>processes</B> and protection are analyzed  a very general approach to priority-oriented scheduling is described  and its <B>relationship</B> to conventional interrupt systems is explained  <B>some</B> aspects of time
37 Q0 3125 97 0.036769286 Lucene_47
 problem  <B>i</B> <B>e</B>  the elimination of computations performed twice on a given execution path  such computations are termed partially redundant  moreover  the algorithm does not require <B>any</B> graphical moved outward loop by loop  we propose to do <B>both</B> at once and to move each expression directly that requires less execution time  cacm february  1979 morel  <B>e</B>  renvoise  c  optimizer  optimization
37 Q0 1098 98 0.036636963 Lucene_47
 are reviewed  forms of <B>data</B> structures which are manipulated  necessity for dynamic allocation of storage  use of pushdown stores  and use of recursive operations  principal differences <B>between</B> the four languages under consideration are detailed  representations of <B>data</B>  <B>both</B> by the programmer and within the machine  methods for storage allocation  programming formalisms and special <B>processes</B>
37 Q0 2999 99 0.036310546 Lucene_47
an approach to multidimensional <B>data</B> array processing by computer <B>some</B> recent work multidimensional arrays of <B>data</B> is presented  attention is first given to <B>some</B> of the general problems developments in array processing capabilities at the world bank  in <B>particular</B>  the <B>system</B> identified as wraps world bank retrieval and array processing <B>system</B>   cacm february  1977 muller  m  <B>e</B>  array
37 Q0 3006 100 0.036212463 Lucene_47
anomalies with variable partition paging algorithms five <B>types</B> of anomalous behavior which may occur in paged virtual memory operating systems a redefined  one <B>type</B> of anomaly  for example  concerns allocation may result in an increase in fault rate  <B>two</B> paging algorithms  are examined in terms of their anomaly potential  and reference string examples of various anomalies are presented  <B>two</B> paging
*************Query 38*************************

38 Q0 3031 1 0.16498436 Lucene_47
 of an implementation of an <B>abstract</B> <B>data</B> <B>type</B>  second  semi-automatic tools are described <B>which</B> <B>can</B> be <B>used</B> both<B>abstract</B> <B>data</B> <B>types</B> and software validation a <B>data</B> abstraction <B>can</B> be naturally specified using specification of a <B>data</B> <B>type</B>  an example is given <B>which</B> shows <B>how</B> to employ algebraic axioms implementation is accomplished  cacm december  1978 guttag  j  horowitz  e  musser  d  <B>abstract</B> <B>data</B> <B>type</B>
38 Q0 3142 2 0.14942047 Lucene_47
 with <B>which</B> errors may be encountered by the end targets of a computerized process is assessed  <B>how</B> many and <B>what</B> <B>type</B> of errors occur  <B>how</B> easily are they corrected  <B>what</B> is the reaction of consumers to errors-to a failure to correct them  <B>what</B> <B>can</B> be learned by designers of large management packages of individuals  or households  having average contacts with different <B>types</B> of accounts experience <B>one</B>
38 Q0 2931 3 0.122601345 Lucene_47
 much remains to be done in showing <B>how</B> <B>abstract</B> conceptualizations <B>can</B>  or cannot  be actualized  <B>what</B> is a machine  <B>what</B> is a computable process  <B>how</B>  or <B>how</B> well  does a machine simulate a process with the method of <B>data</B> <B>types</B> as lattices  or partial orderings  under an information content ordering <B>questions</B> are computable in principle  since the outcome puts bounds on the possibilities
38 Q0 2082 4 0.121256284 Lucene_47
 programmers who <B>want</B> to understand or modify the program <B>can</B> access the resulting documentation  <B>which</B>syntax-directed documentation for pl 360 the language pl 360  together with its <B>phrase</B> structure grammar  is <B>used</B> as a concrete basis for illustrating an idea called syntax-directed documentation  this idea is  1  to use the <B>phrase</B> structure of a program to define the structure of a formal
38 Q0 2233 5 0.111935094 Lucene_47
  818  37  52  49      <B>i</B> have deposited in the county of bedford <B>about</B> four miles from buford s would fill volumes  yet serious students of cryptography have always had nagging doubts <B>about</B>  the encoding method <B>used</B> in the second cypher employs a specified document whose words are simply  the sequence of numbers corresponding to these <B>matches</B> is then written down as the final code  while
38 Q0 1861 6 0.107848704 Lucene_47
the mad definition facility <B>one</B> of the first definition facilities for higher level languages is described  users of the language <B>can</B> define new operators and or <B>data</B> <B>types</B> into the mad language  so that their use appears as if they were predefined  information is given on <B>how</B> <B>one</B> writes definitions  as well as on much of the motivation behind the form in <B>which</B> definitions are written  some
38 Q0 3105 7 0.100650325 Lucene_47
 checking similar to <B>type</B> checking  the approach <B>can</B> be <B>used</B> to extend any strongly-typed language  but is particularly suitable for extending languages that support the notion of <B>abstract</B> <B>data</B> <B>types</B>  cacm may  1978 jones  a  liskov b  programming languages  access control  <B>data</B> <B>types</B>  <B>abstract</B> <B>data</B>  the extension permits expression of access constraints on shared <B>data</B>  access constraints <B>can</B> apply both
38 Q0 1931 8 0.09809239 Lucene_47
 papers  <B>one</B> by hansen and <B>one</B> by hansen and r  r  smith  have shown <B>how</B> interval arithmetic  <B>i</B>   <B>can</B> be <B>used</B> effectively to bound errors in matrix computations  in the present paper a method proposed by hasen and r  r  smith is compared with straightforward use of <B>i</B>  in determinant evaluation  computational results show the accuracy and running times that <B>can</B> be expected when using <B>i</B>
38 Q0 2705 9 0.09493995 Lucene_47
 <B>literature</B>  <B>i</B> e  programs  of general utility and studies of <B>questions</B> related to program style  cacm languages toward flexion less  word-order based language <B>types</B> speaks for programming language design based on general  <B>abstract</B> constructs  by analogy with incidents of the history of artificial quality  language development  artificial auxiliary languages  <B>literature</B>  style  descriptive
38 Q0 2897 10 0.09339719 Lucene_47
 code  more elaborate optimizations <B>can</B> further improve the object code  for most <B>contexts</B> <B>one</B> possible expansion-the task of tailoring this code to take advantage of any special cases is done by the optimizations  this paper provides evidence that this strategy <B>can</B> indeed result in good object code  the traditionally difficult pl <B>i</B> concatenate statement was investigated as a detailed
38 Q0 2470 11 0.091243215 Lucene_47
 <B>how</B> the system <B>can</B> be <B>used</B> to build composite <B>data</B> <B>types</B> out of simper ones with the operations of rowing  structuring  and uniting  it is also demonstrated that completely new primitive <B>types</B> <B>can</B> be introduced into languages through the mechanism of singleton <B>data</B> <B>types</B>  both deterministic environment <B>can</B> be modeled as a <B>data</B> item and <B>how</B> imperative statements <B>can</B> be considered functions
38 Q0 595 12 0.0891968 Lucene_47
  difficult to measure  <B>how</B> then might we approach solving this problem  cacm may  1962 greene  <B>i</B>  ca620510 jbguides to teaching cobol the teaching of cobol <B>can</B> be divided into three main subject areas by the programmer  the teaching problem arises in determining <B>how</B> thoroughly a student must know the hardware and logic for that computer for <B>which</B> he will write cobol programs  unfortunately
38 Q0 2354 13 0.08497309 Lucene_47
 paper to this   <B>i</B> methodology and experiences   the automatic clenshaw-curtis quadrature scheme was described and <B>how</B> each quadrature formula <B>used</B> in the scheme requires a cosine transformation  this second part of the paper shows <B>how</B> the cosine transformation <B>can</B> be computed by a modification relation is numerically unstable  particularly at the low frequencies <B>which</B> have the largest effect
38 Q0 1698 14 0.08326926 Lucene_47
  but the <B>entire</B> collection of virtual consoles models the collection of actual consoles  using the model we answer <B>questions</B> like  <B>how</B> many processes are suspended waiting for console input  <B>what</B> is the maximum rate at <B>which</B> a process <B>can</B> execute  <B>what</B> bounds <B>can</B> be set on overall buffer requirements to characterize the <B>entire</B> user community  based on the properties of this community we have postulated
38 Q0 2631 15 0.08185556 Lucene_47
  the greater part of <B>which</B> is <B>used</B> only infrequently  a novel method is presented  <B>which</B> maps june  1974 barton  <B>i</B>  j  creasey  s  e  lynch  <B>m</B>  f  snell  <B>m</B>  j  text searching  information theory computer files of bibliographic information  an attempt is made to overcome <B>one</B> of the problems often of strings such that their frequencies of occurrence are more even than those of word <B>types</B>  the members
38 Q0 2941 16 0.07969132 Lucene_47
 topics addressed are  <B>module</B> structure and its use in defining abstractions  <B>data</B>-structuring facilities in mesa  an equivalence algorithm for <B>types</B> and <B>type</B> coercions  the benefits of the <B>type</B> safe  cacm august  1977 geschke  c  <B>m</B>  morris  j  h  jr  satterthwaite  e  h  programming languages  <B>types</B>  modules  <B>data</B> structures  systems programming 4.22 ca770802 jb december 28  1977 8 07 am
38 Q0 2956 17 0.0773417 Lucene_47
 of the more narrow for <B>i</B>   1 to n notation   the use of the domain of an array as a <B>data</B> <B>type</B>some ideas on <B>data</B> <B>types</B> in high-level languages a number of issues are explored concerning the notion that a <B>data</B> <B>type</B> is a set of values together with a set of primitive operations on those values  but in a restrictive fashion   and resulting problems with conversion of values from <B>one</B> <B>type</B> to another  cacm
38 Q0 2369 18 0.07538671 Lucene_47
 <B>can</B> be classified into tree <B>types</B>  and also discusses <B>how</B> the relationship is changed for each pair  <B>which</B> remains fixed as long as rotation is <B>about</B> <B>one</B> axis and provides a means of rapidly determininghidden lines elimination for a rotating object a method is presented of determining <B>which</B> parts of three-dimensional objects are visible and <B>which</B> are invisible when the objects are rotated <B>about</B>
38 Q0 1323 19 0.074203104 Lucene_47
 is <B>used</B> as an  <B>abstract</B> object language  into <B>which</B> algol 60 is mapped  many of algol 60 s featuresa correspondence between algol 60 and church s lambda-notation  part <B>i</B>  this paper describes <B>how</B> some of the semantics of algol 60 <B>can</B> be formalized by establishing a correspondence between  the second part of the paper gives a formal description  <B>i</B> e  an  <B>abstract</B> compiler  into the  <B>abstract</B>
38 Q0 2342 20 0.06978743 Lucene_47
 of parallel processes is regarded as a machine <B>which</B> proceeds from <B>one</B> state s  <B>i</B> e  a collection of pertinent <B>data</B> values and process configurations  to a next state s  in accordance with a transition rule s -- gt  s   a set of such rules yields sequences of states  <B>which</B> dictate the system s behavior  the mutual exclusion problem and the associated subproblems are formulated as <B>questions</B> of inclusion
38 Q0 2867 21 0.06825037 Lucene_47
 habermann a  n  flon  l  cooprider  l  incremental machine design  <B>module</B>  <B>data</B> <B>type</B>  address spacemodularization and hierarchy in a family of operating systems this paper describes the design philosophy <B>used</B> in the construction of a family of operating systems  it is shown that the concepts of <B>module</B> and level do not coincide in a hierarchy of functions  family members <B>can</B> share much software
38 Q0 2568 22 0.06683907 Lucene_47
  the examination schedule problem  takes various forms in the <B>literature</B>  most of these formulations <B>can</B> be presented in the terminology of classical network theory  <B>one</B> such formulation is  given a nondirected connected subgraph  kirchgassner proved that an upper limit is this size plus <B>one</B>  <B>one</B> logical extension of the previous work is the introduction of variable length examinations where w <B>i</B>
38 Q0 1519 23 0.066633195 Lucene_47
george 3-a general purpose time sharing and operating system an operating system is described <B>which</B> will run on a wide variety of configurations of the <B>i</B>  1900  and <B>can</B> handle a large number simultaneously  depending on the installation  <B>which</B> <B>can</B> adjust the schedulers  both online users file store  cacm november  1967 oestreicher  <B>m</B>  d  bailey  <B>m</B>  j  strauss  j  <B>i</B>  ca671101 jb february
38 Q0 2002 24 0.066565044 Lucene_47
 manufacturers  having diverse configurations  the elements common to all <B>types</B> of <B>data</B> plots are outlined  rotation  or shifting of <B>entire</B> plots or subplots by the action of <B>one</B> or more simple modules and other effects  cacm september  1970 hirschsoln  <B>i</B>  computer graphics  <B>data</B> potting  <B>data</B> displayamesplot-a higher level <B>data</B> plotting software system amesplot is an extensible software system
38 Q0 3103 25 0.06570656 Lucene_47
 with <B>abstract</B> <B>data</B> <B>types</B> such as sets and lists  programmer time <B>can</B> be saved by automating are also reviewed  cacm may  1978 low  j  <B>abstract</B> <B>data</B> <B>types</B>  automatic programming  <B>data</B> only a single general purpose implementation for an <B>abstract</B> <B>type</B>  thus the programs produced using <B>abstract</B> <B>types</B> were then inefficient in space or time  in this paper a system for automatically
38 Q0 2148 26 0.064869374 Lucene_47
the composition of semantics in algol 68 the main features of algol 68 are explained from a semantic point of view  it is shown <B>how</B> the language permits the composition of values and actions  <B>i</B> e  lewi  j  sintzoff  <B>m</B>  wodon  p  l  programming primitives  programming languages  algol  semantics  recursive composition  design of programming languages  <B>data</B> structures 1.3 4.2 4.22 5.23 5.24
38 Q0 1470 27 0.0634542 Lucene_47
 statements together   3  the means by <B>which</B> a program <B>can</B> obtain <B>data</B> inputs  several alternative forms <B>data</B> structures  but <B>can</B> be error-causing distractions in other <B>contexts</B>  the author discusses concludes by suggesting the evolution of programming languages toward <B>one</B> <B>which</B> will permit all saying anything <B>about</B> the actions to be taken  an implicit specification is similar to a requirement
38 Q0 497 28 0.0632754 Lucene_47
 showed <B>how</B> dynamic programming could be <B>used</B> to determine the solution to a problem previously  suggesting briefly  however  <B>how</B> the solution of the equation derived for each particular point of subdivision u <B>i</B>  could be reduced to a discrete search  in this paper  the computational procedure shown that an equation for u <B>i</B>  involving no minimization may be found  in addition  it is shown
38 Q0 2906 29 0.06256282 Lucene_47
 explored as a solution to this problem  the business definition language  bdl  is such a language  <B>one</B> aimed at business <B>data</B> processing problems  the concepts in bdl mimic those <B>which</B> have evolved through for writing calculations  cacm november  1977 hammer  <B>m</B>  owe  w  g  kruskal  v  j  wladawsky  <B>i</B>  verya very high level programming language for <B>data</B> processing applications application development
38 Q0 2145 30 0.061770275 Lucene_47
 design of printed circuit boards  help helps automate a design stage <B>one</B> step closer to production than logical design  it <B>can</B> be <B>used</B> to design wiring patterns of two-layer circuit boards on <B>which</B> ics placed  help employs two methods of wiring  <B>one</B> is the heuristic method  <B>which</B> simulates human  cacm november  1971 aramaki  <B>i</B>  kawabata  <B>t</B>  kazuhiko  a  heuristic etching-pattern layout  wiring
38 Q0 1135 31 0.061671846 Lucene_47
 affecting only <B>one</B> of the output files involved  <B>can</B> be effected by local modifications in the program  e are <B>one</B>-to-<B>one</B> translations of flowcharts   <B>here</B> an invariant pattern of procedure is identified compute programming language <B>which</B> covers a wide class of business and file processing applications complex applications  in terms of tables of control expressions <B>which</B> express only information
38 Q0 1012 32 0.061554182 Lucene_47
 language <B>data</B> processing and syntax-directed compilers  a formal parsing system g    v u <B>t</B> r analysis determines a formal parsing system  a directed production analyzer  <B>i</B> <B>t</B> x p  is a nondeterministic pushdown-store machine with internal vocabulary <B>i</B>  input vocabulary <B>t</B>  and all productions of p of the set <B>t</B>  every context-free language <B>can</B> be analyzed by a directed production analyzer  the kuno
38 Q0 2970 33 0.060941212 Lucene_47
 a sequential estimation method <B>which</B> when <B>used</B> with the regenerative property allows results to be obtained with specified statistical accuracy  this method includes a test to <B>check</B> the normality assumption on <B>which</B> the sequential procedure relies  the paper illustrates the method using the empty in a preliminary simulation run  the paper also described <B>how</B> a variance reduction method due to page  9  <B>can</B>
38 Q0 3177 34 0.060382307 Lucene_47
<B>how</B> to share a secret in this paper we show <B>how</B> to divide <B>data</B> d into n pieces in such a way that d olutely no information <B>about</B> d  this technique enables the construction of robust key management schemes for cryptographic systems that <B>can</B> function securely and reliably even when misfortunes destroy half the pieces and security breaches expose all but <B>one</B> of the remaining pieces  cacm november  1979
38 Q0 2051 35 0.06004052 Lucene_47
a pl <B>i</B> program to assist the comparative linguist a practical pl <B>i</B> program is described <B>which</B> <B>can</B> in the <B>data</B> of each correspondence found in that pair of words  the output is a list of all correspondence <B>types</B> with their frequency of occurrence in the <B>data</B>  and a separate listing of each related languages  the investigator must arrange <B>data</B> for input by aligning pairs of suspected cognates
38 Q0 1974 36 0.05955841 Lucene_47
 format and to maximize the utility of neater2 as an aid during the early stages of development of a pl <B>i</B> source deck  <B>one</B> option  usage  causes neater2 to insert into each logical unit of coding a statement <B>which</B> will case the number of times each <B>one</B> is executed to be recorded during executionneater2  a pl <B>i</B> source statement reformatter neater2 accepts a pl <B>i</B> source program and operates
38 Q0 1569 37 0.055736423 Lucene_47
implementing <B>phrase</B>-structure productions in pl <B>i</B> a method is described for implementing the productions of a context-free <B>phrase</B> structure grammar in a pl <B>i</B> procedure whose structure and statements parallel the structure and notation of the grammar  cacm july  1967 irwin  l  ca670704 jb february 28  1978 9 01 am 1569 5 1569 1569 5 1569 1569 5 1569
38 Q0 2402 38 0.055479474 Lucene_47
 building  <B>i</B> e  the use of chemical information to frame  structural hypotheses  <B>which</B> <B>can</B> computationally be tested and refined by reference to the experimental <B>data</B>  application of standard pattern and the correct structure cannot be computed because of a fundamental incompleteness in the measured <B>data</B> demonstrates that this information <B>can</B> be the basis of a technique for structure determination that <B>can</B> make
38 Q0 2815 39 0.055242915 Lucene_47
high-level binding with low-level linkers an easy to implement scheme is described by <B>which</B> a compiler <B>can</B> enforce agreement between complex <B>data</B> <B>types</B> in separately compiled modules  the scheme is designed to work with any existing link editor or linking loader  no matter <B>how</B> deficient  obscure run-time errors caused by inconsistent usages are forestalled by static errors detected at linking
38 Q0 2572 40 0.055044226 Lucene_47
 of this or any technology  we should   1  be <B>sure</B> of the feasibility  internally and externally  of <B>what</B> is proposed   2  project and perhaps wait for changes in complementary techniques   3  evaluate current and projected supplementary techniques   4  establish the existence of demand for <B>what</B> december  1974 press  l  <B>i</B>  community information utilities  social implications  public policy 2.1 2.3
38 Q0 2850 41 0.05472308 Lucene_47
 execution of conditional branch <B>type</B> statements  a particular system called effigy <B>which</B> provides  instead of supplying the normal inputs to a program  e g  numbers  <B>one</B> supplies symbols representing programs written in a simple pl <B>i</B> style programming language  it includes many standard debugging features  the ability to manage and to prove things <B>about</B> symbolic expressions  a simple program testing
38 Q0 1890 42 0.054583423 Lucene_47
 of the city of kyoto  japan  june  1969 sakai  <B>t</B>  nagao  <B>m</B>  traffic simulation  traffic flow  trafficsimulation of traffic flows in a network a computer simulation program <B>which</B> deals with traffic-meter lengths and is represented by a bidirectional list in computer memory  the movement of cars  <B>i</B> e  the transfer of cars from <B>one</B> block to the next  is expressed by a proper formula  this formula
38 Q0 2940 43 0.05344855 Lucene_47
  1977 shaw  <B>m</B>  wulf  w  a  abstraction and representation  <B>abstract</B> <B>data</B> <B>types</B>  assertions  control the alphard  form  provides the programmer with a great deal of control over the implementation of <B>abstract</B> <B>data</B> <B>types</B>  in this paper the abstraction techniques are extended from simple <B>data</B> representation and function definition to the iteration statement  the most important poin <B>t</B> of interaction between
38 Q0 1674 44 0.053256705 Lucene_47
 discussed <B>here</B>  cacm november  1968 marsaglia  g  bray  <B>t</B>  a  random number generation  monte carlo<B>one</B>-line random number generators and their use in combinations some <B>one</B>-line random number generators  <B>i</B> e  generators requiring a single fortran instruction are discussed  and some short fortran programs <B>which</B> mix several such generators are described  the aim is to provide methods
38 Q0 616 45 0.052976727 Lucene_47
  and all those <B>interested</B> in developing a theoretical approach to <B>data</B> processing   b  with interestan information algebra - phase <B>i</B> report-language structure group of the codasyl development-defining language  at the systems level of <B>data</B> processing  the report is based  for the most part in this report will stimulate others to think along similar lines  <B>questions</B> and comments will be welcomed
38 Q0 2139 46 0.052656204 Lucene_47
implementation of the substring test by hashing a technique is described for implementing the test <B>which</B> determines if <B>one</B> string is a substring of another  when there is low probability that the test will be satisfied  it is shown <B>how</B> the operation <B>can</B> be speeded up considerably if it is preceded by a test on appropriately chosen hash codes of the strings  cacm december  1971 harrison  <B>m</B>  c
38 Q0 2406 47 0.05262473 Lucene_47
a <B>data</B> definition and mapping language a <B>data</B> definition language <B>i</B> sa declarative computer language for specifying <B>data</B> structures  most <B>data</B> definition languages concentrate on the declaration of logical <B>data</B> structures with little concern for <B>how</B> these structures are physically realized on a computer system  however  the need for <B>data</B> definition languages <B>which</B> describe both the logical
38 Q0 1162 48 0.05218574 Lucene_47
 is seldom necessary  it is assembly language programs <B>which</B> present the greatest difficulty  assembly languages generally provide a <B>one</B>-for-<B>one</B> translation from a symbolic to a numeric version of a program  that is  from assembly language to machine language  the meta-language presented <B>here</B> <B>can</B> be <B>used</B>  or whatever else the user might desire  thus  this meta-language <B>can</B> be <B>used</B> to map from <B>one</B> assembly
38 Q0 2958 49 0.052098945 Lucene_47
<B>abstract</B> <B>data</B> <B>types</B> and the development of <B>data</B> structures <B>abstract</B> <B>data</B> <B>types</B> <B>can</B> play and complete  cacm june  1977 guttag  j  <B>abstract</B> <B>data</B> <B>type</B>  correctness proof  <B>data</B> <B>type</B>  <B>data</B> presents and discusses the application of an algebraic technique for the specification of <B>abstract</B> <B>data</B> <B>types</B>  among the examples presented is a top-down development of a symbol table for a block structured
38 Q0 718 50 0.05208158 Lucene_47
an experiment in automatic verification of programs <B>how</B> effective is a compiler at replacing explicit verification  and <B>what</B> is the cost of this technique  cacm october  1963 weinberg  g  <B>m</B>  gressett  g  l  ca631007 jb march 13  1978 5 59 pm 1053 5 718 718 5 718 718 5 718 718 5 718 435 6 718 474 6 718 718 6 718 720 6 718
38 Q0 2959 51 0.051938146 Lucene_47
  sba  is a system within <B>which</B> application experts-nonprogrammers-<B>can</B> describe and execute june  1977 zloof  <B>m</B>  <B>m</B>  de jong  s  p  programming language  graphics  user in terface  <B>data</B> flow-dimensional pictures of tables  business forms  and reports on a display terminal  he <B>can</B> gradually automate this application by giving  examples  to the system of <B>how</B> he manually manipulates
38 Q0 2536 52 0.051924925 Lucene_47
telecommunications using a front-end minicomputer the use of a front-end minicomputer to provide varied remote terminal access to a large scale computer is considered  the problems of embedding telecommunications <B>i</B> o within an operating system are discussed  and it is shown <B>how</B> the decentralization over a hard wired line controller  cacm march  1973 feinroth  y  franceschini  e  goldstein  <B>m</B>
38 Q0 2993 53 0.05179981 Lucene_47
 perturbations in the input <B>data</B> resulted in problems <B>which</B> did not cycle  this fact  plus several other function subject to the same constrain <B>t</B> set was attempted  but mps solved only <B>one</B> of these while giving an indication of infeasibility for the other  cacm february  1977 kotiah  <B>t</B>  c  <B>t</B>  steinberg  d  <B>i</B> of linear programming problems <B>which</B> are ill-conditioned in some cases  in attempting to solve
38 Q0 1166 54 0.0517782 Lucene_47
 instruction sets  incompatible instructions are categorized into basic operational classes <B>which</B> <B>can</B> of the address or tag of an incompatible instruction requires incorporation of an address-tag equivalent  <B>i</B> o is handled by generating calls to <B>i</B> o simulation subroutines  cacm december  1965 dellert jr   g  <B>t</B>a use of macros in translation of symbolic assembly language of <B>one</B> computer to another a set
38 Q0 3144 55 0.051427852 Lucene_47
 in <B>which</B> programs execute by virtue of being interpreted by other programs  <B>which</B> themselves may either be interpreted  <B>i</B> e  nested interpreters  or run directly on the host machine  the model reveals the anatomy of interpreters and <B>how</B> these differ from procedures  and exhibits links to protection domains and multiprocessor architectures  cacm may  1979 manthey  <B>m</B>  interpreters  transfer-of-control
38 Q0 3002 56 0.05038002 Lucene_47
a record and file partitioning model <B>one</B> of the main objectives in the design of a file system is the reduction of storage and <B>data</B> transfer costs  this paper presents a model in <B>which</B> several requests access the file system  and each request requires information from <B>one</B> or more variable length model and a mixed integer programming model  is a very general <B>one</B>  several <B>types</B> of file systems may
38 Q0 2701 57 0.05008919 Lucene_47
  consequently a restriction to <B>one</B>-entry <B>one</B>-exit control structures linearity  the algorithm <B>can</B> are given of code improvement problems <B>which</B> <B>can</B> be solved using the algorithm  cacm december  1975 graham  s  l  wegman  <B>m</B>  global flow analysis  <B>data</B> flow  code optimization  common subexpressiona fast and usually linear algorithm for global flow analysis  <B>abstract</B> only--complete paper jacm
38 Q0 1062 58 0.04889036 Lucene_47
symbol manipulation in fortran-sasp <B>i</B> subroutines a set of subroutines for use in fortran are described whose purpose is to synthesize output strings from  <B>i</B>  input strings <B>which</B> have been analyzed formed in any way  function-<B>type</B> subroutines are included for intermediate manipulations  <B>which</B> are performed on the strings <B>which</B> are stored in an abbreviated internal representation  the automatic
38 Q0 2905 59 0.048790246 Lucene_47
 table in <B>which</B> the elements of <B>i</B> <B>can</B> be stored and from <B>which</B> they <B>can</B> be retrieved by using a perfect shows that this method <B>can</B> be <B>used</B> conveniently in several practical applications  cacm november <B>which</B> allows retrieval of an item in a static table with a single probe is considered  given a set <B>i</B> of identifiers  two methods are presented for building  in a mechanical way  perfect hashing
38 Q0 452 60 0.04835826 Lucene_47
nesting of for statement <B>i</B>  algorithm 137  cacm november  1962 dahm  d  <B>m</B>  wells  <B>m</B>  ca621109 jb march 17  1978 6 15 pm 452 5 452 452 5 452 452 5 452
38 Q0 243 61 0.048213407 Lucene_47
  effectiveness of the codes is increased by introducing a  system <B>check</B> bit   <B>which</B> is essentially a parity <B>check</B> on the other parity bits  only three-dimensional codes are discussed in this paper with parity evaluations along the horizontal  the vertical  and <B>one</B> main diagonal  however  the family of codes on a similar multidimensional single-bit selection plan <B>used</B> for another purpose  6   a four-dimensional
38 Q0 2208 62 0.047966883 Lucene_47
  <B>which</B> is the fast store  is divided into a number of storage areas  when an entry is to be filed in the hierarchy  a hashing algorithm will attempt to place the entry into <B>one</B> of these areas in the <B>entire</B> hierarchy  an expression is derived for the expected number of entries filed in the first-level storehis expression gives a measure of <B>how</B> effectively the first-level store is being
38 Q0 3057 63 0.047795948 Lucene_47
 the problem of optimal his togram matching using monotone gray level transformation  <B>which</B> always assigns all picture points of a given gray level <B>i</B> to another gray level <B>t</B> <B>i</B>  such that if <B>i</B>  gt  j  then <B>t</B> <B>i</B>   gt  <B>t</B> j   the objective is to find a transformed digital picture of a given picture sized <B>one</B> by <B>one</B> into k2 linearly ordered boxes of assorted sizes  such that the accumulated error
38 Q0 2666 64 0.047338575 Lucene_47
  for <B>which</B> the nondiscrete solution <B>can</B> be interpreted as a set of timetables  differing from week to week  <B>which</B> together satisfy the long-term requirements of the timetable problem  cacm april  1974 smith  g  sefton  <B>i</B>  <B>m</B>  combinatorial  multi-index problem  necessary conditions  schedule  school
38 Q0 2682 65 0.047112223 Lucene_47
 workload is realized by using a synthetic program in <B>which</B> the characteristics <B>can</B> be varied by varying from the system accounting <B>data</B>  the characteristics of the drive workload are determined by matching to the case of two variables  cpu seconds and number of <B>i</B> o activities  and synthetic workload with 88 jobs is constructed to represent a month s workload consisting of <B>about</B> 6000 jobs  cacm march  1974
38 Q0 2989 66 0.04624507 Lucene_47
  and <B>used</B> to answer <B>questions</B> like  <B>how</B> many registers are <B>used</B> simultaneously  <B>how</B> many would be sufficient all of the time  most of the time  <B>what</B> would the overhead be if the number of registers were reduced  <B>what</B> are registers <B>used</B> for during their lives  the paper also discusses the problem are evaluated in terms of the time <B>used</B> or saved by having or not having the feature  the methods
38 Q0 1768 67 0.045897443 Lucene_47
a global parser for context-free <B>phrase</B> structure grammars an algorithm for analyzing any context-free <B>phrase</B> structure grammar and for generating a program <B>which</B> <B>can</B> then parse any sentence and on a subset of algol  a number of the routines for extracting <B>data</B> <B>about</B> a grammar-to-bottom  <B>type</B> and is recursive   a number of heuristic procedures whose purpose is to shorten
38 Q0 2177 68 0.045866705 Lucene_47
 of the machine employed  the storage  in machine words  required for a graph with n nodes and <B>m</B> edges increases essentially as 2 <B>m</B> n  in case  <B>i</B>   or  n 2  win case  ii   a spanning tree with labeled edges blocks and cutnodes of an arbitrary undirected graph  the graph may be represented either  <B>i</B> on the <B>type</B> of graph  1  lt   g  lt   2  and both bounds are attained  values of g are derived
38 Q0 2390 69 0.045648545 Lucene_47
 in a multiterminal computer system  users of the system <B>can</B> store in the computer an updated file of their current knowledge  and on selecting a paper to read  they <B>can</B> obtain from the computer the minimum subtree of theorems required to bring them from <B>what</B> they already know to the background knowledge <B>which</B>  this paper describes <B>how</B> the system <B>can</B> be organized and the role required of readers  writers
38 Q0 3059 70 0.04555757 Lucene_47
 for systems <B>which</B> are in approximate cpu <B>i</B> o utilization balance and for low degrees of multiprogramming  the percentage improvement from <B>i</B> o <B>i</B> o overlap is found to be greatest for systemtems in <B>which</B> the <B>i</B>models for parallel processing within programs  application to cpu <B>i</B> o and <B>i</B> o <B>i</B> o overlap  the models are formulated in terms of cpu <B>i</B> o and <B>i</B> o <B>i</B> o overlap and applied to the analysis
38 Q0 676 71 0.045497693 Lucene_47
on the computation of a certain <B>type</B> of incompletebeta functions cacm november  1963 tang  <B>i</B>  c  ca631116 jb march 13  1978 3 27 pm 676 5 676 676 5 676 676 5 676
38 Q0 1625 72 0.045322984 Lucene_47
on the automatic simplification of source-language programs methods of simplification that <B>can</B> understanding of <B>what</B> the program is supposed to do  these methods have been implemented in a processor called <B>sure</B> that accepts a program written in jovial and outputs an equivalent jovial program that may be shorter and may be executed faster than the original  <B>sure</B> is described  some of the problems
38 Q0 2729 73 0.04444826 Lucene_47
comments on a paper by <B>t</B>  c  chen and <B>i</B>  <B>t</B>  ho cacm august  1975 smith  a  j  binary coded decimal digits  decimal <B>data</B> storage  <B>data</B> compression  huffman codes  variable length codes 6.32 6.34 ca750806 jb january 6  1978 4 37 pm 2729 4 2729 2729 4 2729 2288 5 2729 2729 5 2729 2729 5 2729 2729 5 2729 2801 5 2729
38 Q0 677 74 0.044386733 Lucene_47
 strings <B>which</B> result form the first  internal sort  phase of a merge sort onto tapes  it is shown that the strings produced by an alternating method  <B>i</B> e  <B>one</B> <B>which</B> produces ascending and descending strings alternately  tend to be only three-fourths as long as those in a method <B>which</B> produces only ascending strings  contrary to statements <B>which</B> have appeared previously in the <B>literature</B>  a slight
38 Q0 2582 75 0.044270113 Lucene_47
  a working set <B>which</B> does not contain the next memory reference  the <B>data</B> the method operates upon to restructure an interactive text editor and the file system <B>module</B> of an operating system have shown its substantial superiority over the other methods proposed in the <B>literature</B>  cacm november  1974
38 Q0 2667 76 0.044221483 Lucene_47
execution characteristics of programs in a page-on-demand system <B>data</B> are presented <B>which</B> show the execution characteristics of two <B>types</B> of commonly <B>used</B> programs in a large-scale  time-shared computer system  a software monitoring facility built into the supervisor was <B>used</B> for <B>data</B> collection and other <B>data</B> are given for such things as cpu intervals  <B>i</B> o intervals  and the number of such intervals
38 Q0 3056 77 0.043819573 Lucene_47
 approximate counts of large numbers  the resulting expected error <B>can</B> be rather precisely controlled  an example is given in <B>which</B> 8-bit counters  bytes  are <B>used</B> to keep track of as many as 130,000 events with a relative error <B>which</B> is substantially independent of the number n of events  this relative error <B>can</B> be expected to be 24 percent or less 95 percent of the time  <B>i</B> e o   n 8
38 Q0 536 78 0.04367541 Lucene_47
nonlinear regression and the solution of simultaneous equations if <B>one</B> has a set of observables  z1     zm  <B>which</B> are bound in a relation with certain parameters  a1     an  by an equation s z1     a1      0  <B>one</B> frequently has the problem of determining a set of values of the ai <B>which</B> minimizes n <B>which</B> is nonlinear in the ai  then <B>one</B> may rely on a version of gaussian regression  1,2
38 Q0 1413 79 0.043563966 Lucene_47
 the actual and  if so  on <B>what</B> time scale  this ignorance stems largely from ignorance <B>about</B> of potential educational technology and to raise <B>questions</B> <B>about</B> the modes of social responsea vision of technology and education educational technology is currently quite fashionable  <B>here</B>  as in many other branches or aspects of technology  changes possible in the next generation or two
38 Q0 1371 80 0.04330198 Lucene_47
logarithm of gamma function  algorithm 291  s14   cacm september  1966 pike  <B>m</B>  c  hill  <B>i</B>  d  ca660909bjb march 23  1978 4 24 pm 1371 5 1371 1371 5 1371 1371 5 1371
38 Q0 1378 81 0.04330198 Lucene_47
pseudo-random numbers  algorithm 266  g5   cacm september  1966 hill  <B>i</B>  d  pike  <B>m</B>  c  ca660909i jb march 23  1978 6 46 pm 1378 5 1378 1378 5 1378 1378 5 1378
38 Q0 1407 82 0.04330198 Lucene_47
confidence interval for a ratio  algorithm 289  g1   cacm july  1966 hill  <B>i</B>  d  pike  <B>m</B>  c  ca660707c jb march 23  1978 7 07 pm 1407 5 1407 1407 5 1407 1407 5 1407
38 Q0 1575 83 0.04330198 Lucene_47
incomplete beta ratio  algorithm 179  s14   cacm june  1967 pike  <B>m</B>  c  hill  <B>i</B>  d  ca670607c jb march 23  1978 3 29 pm 1575 5 1575 1575 5 1575 1575 5 1575
38 Q0 1850 84 0.04330198 Lucene_47
generation of permutations in lexicographic order  algorithm 323  g6   cacm september  1969 leitch  <B>i</B>  <B>m</B>  permutations  direct lexicographic order  reverse lexicographic order  lexicographic generation 5.39 ca690905 jb february 15  1978 4 48 pm 1850 5 1850 1850 5 1850 1850 5 1850
38 Q0 2199 85 0.04330198 Lucene_47
a sparse matrix package  part <B>i</B>   f4   algorithm 408  cacm april  1971 mcnamee  j  <B>m</B>  matrix  sparse matrix  matrix manipulation 5.14 ca710406 jb february 3  1978 3 20 pm 2199 5 2199 2199 5 2199 2199 5 2199
38 Q0 2448 86 0.04330198 Lucene_47
reversible execution cacm september  1973 zelkowitz  <B>m</B>  v  debugging  pl <B>i</B>  reversible execution  backtracking 4.22 4.42 ca730907 jb january 23  1978 8 54 am 2448 5 2448 2448 5 2448 2448 5 2448
38 Q0 2473 87 0.04330198 Lucene_47
hidden-line plotting program  algorithm r420  cacm july  1973 macleod  <B>i</B>  d  g  collins  a  <B>m</B>  hidden-line plot  surface plot 4.9 ca730713 jb january 23  1978 11 14 am 2473 5 2473 2473 5 2473 2473 5 2473
38 Q0 477 88 0.04330198 Lucene_47
further remarks on sampling a tape file-<B>i</B> cacm october  1962 muller  <B>m</B>  e  ca621003 jb march 17  1978 7 23 pm 477 4 477 6 5 477 477 5 477 477 5 477 477 5 477
38 Q0 1482 89 0.043266237 Lucene_47
 processing and measuring system that depends upon a pictorial input to the computer s memory  bugsys <B>can</B> be <B>used</B> for many <B>types</B> of applications  in particular  the authors have <B>used</B> the system for the analysis pointers  <B>which</B> are visualized as a family of  bugs   cacm february  1966 ledley  r  s  jacobsen  j  belson  <B>m</B>  ca660205 jb march 3  1978 3 16 pm 1482 5 1482 1482 5 1482 1482 5 1482
38 Q0 1727 90 0.04265862 Lucene_47
 the  probabilities  of events where instruction <B>i</B> is executed after instruction <B>i</B> <B>i</B>   this estimation <B>can</B><B>one</B> way of estimating frequencies of jumps in a program for the segmentation of a program of the number of jumps from the <B>i</B>-th instruction on to the j-th instruction in the run time  in the cases estimation of the s ij   it is easier to estimate not s ij  but the quantities p ij  s ij  c <B>i</B>  sum s
38 Q0 2971 91 0.04264671 Lucene_47
sp k  a system for teaching computer programming sp k is a compatible subset of the pl <B>i</B> language language is suitable for in troducing programming concepts <B>used</B> in various applications  including business <B>data</B> processing  scientific calculations and non-numeric computation  sp k is actually and <B>can</B> be learned or implemented without the following subsets  cacm may  1977 holt  r  c  wortman  d
38 Q0 1717 92 0.042341042 Lucene_47
generating prime implicants via ternary encoding and decimal arithmetic decimal arithmetic  ternary encoding of cubes  and topological considerations are <B>used</B> in an algorithm to obtain the extremals and prime implicants of boolean functions  the algorithm  <B>which</B> has been programmed in the fortran language  generally requires less memory than other minimization procedures  and treats <B>don</B> <B>t</B> care
38 Q0 1398 93 0.042288106 Lucene_47
robot <B>data</B> screening  a solution to multivariate <B>type</B> problems in the biological and social sciences a new approach is outlined toward the solution of the <B>type</B> of multivariate problem that is found are derived from information theory  cacm july  1966 sterling  <B>t</B>  gleser  <B>m</B>  haberman  s  pollack  rather than a  statistical  criterion by <B>which</B> variables are grouped into a deterministic model
38 Q0 2396 94 0.041632667 Lucene_47
 and special purpose rules  the  relational triple  notation <B>used</B> during interpretation of input and the addition of new ones  muse also has a repertoire of actions  <B>which</B> range from editing and reporting to demonstrate <B>how</B> the model interprets text  resolves ambiguities  adds information to memory  generalizes from examples and performs various actions  cacm january  1972 mccalla  g  <B>i</B>  sampson  j  r  natural
38 Q0 2380 95 0.041525334 Lucene_47
 of goals <B>which</B> are important for any time sharing system  it describes <B>how</B> the tenex design virtual machine  intimate terminal interaction  comprehensive uniform file and <B>i</B> o capabilities  and clean flexible system structure  although the implementation described <B>here</B> required some compromise
38 Q0 2851 96 0.041487474 Lucene_47
  or processes  executing the program  an induction principle is presented <B>which</B> treats the control and <B>data</B>  examples are presented in <B>which</B> the induction principle is <B>used</B> to demonstrate proofs of mutual  an <B>abstract</B> conceptual model and a parallel-program model  the former model does not distinguish between control and <B>data</B> states  the latter model includes the capability for the representation
38 Q0 1281 97 0.041135125 Lucene_47
<B>data</B> input by question and answer a <B>data</B> input scheme for a time-sharing computer is described for the required values <B>one</B> at a time  the computer converses with the user during the input process  checks for errors  provides standard <B>data</B>  and allows editing of values input  cacm april  1965 pyle  <B>i</B>  c  ca650410 jb march 7  1978 3 48 pm 1281 5 1281 1281 5 1281 1281 5 1281
38 Q0 2714 98 0.040583946 Lucene_47
 a and b with the p parallel processors  <B>which</B> requires at most 2 log2  2m 1    3m p     <B>m</B> p  log2  steps  in the case where <B>m</B> and n are of the same order of magnitude  <B>i</B> e  n km with k being favorably with the previous best parallel merging algorithm  batcher s algorithm  <B>which</B> requires n p     <B>m</B>merging with parallel processors consider two linearly ordered sets a  b   a  <B>m</B>   b  n  <B>m</B> lt  n
38 Q0 2801 99 0.040481847 Lucene_47
  cacm january  1975 chi chen  <B>t</B>  ho  <B>i</B>  <B>t</B>  binary-coded decimal digits  decimal <B>data</B> storage 6.32storage-efficient representation of decimal <B>data</B> usually n decimal digits are represented by 4n bits in computers  actually  two bcd digits <B>can</B> be compressed optimally and reversibly into 7 bits the conventional bcd code by simple removal of redundant 0 bits  a long decimal message <B>can</B> be subdivided
38 Q0 2937 100 0.040470596 Lucene_47
an experimental evaluation of <B>data</B> <B>type</B> conventions the language in <B>which</B> programs are written <B>can</B> shows that  at least in <B>one</B> environment  the use of a statically typed language <B>can</B> increase programming to reasonably small problems shows that the subjects had difficulty manipulating the representation of <B>data</B>  cacm august  1977 gannon  j  d  <B>data</B> <B>types</B>  experimentation  language design  redundancy  reliable
*************Query 39*************************

39 Q0 2651 1 0.33600283 Lucene_47
 <B>types</B>  modes  mode unions  <B>type</B> conversion  coercion  generic functions  <B>extensible</B> <B>languages</B>  <B>data</B> <B>type</B> <B>definition</B>  <B>data</B> description language  compilation 4.12 4.13 4.22 ca740502 jb january 17  1978 treatment of <B>data</B> <B>types</B> includes provision for <B>programmer</B>-<B>defined</B> <B>data</B> <B>types</B> <B>data</B> <B>types</B> and generic routines  <B>programmer</B> control over <B>type</B> conversion  and very flexible <B>data</B> <B>type</B> behavior  in a context
39 Q0 2940 2 0.30014384 Lucene_47
  1977 shaw  m  wulf  w  a  abstraction and representation  <B>abstract</B> <B>data</B> <B>types</B>  assertions  control the alphard  form  provides the <B>programmer</B> with a great deal of control over the implementation of <B>abstract</B> <B>data</B> <B>types</B>  in this paper the abstraction techniques are extended from simple <B>data</B> representation  program specifications  programming <B>languages</B>  programming methodology  proofs of correctness  <B>types</B>
39 Q0 2931 3 0.20967756 Lucene_47
  <B>what</B> is a machine  <B>what</B> is a computable process  how  or how well  <B>does</B> a machine simulate a process with the method of <B>data</B> <B>types</B> as lattices  or partial orderings  under an information content orderinglogic and programming <B>languages</B> logic has been long in terested in whether answers to certain parts of computability theory  programming <B>languages</B> offer an obvious opportunity as their syntactic
39 Q0 1861 4 0.19744724 Lucene_47
the mad <B>definition</B> facility one of the first <B>definition</B> facilities for higher level <B>languages</B> is described  users of the language can define new <B>operators</B> and or <B>data</B> <B>types</B> into the mad language  so  a  graham  r  m  mad  <B>definitions</B>  <B>operators</B>  macros  higher level language 4.12 4.22 ca690802 jb <B>definitions</B>  as well as on much of the motivation behind the form in which <B>definitions</B> are written  some
39 Q0 3103 5 0.18547483 Lucene_47
 with <B>abstract</B> <B>data</B> <B>types</B> such as sets and lists  <B>programmer</B> time can be saved by automating are also reviewed  cacm may  1978 low  j  <B>abstract</B> <B>data</B> <B>types</B>  automatic programming  <B>data</B> only a single general purpose implementation for an <B>abstract</B> <B>type</B>  thus the programs produced using <B>abstract</B> <B>types</B> were then inefficient in space or time  in this paper a system for automatically
39 Q0 1902 6 0.14981522 Lucene_47
 exercises in three different <B>languages</B>  including assembly language  in this computer-controlled grading scheme provision is made for testing with <B>programmer</B>-<B>supplied</B> <B>data</B> and for final runs with system-<B>supplied</B> <B>data</B>  exercises run under the scheme may be mixed with other programs  and no special recognition of exercises by the <B>operators</B> is necessary  cacm may  1969 hext  j  b  winings  j  w  automatic
39 Q0 3105 7 0.13850583 Lucene_47
  but is particularly suitable for extending <B>languages</B> that support the notion of <B>abstract</B> <B>data</B> <B>types</B>  cacm may  1978 jones  a  liskov b  programming <B>languages</B>  access control  <B>data</B> <B>types</B>  <B>abstract</B> <B>data</B> <B>types</B>  <B>type</B> checking  capabilities 4.20 4.35 ca780502 dh february 26  1979 3 19 pm 1458 4 3105 1523 4a language extension for expressing constraints on <B>data</B> access controlled sharing of information
39 Q0 2957 8 0.1356541 Lucene_47
 into a higher-level object  a new <B>data</B> <B>type</B>  called aggregation  is developed which  under certain criteria of  well-definedness   specifies aggregation abstractions  relational databases <B>defined</B> as collections  smith  d  c  p  <B>data</B> abstraction  relational database  <B>data</B> <B>type</B>  aggregation  database design  <B>data</B> structure  knowledge representation  <B>data</B> <B>definition</B> language 3.65 3.69 3.79 4.29 4.33 4.34
39 Q0 2254 9 0.12540469 Lucene_47
 of partitioning for array <B>languages</B>  of general interest is the <B>data</B> structure for partitioningdynamic partitioning for array <B>languages</B> the classical process of partitioning an array into subarrays is extended to a more useful array language operation  various modes of partitioning are <B>defined</B> for different <B>types</B> of arrays  so that subarrays may vary over the original array in a nearly
39 Q0 2470 10 0.1225328 Lucene_47
  formal systems  lambda-calculus  <B>extensible</B> <B>languages</B>  <B>data</B> <B>types</B>  modes  axioms  correctness  formal language <B>definition</B>  formal description  <B>data</B> structures  description <B>languages</B>  models of computation be introduced into <B>languages</B> through the mechanism of singleton <B>data</B> <B>types</B>  both deterministic how the system can be used to build composite <B>data</B> <B>types</B> out of simper ones with the operations
39 Q0 2265 11 0.1156056 Lucene_47
  f  <B>type</B> checking  <B>types</B>  lambda calculus  models for programming <B>languages</B>  syntax  semanticsa model for <B>type</B> checking most current programming <B>languages</B> treat computation over different and operands are compatible  the activity of answering this question is usually called <B>type</B> checking  this paper attempts to isolate the notion of <B>type</B> checking and presents a partial solution to the <B>type</B>
39 Q0 2956 12 0.1121893 Lucene_47
some ideas on <B>data</B> <B>types</B> in high-level <B>languages</B> a number of issues are explored concerning the notion that a <B>data</B> <B>type</B> is a set of values together with a set of primitive operations on those values june  1977 gries  d  gehani  n  <B>data</B> <B>types</B>  generic procedures  programming <B>languages</B> 4.12 4.20 4.22 of the more narrow for i   1 to n notation   the use of the domain of an array as a <B>data</B> <B>type</B>
39 Q0 2341 13 0.10216196 Lucene_47
blocks-a new <B>data</B> <B>type</B> for snobol4 a new <B>data</B> <B>type</B>  called a block  has been implemented  nonnumerical programming  snobol4  <B>data</B> <B>types</B>  two-dimensional mathematics  test processing of program-<B>defined</B> connection points  some blocks adapt in size and shape to their environment  blocks justification and preparation  have been programmed on a printer in <B>what</B> appears to be an easy and natural
39 Q0 2785 14 0.096722186 Lucene_47
glypnir-a programming language for illiac iv glypnir is one of the earliest existing <B>languages</B> designed for programming the illiac iv computer  the syntax of the language is based on algol 60  but has been extended to <B>allow</B> the <B>programmer</B> explicitly to specify the parallelism of his algorithm in terms of 64-word vectors  this paper describes the characteristics  goals and philosophy
39 Q0 2078 15 0.09277021 Lucene_47
 for this problem area are <B>defined</B> and compared with current computer graphic <B>languages</B>  four alternative <B>data</B> structures that <B>allow</B> automated space planning are described and compared  cacm april  1970 eastman  c  m  automated design  <B>data</B> structures  computer graphics  computer-aided design  engineering
39 Q0 3031 16 0.09211281 Lucene_47
<B>abstract</B> <B>data</B> <B>types</B> and software validation a <B>data</B> abstraction can be naturally specified using of an implementation of an <B>abstract</B> <B>data</B> <B>type</B>  second  semi-automatic tools are described which can be used both implementation is accomplished  cacm december  1978 guttag  j  horowitz  e  musser  d  <B>abstract</B> <B>data</B> <B>type</B> specification of a <B>data</B> <B>type</B>  an example is given which shows how to employ algebraic axioms
39 Q0 2958 17 0.08616928 Lucene_47
<B>abstract</B> <B>data</B> <B>types</B> and the development of <B>data</B> structures <B>abstract</B> <B>data</B> <B>types</B> can play and complete  cacm june  1977 guttag  j  <B>abstract</B> <B>data</B> <B>type</B>  correctness proof  <B>data</B> <B>type</B>  <B>data</B> presents and discusses the application of an algebraic technique for the specification of <B>abstract</B> <B>data</B> <B>types</B>  among the examples presented is a top-down development of a symbol table for a block structured
39 Q0 2705 18 0.08187278 Lucene_47
 <B>languages</B> toward flexion less  word-order based language <B>types</B> speaks for programming language design based on general  <B>abstract</B> constructs  by analogy with incidents of the history of artificialprogramming <B>languages</B>  natural <B>languages</B>  and mathematics some social aspects of programming are illuminated through analogies with similar aspects of mathematics and natural <B>languages</B>  the split
39 Q0 2941 19 0.07626886 Lucene_47
-are discussed  and some implications for mesa and similar programming <B>languages</B> are suggested  the specific topics addressed are  module structure and its use in defining abstractions  <B>data</B>-structuring facilities in mesa  an equivalence algorithm for <B>types</B> and <B>type</B> coercions  the benefits of the <B>type</B>  <B>types</B>  modules  <B>data</B> structures  systems programming 4.22 ca770802 jb december 28  1977 8 07 am
39 Q0 1589 20 0.07564532 Lucene_47
 language has been prevented  and there are no processor-oriented statements  <B>like</B> variable <B>type</B> keyboard on a character-by-character basis so as to <B>restrict</B> the <B>programmer</B> s choice of input symbols
39 Q0 1614 21 0.074547686 Lucene_47
a proposal for <B>definitions</B> in algol an extension to algol is proposed for adding new <B>data</B> <B>types</B> and <B>operators</B> to the language  <B>definitions</B> may occur in any block heading and terminate with the block of existing <B>operators</B> may be redefined  the processing of text containing <B>defined</B> contexts features a  replacement rule  that eliminates unnecessary iterations and temporary storage  examples of <B>definition</B>
39 Q0 2082 22 0.073280744 Lucene_47
 documentation for that program   2  to use the syntactic <B>types</B> and identifiers in the resulting structure to trigger the automatic formation of questions to the <B>programmer</B>  whose answers will become part programmers who <B>want</B> to understand or modify the program can access the resulting documentation  which is cross-indexed in various ways by syntactic <B>types</B> and objects  a small pl 360 program  already found
39 Q0 2002 23 0.073074974 Lucene_47
amesplot-a higher level <B>data</B> plotting software system amesplot is an <B>extensible</B> software system designed to make the display of <B>data</B> as simple  painless  and neat as possible  the system described manufacturers  having diverse configurations  the elements common to all <B>types</B> of <B>data</B> plots are outlined written in most conventional higher <B>languages</B>  the functions of positioning  locating  and scaling
39 Q0 1470 24 0.072154865 Lucene_47
  but the <B>programmer</B> must understand <B>what</B> actions will be taken to achieve the desired effectthe structure of programming <B>languages</B> the following are identified as major components of every statements together   3  the means by which a program can obtain <B>data</B> inputs  several alternative forms list processing <B>languages</B>  illustrate the forms described  elementary program statements usually take
39 Q0 527 25 0.06884895 Lucene_47
the description list of concepts a concept is <B>defined</B> as a class of objects whose members can be distinguished by processing its properties  property is <B>defined</B> to <B>mean</B> a partition of the set of all objects into disjoint classes  the formal <B>definition</B> of a concept is recursive in nature  a concept <B>definition</B> of a concept and its description list structure  <B>like</B> the <B>definition</B>  the description list
39 Q0 2527 26 0.06715451 Lucene_47
 from one <B>type</B> to another  checks subscripts  and automatically detects many <B>types</B> of <B>programmer</B>
39 Q0 1210 27 0.06535789 Lucene_47
file-handling within fortran this note describes some fortran subroutines to facilitate handling of tape files  they <B>allow</B> symbolic naming of information files  without violating the casual scientific <B>programmer</B> s idea of simplicity  some comments on two years use of these subroutines are given  cacm august  1965 harrison  m  c  ca650814 jb march 6  1978 7 59 pm 1210 5 1210 1210 5 1210 1210 5
39 Q0 2939 28 0.0650237 Lucene_47
 liskov  b  snyder  a  atkinson  r  schaffert  c  programming <B>languages</B>  <B>data</B> <B>types</B>  <B>data</B> that three kinds of abstractions-procedural  control  and especially <B>data</B> abstractions-are useful <B>languages</B>  through the procedure or subroutine  clu provides  in addition to procedures  novel linguistic mechanisms that support the use of <B>data</B> and control abstractions  this paper provides
39 Q0 2138 29 0.064087115 Lucene_47
 permitting the <B>definition</B> of the representation of all <B>data</B> structures in terms of the access algorithm for elements of the structure  cacm december  1971 wulf  w  a  russell  d  b  programming <B>languages</B>  implementation language  systems programming  <B>data</B> structures 4.12 4.21 4.22 ca711205 jb february 2 are the ability to produce highly efficient object code  to <B>allow</B> access to all relevant hardware features
39 Q0 2699 30 0.06283178 Lucene_47
  set-theoretic <B>languages</B>  <B>data</B> structure choice 4.12 4.20 4.22 ca751208 jb january 5  1978 3 53 pmautomatic <B>data</B> structure choice in a language of very high level setl is a set-theoretically <B>allow</B> relations of inclusion and membership to be established  the domains and ranges of  tabulated to be proved  once facts of this kind have been established  automatic choice of <B>data</B> structures becomes
39 Q0 1835 31 0.06159237 Lucene_47
the iitran programming language the iitran language  developed to be used by students  and its important important features are described  iitran is a procedure-oriented language with a one-level block structure and a variety of <B>data</B> <B>types</B>  several novel and powerful features are included  b  k  hochsprung  r  r  <B>languages</B> programming <B>languages</B>  student programming systems  language
39 Q0 2684 32 0.060477078 Lucene_47
production systems  or can we do better than bnf  since the development of bnf  the <B>definition</B> of the syntax of programming <B>languages</B> has been almost universally associated with context-free requirements  notably the <B>compatibility</B> between the declaration of an identifier and its uses formal <B>definition</B> of syntax  as a practical illustration  a small but significant subset of pl i
39 Q0 1678 33 0.06010684 Lucene_47
automata  formal <B>languages</B>  <B>abstract</B> switching  and computability in a ph  computer science program a number of courses are listed in the area describe as automata  formal <B>languages</B>  <B>abstract</B> switching  and computability  that <B>might</B> be available to a ph  student in computer science  a brief catalog science program  automata  formal <B>languages</B>  switching theory  theory of computability 1.5 5.2 6.1
39 Q0 1213 34 0.056883033 Lucene_47
dynamic format specifications the use and implementation of two new fortran format conversions are discussed  these format <B>types</B> give the fortran <B>programmer</B> control of input output specifications at execution time  cacm august  1965 ranelletti  j  e  ca650811 jb march 6  1978 8 07 pm 1213 5 1213 1213 5 1213 1213 5 1213
39 Q0 2898 35 0.055944677 Lucene_47
a conceptual framework for a nonprocedural programming language a sequential programming language forces the <B>programmer</B> to prescribe explicitly the order in which the operations in his program have a task in a nonprocedural manner  in general  a program specified in this way will <B>allow</B> concurrent  descriptive programming  nonprocedural programming  definitional language  <B>data</B> flow programming
39 Q0 2406 36 0.055908784 Lucene_47
a <B>data</B> <B>definition</B> and mapping language a <B>data</B> <B>definition</B> language i sa declarative computer language for specifying <B>data</B> structures  most <B>data</B> <B>definition</B> <B>languages</B> concentrate on the declaration on a computer system  however  the need for <B>data</B> <B>definition</B> <B>languages</B> which describe both the logical of these  generalized  <B>data</B> <B>definition</B> <B>languages</B> are also discussed  cacm december  1973 sibley  e  h
39 Q0 1703 37 0.055791743 Lucene_47
accommodating standards and identification of programming <B>languages</B> the user public wants standardization and reliable identification of programming <B>languages</B> and related services  one way related family of <B>languages</B>  oppressive rigidity usually associated with standardization is avoided by a new accommodation technique accessible to the user to <B>allow</B> local variations with the language
39 Q0 3142 38 0.053625036 Lucene_47
 and <B>what</B> <B>type</B> of errors occur  how easily are they corrected  <B>what</B> is the reaction of consumers to errors-to a failure to correct them  <B>what</B> can be learned by designers of large management packages from such <B>data</B>  results show that with the present state of the art  approximately 40 percent of individuals  or households  having average contacts with different <B>types</B> of accounts experience one
39 Q0 3101 39 0.053016443 Lucene_47
  argument binding is under the control of the <B>programmer</B>  permitting the <B>definition</B> of various methods by treating procedures and their activation records  called environments  as <B>data</B> objects hanson  d  griswold  r  procedures  coroutines  programming <B>languages</B>  interpreters  snobol 4
39 Q0 2320 40 0.05271817 Lucene_47
 multiprogramming  programming <B>languages</B>  operating systems  concurrent processes  shared <B>data</B>  mutual exclusion of multiprogramming in a high level language  the notation used explicitly associates a <B>data</B> structure shared by concurrent processes with operations <B>defined</B> on it  this clarifies the meaning of programs regions and event variables enables the <B>programmer</B> to control scheduling of resources among
39 Q0 1098 41 0.051268782 Lucene_47
 <B>languages</B> under consideration are detailed  representations of <B>data</B>  both by the <B>programmer</B>a comparison of list-processing computer <B>languages</B>  including a detailed comparison of comit  ipl-v well-known computer programming <B>languages</B> which  among them  exhibit all the principal characteristics of existing list-processing <B>languages</B>  important common features of list-processing <B>languages</B>
39 Q0 2051 42 0.04953892 Lucene_47
 related <B>languages</B>  the investigator must arrange <B>data</B> for input by aligning pairs of suspected cognates in the <B>data</B> of each correspondence found in that pair of words  the output is a list of all correspondence <B>types</B> with their frequency of occurrence in the <B>data</B>  and a separate listing of each  of the programs  and illustrates its use with a small portion of hypothetical <B>data</B>  cacm june  1970 frantz
39 Q0 1262 43 0.04901842 Lucene_47
procedure-oriented language statements to facilitate parallel processing two statements are suggested which <B>allow</B> a <B>programmer</B> writing in a procedure-oriented language to indicate sections of program which are to be executed in parallel  the statements are do together and hold  these serve partly as brackets in establishing a range of parallel operation and partly to define each parallel path
39 Q0 1439 44 0.048625298 Lucene_47
mechanization of the curve fitting process  datan a process for fitting a curve to approximate <B>data</B> and the problem it creates for the engineer-<B>programmer</B> is <B>defined</B>  an approach has also been <B>defined</B> and a system has been written for the sru 1107 to mechanize a major portion of this process for their information only on the actual <B>data</B> points  cacm april  1966 simonsen  r  h  anketell  d  l
39 Q0 2264 45 0.048077554 Lucene_47
 is <B>defined</B> which translates the language into flowcharts for a simple machine  the action of the machine in executing a flowchart is <B>defined</B>  a proof is constructed that the effect of translating  during the course of constructing the proof  formal <B>definitions</B> of the concepts of value and side checking that the <B>definitions</B> derived in the step above are an acceptable formalization of the informal
39 Q0 1379 46 0.0475477 Lucene_47
a final solution to the dangling else of algol 60 and related <B>languages</B> the dangling else problem consists of a class of potential ambiguities in algol-<B>like</B> conditional statements whose basic form statements are <B>defined</B> by syntax equations in such a way as to preserve openness and closure equations are unambiguous  and that may change in the statement <B>types</B> required within the syntax equations
39 Q0 1602 47 0.047517143 Lucene_47
 is a drastic departure from the fortran algol <B>type</B>  though it <B>does</B> utilize fortran formula and logic describe his problem in  equation-<B>like</B>  form  the method of solution is automatically provided user can solve difficult computational problems  <B>like</B> the solution of differential equation that the pose <B>programmer</B> need not be concerned with these details  cacm may  1967 schlesinger  s  sashkin  l
39 Q0 2314 48 0.04681437 Lucene_47
 <B>languages</B>  design of programming <B>languages</B>  interactive systems  control structures  <B>data</B> structures be designed to facilitate production of large programs to manipulate large complex symbolic <B>data</B> form  but debugged  modified  made efficient  and run on <B>data</B>  because of this general framework  programmable control structures  and sophisticated <B>data</B> communication mechanisms  interactive
39 Q0 1002 49 0.04668204 Lucene_47
  and their application on computers whose assemblers <B>allow</B> the <B>definition</B> of recursive macros  cacma rapid method for digital filtering since much of the computer time spent in time-series analysis is used for multiplications  a minimum multiplication method was devised for digital filtering  with the expectation that it would be useful in the on line  real-time analysis of biological <B>data</B>
39 Q0 1869 50 0.0454911 Lucene_47
block structures  indirect addressing  and garbage collection programming <B>languages</B> have included explicit or implicit block structures to provide a naming convenience for the <B>programmer</B>  however  when indirect addressing is used  as in snobol  naming constraints may be introduced  two even when there is indirect addressing within function <B>definitions</B>  and  2  there is a significant
39 Q0 1693 51 0.045231823 Lucene_47
  is described which contains facilities for constructing  within the language  new <B>data</B> <B>types</B> as well element can be derived from the others with high efficiency in the object programs  constructs <B>like</B> the algol 60 for-statements and if-statements are not basic  they are special <B>types</B> of procedures  new  symbols   underlined words in algol 60  are implicitly <B>defined</B> by usage in other declarations
39 Q0 2299 52 0.04520687 Lucene_47
an <B>extensible</B> editor for a small machine with disk storage a design philosophy for developing a sophisticated utility program is illustrated by the actual design and implementation of a text editor  a versatile <B>data</B> structure is employed so that only a small number of programmed subroutines are necessary for all <B>types</B> of <B>data</B> manipulation  such a <B>data</B> structure is described  and its merits
39 Q0 595 53 0.044517398 Lucene_47
 by the <B>programmer</B>  the teaching problem arises in determining how thoroughly a student must know  historical <B>data</B> concerning students  programming proficiency is almost non-existent and  at best  difficult to measure  how then <B>might</B> we approach solving this problem  cacm may  1962 greene  i  ca620510 jb
39 Q0 1625 54 0.04349802 Lucene_47
on the automatic simplification of source-language programs methods of simplification that can be applied automatically to programs written in an algol-<B>like</B> language are discussed understanding of <B>what</B> the program is supposed to do  these methods have been implemented in a processor encountered in automatic improvement at the source-language level are discussed  and further <B>types</B>
39 Q0 2081 55 0.043012932 Lucene_47
 <B>data</B> structures suitable for a high level algorithmic language for mathematical programming of sequences of matrices  are considered  and matrix <B>operators</B> areext ended to sequence <B>operators</B> and cumulative <B>operators</B>  algorithms are given which use symbol manipulation of matrix expressions so calculus  <B>data</B> structures  linear programming  matrix  matrix concatenation  matrix sequences
39 Q0 1282 56 0.041309252 Lucene_47
the use of fortran in subroutines with cobol main programs by using the proper cobol coding techniques and accounting for differences in storage allocation and library routines between the two <B>languages</B>  it is possible to write fortran iv subroutines that may be called from cobol main programs  such a technique enables the <B>programmer</B> to take advantage of the most useful properties of each
39 Q0 2558 57 0.0410348 Lucene_47
protection in programming <B>languages</B> linguistic mechanisms which can be used to protect one subprogram from another s malfunctioning are described  function-producing functions and various <B>type</B>-tagging schemes are considered  an attempt is made to distinguish between access limitation and authentication  cacm january  1973 morris  j  h  jr  protection  <B>types</B>  environments trademarks  seals  access
39 Q0 867 58 0.040735133 Lucene_47
 to surfaces z g x y  <B>defined</B> over certain <B>types</B> of subareas of the  x y -space  the first model considers a rectangular area  with the constraint that the plane segments are <B>defined</B> over a grid successive approximations to optimal fits for any <B>type</B> of closed area  finally  applications
39 Q0 630 59 0.040634744 Lucene_47
an evaluation of autocode readability of the many requirements of an autocode  the pair of requirements  easy to read  and  easy to write  are not often compatible  this paper argues that readability can be added automatically in the translation process so that the <B>programmer</B> can enjoy the utmost the advantages of readability and <B>compatibility</B>  cacm march  1962 ellis  p  v  ca620302 jb march 20
39 Q0 2799 60 0.040310852 Lucene_47
stably updating <B>mean</B> and standard deviation of <B>data</B> by considering the  sample  <B>mean</B> of a set as <B>data</B> accumulates  the procedure is numerically stable and <B>does</B> not require storage of the <B>data</B>  methods for dealing with weighted <B>data</B> and <B>data</B> removal are presented  when updating the <B>mean</B> and square  <B>mean</B>  standard deviation  least squares  givens transformation  updating estimates  removing <B>data</B> 5.5
39 Q0 2178 61 0.03846089 Lucene_47
  extension   graspe  for processing directed graphs is <B>defined</B>  graspe consists of a <B>type</B> of directed graph <B>data</B> structure and a set of primitive operations for manipulating these structures  graspe may   the <B>definition</B> of graspe here is solely in terms of its semantics  that is  the <B>data</B> structures  <B>data</B> structure  flowchart  syntax  language <B>definition</B> 4.20 4.22 5.23 5.24 5.32 ca710704 jb
39 Q0 3097 62 0.038412698 Lucene_47
 requirement <B>does</B> not <B>allow</B> one to simply  park  at bit 0 and wait for a transfer request  the optimal at bit 0  <B>what</B> is the best shift strategy so that a block transfer request occurring at a random time
39 Q0 2717 63 0.03715371 Lucene_47
convert  a high level translation <B>definition</B> language for <B>data</B> conversion this paper describes a high level and nonprocedural translation <B>definition</B> language  convert  which provides very powerful and highly flexible <B>data</B> restructuring capabilities  its design is based on the simple underlying  database reorganization  translation <B>definition</B>  utility program  programming <B>languages</B>  nonprocedural
39 Q0 2201 64 0.037113808 Lucene_47
 will be the provision of a facility which will <B>allow</B> any professor to produce his own expository film graphics  computer animation  on-line systems  two-dimensional <B>languages</B>  crt  microfilm recorder 3.41 3.80
39 Q0 1033 65 0.037041984 Lucene_47
 utilizers an array-oriented symbolic source language containing powerful statement <B>types</B>  these include numeric  boolean  relational and selection <B>operators</B> on operands which can be entire arrays  the completely symbolic operating system includes display and entry of program and <B>data</B>  sequence control
39 Q0 409 66 0.03551972 Lucene_47
 and instances of large and complex <B>data</B> sets  as well as algorithms <B>defined</B> on these <B>data</B> sets  both <B>data</B> and algorithms may be expressed in a family of command and descriptive <B>languages</B>  the concept of distinct <B>data</B> descriptions and the content and use of such descriptions are discussed in some detail
39 Q0 2152 67 0.03547953 Lucene_47
display procedures although the use of structured display files is widespread in interactive computer graphics  these structures present a number of problems which tend to <B>restrict</B> their generality their generation  display procedures permit picture elements to be <B>defined</B> conditionally and also facilitate  computer graphics  programming <B>languages</B>  display files 4.20 4.41 ca711004 jb february 2  1978 1 11
39 Q0 3185 68 0.035407927 Lucene_47
the humble <B>programmer</B> we shall do a much better programming job  provided that we approach the task with a full appreciation if its tremendous difficulty  provided that we stick to modest and elegant programming <B>languages</B>  provided that we respect the intrinsic limitations of the human mind and approach the task as very humble programmers  cacm october  1972 dijkstra  e  w  ca721010 es march 18
39 Q0 2937 69 0.03491616 Lucene_47
an experimental evaluation of <B>data</B> <B>type</B> conventions the language in which programs are written can have a substantial effect on the reliability of the resulting programs  this paper discusses to reasonably small problems shows that the subjects had difficulty manipulating the representation of <B>data</B>  cacm august  1977 gannon  j  d  <B>data</B> <B>types</B>  experimentation  language design  redundancy  reliable
39 Q0 1783 70 0.034428082 Lucene_47
in-and-out conversions byan in-and-out conversion we <B>mean</B> that a floating-point number in one base is converted into a floating-point number in another base and then converted back to a floating-point number in the original base  for all combinations of rounding and truncation conversions the question is considered of how many significant digits are needed in the intermediate base to <B>allow</B>
39 Q0 1626 71 0.034121454 Lucene_47
 be enough core memory to contain all the <B>data</B> and programs  described in this paper are a number careful segmentation of system programs  allocation of virtual memory to <B>allow</B> address arithmetic for <B>type</B> determination  and a special algorithm for building reasonably linearized lists  a scheme <B>compatibility</B> between compiled and interpreted programs with no special declarations  cacm march  1967 bobrow
39 Q0 3150 72 0.033913977 Lucene_47
 for by the tasks we attempt  just as high level <B>languages</B> enabled the <B>programmer</B> to escape from the intricaciesbeyond programming <B>languages</B> as computer technology matures  our growing ability to create large of programming <B>languages</B> as they now exist  and lays out some possible directions for future research  cacm july  1979 winograd  t  programming  programming <B>languages</B>  programming systems  systems
39 Q0 618 73 0.03377872 Lucene_47
computers- the key to total systems control  an industrial viewpoint man-man-machine processes are characterized in five main <B>types</B>  and the markets for each <B>type</B> are shown for 1950 and 1960 and estimated for 1970  cacm march  1962 carlson  w  m  ca620314 jb march 20  1978 2 53 pm 618 5 618 618 5 618 618 5 618
39 Q0 1135 74 0.03376842 Lucene_47
  it stresses the structural analysis of the class of processes to be represented in the <B>languages</B>  as opposed to emphasizing formal  i e   contents-independent  syntactical <B>definitions</B>  it relies exclusively on nonprocedural representation of process as sets  tables  of relations between <B>data</B> and results to overcome well-known deficiencies of other business-oriented <B>languages</B> and fully meets the requirements
39 Q0 3171 75 0.033466965 Lucene_47
line numbers made cheap a technique is described for run-time line number administration to be used for implementations of high level <B>languages</B>  under suitable circumstances  this method requires absolutely no overhead  in either time or space  during execution of the program  cacm october  1979 klint  p  line number administration  diagnostic messages  <B>abstract</B> machine code 4.12 4.13 4.20 4.42
39 Q0 1206 76 0.033113196 Lucene_47
 to discard wrong information and to compute <B>mean</B> values of the parameters and their mpe s in terms of the irf  <B>data</B> <B>compatibility</B> tests with any number of different equations can be made quicklythe self-judgment method of curve fitting a computer-oriented method for processing and communicating numerical <B>data</B> is described  the instrument reliability factors  irf   which exactly define
39 Q0 2876 77 0.032445718 Lucene_47
  the control over <B>what</B> a user is allowed to do with a piece of information <B>supplied</B> to himintentional resolution of privacy protection in database systems traditionally  privacy protection in database systems is understood to be the control over <B>what</B> information a given user can get from  n  protection in database  protection in programming <B>languages</B>  privacy  security  intentional
39 Q0 1463 78 0.032200318 Lucene_47
more on <B>extensible</B> machines one of the most salient characteristics of <B>extensible</B> machines  em  is the facility for providing system control over program-to-program and program-to-<B>data</B> linkage  e g program-to-program and program-to-<B>data</B> linkage that were embodied in the authors  previous paper of programming <B>languages</B>  cacm march  1966 leonard  g  f  goodroe  j  r  ca660309 jb march 3  1978 1
39 Q0 2906 79 0.031466685 Lucene_47
a very high level programming language for <B>data</B> processing applications application development today is too labor-in tensive  in recent years  very high-level <B>languages</B> have been increasingly explored as a solution to this problem  the business <B>definition</B> language  bdl  is such a language  one aimed at business <B>data</B> processing problems  the concepts in bdl mimic those which have evolved through
39 Q0 2305 80 0.03129468 Lucene_47
the  plankalkul  of konrad zuse  a forerunner of today s programming <B>languages</B> plankalkul was an attempt by korrad zuse in the 1940 s to devise a notational and conceptual system for writing <B>what</B> programming <B>languages</B>  the investigation is of historical interest  also  it may provide insights july  1972 bauer  f  l  wossner  h  higher programming <B>languages</B>  programming  theory of programming
39 Q0 3102 81 0.030928694 Lucene_47
incorporation of units into programming <B>languages</B> the issues of how a programming language <B>might</B> aid in keeping track of physical units  feet  sec  etc   are discussed  a method is given for the introduction of relationships among units  a watt is volts amps  a yard is three feet  and subsequent automatic conversion based upon these relationships  various proposals for syntax are considered  cacm
39 Q0 1911 82 0.030787073 Lucene_47
 <B>definitions</B>  cacm april  1969 petrick  s  r  postal  p  m  rosenbaum  p  s  natural <B>languages</B>on coordination reduction and sentence analysis a class of coordination phenomena in natural <B>languages</B> is considered within the frame work of transformational theory  to account for these phenomena it is proposed that certain machinery be added to the syntactic component of a transformational
39 Q0 2723 83 0.030717975 Lucene_47
-<B>like</B> list operations and the other performing garbage collection continuously  is thoroughly examined  the necessary capabilities of each processor are <B>defined</B>  as well as interprocessor communication throughout is to <B>allow</B> the list processor to run unimpeded while the other processor reclaims list storage processing  compactification  relocation  lisp  list processing  free storage  pointers  <B>data</B>
39 Q0 2950 84 0.030663243 Lucene_47
 algorithms based on an <B>abstract</B> model of a scheduling system which formalizes the notion of priority  various classes of scheduling algorithms are <B>defined</B> and related to existing algorithms  a criterion for the implementation efficiency of an algorithm is developed and results in the <B>definition</B> of time  the dependence of processing rates on priorities is derived  the <B>abstract</B> model provides
39 Q0 1142 85 0.029999806 Lucene_47
an extension of algol-<B>like</B> <B>languages</B> cacm february  1964 rose  g  f  ca640201 jb march 10  1978 4 57 am 1102 4 1142 1142 4 1142 1781 4 1142 1945 4 1142 762 4 1142 949 4 1142 1142 5 1142 1142 5 1142 1142 5 1142 483 5 1142
39 Q0 3006 86 0.029522091 Lucene_47
anomalies with variable partition paging algorithms five <B>types</B> of anomalous behavior which may occur in paged virtual memory operating systems a redefined  one <B>type</B> of anomaly  for example  concerns the fact that  with certain reference strings and paging algorithms  an increase in <B>mean</B> memory allocation may result in an increase in fault rate  two paging algorithms  are examined in terms
39 Q0 724 87 0.029506607 Lucene_47
a profile of the <B>programmer</B> synopsis  549 members of the acm participated in a study concerned primarily with the attitudes of programmers toward their careers and jobs  a very high percentage of programmers have apparently entered their careers by accident  it has proven a happy choice for most problems for programming in the immediate future are listed by participants  <B>languages</B>  personnel  various
39 Q0 2546 88 0.029099135 Lucene_47
  grammar design  language <B>definition</B>  inference  identification in the limit  <B>extensible</B> <B>languages</B>the use of grammatical inference for designing programming <B>languages</B> both in designing a new programming language and in extending an existing language  the designer is faced with the problem of deriving a  natural  grammar for the language  we are proposing an interactive approach to the grammar
39 Q0 1180 89 0.029048948 Lucene_47
axle  an axiomatic language for string transformations axle is a language designed for <B>data</B> manipulation  <B>data</B> arranged in a linear form in a workspace is transformed according to a table of axioms  imperatives are applied in accordance with <B>definitions</B> of symbolic terms  presented systematically in an assertion table  the process of <B>definition</B> includes the special case of recursive assertions  several
39 Q0 2909 90 0.028437382 Lucene_47
<B>what</B> can we do about the unnecessary diversity of notation for syntactic <B>definitions</B>  cacm november  1977 wirth  n  syntactic description language  extended bnf 4.20 ca771107 jb december 27  1977 7 20 am 2909 5 2909 2909 5 2909 2909 5 2909
39 Q0 2722 91 0.026685085 Lucene_47
  as a <B>data</B> structure for storage of information to be retrieved by associative searches  the k-d tree is <B>defined</B> and examples are given  it is shown to be quite in its storage requirements  a significant advantage of this structure is that a single <B>data</B> structure can handle many <B>types</B> of queries very
39 Q0 1112 92 0.026625892 Lucene_47
a technique for computer detection and correction of spelling errors  the method described assumes that a word which cannot be found in a dictionary has at most one error  which <B>might</B> be a wrong  missing or extra letter or a single transposition  the unidentified input word is compared <B>types</B>  cacm march  1964 damerau  f  j  ca640320 jb march 10  1978 2 21 am 1112 4 1112 1592 4 1112
39 Q0 2295 93 0.02655651 Lucene_47
comment on the composition of semantics in algol 68 cacm august  1972 van der poel  w  l  programming primitives  programming <B>languages</B>  algol  semantics  recursive composition  design of programming <B>languages</B>  <B>data</B> structures 1.3 4.2 4.22 5.23 5.24 ca720807 jb january 30  1978 9 29 am 2295 5 2295 2295 5 2295 2295 5 2295
39 Q0 2084 94 0.026524374 Lucene_47
a note on the complement of inherently ambiguous context-free <B>languages</B> cacm march  1970 maurer  h  a  ambiguity  inherent ambiguity  complement  context-free language  chomsky-language  phrase structure language  production system  <B>type</B> 2 language  bounded language 5.22 5.24 ca700314 jb february 13  1978 3 37 pm 2084 5 2084 2084 5 2084 2084 5 2084
39 Q0 1253 95 0.02624983 Lucene_47
quikscript-a simscript- <B>like</B> language for the g-20 quikscript is a simulation language based on simscript and programmed entirely in an algebraic language  20-gate  the quikscript language  its internal implementation  and major differences between quikscript and simscript are presented  this paper this material understandable to the reader familiar with algebraic <B>languages</B>  cacm june  1965 tonge  f  m
39 Q0 1988 96 0.02609505 Lucene_47
a formalism for translator interactions a formalism is presented for describing the actions of processors for programming <B>languages</B>-compilers  interpreters  assemblers-and their interactions in complex systems such as compiler-compilers or extendible <B>languages</B>  the formalism here <B>might</B> be used to define and answer such a question as  can one do bootstrapping using a meta-compiler whose metaphase
39 Q0 2873 97 0.026091062 Lucene_47
 <B>definition</B> of geometric objects and elements  computes their parameters  and displays the results of the possibility of using this language to design other user oriented <B>languages</B>  lg has been specifically in geometry  cacm april  1976 raymond  j  interactive programming  problem oriented <B>languages</B>  computer
39 Q0 1989 98 0.02608876 Lucene_47
 associated with the arcs of the grammar network <B>allow</B> for the reordering  restructuring  and copying of constituents necessary to produce deep-structure representations of the <B>type</B> normally obtained from a transformational analysis  and conditions on the arcs <B>allow</B> for a powerful selectivity which can
39 Q0 2732 99 0.025979666 Lucene_47
guarded commands  nondeterminacy and formal derivation of programs so-called  guarded commands  are introduced as a building block for alternative and repetitive constructs that <B>allow</B> nondeterministic program components for which at least the activity evoked  but possible even the final state  programming <B>languages</B>  sequencing primitives  program semantics  programming language semantics
39 Q0 3067 100 0.025924351 Lucene_47
 inclusion property  a generalized optimal policy  gopt  is also <B>defined</B>  at its operating points it minimizes aggregated retention and swapping costs  special cases of the cost structure <B>allow</B> gws and gopt policies  empirical <B>data</B> from an actual system are included  cacm september  1978 denning  p  slutz  d
*************Query 40*************************

40 Q0 2265 1 0.27102968 Lucene_47
  f  <B>type</B> checking  <B>types</B>  lambda calculus  models for programming <B>languages</B>  syntax  semanticsa model for <B>type</B> checking most current programming <B>languages</B> treat computation over different classes of objects  <B>e</B> <B>g</B>  numbers  strings  labels and functions   for correct compilation and execution characterizes the <B>type</B> relations within the program and eliminates <B>all</B> other information  the determination
40 Q0 1588 2 0.21237585 Lucene_47
 <B>data</B> <B>list</B> organizations  most <B>list</B>-processing <B>languages</B> <B>have</B> suffered from their inability to deal directly with complex <B>data</B> <B>structures</B> and or from their inability to perform the complete range of programming language operations upon the <B>data</B> <B>list</B> <B>structures</B>  these two problems <B>have</B> beenpl <B>i</B> <B>list</B> processing the concepts of <B>list</B> processing <B>have</B> been introduced into the pl <B>i</B> language
40 Q0 1098 3 0.17742005 Lucene_47
 aids and debugging facilities  a rough comparison shows that <B>all</B> the <B>languages</B> discussed <B>have</B>a comparison of <B>list</B>-processing computer <B>languages</B>  including a detailed comparison of comit  ipl-v well-known computer programming <B>languages</B> which  among them  exhibit <B>all</B> the principal characteristics of existing <B>list</B>-processing <B>languages</B>  important common features of <B>list</B>-processing <B>languages</B>
40 Q0 1470 4 0.17635292 Lucene_47
the structure of programming <B>languages</B> the <B>following</B> are identified as major components of every <B>list</B> processing <B>languages</B>  illustrate the forms described  elementary program statements usually take <B>data</B> <B>structures</B>  but can be error-causing distractions in other contexts  the author discusses concludes by suggesting the evolution of programming <B>languages</B> toward one which will permit <B>all</B>
40 Q0 2051 5 0.17529826 Lucene_47
 in the <B>data</B> of each correspondence found in that pair of words  the output is a <B>list</B> of <B>all</B> correspondence <B>types</B> with their frequency of occurrence in the <B>data</B>  and a separate listing of each related <B>languages</B>  the investigator must arrange <B>data</B> for input by aligning pairs of suspected cognatesa pl <B>i</B> program to assist the comparative linguist a practical pl <B>i</B> program is described which can
40 Q0 2956 6 0.17252086 Lucene_47
some ideas on <B>data</B> <B>types</B> in high-level <B>languages</B> a number of issues are explored concerning the notion that a <B>data</B> <B>type</B> is a set of values together with a set of primitive operations on those values of the more narrow for <B>i</B>   1 to n notation   the use of the domain of an array as a <B>data</B> <B>type</B> june  1977 gries  d  gehani  n  <B>data</B> <B>types</B>  generic procedures  programming <B>languages</B> 4.12 4.20 4.22
40 Q0 1457 7 0.16376992 Lucene_47
<B>data</B> manipulation and programming problems in automatic information retrieval automatic information retrieval programs require the manipulation of a variety of different <B>data</B> <B>structures</B>  including linear text  sparse matrices  and tree or <B>list</B> <B>structures</B>  the main <B>data</B> manipulations to be performed in automatic information systems are first briefly reviewed  a variety of <B>data</B> representations
40 Q0 1485 8 0.12668817 Lucene_47
  <B>frequently</B> from <B>list</B> processing <B>languages</B>  illustrate the forms described  the advantages  disadvantages concludes with the suggestion that programming <B>languages</B> evolve toward one which will permit <B>all</B>the structure of programming <B>languages</B> in this paper the major components of every programming statements together   3  the means by which a program can obtain <B>data</B> inputs  several alternative
40 Q0 2941 9 0.1223242 Lucene_47
 safe  cacm august  1977 geschke  c  m  morris  j  h  jr  satterthwaite  <B>e</B>  h  programming <B>languages</B>  <B>types</B>  modules  <B>data</B> <B>structures</B>  systems programming 4.22 ca770802 jb december 28  1977 8 07 am facilities in mesa  an equivalence algorithm for <B>types</B> and <B>type</B> coercions  the benefits of the <B>type</B>-are discussed  and some implications for mesa and similar programming <B>languages</B> are suggested  the specific
40 Q0 3105 10 0.11941397 Lucene_47
 checking similar to <B>type</B> checking  the approach can be used to extend <B>any</B> strongly-typed language  but is particularly suitable for extending <B>languages</B> that support the notion of abstract <B>data</B> <B>types</B>  cacm may  1978 jones  a  liskov b  programming <B>languages</B>  access control  <B>data</B> <B>types</B>  abstract <B>data</B> <B>types</B>  <B>type</B> checking  capabilities 4.20 4.35 ca780502 dh february 26  1979 3 19 pm 1458 4 3105 1523 4
40 Q0 2699 11 0.11843651 Lucene_47
  mappings to be estimated from <B>above</B> and below  and the single-valuedness of  tabulated  mappings to be proved  once facts of this kind <B>have</B> been established  automatic choice of <B>data</B> <B>structures</B> becomes  set-theoretic <B>languages</B>  <B>data</B> structure choice 4.12 4.20 4.22 ca751208 jb january 5  1978 3 53 pmautomatic <B>data</B> structure choice in a language of very high level setl is a set-theoretically
40 Q0 2406 12 0.11633656 Lucene_47
a <B>data</B> definition and mapping language a <B>data</B> definition language <B>i</B> sa declarative computer language for specifying <B>data</B> <B>structures</B>  most <B>data</B> definition <B>languages</B> concentrate on the declaration of logical <B>data</B> <B>structures</B> with little concern for how these <B>structures</B> are physically realized of these  generalized  <B>data</B> definition <B>languages</B> are also discussed  cacm december  1973 sibley  <B>e</B>  h
40 Q0 1135 13 0.11303769 Lucene_47
 characteristic of the particular application  furthermore local changes of a process  <B>e</B> <B>g</B>  changes affecting only one of the output files involved  can be effected by local modifications in the program  <B>e</B> to emphasizing formal  <B>i</B> <B>e</B>   contents-independent  syntactical definitions  it relies exclusively common to <B>all</B> processes of such class  permits writing extremely compact programs  even for comparatively
40 Q0 2705 14 0.10847933 Lucene_47
 <B>languages</B> toward flexion less  word-order based language <B>types</B> speaks for programming language design literature  <B>i</B> <B>e</B>  programs  of general utility and studies of questions related to program style  cacmprogramming <B>languages</B>  natural <B>languages</B>  and mathematics some social aspects of programming are illuminated through analogies with similar aspects of mathematics and natural <B>languages</B>  the split
40 Q0 2002 15 0.10296155 Lucene_47
 manufacturers  having diverse configurations  the elements common to <B>all</B> <B>types</B> of <B>data</B> plots are outlined and other effects  cacm september  1970 hirschsoln  <B>i</B>  computer graphics  <B>data</B> potting  <B>data</B> displayamesplot-a higher level <B>data</B> plotting software system amesplot is an extensible software system designed to make the display of <B>data</B> as simple  painless  and neat as possible  the system described
40 Q0 2060 16 0.09756018 Lucene_47
 reference and its value   3  <B>all</B> compound <B>data</B> <B>structures</B> are treated as functions   4  <B>type</B> declarations are not permitted  the functional approach to <B>data</B> <B>structures</B> and the use of references insure  regardless of its internal representation  more generally  <B>any</B> <B>data</B> structure may be implicit  <B>i</B> <B>e</B> concept gedanken is an experimental programming language with the <B>following</B> characteristics   1  <B>any</B> value
40 Q0 2651 17 0.09511457 Lucene_47
 <B>types</B>  modes  mode unions  <B>type</B> conversion  coercion  generic functions  extensible <B>languages</B>  <B>data</B>the treatment of <B>data</B> <B>types</B> in el1 in constructing a general purpose programming language  a key issue is providing a sufficient set of <B>data</B> <B>types</B> and associated operations in a manner that permits treatment of <B>data</B> <B>types</B> includes provision for programmer-defined <B>data</B> <B>types</B> <B>data</B> <B>types</B> and generic
40 Q0 2148 18 0.091825776 Lucene_47
  lewi  j  sintzoff  m  wodon  p  l  programming primitives  programming <B>languages</B>  algol  semantics  recursive composition  design of programming <B>languages</B>  <B>data</B> <B>structures</B> 1.3 4.2 4.22 5.23 5.24the composition of semantics in algol 68 the main features of algol 68 are explained from a semantic point of view  it is shown how the language permits the composition of values and actions  <B>i</B> <B>e</B>
40 Q0 2314 19 0.091597 Lucene_47
 facilitate use of complex <B>data</B> stores  cacm july  1972 bobrow  d  <B>g</B>  <B>list</B> processing  programming <B>languages</B>  design of programming <B>languages</B>  interactive systems  control <B>structures</B>  <B>data</B> <B>structures</B>  programmable control <B>structures</B>  and sophisticated <B>data</B> communication mechanisms  interactiverequirements for advanced programming systems for <B>list</B> processing <B>list</B> processing systems should
40 Q0 2341 20 0.0914981 Lucene_47
blocks-a new <B>data</B> <B>type</B> for snobol4 a new <B>data</B> <B>type</B>  called a block  has been implemented  nonnumerical programming  snobol4  <B>data</B> <B>types</B>  two-dimensional mathematics  test processing for overstriking   blocks may be printed  concatenated in <B>any</B> of three dimensions  and merged on the basis justification and preparation  <B>have</B> been programmed on a printer in what appears to be an easy and natural
40 Q0 1324 21 0.09144323 Lucene_47
 from english into logical calculi  systems are classified as <B>list</B>-structured <B>data</B>-based  graphic <B>data</B>-based  text-based and inferential  principles and methods of operations are detailed and discussed  it is concluded that the <B>data</B>-base question-answer has passed from initial research  translating into formal <B>languages</B> and searching large tree <B>structures</B>  cacm january  1965 simmons
40 Q0 1847 22 0.09117687 Lucene_47
 and the vertices examined in turn  unexamined vertices being stored in a pushdown <B>list</B> to await examination  one stage in the process is to take the top element v of the pushdown <B>list</B> and examine it  <B>i</B> <B>e</B>  inspect <B>all</B> those edges  v z  of the graph for which z has not yet been examined  if z is already as n 2 and the time as n <B>g</B> where <B>g</B> depends on the <B>type</B> of graph involved  <B>g</B> is bounded below by 2
40 Q0 2254 23 0.09031092 Lucene_47
 of partitioning for array <B>languages</B>  of general interest is the <B>data</B> structure for partitioning  this consists of dynamic tree <B>structures</B> which are used to derive and maintain the array controldynamic partitioning for array <B>languages</B> the classical process of partitioning an array for different <B>types</B> of arrays  so that subarrays may vary over the original array in a nearly
40 Q0 2931 24 0.089262255 Lucene_47
 with the method of <B>data</B> <B>types</B> as lattices  or partial orderings  under an information content orderinglogic and programming <B>languages</B> logic has been long in terested in whether answers to certain of formalization  more recently  precise comparisons in the efficiency of decision methods <B>have</B> become available question is whether methods of logic <B>have</B> significance in the other direction for the more applied
40 Q0 2906 25 0.08492602 Lucene_47
a very high level programming language for <B>data</B> processing applications application development today is too labor-in tensive  in recent years  very high-level <B>languages</B> <B>have</B> been increasingly aimed at business <B>data</B> processing problems  the concepts in bdl mimic those which <B>have</B> evolved through for writing calculations  cacm november  1977 hammer  m  owe  w  <B>g</B>  kruskal  v  j  wladawsky  <B>i</B>  very
40 Q0 2316 26 0.08477191 Lucene_47
 specific <B>languages</B> are discussed  cacm july  1972 sammet  j  <B>e</B>  programming <B>languages</B>  higher levelprogramming <B>languages</B>  history and future this paper discusses both the history and future of programming <B>languages</B>    higher level <B>languages</B>   some of the difficulties in writing such a history are indicated  a key part of the paper is a tree showing the chronological development of <B>languages</B>
40 Q0 2295 27 0.083160095 Lucene_47
comment on the composition of semantics in algol 68 cacm august  1972 van der poel  w  l  programming primitives  programming <B>languages</B>  algol  semantics  recursive composition  design of programming <B>languages</B>  <B>data</B> <B>structures</B> 1.3 4.2 4.22 5.23 5.24 ca720807 jb january 30  1978 9 29 am 2295 5 2295 2295 5 2295 2295 5 2295
40 Q0 1350 28 0.08248316 Lucene_47
the augmented predictive analyzer for context-free <B>languages</B>-its relative efficiency it has been proven by greibach that for a given context-free grammar <B>g</B>  a standard-form grammar gs can be constructed  which generates the same <B>languages</B> as is generated by <B>g</B> and whose rules are <B>all</B> of the form z of <B>any</B> context-free grammar <B>g</B>  given an equivalent standard-form grammar gs  the structural
40 Q0 1162 29 0.081808984 Lucene_47
 to specify the mapping of <B>any</B> language which conforms to a canonical <B>list</B> form into an arbitrary <B>languages</B> generally provide a one-for-one translation from a symbolic to a numeric version of a program  or whatever else the user <B>might</B> desire  thus  this meta-language can be used to map from one assembly
40 Q0 2470 30 0.078556366 Lucene_47
 be introduced into <B>languages</B> through the mechanism of singleton <B>data</B> <B>types</B>  both deterministic  formal systems  lambda-calculus  extensible <B>languages</B>  <B>data</B> <B>types</B>  modes  axioms  correctness  formal language definition  formal description  <B>data</B> <B>structures</B>  description <B>languages</B>  models of computation how the system can be used to build composite <B>data</B> <B>types</B> out of simper ones with the operations
40 Q0 1309 31 0.0765628 Lucene_47
  the system requires initial preparation of large <B>data</B> banks containing <B>data</B> in elementary form  use of two special <B>languages</B>  extract and matran  permits selective extraction of <B>any</B> <B>data</B> subset  efficient processing through <B>any</B> computational sequence  and flexible presentation of results in either manipulation and computation  cacm february  1965 montillon  <B>g</B>  d  ca650215 jb march 7  1978 10 51 pm
40 Q0 1710 32 0.07376272 Lucene_47
  associative  <B>data</B> structure  ring structure lists  <B>list</B> structure  set <B>languages</B>  modeling  graphicsasp-a ring implemented associative structure package asp is a general purpose associative <B>data</B> structure package in which an arbitrary number of <B>data</B> items and an arbitrary number of the relationships between these <B>data</B> items may be represented  a special picture language is described which has
40 Q0 409 33 0.072536476 Lucene_47
 and instances of large and complex <B>data</B> sets  as well as algorithms defined on these <B>data</B> sets  both <B>data</B> and algorithms may be expressed in a family of command and descriptive <B>languages</B>  the concept of distinct <B>data</B> descriptions and the content and use of such descriptions are discussed in some detail  cacm january  1961 cheatham jr   t  <B>e</B>  collins jr   <B>g</B>  o  leonard  <B>g</B>  f  ca610105 jb march 17  1978
40 Q0 1456 34 0.07147888 Lucene_47
 and other <B>list</B> processing <B>languages</B> are ideally suited for producing complex associative <B>structures</B>  they are inadequate vehicles for language processing on <B>any</B> large scale-at east until they can usestorage and retrieval of aspects of meaning in directed graph <B>structures</B> an experimental system that uses lisp to make a conceptual dictionary is described  the dictionary associates with each
40 Q0 2957 35 0.07069814 Lucene_47
 into a higher-level object  a new <B>data</B> <B>type</B>  called aggregation  is developed which  under certain criteria that aggregate <B>types</B>  and other <B>types</B> which support real-world abstractions without in troducing implementation detail  should be incorporated into programming <B>languages</B>  cacm june  1977 smith  j  m  smith  d  c  p  <B>data</B> abstraction  relational database  <B>data</B> <B>type</B>  aggregation  database design
40 Q0 1769 36 0.07031255 Lucene_47
  computer-aided design  problem-oriented <B>languages</B>  <B>data</B> communication  education  computer science  programming  time-sharing  education  <B>data</B> communication  and displays are judged by how effectively  problem-oriented <B>languages</B> are particularly effective over the entire front  online computers and time-sharing also rate high by this measure  education and increased understanding are basic to <B>all</B>
40 Q0 2939 37 0.06984831 Lucene_47
 liskov  b  snyder  a  atkinson  r  schaffert  c  programming <B>languages</B>  <B>data</B> <B>types</B>  <B>data</B> that three kinds of abstractions-procedural  control  and especially <B>data</B> abstractions-are useful <B>languages</B>  through the procedure or subroutine  clu provides  in addition to procedures  novel linguistic mechanisms that support the use of <B>data</B> and control abstractions  this paper provides
40 Q0 3103 38 0.0669558 Lucene_47
 with abstract <B>data</B> <B>types</B> such as sets and lists  programmer time can be saved by automating the process of filling in low-level implementation details  in the past  programming systems <B>have</B> provided are also reviewed  cacm may  1978 low  j  abstract <B>data</B> <B>types</B>  automatic programming  <B>data</B>automatic <B>data</B> structure selection  an example and overview the use of several levels
40 Q0 1835 39 0.06602336 Lucene_47
the iitran programming language the iitran language  developed to be used by students  and its important important features are described  iitran is a procedure-oriented language with a one-level block structure and a variety of <B>data</B> <B>types</B>  several novel and powerful features are included  b  k  hochsprung  r  r  <B>languages</B> programming <B>languages</B>  student programming systems  language
40 Q0 2317 40 0.0638949 Lucene_47
programming systems and <B>languages</B> 1965-1975 in spite of impressive gains by pl <B>i</B>  fortran and cobol remain the <B>languages</B> in which most of the world s production programs are written and will remain and in extensible <B>languages</B>  but so far at least they <B>have</B> had little practical impact  problem-oriented <B>languages</B> may very well become the most important language development area in the next five to ten years
40 Q0 1051 41 0.063547626 Lucene_47
  <B>following</B> a brief description of standard <B>list</B> <B>structures</B> with single-word items  the multiword items  this paper attempts to draw together various recent <B>papers</B> which <B>have</B> applied some of these conceptsmultiword <B>list</B> items the <B>list</B> concept as originally proposed by newell  simon and shaw specified single computer words as elements of a <B>list</B>  this report describes the use of two or more consecutive
40 Q0 2814 42 0.06108684 Lucene_47
roster of programming <B>languages</B> for 1974-75 cacm december  1976 sammet  j  <B>e</B>  ca761201 jb january 3  1978 2 38 pm 2814 5 2814 2814 5 2814 2814 5 2814
40 Q0 2003 43 0.061004125 Lucene_47
 to the description of the features of the two high level user oriented <B>languages</B>  operating <B>all</B> the functions needed in computer-aided circuit design  the second one is coif  a circuit oriented specifications  it is an extension of fortran with graphic-<B>type</B> variables  so that the designer who to extend the use of the two <B>languages</B> to different computer-assisted applications  cacm september
40 Q0 2198 44 0.059669506 Lucene_47
 <B>languages</B>  <B>data</B> <B>structures</B>  storage <B>structures</B>  information retrieval  transaction processing 3.5 is that of providing more complex <B>data</B> <B>structures</B> than those already available in conventional as a basis for further development work is considered at some length with respect to <B>data</B> <B>structures</B>  hostintroduction to  feature analysis of generalized <B>data</B> base management systems  this paper
40 Q0 1459 45 0.05891431 Lucene_47
requirements for real-time <B>languages</B> real-time <B>languages</B> <B>have</B> different requirements from other programming <B>languages</B> because of the special nature of their applications  the environment in which their object programs are executed and the environment in which they may be compiled  it may not be the language extensions that ultimately advance developments in the field  progress may be made
40 Q0 2138 46 0.057008967 Lucene_47
 permitting the definition of the representation of <B>all</B> <B>data</B> <B>structures</B> in terms of the access algorithm for elements of the structure  cacm december  1971 wulf  w  a  russell  d  b  programming <B>languages</B>  implementation language  systems programming  <B>data</B> <B>structures</B> 4.12 4.21 4.22 ca711205 jb february 2 are the ability to produce highly efficient object code  to allow access to <B>all</B> relevant hardware features
40 Q0 2078 47 0.05685543 Lucene_47
 for this problem area are defined and compared with current computer graphic <B>languages</B>  four alternative <B>data</B> <B>structures</B> that allow automated space planning are described and compared  cacm april  1970 eastman  c  m  automated design  <B>data</B> <B>structures</B>  computer graphics  computer-aided design  engineering
40 Q0 1035 48 0.056794204 Lucene_47
characteristics of the fortran cep language the fortran cep <B>languages</B> differs from fortran ii mixtures  in an input output <B>list</B> or in an expression  of quantities that occur under different modes   3 the restrictions on the complexity of the <B>list</B> of quantities to be transmitted between the magnetic core memory and the drum or the magnetic tape units  cacm july  1964 mancino  o  <B>g</B>  ca640712 jb march 9
40 Q0 2527 49 0.056142982 Lucene_47
 from one <B>type</B> to another  checks subscripts  and automatically detects many <B>types</B> of programmer errors  cacm april  1973 hassitt  a  lageschulte  j  w  lyon  l  <B>e</B>  computer architecture  high level the statements of a high level language <B>have</B> been proposed in the past  this report describes the actual operational and correctly executes almost <B>all</B> of the apl operations on scalars  vectors  and arrays
40 Q0 2940 50 0.055732466 Lucene_47
 <B>data</B> <B>types</B>  in this paper the abstraction techniques are extended from simple <B>data</B> representation  1977 shaw  m  wulf  w  a  abstraction and representation  abstract <B>data</B> <B>types</B>  assertions  control  program specifications  programming <B>languages</B>  programming methodology  proofs of correctness  <B>types</B> <B>data</B> and the control structure of the language itself  a means of specializing alphard s loops
40 Q0 2897 51 0.05500369 Lucene_47
 described <B>above</B> compares favorably with the code produced by a conventional pl <B>i</B> optimizing compiler  cacm techniques <B>have</B> allowed a new design for compilers to emerge  such a compiler translates the parsed one possible expansion-the task of tailoring this code to take advantage of <B>any</B> special cases object code  the traditionally difficult pl <B>i</B> concatenate statement was investigated as a detailed
40 Q0 1937 52 0.05494491 Lucene_47
 system design are described  cacm february  1969 day  r  h  mansfield  m  k  ellis  m  <B>e</B>  <B>data</B> display  information retrieval  graphic display  command <B>languages</B>  report program generation  managementcodas  a <B>data</B> display system codas  a customer oriented <B>data</B> system  is a user-oriented <B>data</B> for specifying <B>data</B> retrieval and display requests  <B>data</B> is displayed as tables and graphs produced
40 Q0 2036 53 0.054770805 Lucene_47
 of functions to accomplish the <B>above</B> which could be embedded into <B>any</B> string processing language is suggested systems is given  cacm july  1970 grant  c  a  time-sharing  command <B>languages</B>  pseudo-teletype
40 Q0 2264 54 0.054770805 Lucene_47
 and executing <B>any</B> program can be expressed solely in terms of the value and side-effect of the program checking that the definitions derived in the step <B>above</B> are an acceptable formalization of the informal description  program correctness  programming <B>languages</B>  semantics 4.22 5.23 5.24 ca721105 jb january 27
40 Q0 3102 55 0.05434233 Lucene_47
incorporation of units into programming <B>languages</B> the issues of how a programming language <B>might</B> aid in keeping track of physical units  feet  sec  etc   are discussed  a method is given for the introduction of relationships among units  a watt is volts amps  a yard is three feet  and subsequent automatic conversion based upon these relationships  various proposals for syntax are considered  cacm
40 Q0 1678 56 0.054115407 Lucene_47
automata  formal <B>languages</B>  abstract switching  and computability in a ph  computer science program a number of courses are listed in the area describe as automata  formal <B>languages</B>  abstract switching  and computability  that <B>might</B> be available to a ph  student in computer science  a brief catalog science program  automata  formal <B>languages</B>  switching theory  theory of computability 1.5 5.2 6.1
40 Q0 2850 57 0.053330936 Lucene_47
  instead of supplying the normal inputs to a program  <B>e</B> <B>g</B>  numbers  one supplies symbols representing formulas over the input symbols  the difficult  yet <B>interesting</B> issues arise during the symbolic execution of conditional branch <B>type</B> statements  a particular system called effigy which provides programs written in a simple pl <B>i</B> style programming language  it includes many standard debugging features
40 Q0 2718 58 0.052846488 Lucene_47
a preliminary system for the design of dbtg <B>data</B> <B>structures</B> the functional approach to database design is introduced  in this approach the goal of design is to derive a <B>data</B> structure which to design <B>data</B> <B>structures</B> conforming to the <B>data</B> base task group specifications  the automatic used to generate declaratives  cacm october  1975 gerritsen  r  network model of databases  <B>data</B>
40 Q0 265 59 0.05245727 Lucene_47
low level language subroutines for use within fortran this paper describes some subroutines  coded in symbolic <B>languages</B> and for use within fortran coded programs  to deal with  special arithmetic   <B>e</B> <B>g</B>  multi-precision arithmetic   symbol manipulation  bit manipulation and expanded character set input-output  and visual display  cacm november  1961 barnett  m  p  ca611103 jb march 15  1978 10 59
40 Q0 1612 60 0.052331038 Lucene_47
 of the productions defining the grammar  the essential weakness of the method is in <B>dealing</B> with complicated syntactic <B>structures</B> which are in practice only sparsely occupied  <B>e</B> <B>g</B>   arithmetic expressions
40 Q0 2833 61 0.05170967 Lucene_47
 which are <B>referenced</B> more than once  cacm september  1976 deutsch  l  p  bobrow  d  <B>g</B>  storage a heap  and does not require the programmer to give <B>any</B> indication that particular items are no longer useful or accessible  a reference count scheme for reclaiming non-self-referential <B>structures</B>  and a linearizing  compacting  copying scheme to reorganize <B>all</B> storage at the users discretion
40 Q0 2886 62 0.051256925 Lucene_47
 are discussed  cacm february  1976 bochmann  <B>g</B>  v  attribute grammars  semantics of programming <B>languages</B>semantic evaluation from left to right this paper describes attribute grammars and their use for the definition of programming <B>languages</B> and compilers  a formal definition of attribute grammars  a condition for an attribute grammar is given which assures that the semantics of <B>any</B> program can
40 Q0 920 63 0.050905697 Lucene_47
toward better documentation of programming <B>languages</B> cacm march  1963 yngve  v  h  sammet  j  <B>e</B>  ca630301 jb march 14  1978 1 51 pm 920 5 920 920 5 920 920 5 920 728 5 920 920 6 920 45 6 920
40 Q0 3030 64 0.050064072 Lucene_47
  we apply this method to a significant <B>list</B> processing problem and also discuss a number of extensions to current programming <B>languages</B> that ease hierarchical program design and proof  cacm december  1978 spitzen  j  levitt  k  robinson  l  program verification  specification  <B>data</B> abstraction  software modules  hierarchical <B>structures</B> 4.0 4.6 5.21 5.24 ca781209 dh january 16  19794 43 pm 2480 4
40 Q0 2411 65 0.04987811 Lucene_47
tree-structured programs cacm november  1973 wegner  <B>e</B>  control <B>structures</B>  flowcharts  goto statements  inductive assertion  least fix points  optimization in compilers  program documentation  program flow graphs  programming language design  proof of programs  semantics of programming <B>languages</B>  structured programming  4.12 4.22 5.24 ca731115 jb january 19  1978 4 19 pm 2411 4 2411 2411 4 2411
40 Q0 2106 66 0.049525015 Lucene_47
 undue effort  the solution of <B>interesting</B> problems   3  be capable of exposing <B>all</B> outstanding issues of significance  capable of exposing <B>all</B> outstanding issues of significance  within the chosencomputer education in a graduate school of management several years of experience <B>have</B> led systems can best be explained at the machine language level  <B>any</B> machine used for exposition should
40 Q0 2084 67 0.049386013 Lucene_47
a note on the complement of inherently ambiguous context-free <B>languages</B> cacm march  1970 maurer  h  a  ambiguity  inherent ambiguity  complement  context-free language  chomsky-language  phrase structure language  production system  <B>type</B> 2 language  bounded language 5.22 5.24 ca700314 jb february 13  1978 3 37 pm 2084 5 2084 2084 5 2084 2084 5 2084
40 Q0 2032 68 0.048917335 Lucene_47
 are derived and illustrated  cacm july  1970 coffman jr   <B>e</B>  <B>g</B>  eve  j  <B>data</B> <B>structures</B>  tree <B>structures</B>  file <B>structures</B>  scatter tables  hashing functions  information retrieval 3.70 3.74 ca700705file <B>structures</B> using hashing functions a general method of file structuring is proposed which uses a hashing function to define tree structure  two <B>types</B> of such trees are examined
40 Q0 2684 69 0.048828103 Lucene_47
 of the syntax of programming <B>languages</B> has been almost universally associated with context-free requirements  yet numerous <B>interesting</B> and difficult issues in syntax stem from the context-sensitive formal definition of syntax  as a practical illustration  a small but significant subset of pl <B>i</B> and translations between <B>languages</B>  is given in a previous paper by the author  cacm february  1974
40 Q0 1650 70 0.048567053 Lucene_47
  the <B>following</B> variants are discussed   1  the standard analysis of variance   2  analyses omitting certain effect or interaction means  the mean expects the <B>data</B> in standard order and it leaves the <B>data</B> in that order so that many analyses of the same <B>data</B> can be performed without rearrangement  the total sum of squares  excluding a replication sum of squares  is partitioned into <B>all</B> polynomial partitions
40 Q0 1385 71 0.047708884 Lucene_47
 is reviewed under the <B>following</B> headings   1  initial planning  organization and educational aspects  then presumably <B>all</B>-chinese-made machines from 1965 to the present   3  computer applications   4  the trend of automation  control of production processes rather than <B>data</B> processing  and  5  the  yun ch ou hsueh is adjudged to <B>have</B> a marginal computer capability  with most of its machines probably being
40 Q0 1988 72 0.047472786 Lucene_47
a formalism for translator interactions a formalism is presented for describing the actions of processors for programming <B>languages</B>-compilers  interpreters  assemblers-and their interactions in complex systems such as compiler-compilers or extendible <B>languages</B>  the formalism here <B>might</B> be used to define and answer such a question as  can one do bootstrapping using a meta-compiler whose metaphase
40 Q0 2081 73 0.047379527 Lucene_47
some complete calculi for matrices a matrix calculus is introduced with the intention of developing <B>data</B> <B>structures</B> suitable for a high level algorithmic language for mathematical programming calculus  <B>data</B> <B>structures</B>  linear programming  matrix  matrix concatenation  matrix sequences  programming <B>languages</B>  sequence operations  symbol manipulation 4.12 4.22 5.14 5.41 ca700403 jb february 13
40 Q0 2253 74 0.047379527 Lucene_47
 code for handling the tedious address calculations necessitated by complicated <B>data</B> <B>structures</B> calculations  algorithm transformation  compilation  <B>data</B> <B>structures</B>  indexing by name  indexing by position  index domain  index map  index range  matrix expressions  normal form  programming <B>languages</B>  program
40 Q0 2717 75 0.04683078 Lucene_47
convert  a high level translation definition language for <B>data</B> conversion this paper describes and highly flexible <B>data</B> restructuring capabilities  its design is based on the simple underlying concept of a form which enables the users to visualize the translation processes  and thus makes <B>data</B> and should not be confused with <B>any</B> other language or program bearing the same name  cacm october
40 Q0 1397 76 0.046387907 Lucene_47
 <B>languages</B> designed for manipulation of algebraic formulas and symbol strings  in their applications  and in algorithms for their implementation  twenty-eight <B>papers</B> were presented  followed by a lively manipulation  the program committee consisted of chairman jean <B>e</B>  sammet  paul abrahams  thomas <B>e</B>  cheatham
40 Q0 2513 77 0.046327975 Lucene_47
a nonrecursive <B>list</B> moving algorithm an efficient  nonrecursive algorithm is given for moving <B>any</B> lisp-<B>type</B> <B>list</B>  in particular  the algorithm requires no storage other than the new nodes into which the <B>list</B> is to be moved  and no additional bits per node for marking  the algorithm runs in time as it is moved  cacm may  1973 reingold  <B>e</B>  m  <B>list</B> moving  <B>list</B> copying  <B>list</B> traversal  garbage collection lisp
40 Q0 3031 78 0.04589885 Lucene_47
 implementation is accomplished  cacm december  1978 guttag  j  horowitz  <B>e</B>  musser  d  abstract <B>data</B> <B>type</B>abstract <B>data</B> <B>types</B> and software validation a <B>data</B> abstraction can be naturally specified using specification of a <B>data</B> <B>type</B>  an example is given which shows how to employ algebraic axioms of an implementation of an abstract <B>data</B> <B>type</B>  second  semi-automatic tools are described which can be used both
40 Q0 2798 79 0.045222733 Lucene_47
 investigate the performance of various system <B>structures</B>  <B>i</B> <B>e</B>  schemes for sending instruction and <B>data</B> requests to the memory system  performance is measured by determining the distribution burnett  <B>g</B>  j  coffman  <B>e</B>  <B>g</B>  jr  interleaved memory systems  modular memory systems  memory performance these investigations is that separately grouping instruction and <B>data</B> requests for memory can substantially
40 Q0 2034 80 0.045181792 Lucene_47
the mobile programming system  stage2 stage2 is the second level of a bootstrap sequence which is easily implemented on <B>any</B> computer  it is a flexible  provided by stage2 are summarized  and the implementation techniques which <B>have</B> made it possible to <B>have</B> stage2 running on a new machine with less independence  programming <B>languages</B>  implementation techniques 4.12 4.22 ca700703 jb february 13
40 Q0 2767 81 0.04509253 Lucene_47
 <B>languages</B>  the most promising algorithm uses the indexed <B>list</B> concept  it will require an adaptive routinea comparison of simulation event <B>list</B> algorithms four algorithms are considered which can be used  one is based on an end-order tree structure for event notices  and another uses an indexed linear <B>list</B> study would be fruitful  cacm april  1975 vaucher  j  <B>g</B>  duval  p  simulation  time flow mechanisms
40 Q0 3188 82 0.04466388 Lucene_47
semiotics and programming <B>languages</B> <B>i</B> <B>have</B> based my paper on semiotics and its three dimension  <B>i</B> should insert at this point that language has many aspects and that pragmatics  semantics and syntactics do not necessary cover <B>all</B> of them  one can  however  project most aspects into the three semiotic dimension and there seems to be a strong tendency to do so today  cacm march  1966 zemanek  h
40 Q0 2632 83 0.04438716 Lucene_47
 and virtual  called an  object   mechanisms are presented for <B>dealing</B> with objects  including the creation of new <B>types</B>  specification of new operations applicable to a given <B>type</B>  sharing  and protection of <B>any</B> reference to a given object against improper application of <B>any</B> of the operations defined with respect to that <B>type</B> of object  the mechanisms provide a coherent basis for extension
40 Q0 1861 84 0.04419842 Lucene_47
the mad definition facility one of the first definition facilities for higher level <B>languages</B> is described  users of the language can define new operators and or <B>data</B> <B>types</B> into the mad language  so that their use appears as if they were predefined  information is given on how one writes definitions  as well as on much of the motivation behind the form in which definitions are written  some
40 Q0 2201 85 0.043271154 Lucene_47
 and error design of picture sequences in a conversational mode  during <B>all</B> stages on the system will be the provision of a facility which will allow <B>any</B> professor to produce his own expository film graphics  computer animation  on-line systems  two-dimensional <B>languages</B>  crt  microfilm recorder 3.41 3.80
40 Q0 1264 86 0.043263476 Lucene_47
 and lost processing time is at a minimum  this system will perform <B>any</B> or <B>all</B> of the <B>following</B> users specified functions  assemble sps source decks  post <B>list</B>  produce condensed or uncondensed object decks  execute user s program  <B>list</B> card input to a program  <B>list</B> punched output  provide a storage
40 Q0 1869 87 0.042727564 Lucene_47
block <B>structures</B>  indirect addressing  and garbage collection programming <B>languages</B> <B>have</B> included explicit or implicit block <B>structures</B> to provide a naming convenience for the programmer  however expense  each time a function returns to its calling program  these modifications <B>have</B> been implemented as an extension to a snobol dialect  cacm july  1969 kain  r  y  block <B>structures</B>  indirect
40 Q0 3077 88 0.04262991 Lucene_47
 and in its state transition rules  unlike von neumann <B>languages</B>  these systems <B>have</B> semantics loosely of programs conventional programming <B>languages</B> are growing ever more enormous  but not stronger  inherent for creating programs  functional programs deal with structured <B>data</B>  are often nonrepetitive level programs to build still higher level ones in a style not possible in conventional <B>languages</B>
40 Q0 595 89 0.042487193 Lucene_47
  historical <B>data</B> concerning students  programming proficiency is almost non-existent and  at best  difficult to measure  how then <B>might</B> we approach solving this problem  cacm may  1962 greene  <B>i</B>  ca620510 jbguides to teaching cobol the teaching of cobol can be divided into three main subject areas  they are the syntax of cobol  the use of such syntax in solving <B>any</B> given problem  and programming
40 Q0 2326 90 0.041999817 Lucene_47
fix point approach to the theory of computation <B>following</B> the fix point theory of scott  the semantics of computer programs are defined in terms of the least fix points of recursive programs  this allows not only the justification of <B>all</B> existing verification techniques  but also their extension  semantics of programming <B>languages</B>  least fix points  recursive programs  computational induction 5.23
40 Q0 1366 91 0.041422058 Lucene_47
computer simulation-discussion of the technique and comparison of <B>languages</B> the purpose of this paper is to present a comparison of some computer simulation <B>languages</B> and of some of the involved in comparing software packages for digital computers are discussed in part <B>i</B>  the issue is obvious  users of digital computers must choose from available <B>languages</B> or write their own  substantial costs
40 Q0 1853 92 0.041344497 Lucene_47
 convenient  the swym system permits a <B>list</B> to be chained  compact  or <B>any</B> combination of the two  a description is given of that <B>list</B> representation and the operators implemented  most are similar and rearranges <B>all</B> of <B>list</B> storage using temporary storage  this unique <B>list</B>-compacting garbagecompact <B>list</B> representation  definition  garbage collection  and system implementation compact
40 Q0 2558 93 0.041101005 Lucene_47
protection in programming <B>languages</B> linguistic mechanisms which can be used to protect one subprogram from another s malfunctioning are described  function-producing functions and various <B>type</B>-tagging schemes are considered  an attempt is made to distinguish between access limitation and authentication  cacm january  1973 morris  j  h  jr  protection  <B>types</B>  environments trademarks  seals  access
40 Q0 3198 94 0.040906478 Lucene_47
microprogramming  emulators and programming <B>languages</B> the problem we <B>have</B> been concerned with is that of converting language to action - or intellectual energy to mechanical energy  the medium that we use for this purpose is language and therefore we are preoccupied with the subject of language  in the areas of language investigation we <B>have</B> concentrated first on formalizing syntax
40 Q0 1181 95 0.040888622 Lucene_47
a simple <B>data</B> transmission system using the office telephone a method has evolved for transmitting <B>data</B> of a <B>type</B> originating in many laboratory situation direct to a central computer  the method requires almost no specialized equipment and uses <B>any</B> ordinary telephone on a  callup  basis  present time-sequence studies of nerve impulses  cacm october  1965 neilsen  <B>i</B>  r  ca651014 jb march 6  1978
40 Q0 616 96 0.040848326 Lucene_47
  and <B>all</B> those interested in developing a theoretical approach to <B>data</B> processing   b  with interestan information algebra - phase <B>i</B> report-language structure group of the codasyl development-defining language  at the systems level of <B>data</B> processing  the report is based  for the most part by the businessman-analyst-manager  the authors <B>have</B> not attempted an exhaustive discourse in this report
40 Q0 1142 97 0.040675487 Lucene_47
an extension of algol-like <B>languages</B> cacm february  1964 rose  <B>g</B>  f  ca640201 jb march 10  1978 4 57 am 1102 4 1142 1142 4 1142 1781 4 1142 1945 4 1142 762 4 1142 949 4 1142 1142 5 1142 1142 5 1142 1142 5 1142 483 5 1142
40 Q0 2958 98 0.040638886 Lucene_47
abstract <B>data</B> <B>types</B> and the development of <B>data</B> <B>structures</B> abstract <B>data</B> <B>types</B> can play and complete  cacm june  1977 guttag  j  abstract <B>data</B> <B>type</B>  correctness proof  <B>data</B> <B>type</B>  <B>data</B> presents and discusses the application of an algebraic technique for the specification of abstract <B>data</B> <B>types</B>  among the examples presented is a top-down development of a symbol table for a block structured
40 Q0 2580 99 0.040266417 Lucene_47
 that full-blown music theory is not needed for rounds--<B>all</B> the hardware required for structural levels scientists  cacm november  1974 rader  <B>g</B>  m  artificial intelligence  heuristic programming  models of cognitive processes  computer music  computer composition  music theory  formal <B>languages</B>  probabilistic
40 Q0 1463 100 0.03971453 Lucene_47
more on extensible machines one of the most salient characteristics of extensible machines  em  is the facility for providing system control over program-to-program and program-to-<B>data</B> linkage  <B>e</B> <B>g</B> of programming <B>languages</B>  cacm march  1966 leonard  <B>g</B>  f  goodroe  j  r  ca660309 jb march 3  1978 1 program-to-program and program-to-<B>data</B> linkage that were embodied in the authors  previous paper
*************Query 41*************************

41 Q0 3128 1 0.16641536 Lucene_47
 <B>synchronization</B>  interprocess communication  <B>distributed</B> <B>systems</B>  security <B>models</B>  mutual exclusion<B>synchronization</B> with eventcounts and sequencers <B>synchronization</B> of concurrent <B>processes</B> requires controlling the relative ordering of events in the <B>processes</B>  a <B>new</B> <B>synchronization</B> mechanism arguments and <B>also</B> simplifies implementation in <B>distributed</B> <B>systems</B>  the mechanism is defined
41 Q0 2578 2 0.12724674 Lucene_47
self-stabilizing <B>systems</B> in spite of <B>distributed</B> control cacm november  1974 dijkstra  e  w  multiprocessing  networks  self-stabilization  <B>synchronization</B>  mutual exclusion  robustness  sharing  error recovery  <B>distributed</B> control  harmonious cooperation  self-repair 4.32 ca741106 jb january 16,1978 10 18 am 2578 5 2578 2578 5 2578 2578 5 2578
41 Q0 3043 3 0.12048827 Lucene_47
<B>distributed</B> <B>processes</B>  a concurrent programming concept a language concept for concurrent <B>processes</B> <B>processes</B> and shows that they <B>include</B> procedures  coroutines  classes  monitors  <B>processes</B>  semaphores  buffers  path expressions  and input output as <B>special</B> cases  cacm november  1978 hansen  <B>p</B>  concurrent programming  <B>distributed</B> <B>processes</B>  microprocessor networks  nondeterminism  guarded regions
41 Q0 3082 4 0.1124713 Lucene_47
  l  <B>distributed</B> <B>systems</B>  computer networks  clock <B>synchronization</B>  multiprocess <B>systems</B> 4.32 5.29time  clocks  and the ordering of events in a <B>distributed</B> system the concept of one event happening before another in a <B>distributed</B> system is examined  and is shown to define a partial ordering of the events  a <B>distributed</B> algorithm is given for synchronizing a system of logical clocks which can
41 Q0 3137 5 0.10516528 Lucene_47
a methodology for the design of <B>distributed</B> information <B>systems</B> a macro model of a <B>distributed</B> information system in presented  the model describes the major costs of using an information system from of an interactive transaction processing system  cacm april  1979 bucci  g  streeter  d  <B>distributed</B> processing  system design  cost minimization  <B>distributed</B> database  interactive computing  economic
41 Q0 3141 6 0.10127642 Lucene_47
  rather than o n2   cacm may  1979 chang  e  roberts  r  decentralized <B>algorithms</B>  <B>distributed</B> <B>systems</B>an improved algorithm for decentralized extrema-finding in circular configurations of <B>processes</B> of uniquely numbered <B>processes</B> arranged in a circle  in which no central controller exists and the number of <B>processes</B> is not known a priori  this decentralized algorithm uses a technique of selective
41 Q0 3148 7 0.09500188 Lucene_47
high level programming for <B>distributed</B> computing programming for <B>distributed</B> and other loosely coupled <B>systems</B> is a problem of growing <B>interest</B>  this paper describes an approach to <B>distributed</B> computing at the level of general purpose programming languages  based on primitive notions of module of the project are <B>also</B> discussed  cacm june  1979 feldman  j  <B>distributed</B> computing  modules  messages
41 Q0 1747 8 0.09119629 Lucene_47
 clock  the <B>synchronization</B> of <B>parallel</B> <B>processes</B>  protection in multiprogrammed <B>systems</B>three criteria for designing computing <B>systems</B> to facilitate debugging the designer of a computing possible criteria of this kind are input recordability  input specifiability  and <B>asynchronous</B> criteria  computer <B>systems</B>  computer <B>systems</B> design  input equipment  input equipment design  operating
41 Q0 2128 9 0.086771965 Lucene_47
  g  c  time sharing  <B>resource</B> <B>allocation</B>  scheduling <B>algorithms</B>  monitors  dynamic <B>allocation</B>  processor <B>allocation</B>  multiprogramming  multiprocessing  time slicing  scheduling  conversational <B>systems</B> application to more general <B>resource</B> <B>allocation</B> problems  it is implemented by means of a methoda processor <B>allocation</B> method for time-sharing a scheduling algorithm is proposed which is intended
41 Q0 2969 10 0.079767086 Lucene_47
  <B>databases</B>  <B>distributed</B> <B>databases</B>  optimal file location 3.81 3.51 4.33 ca770503 jb december 29  1977 2optimal program and data locations in computer networks an optimization procedure for the <B>allocation</B> of program and data files in a computer network is presented  this algorithm takes into account  insights into whether or not to convert programs from one computer to another can <B>also</B> be gained from
41 Q0 2849 11 0.07187056 Lucene_47
ethernet  <B>distributed</B> packet switching for local computer networks ethernet is a branching broadcast communication system for carrying digital data packets among locally <B>distributed</B> computing stations  the packet transport mechanism provided by ethernet has been used to build <B>systems</B> which can of access to the ether for packet broadcasts is <B>distributed</B> among the contending transmitting
41 Q0 2522 12 0.07115735 Lucene_47
 rodriguez-rosell  j  dupuy  j  <B>p</B>  working set  dispatcher  scheduler  time-sharing <B>systems</B>  <B>resource</B> <B>allocation</B>  software evaluation  operating <B>systems</B>  supervisory <B>systems</B> 4.31 4.32 ca730406 jb system is largely dependent upon the <B>algorithms</B> employed to allocate the system resources to the <B>processes</B> competing for them  recent research in time-sharing paging <B>systems</B> has developed the working
41 Q0 2371 13 0.06603499 Lucene_47
a system for interprocess communication in a <B>resource</B> sharing computer network a system of communication between <B>processes</B> in a time-sharing system is described and the communication system is extended so that it may be used between <B>processes</B> <B>distributed</B> throughout a computer network  interprocess communication  time-sharing  computer networks  <B>resource</B> sharing 3.81 4.39 4.82 4.9
41 Q0 2342 14 0.058809366 Lucene_47
interference between <B>communicating</B> <B>parallel</B> <B>processes</B> various kinds of interference between <B>communicating</B> <B>parallel</B> <B>processes</B> have been examined by dijkstra  knuth  and others  solutions have been  interference  mutual exclusion  operating <B>systems</B>  <B>parallel</B> <B>processes</B> 4.0 4.10 4.30 4.32 4.42 5.24 of <B>parallel</B> <B>processes</B> is regarded as a machine which proceeds from one state s  i e  a collection
41 Q0 3153 15 0.05822374 Lucene_47
 and economical <B>lower</B> <B>bounds</B> for the expected response times as functions of the control parametersthe control of response times in multi-class <B>systems</B> by memory allocations the possibility of giving different quality of service to jobs of different classes by regulating their memory <B>allocation</B> is examined in the context of a paged computer system  two parameterized <B>algorithms</B> which partition
41 Q0 2080 16 0.057836346 Lucene_47
 of <B>processes</B> as well as the communication among them  cacm april  1970 hansen  <B>p</B>  b  multiprogramming  operating <B>systems</B>  <B>parallel</B> <B>processes</B>  process concept  process communication  message buffering  process of a multiprogramming system that can be extended with a hierarchy of operating <B>systems</B> to suit diverse requirements of program scheduling and <B>resource</B> <B>allocation</B>  the system nucleus simulates an environment
41 Q0 2740 17 0.052176375 Lucene_47
  <B>asynchronous</B> structuring  buffering  <B>parallel</B> <B>processes</B>  synchronizing primitives  reentrant code  rc operating system as a set of cooperating sequential <B>processes</B>  the <B>processes</B> synchronize by means of semaphores and extended semaphores  queue semaphores   the number of <B>parallel</B> <B>processes</B> is carefully structuring of operating <B>systems</B>  the project management and the performance are discussed  too
41 Q0 2949 18 0.051715 Lucene_47
a correctness proof of a topology information main tenance protocol for a <B>distributed</B> computer network in order for the nodes of a <B>distributed</B> computer network to communicate  each node must have   a correctness proof of this topology information protocol is <B>also</B> presented  cacm july  1977 tajibnapis  w  d  <B>distributed</B> computer network  correctness proofs  computer networks  <B>distributed</B> control
41 Q0 1745 19 0.0508434 Lucene_47
  1968 dennis  j  b  information networks  information <B>systems</B>  computing and free enterprise  <B>distributed</B> data base  program leasing 2.3 2.40 3.80 4.30 ca680511 jb february 23  1978 8 49 am 1745 5
41 Q0 2406 20 0.050173227 Lucene_47
 and physical aspects of data is increasingly apparent  such languages will be a key <B>systems</B>  as well as in advanced data management <B>systems</B> and <B>distributed</B> data bases  this paper reviews past work of these  generalized  data definition languages are <B>also</B> discussed  cacm december  1973 sibley  e  h management <B>systems</B>  file translation 3.51 3.70 3.73 4.29 4.82 ca731202 jb january 19  1978 2 58 pm 2155 4
41 Q0 2424 21 0.049552433 Lucene_47
 or software <B>fault</B> the amount of additional hardware and software required for dynamic verification can be modest  cacm november  1973 fabry  r  s  operating <B>systems</B>  data security  <B>fault</B> <B>tolerance</B>  software <B>reliability</B>  data privacy  program verification  modular computer <B>systems</B> 4.32 ca731102 jb or software <B>fault</B>  furthermore  multiple faults lead to unreliable operation only if the faults happen
41 Q0 2912 22 0.047951855 Lucene_47
 process and read by other <B>processes</B>  cacm november  1977 lamport  l  <B>asynchronous</B> multiprocessingconcurrent reading and writing the problem of sharing data among <B>asynchronous</B> process is considered and writing is permitted  two general theorems are proved  and some <B>algorithms</B> are presented to illustrate their use  these <B>include</B> a solution to the general problem in which a read is repeated if it might
41 Q0 2276 23 0.047672436 Lucene_47
  with some <B>new</B> <B>algorithms</B>  a number of procedures convert taylor series expansions directly into samplingcomputer methods for sampling from the exponential and normal distributions various methods are known for transforming uniformly <B>distributed</B> random numbers into exponentially and normally <B>distributed</B> distribution there remains a choice between slower and shorter <B>algorithms</B> and faster but space consuming
41 Q0 1928 24 0.047073875 Lucene_47
 networks of large and active digital <B>systems</B> is described  essential objectives sought are improved into a structural model  the elimination of manual <B>processes</B> in achieving exclusive simulation of activity activities  the passage of time is simulated in a precise  quantitative fashion and <B>systems</B> to be simulated may be combinations of synchronous and <B>asynchronous</B> logic  certain aspects of the techniques
41 Q0 3086 25 0.045352552 Lucene_47
  <B>lower</B> bound to determine whether any two of n real numbers are within of each other is <B>also</B>  analysis of <B>algorithms</B>  combinatorial problems  computational complexity  computational <B>models</B>  decision tree programs  <B>lower</B> <B>bounds</B> 5.25 5.26 5.30 5.39 ca780702 dh february 8  1979 3 46 pm 3086 5
41 Q0 3076 26 0.04523988 Lucene_47
 arrangements  system <B>reliability</B>  and privacy of <B>transactions</B>  these topics are analyzed in this article few years  computer-based <B>systems</B> which automate the transfer and recording of debits and credits have begun to be implemented on a large scale  these <B>systems</B> promise both financial benefits for the institutions that use them and potential conveniences to their customers  however  they <B>also</B> raise
41 Q0 2323 27 0.045223802 Lucene_47
toward a general <B>theory</B> of <B>special</B> functions a list of a number of natural developments for the field of algebraic manipulation is given  then the prospects for a general <B>theory</B> of functions defined to differential equations  such a <B>theory</B> is preferable to a less general effort to make algebraic manipulation <B>systems</B> knowledgeable about the usual <B>special</B> functions  e g  exponential
41 Q0 2596 28 0.04516554 Lucene_47
 the requests are for exponentially <B>distributed</B> block sizes  cacm october  1974 shen  k  k  peterson  j  l  weighted buddy algorithm  buddy <B>systems</B>  memory <B>allocation</B>  dynamic storage <B>allocation</B> 3.89 4.32 4.39a weighted buddy method for dynamic storage <B>allocation</B> an extension of the buddy method  called the weighted buddy method  for dynamic storage <B>allocation</B> is presented  the weighted buddy method
41 Q0 2777 29 0.04486875 Lucene_47
 to the problem  it <B>also</B> discusses the need for the generalized operators suggested by patil  cacm march  1975 parnas  d  l  operating <B>systems</B>  co-operating <B>processes</B> process <B>synchronization</B> primitives 4.3 be solved using the <B>p</B> and v operations introduced by dijkstra unless conditional statements are used restrictions on the use of <B>p</B> and v  these restrictions eliminate programming techniques used by dijkstra
41 Q0 2697 30 0.044453003 Lucene_47
  and considerable savings in array subscripting are achieved  upper and <B>lower</B> <B>bounds</B> on k are obtained in termsa fast method for solving a class of tridiagonal linear <B>systems</B> the solution of linear <B>systems</B> precision  it is <B>also</B> proved that the computed lu decomposition converges when floating-point  a  palmer  j  numerical linear algebra  linear <B>systems</B>  toeplitz matrices  tridiagonal matrices 5 5.1 5.11
41 Q0 2541 31 0.043748375 Lucene_47
  it <B>also</B> suggested an important <B>new</B> concept for operating <B>systems</B>  separation of the scheduling from the maintenance functions in <B>resource</B> <B>allocation</B>  this separation enables incorporation of <B>new</B> scheduling <B>algorithms</B>  decision of what to do  without endangering the system integration  correctly
41 Q0 2470 32 0.04280747 Lucene_47
 of rowing  structuring  and uniting  it is <B>also</B> demonstrated that completely <B>new</B> primitive types can <B>theory</B>  or its derivatives  for the concise and accurate description of program semantics  it is shown of function calling and parameter passing are touched upon  the <B>theory</B> is applied to the proof of several  formal <B>systems</B>  lambda-calculus  extensible languages  data types  modes  axioms  correctness  formal
41 Q0 3124 33 0.042273372 Lucene_47
 that includes <B>new</B> primitive functions to manipulate the nesting level of arrays and <B>new</B> operators to assist in the construction of data-driven <B>algorithms</B>  cacm february  1979 gull w  jenkins  m  nested arrays  apl arrays  recursive data structures  trees  data-driven <B>algorithms</B>  <B>theory</B> of arrays 4.22 5.29 arrays in apl is presented  theorems exhibiting the relationships between the definitional <B>systems</B>
41 Q0 1948 34 0.04184503 Lucene_47
  group <B>theory</B> programs range from simple combinatorial or numerical programs to large symbol manipulation <B>systems</B>  in this survey the more important <B>algorithms</B> in use are described and contrastedcomputers in group <B>theory</B>  a survey computers are being applied to an increasingly diverse range of problems in group <B>theory</B>  the most important areas of application at present are coset enumeration
41 Q0 2890 35 0.04180854 Lucene_47
on quadratic adaptive routing <B>algorithms</B> two analytic <B>models</B> of a store-and-forward communications the equilibrium  stationary state  maintained by an adaptive routing algorithm  these <B>models</B> show analysis for a simple network  cacm january  1976 agnew  c  e  routing <B>algorithms</B>  adaptive routing  quadratic routing  alternate routing  store-and-forward network  <B>distributed</B> network  computer network
41 Q0 2950 36 0.040971532 Lucene_47
  fabry  r  s  scheduling <B>algorithms</B>  scheduling <B>models</B>  priority  operating <B>systems</B> processor-invariant <B>algorithms</B>  which <B>include</B> most of the commonly implemented ones  for time-invariant <B>algorithms</B> <B>algorithms</B> based on an abstract model of a scheduling system which formalizes the notion of priority  various classes of scheduling <B>algorithms</B> are defined and related to existing <B>algorithms</B>  a criterion
41 Q0 2030 37 0.039908033 Lucene_47
 grammars  formal language <B>theory</B>  parsing  parsing <B>algorithms</B>  recognition <B>algorithms</B> 3.42 5.22 5.23 infinite analyses for grammars which contain loops  the algorithm is <B>also</B> compared with several previous parsers for context-sensitive grammars and general rewriting <B>systems</B>  and the difference between
41 Q0 1751 38 0.0394884 Lucene_47
  multiprocessing  multiprogramming  operating <B>systems</B>  program behavior  program <B>models</B>  <B>resource</B> <B>allocation</B> of a general treatment of <B>resource</B> <B>allocation</B> in modern computer <B>systems</B> is an adequate model for program behavior  in this paper a <B>new</B> model  the  working set model   is developed  the working set of pages demand  are defined  and <B>resource</B> <B>allocation</B> is formulated as the problem of balancing demands
41 Q0 2535 39 0.03829711 Lucene_47
 communications  time-sharing  multiplexing  scheduling <B>algorithms</B>  operating <B>systems</B> 3.80 3.81 6.20 ca730304the effects of multiplexing on a computer-communications system a study is made of the way in which <B>asynchronous</B> time division multiplexing changes the stochastic nature of the arrival process from results <B>include</B> a general description of the output process of an m d 1 queue and the conditions under
41 Q0 3072 40 0.037272543 Lucene_47
feedback coupled <B>resource</B> <B>allocation</B> policies in the multiprogramming- multiprocessor computer system model studies of some integrated  feedback-driven scheduling <B>systems</B> for multiprogrammed- multiprocessor computer <B>systems</B> are presented  the basic control variables used are the data-flow rates for the <B>processes</B> executing on the cpu  the model <B>systems</B> feature simulated continuous-flow and preempt
41 Q0 2900 41 0.036547035 Lucene_47
 a priori to indicate that certain sites should  or should not  be included in an optimal <B>allocation</B>  cacm november  1977 grapa  e  belford  g  g  file <B>allocation</B>  computer networks  <B>distributed</B> datasome theorems to aid in solving the file <B>allocation</B> problem the file <B>allocation</B> problem-i e  the problem of finding the optimal set of network sites at which to locate copies of a file-is known
41 Q0 2020 42 0.036348376 Lucene_47
 and to highlight the advantages and disadvantages of pricing  two illustrative pricing <B>systems</B> are <B>also</B> pricing  pricing  priority charges  <B>resource</B> <B>allocation</B>  user motivation 1.3 2.4 ca700801 jb february 10the <B>allocation</B> of computer resources-is pricing the answer  the widespread use of complex third generation computing <B>systems</B> has led to a much broader concern about the means by which the resources
41 Q0 2597 43 0.036090594 Lucene_47
  illustrative examples <B>include</B> a single <B>resource</B> scheduler  a bounded buffer  an alarm clock  a buffer  1974 hoare  c  a  r  monitors  operating <B>systems</B>  scheduling  mutual exclusion  <B>synchronization</B>  systemmonitors  an operating system structuring concept this paper develops brinch-hansen s concept of a monitor as a method of structuring an operating system  it introduces a form of <B>synchronization</B>
41 Q0 3078 44 0.035604797 Lucene_47
 analytical solutions to markov <B>processes</B> can be considerably reduced by the application of symbol manipulation programs  since many physical <B>systems</B> can be modeled by markov and semi-markov <B>processes</B>analysis of the availability of computer <B>systems</B> using computer- aided algebra analytical results  markov process  <B>reliability</B>  redundant structures  on-line computer system  3.82 5.5 5.7 8.1 8.3
41 Q0 2895 45 0.03559853 Lucene_47
a language for formal problem specification a language for specifying the in tended behavior of <B>communicating</B> <B>parallel</B> <B>processes</B> is described  the specifications are constrain ts on the order in which events of a computation can occur  the language is used to write specifications of the readers greif  i  formal specifications program correctness  <B>parallel</B> processing  <B>synchronization</B>  readers
41 Q0 1341 46 0.035482578 Lucene_47
 on the usefulness of future <B>systems</B>  particularly with regard to such trends as time sharing  <B>parallel</B> programming  and  eventually  <B>systems</B> which learn  in this essay some of these questions are posed  and the general attitude we must take in pursuing the problem further is discussed  cacm december  1966 bryant  <B>p</B>levels of computer <B>systems</B> in building current computer <B>systems</B>  we tend to break them down
41 Q0 2750 47 0.034834415 Lucene_47
 <B>allocation</B>  storage system configuration  and <B>new</B> device designs  cacm june  1975 lum  v  y  senko  m  e wang  c  <B>p</B>  ling  h  data set <B>allocation</B>  hierarchical storage  storage system configurationa cost oriented algorithm for data set <B>allocation</B> in storage hierarchies data set <B>allocation</B> in today s multilevel storage <B>systems</B> is usually based on qualitative  ad hoc decisions  while it would
41 Q0 1951 48 0.03477885 Lucene_47
  e  jackson  <B>p</B>  e  computer communications  time-sharing  operating <B>systems</B>  optimization <B>models</B>estimates of distributions of random variables for certain computer communications traffic <B>models</B> that many of the random variables that generally are of <B>interest</B> in computer communications studies can <B>systems</B>  and the model is shown to be robust  that is each of the variables of the model has
41 Q0 2454 49 0.034649674 Lucene_47
 of evaluation are examined in some detail  cacm september  1973 buzen  j  <B>p</B>  queueing <B>theory</B>  queueingcomputational <B>algorithms</B> for closed queueing networks with exponential servers methods with exponential servers  expressions for various marginal distributions are <B>also</B> derived  the computational <B>algorithms</B> are based on two-dimensional iterative techniques which are highly efficient and quite simple
41 Q0 2016 50 0.034423657 Lucene_47
the instrumentation of multics an array of measuring tools devised to aid in the implementation of a prototype computer utility is discussed  these tools <B>include</B> <B>special</B> hardware clocks and data  some particular measurements of <B>interest</B> in a system which combines demand paging  performance measurement  multiprogramming <B>systems</B>  measuring tools  system analysis  multics  metering
41 Q0 3119 51 0.033139218 Lucene_47
the impact of distributions and disciplines on multiple processor <B>systems</B> simple queueing <B>models</B> are used to study the performance tradeoffs of multiple processor <B>systems</B>  issues considered <B>include</B> the impact of cpu service disciplines and distributions  level of multiprogramming  multitasking  scheduling disciplines  performance evaluation  queueing <B>models</B> 4.32 4.6 6.2 8.1 ca790104 dh april 10  1979
41 Q0 52 52 0.032748558 Lucene_47
an efficient method for generating uniformly <B>distributed</B> points on the surface on an n-dimensional sphere  corrigendum  cacm october  1959 cook  j  m  ca591007 jb march 22  1978 4 12 pm 52 5 52 52 5 52 52 5 52
41 Q0 1924 53 0.032204088 Lucene_47
 <B>algorithms</B>  paged memory <B>systems</B>  virtual memory <B>systems</B>  array storage <B>allocation</B>  storage <B>algorithms</B> is <B>also</B> studied as a function of the number of pages of main memory availableorganizing matrices and matrix operations for paged memory <B>systems</B> matrix representations system  it is shown that carefully designed matrix <B>algorithms</B> can lead to enormous savings in the number
41 Q0 3059 54 0.031955447 Lucene_47
<B>models</B> for <B>parallel</B> processing within programs  application to cpu i o and i o i o overlap approximate queueing <B>models</B> for internal <B>parallel</B> processing by individual programs in a multiprogrammed  multiprogramming  <B>parallel</B> processing  queueing network <B>models</B>  multiprocessing of computation and i o 4.32  the <B>models</B> are formulated in terms of cpu i o and i o i o overlap and applied to the analysis
41 Q0 2851 55 0.03169182 Lucene_47
formal verification of <B>parallel</B> programs two formal <B>models</B> for <B>parallel</B> computation are presented  an abstract conceptual model and a <B>parallel</B>-program model  the former model does not distinguish principle  a <B>special</B> case of the assertions method  which is called <B>parallel</B> place assertions  is shown  or <B>processes</B>  executing the program  an induction principle is presented which treats the control and data
41 Q0 2931 56 0.031188926 Lucene_47
 questions are computable in principle  since the outcome puts <B>bounds</B> on the possibilities through the developments in complexity <B>theory</B>  these  however  are applications to logic  and a big parts of computability <B>theory</B>  programming languages offer an obvious opportunity as their syntactic formalization is well advanced  however  the semantical <B>theory</B> can hardly be said to be complete
41 Q0 2255 57 0.030752013 Lucene_47
comments on moorer s music and computer composition cacm november  1972 smoliar  s  w  artificial intelligence  heuristic programming  <B>models</B> of cognitive <B>processes</B>  computer music  computer composition  music <B>theory</B> 3.44 3.65 ca721114 jb january 27  1978 1 22 pm 2255 5 2255 2255 5 2255 2255 5 2255
41 Q0 2504 58 0.030752013 Lucene_47
concerning music and computer composition in computational linguistics cacm may  1973 mcmorrow  c  h  artificial intelligence  heuristic programming  <B>models</B> of cognitive <B>processes</B>  computer music  computer composition music <B>theory</B> 3.44 3.65 ca730516 jb january 23  1978 4 27 pm 2504 5 2504 2504 5 2504 2504 5 2504
41 Q0 2672 59 0.030752013 Lucene_47
emotional content considered dangerous cacm march  1974 smoliar  s  w  artificial intelligence  heuristic programming  <B>models</B> of cognitive <B>processes</B>  computer music  computer composition  music <B>theory</B> 3.44 3.65 ca740311 jb january 18  1978 10 56 am 2672 5 2672 2672 5 2672 2672 5 2672
41 Q0 1960 60 0.030735122 Lucene_47
 the design rather than on implementation details  the main features of the system <B>include</B> the ability given to any user to schedule his own <B>parallel</B> <B>processes</B> using system primitive operations  the file  krakowiak  s  mossiere  j  time-sharing  multiprogramming  process scheduling  <B>resource</B> <B>allocation</B>process management and <B>resource</B> sharing in the multiaccess system esope the main design principles
41 Q0 2198 61 0.03066686 Lucene_47
introduction to  feature analysis of generalized data base management <B>systems</B>  this paper management <B>systems</B>  this introduction gives a review of the current state of the art in these <B>systems</B> and discusses the differences and similarities between capabilities found in host language <B>systems</B> and those found in self-contained <B>systems</B>  after some discussion of the problems of data
41 Q0 2376 62 0.030661374 Lucene_47
<B>synchronization</B> of <B>communicating</B> <B>processes</B> formalization of a well-defined <B>synchronization</B> mechanism can be used to prove that concurrently running <B>processes</B> of a system communicate correctly  this is demonstrated for a system consisting of many sending <B>processes</B> which deposit messages in a buffer and many receiving <B>processes</B> which remove messages from that buffer  the formal description
41 Q0 1099 63 0.029872328 Lucene_47
 rehabilitation planning  <B>also</B> of immediate <B>interest</B> is the fact that the blind may be especiallyprofessional computer work for the blind developments in computer technology have opened <B>new</B> objects in the unseen environment and <B>also</B> because of superbly trained memory  the blind brings should result in fewer debugging problems and make the blind a valuable addition to any <B>systems</B> group
41 Q0 3156 64 0.029863624 Lucene_47
  graph <B>theory</B>  <B>parallel</B> processing  <B>algorithms</B>  transitive closure  connected component 5.25 5.32 6.22computing connected components on <B>parallel</B> computers we present a <B>parallel</B> algorithm which uses n2 processors to find the connected components of an undirected graph with n vertices in time o log2n   an o log2n  time bound <B>also</B> can be achieved using only n n  log2n   processors  the algorithm can
41 Q0 3088 65 0.029795432 Lucene_47
 both balanced and unbalanced <B>resource</B> utilization conditions  cacm june  1978 teory  t  blocking  buffering  input output  overlap  performance  <B>resource</B> <B>allocation</B>  throughput  timesharing 3.72 4.30 different conditions in an idealized cpu-i o overlap model of multiprogrammed computer <B>systems</B>
41 Q0 1752 66 0.029712558 Lucene_47
  time-sharing  operating <B>systems</B>  <B>resource</B> management  task scheduling  paging  system simulation<B>resource</B> management for a medium scale time-sharing operating system task scheduling and <B>resource</B> <B>algorithms</B> that were implemented  and the results of comparative simulation are given by tracing the development of the <B>algorithms</B> through six predecessor versions  throughout the discussion particular
41 Q0 1959 67 0.029706396 Lucene_47
 the <B>new</B> organization which is proposed for management information <B>systems</B>  cacm december  1970 morgan  h <B>systems</B>  supervisory <B>systems</B>  interrupt scheduling  <B>parallel</B> processing 3.51 4.22 4.32 ca701204 jban interrupt based organization for management information <B>systems</B> a programming structure shared data base <B>systems</B>  the bases for this organization are a generalized interrupt structure
41 Q0 3084 68 0.029674446 Lucene_47
interpolation search -a log logn search interpolation search is a method of retrieving a desired record by key in an ordered file by using the value of the key and the statistical distribution of the keys  it is shown that on the average log logn file accesses are required to retrieve a key  assuming that the n keys are uniformly <B>distributed</B>  the number of extra accesses is <B>also</B> estimated
41 Q0 1877 69 0.029647468 Lucene_47
prevention of system deadlocks a well-known problem in the design of operating <B>systems</B> is the selection of a <B>resource</B> <B>allocation</B> policy that will prevent deadlock  deadlock is the situation in which  scheduling  <B>resource</B> <B>allocation</B> 3.72 4.32 6.20 ca690703 jb february 17  1978 9 33 am 1458 4 1877 1523 4 could have been safely granted  <B>algorithms</B> are presented which examine a request in the light
41 Q0 1846 70 0.029422618 Lucene_47
on simulating networks of <B>parallel</B> <B>processes</B> in which simultaneous events may occur some of the problems of simulating discrete event <B>systems</B>  particularly computer <B>systems</B>  on a conventional digital computer are dealt with  the <B>systems</B> are assumed to be described as a network of interconnected  l  simulation  <B>parallel</B> <B>processes</B>  simultaneous events  picture processing  computer system
41 Q0 1572 71 0.029397123 Lucene_47
 a variety of time-sharing <B>systems</B>  it can <B>also</B> be used to assist in the design and development of <B>new</B>the simulation of time sharing <B>systems</B> the development of <B>new</B> large scale time-sharing <B>systems</B> has an appropriate hardware configuration for these <B>systems</B>  but appropriate software adjustments must be made  unfortunately  these <B>systems</B> often do not respond to changes in the manner that intuition
41 Q0 1978 72 0.029328035 Lucene_47
-sharing  computer <B>systems</B> and graphic terminals  we have available a <B>new</B> dimension in numerical problem solving capabilities  rather than simply use the <B>new</B> power to achieve fast turnaround  we can develop interactive routines which are easy to use and <B>also</B> take advantage of the insight and visual solving have already been implemented as well as some <B>special</B> purpose <B>systems</B> for solving problems
41 Q0 2327 73 0.028775988 Lucene_47
toward an automata <B>theory</B> of brains a source of ideas for automata <B>theory</B>-the study of the brain-has been pushed aside in mathematical development of the <B>theory</B>  this paper suggests the ways in which automata <B>theory</B> might evolve over the next 25 years if it is to contribute to an understanding of how the brain <B>processes</B> information  cacm july  1972 arbib  m  a  automata <B>theory</B>  brain <B>theory</B>
41 Q0 1247 74 0.028572988 Lucene_47
an operating environment for dynamic-recursive computer programming <B>systems</B> presented in this paper is a brief nontechnical introduction to oedipus  a computer programming system which can serve as an operating environment for dynamic and or recursive programs and programming <B>systems</B>  the available services <B>include</B> dynamic <B>allocation</B> of storage for contiguous blocks of arbitrary size  input
41 Q0 1935 75 0.027980188 Lucene_47
randomized binary search technique a mathematical model is developed for the mean and variance of the number of trials to recover a given document in a randomly received list of files  the search method described is binary in nature and offers <B>new</B> potential for information retrieval <B>systems</B>  cacm february  1969 arora  s  r  dent  w  t  binary pattern  file examination  graph <B>theory</B>  information
41 Q0 2927 76 0.027869184 Lucene_47
some <B>new</B> upper <B>bounds</B> on the generation of prime numbers given an integer n  what is the computational complexity of finding all the primes less than n  a modified sieve of eratosthenes using doubly to be equivalent to the theoretical <B>lower</B> bound for sieve methods without preprocessing  use of preprocessing  sieve  prime number generation  number <B>theory</B>  linked list  preprocessing  balancing 5.25 5.39
41 Q0 2482 77 0.027730487 Lucene_47
  the individual techniques can be tailored for subproblems of <B>resource</B> <B>allocation</B> and still operate together frequently occurring <B>resource</B> <B>allocation</B> problems cacm july  1973 howard  j  h  jr  deadlocks  <B>resource</B> <B>allocation</B>  operating <B>systems</B>  multiprogramming  hierarchical <B>systems</B> 4.30 4.32 ca730704 jb january
41 Q0 2289 78 0.027579281 Lucene_47
-in-memory arrays  <B>parallel</B> processing  <B>special</B> purpose computers  <B>algorithms</B> for distance and spanning tree in speed achieved by virtue of the possibilities for <B>parallel</B> processing  in this paper it is shown is the determination of <B>algorithms</B> that exploit the possibilities for parallelism  especially for problems whose solutions appear to be inherently serial  in particular  several parallelized <B>algorithms</B>
41 Q0 3025 79 0.027523573 Lucene_47
the evolution of the dec system 10 the dec system 10  <B>also</B> known as the pdp-10  evolved from the pdp-6  circa 1963  over five generations of implementations to presently <B>include</B> <B>systems</B> covering s contributions to computing technology <B>include</B>  accelerating the transition from batch oriented to time sharing computing <B>systems</B>  transferring hardware technology within dec  and elsewhere
41 Q0 1409 80 0.02749441 Lucene_47
 mc as memory  the design objectives as originally conceived in a <B>special</B> seminar were   1 easily modifiable hardware for basic research in computer <B>systems</B> design  an unusual arrangement  the arithmetic unit has a command structure similar to large <B>parallel</B> machines  and uses flip-flop july  1966 boles  j  a  rux  <B>p</B>  t  weingarten jr   f  w  ca660705 jb march 2  1978 9 35 pm 1409 4
41 Q0 2320 81 0.02717835 Lucene_47
 competing <B>processes</B> to any degree desired  these concepts are sufficiently safe to use not only within operating <B>systems</B> but <B>also</B> within user programs  cacm july  1972 hansen  <B>p</B>  b  structured multiprogramming  programming languages  operating <B>systems</B>  concurrent <B>processes</B>  shared data  mutual exclusion by concurrent <B>processes</B> with operations defined on it  this clarifies the meaning of programs
41 Q0 3117 82 0.027062008 Lucene_47
 beyond  routine  uses to  nonroutine  efforts  such as <B>resource</B> <B>allocation</B> or computer-aided-dispatch <B>systems</B> where the machine begins to become a tool for decision making  strategic planning colton  k  computer technology  innovation  police <B>resource</B> <B>allocation</B>  police command and control
41 Q0 3006 83 0.027024591 Lucene_47
 <B>allocation</B> may result in an increase in <B>fault</B> rate  two paging <B>algorithms</B>  are examined in terms  page <B>fault</B> frequency  paging <B>algorithms</B> 4.32 4.35 4.6 8.1 ca780307 jb march 28,1978 1 01 pm 1892 4anomalies with variable partition paging <B>algorithms</B> five types of anomalous behavior which may occur in paged virtual memory operating <B>systems</B> a redefined  one type of anomaly  for example  concerns
41 Q0 3032 84 0.026864288 Lucene_47
 of a network  <B>algorithms</B> for accomplishing this delivery through a store-and-forward packet switching computer network <B>include</B>  1  transmission of separately addressed packets   2  multidestination  to this list of <B>algorithms</B> we add  6  reverse path forwarding  a broadcast routing method which exploits developed for its analysis in this paper  and <B>also</B> because it can be implemented in existing networks
41 Q0 2318 85 0.026816662 Lucene_47
the role of computer system <B>models</B> in performance evaluation <B>models</B> constitute a useful means of investigating computer system performance  this paper examines the interrelationships between <B>models</B> and other methods for evaluating the performance of computer <B>systems</B> and establishes circumstances  performance  analytic-<B>models</B>  simulation-<B>models</B>  system-<B>models</B> 2.43 2.44 6.2 8.3 ca720710 jb january
41 Q0 695 86 0.026800439 Lucene_47
  computer with <B>special</B> emphasis given to the organization and operation of its input-output equipment  applications of disk usage are discussed separately for problem programs and for <B>systems</B> programs for the storage of <B>systems</B> programs and the subroutine library  problem programs  however developments during the calculation  some comments are made regarding the <B>reliability</B>  economics  utility
41 Q0 1811 87 0.026376588 Lucene_47
a case study in programming for <B>parallel</B>-processors an affirmative partial answer is provided to the question of whether it is possible to program <B>parallel</B>-processor computing <B>systems</B> to efficiently decrease execution time for useful problems  <B>parallel</B>-processor <B>systems</B> are multiprocessor <B>systems</B> in an electrical network was written for a <B>parallel</B>-processor computing system  and execution
41 Q0 1780 88 0.026198845 Lucene_47
harmonic analysis for symmetrically <B>distributed</B> data  algorithm 320  c6   cacm february  1968 hunter  d  b  harmonic analysis  cosine series  sine series  function approximation  curve fitting  trigonometric series 5.13 ca680202 jb february 23  1978 1 34 pm 1780 5 1780 1780 5 1780 1780 5 1780
41 Q0 88 89 0.026198845 Lucene_47
an efficient method for generating uniformly <B>distributed</B> points on the surface of an n-dimensional sphere cacm april  1959 hicks  j  s  wheeling  r  f  ca590404 jb march 22  1978 7 10 pm 2333 5 88 87 5 88 88 5 88 88 5 88 88 5 88 1793 6 88 87 6 88 88 6 88 88 6 88
41 Q0 2580 90 0.025981033 Lucene_47
 scientists  cacm november  1974 rader  g  m  artificial intelligence  heuristic programming  <B>models</B> of cognitive <B>processes</B>  computer music  computer composition  music <B>theory</B>  formal languages  probabilistic musical rounds by computer  this method uses some music <B>theory</B> plus additional heuristics  fundamental that full-blown music <B>theory</B> is not needed for rounds--all the hardware required for structural levels
41 Q0 3127 91 0.025976717 Lucene_47
 portable  thoth encourages structuring programs as networks of <B>communicating</B> <B>processes</B> by providing  sager  g  portability  real time  operating <B>systems</B>  minicomputer 3.80 4.30 4.35 ca790206 dh april
41 Q0 2979 92 0.025738874 Lucene_47
 and learning <B>processes</B> on the one hand  and machine learning  large scale programming <B>systems</B>  and novel programming techniques on the other  there has <B>also</B> been in terest in how humans make deductive framework has been provided that should have a fairly wide range of applicability  the <B>models</B> of human making  <B>models</B> of game learning  poker  gambling and bluffing 3.36 3.62 3.61 3.64 3.65 3.66 ca770403
41 Q0 2435 93 0.02563343 Lucene_47
a class of dynamic memory <B>allocation</B> <B>algorithms</B> anew dynamic memory <B>allocation</B> algorithm  the fibonacci system  is introduced  this algorithm is similar to  but seems to have certain advantages over  the  buddy  system  a generalization is mentioned which includes both of these <B>systems</B> as <B>special</B> cases  cacm october  1973 hirschberg  d  s  dynamic storage <B>allocation</B>  buddy system  simulation
41 Q0 1854 94 0.025623055 Lucene_47
 for the generation  termination  and <B>synchronization</B> of <B>parallel</B> <B>processes</B>  a set of routines representing  it is intended to serve as a basis for the construction of operating <B>systems</B>  which are prime examples
41 Q0 2955 95 0.025291234 Lucene_47
buddy <B>systems</B> two <B>algorithms</B> are presented for implementing any of a class of buddy <B>systems</B> for dynamic storage <B>allocation</B>  each buddy system corresponds to a set of recurrence relations which relate results are <B>also</B> presented for in ternal  external  and total fragmentation  cacm june  1977 peterson  j  l  norman  t  a  dynamic storage <B>allocation</B>  buddy system  fragmentation  fibonacci buddy
41 Q0 2846 96 0.02527312 Lucene_47
compressed tries this paper presents a <B>new</B> data structure  called a compressed trie or c-trie  to be used in information retrieval <B>systems</B>  it has the same underlying m-ary tree structure as a trie  where m is a parameter of the trie  but whereas the fields of the nodes in a trie have to be large for relatively static <B>databases</B> are discussed  cacm july  1976 maly  k  data structure  database  m-ary tree
41 Q0 1552 97 0.024895925 Lucene_47
 <B>systems</B> involving elaborate  changing data structure is dynamic storage <B>allocation</B> for flexible problem modeling  the free storage package of the aed-1 compiler <B>systems</B> allows blocks of available storage  and <B>special</B> provisions allow efficient handling of selected sizes  control of shattering and garbage functions automatically  but <B>also</B> allow access and control of fine internal details as well  cacm august
41 Q0 2570 98 0.024851378 Lucene_47
a comparison of list schedules for <B>parallel</B> processing <B>systems</B> the problem of scheduling two or more processors to minimize the execution time of a program which consists of a set of partially times are random variables are analyzed  it is shown that different <B>algorithms</B> suggested is presented  cacm december  1974 adam  t  l  chandy  k  m  dickson  j  r  <B>parallel</B> processing
41 Q0 3181 99 0.024836088 Lucene_47
 <B>systems</B> will require a coordinated educational effort of considerable scale  in addition  research  but ongoing research is <B>also</B> needed to assure that actions taken will be responsive to the changing environment and consumer needs  cacm december  1979 long  r  electronic funds transfer <B>systems</B>  consumer education  security and fraud  privacy  system <B>reliability</B>  eft ombudsman 2.12 ca791204 db
41 Q0 3142 100 0.024806418 Lucene_47
consumer difficulties with computerized <B>transactions</B>  an empirical investigation the prevalence organizations and their public  <B>also</B> the role of poor man agement packages including poor software is indicated  while most management <B>systems</B> may be adequate  results of the survey raise concerns for instance   cacm may  1979 sterling  t  errors  <B>systems</B> errors  billing errors  management <B>systems</B>
*************Query 42*************************

42 Q0 462 1 0.43296263 Lucene_47
<B>computer</B> <B>pattern</B> <B>recognition</B> <B>techniques</B>  electrocardiographic diagnosis the use of programmed digital computers as general <B>pattern</B> classification and <B>recognition</B> devices is one phase of the current is  at present  undergoing a good deal of visual inspection by trained people for the purpose of <B>pattern</B> <B>recognition</B>  in this way comparisons between machine and human <B>performance</B> may be obtained
42 Q0 2641 2 0.29383236 Lucene_47
a minimal spanning tree <B>clustering</B> method  z   algorithm a479  cacm june  1974 page  r  l  <B>clustering</B>  <B>pattern</B> <B>recognition</B>  feature selection  minimal spanning trees 3.63 5.39 5.5 ca740605 jb january 17  1978 3 06 pm 2641 4 2641 2363 5 2641 2641 5 2641 2641 5 2641 2641 5 2641
42 Q0 2402 3 0.29129866 Lucene_47
pictorial <B>pattern</B> <B>recognition</B> and the phase problem of x-ray crystallography the availability of interactive  three-dimensional  <B>computer</B> graphics systems coupled to powerful digital computers encourages the development of algorithms adapted to this environment  pictorial <B>pattern</B> <B>recognition</B>  pictorial <B>pattern</B> <B>recognition</B>  phase problem  x-ray crystallography  interactive graphics 3.13 3.17
42 Q0 1726 4 0.24775036 Lucene_47
 nagy  g  <B>pattern</B> <B>recognition</B>  character <B>recognition</B>  text reading  information retrievalpreliminary investigation of <B>techniques</B> for automated reading of unformatted text methods for converting unstructured printed material into <B>computer</B> code are experimentally investigated  an operator <B>performance</B> figures are obtained  is thought to be suitable for processing very complicated material
42 Q0 2215 5 0.2435881 Lucene_47
application of game tree searching <B>techniques</B> to sequential <B>pattern</B> <B>recognition</B> a sequential <B>pattern</B> <B>recognition</B>  spr  procedure does not test all the features of a <B>pattern</B> at once  instead   respectively  some <B>computer</B> simulated experiments in character <B>recognition</B> are presented  the results <B>pattern</B> <B>recognition</B>  game tree searching  game against nature  gamma procedure  mini average backing-up
42 Q0 2019 6 0.21715745 Lucene_47
normalization <B>techniques</B> for hand printed numerals family of <B>pattern</B> standardization <B>techniques</B>  tuong  n  <B>pattern</B> <B>recognition</B>  character <B>recognition</B>  normalization  projective transformation hull of each <B>pattern</B> into a square  the amount of overlap within each class of characters versus  mapping  <B>pattern</B> preprocessor 3.63 5.14 ca700802 jb february 10  1978 4 03 pm 2019 5 2019 2019 5 2019
42 Q0 2980 7 0.20855005 Lucene_47
  pavlidis  t  picture processing  <B>pattern</B> <B>recognition</B>  segmentation  region editing 3.63 ca770402 jbthe editing of picture segmentations <B>using</B> local analysis of graphs a major problem in picture processing is the elimination of the large number of spurious regions that result from an initial segmentation by region growing <B>techniques</B>  such regions have been eliminated either on the basis
42 Q0 2811 8 0.20388548 Lucene_47
structural <B>pattern</B> <B>recognition</B> of carotid pulse waves <B>using</B> a general waveform parsing system a general waveform parsing system with application to structural <B>pattern</B> <B>recognition</B> of carotid pulse waves is described  the carotid arterial pulse wave is of medical importance because of variation to other waveforms  cacm december  1976 stockman  g  kanal  l  kyle  m  c  structural <B>pattern</B> <B>recognition</B>
42 Q0 2232 9 0.1854692 Lucene_47
 in <B>pattern</B> <B>recognition</B> and the geometrical concept itself  the object of the work is to clarify how the word description can be made precise so that <B>computer</B> algorithms for feature extraction may  a  feature extraction  <B>pattern</B> <B>recognition</B> figure properties  picture processing  integral geometry<B>pattern</B> width at a given angle that the <B>pattern</B> feature  width as a function of angle  possesses
42 Q0 2370 10 0.18333757 Lucene_47
an experimental laboratory for <B>pattern</B> <B>recognition</B> and signal processing an interactive <B>computer</B>  interactive terminal  image processing  <B>pattern</B> <B>recognition</B> 4.41 6.35 ca720403 jb january 31  1978 1 47 interfaced to a process control digital <B>computer</B>  dot-mode and vector displays  analog input and output are described and typical applications in scanner control  optical character <B>recognition</B> and image
42 Q0 2318 11 0.1774463 Lucene_47
the role of <B>computer</B> system models in <B>performance</B> <B>evaluation</B> models constitute a useful means of investigating <B>computer</B> system <B>performance</B>  this paper examines the interrelationships between models and other methods for evaluating the <B>performance</B> of <B>computer</B> systems and establishes circumstances under which the use of a model is appropriate  cacm july 1972 kimbleton  s  r  modeling  <B>evaluation</B>
42 Q0 2054 12 0.1713846 Lucene_47
  cacm june  1970 elder  h  a  speech <B>recognition</B>  word <B>recognition</B>  <B>pattern</B>-matching  <B>pattern</B>on the feasibility of voice input to an on-line <B>computer</B> processing system an on-line digital <B>computer</B> processing system is considered in which an ordinary telephone is the complete terminal device  input to the <B>computer</B> being provided as a sequence of spoken words  and output to the user being
42 Q0 2829 13 0.1693245 Lucene_47
 these new <B>techniques</B> are included  cacm october  1976 blinn  j  f  newell  m  e  <B>computer</B> graphics  graphictexture and reflection in <B>computer</B> generated images in 1974 catmull developed a new algorithm of the <B>pattern</B> at each picture element is computed as a weighted average of regions of the <B>pattern</B> definition function  the shape and size of this weighting function are chosen <B>using</B> digital signal processing
42 Q0 2894 14 0.16301794 Lucene_47
a methodology for interactive <B>computer</B> service measurement a measurement methodology applicable to in teractive <B>computer</B> service is described  its primary purpose is to enable external  user-oriented assessment of <B>computer</B> <B>performance</B>  instead of the more frequently used in ternal system system  <B>computer</B> service  measurement  <B>performance</B>  external measurement  methodology  measurement
42 Q0 1653 15 0.159886 Lucene_47
system <B>performance</B> <B>evaluation</B>  survey and appraisal the state of the art of system <B>performance</B> <B>evaluation</B> is reviewed and <B>evaluation</B> goals and problems are examined  throughput  turnaround  and availability are defined as fundamental measures of <B>performance</B>  overhead and cpu speed are placed of information  the central role of measurement in <B>performance</B> <B>evaluation</B> and in the development
42 Q0 2984 16 0.15400022 Lucene_47
 a technique for the visual representation of system <B>performance</B>  cacm march  1977 borovits  i  ein-dor  p  <B>computer</B> system  <B>performance</B> <B>evaluation</B>  cost utilization  system balance 2.44 ca770308 jbcost utilization  a measure of system <B>performance</B> a method is presented for evaluating <B>computer</B> system <B>performance</B> in terms of a cost utilization factor and a measure of imbalance  these coefficients
42 Q0 2542 17 0.14443074 Lucene_47
 language description is used as direct input to <B>performance</B> analysis and simulation routines  <B>using</B>a software design and <B>evaluation</B> system a critical failure of current software system design and implementation methodology is that the <B>performance</B> of a proposed design is not evaluated before which overcomes many of the difficulties is proposed  a system which integrates <B>performance</B>
42 Q0 3070 18 0.13702221 Lucene_47
  h  <B>performance</B> <B>evaluation</B>  simulation  queueing network models  central server model 4.32 4.35 8.1hybrid simulation models of <B>computer</B> systems this paper describes the structure and operation of a hybrid simulation model in which both discrete-event simulation and analytic <B>techniques</B> are combined <B>computer</B> system  discrete-event simulation is used to model the arrival and activation of jobs
42 Q0 3091 19 0.13702221 Lucene_47
some basic determinants of <B>computer</B> programming productivity the propose of this research for predicting the amount of time necessary to create a <B>computer</B> program  the fifteen program  cacm june  1978 chrysler  e  programmer <B>performance</B> standards  predicting program development time  program estimation <B>techniques</B>  program development equation  value of programming experience
42 Q0 2849 20 0.13158992 Lucene_47
 stations <B>using</B> controlled statistical arbitration  switching of packets to their destinations on the ether is distributed among the receiving stations <B>using</B> packet address <B>recognition</B>  design principlesethernet  distributed packet switching for local <B>computer</B> networks ethernet is a branching be viewed as either local <B>computer</B> networks or loosely coupled multiprocessors  an ethernet s shared
42 Q0 3089 21 0.13156328 Lucene_47
 systems  checkpoints  recovery procedures  checking <B>techniques</B>  reliability and system <B>performance</B> <B>evaluation</B> 3.72 3.73 4.33 4.35 4.6 5.5 8.1 ca780608 dh february 9  1979 10 26 am 3089 4 3089 2599 5 3089<B>performance</B> of rollback recovery systems under intermittent failures a mathematical model is used to derive the principal <B>performance</B> measures  including availability  response time
42 Q0 2231 22 0.13064021 Lucene_47
 projections of a finite binary <B>pattern</B> f  can we construct the original <B>pattern</B> f  in this paper we give <B>pattern</B> can be perfectly reconstructed in time m x n and that a <B>pattern</B> similar to an ambiguous <B>pattern</B> can also be constructed in time m x n  where m  n are the dimensions of the <B>pattern</B> frame  cacm january  1971 chang  s  <B>pattern</B> reconstruction  image reconstruction  data compression  <B>pattern</B>
42 Q0 2310 23 0.12657852 Lucene_47
  science of the humanities  <B>pattern</B> <B>recognition</B>  <B>pattern</B> generation  interdisciplinary cooperationlanguage analysis in the humanities the use of the <B>computer</B> in the language-oriented humanities as desirable  the implications of the <B>computer</B> for a  science  of the humanities-a science entailing gathering  this paper argues that the <B>computer</B> s major role as to language analysis in the humanities
42 Q0 2711 24 0.12578972 Lucene_47
a vector space model for automatic indexing in a document retrieval  or other <B>pattern</B> matching environment where stored entities  documents  are compared with each other or with incoming patterns be expressible as a function of the density of the object space  in particular  retrieval <B>performance</B> to choose an optimum indexing vocabulary for a collection of documents  typical <B>evaluation</B> results
42 Q0 2990 25 0.118631065 Lucene_47
effective information retrieval <B>using</B> term accuracy the <B>performance</B> of information retrieval systems can be evaluated in a number of different ways  much of the published <B>evaluation</B> work is based on measuring the retrieval <B>performance</B> of an average user query  unfortunately  formal proofs are difficult to construct for the average case  in the present study  retrieval <B>evaluation</B> is based
42 Q0 3149 26 0.11755532 Lucene_47
   picture processing  <B>computer</B> graphics  <B>pattern</B> <B>recognition</B>  3.2 3.6 8.2 ca790605 dh august 22  1979 1
42 Q0 2113 27 0.116522044 Lucene_47
  structure <B>recognition</B>  <B>pattern</B> <B>recognition</B>  matching procedures  tree-structure interpretation english sentence analyzer  by structuring an area of the <B>computer</B> s central core storage in such a way
42 Q0 204 28 0.11560011 Lucene_47
proving theorems by <B>pattern</B> <B>recognition</B> i cacm april  1960 wang  h  ca600407 jb march 22  1978 1 47 pm 204 4 204 204 5 204 204 5 204 204 5 204 3194 5 204
42 Q0 1805 29 0.1142363 Lucene_47
  1969 lasser  d  j  productivity  prediction  multiprogramming  simulation  equipment <B>evaluation</B>  hardware  <B>evaluation</B>  monitor  operating system  system software  supervisors  <B>performance</B>  time multiprogramming as it is discussed here is a mode of <B>computer</B> operation in which two or more programs are concurrently in processor memory and proceeding  each <B>using</B> the same central processor unit  cpu
42 Q0 2991 30 0.11332851 Lucene_47
 of these <B>techniques</B> lead to improved file <B>performance</B> for secondary storage devices  as shown by empirical studies  cacm march  1977 clapson  p  hashing  hashing <B>techniques</B>  hashing methods  hash coding  keysimproving the access time for random access files <B>clustering</B> in the key set is decreased storage  search method  collisions  synonyms  <B>clustering</B>  information retrieval  open addressing
42 Q0 2319 31 0.11300782 Lucene_47
  c  <B>computer</B> system  operating system  <B>performance</B> <B>evaluation</B>  <B>performance</B> measurement  measurementoperating system <B>performance</B> an overview of the current and future positions with respect to operating system <B>performance</B> is given  while a great deal of information and a large number of models be developed to be able to analyze and design the <B>performance</B> aspects of an operating system although
42 Q0 2268 32 0.11010941 Lucene_47
a comparative study of <B>computer</B> programs for integrating differential equations a study comparing the <B>performance</B> of several <B>computer</B> programs for integrating systems of ordinary differential   the testing procedure is described together with the <B>evaluation</B> criteria applied  a set of test problems the best <B>performance</B>  cacm november  1972 fox  p  ordinary differential equations  integration  program
42 Q0 3078 33 0.1071712 Lucene_47
analysis of the availability of <B>computer</B> systems <B>using</B> <B>computer</B>- aided algebra analytical results  related to the availability of a <B>computer</B> system constructed of unreliable processors  are presented in this paper  these results are obtained by <B>using</B> various <B>computer</B>-aided algebraic manipulation <B>techniques</B>  a major purpose of this paper is to demonstrate that the difficulties of obtaining
42 Q0 2883 34 0.1064357 Lucene_47
 and the separation of touching objects  cacm february  1976 martelli  a  picture processing  <B>pattern</B> <B>recognition</B> of merit  this problem can be represented as a shortest path problem on a graph and can be solved <B>using</B>
42 Q0 2494 35 0.10641766 Lucene_47
a <B>computer</B> generated aid for cluster analysis a <B>computer</B> generated graphic method  which can or dissimilarities by <B>computer</B> printed symbols  of character overstrikes  of various shades of darkness <B>clustering</B> and to the rearranged matrix after <B>clustering</B>  show at a glance whether <B>clustering</B> analysis and two methods of cluster analysis  cacm june  1973 ling  r  f  <B>computer</B> graphics  cluster
42 Q0 2344 36 0.10538032 Lucene_47
 in the measure of system <B>performance</B> can be obtained by <B>using</B> variable time-slice <B>techniques</B>on the optimization of <B>performance</B> of time-sharing systems by simulation a simulation model <B>performance</B> is used to ascertain which of the parameters controllable by the job-scheduling algorithm controllable by the scheduling algorithm have a marked effect on system <B>performance</B>  system <B>performance</B>
42 Q0 2812 37 0.10341783 Lucene_47
 by the navy material command support activity  nmcsa   <B>computer</B>-aided analysis consists of a set of procedures and <B>computer</B> programs specifically designed to aid in the process of applications software design  <B>computer</B> selection and <B>performance</B> <B>evaluation</B>  there are four major components  problem statement<B>computer</B>-aided analysis and design of information systems this paper describes the use of <B>computer</B>
42 Q0 1931 38 0.10275136 Lucene_47
 by hasen and r  r  smith is compared with straightforward use of i  in determinant <B>evaluation</B>  computational results show the accuracy and running times that can be expected when <B>using</B> i  for determinant <B>evaluation</B>  an application <B>using</B> i  determinants in a program to test a set of functions to seeinterval arithmetic determinant <B>evaluation</B> and its use in testing for a chebyshev system two recent
42 Q0 2437 39 0.10218069 Lucene_47
general <B>performance</B> analysis of key-to-address transformation methods <B>using</B> an abstract file concept this paper presents a new approach to the analysis of <B>performance</B> of the various key-to-address  and the average <B>performance</B> of the transformation methods on these files will be used as the potential of these methods  <B>using</B> this analysis  methods with the same overall <B>performance</B> can be classified
42 Q0 2451 40 0.098880194 Lucene_47
 of practical <B>techniques</B>  on the other hand  it is potentially useful for the comparison it affords between observed <B>performance</B> and that of an intuitively attractive ideal search procedure and retrieval  <B>clustering</B>  search  data structure  data management  query answering 3.62 3.74 ca730904
42 Q0 3132 41 0.09810226 Lucene_47
experiments with some algorithms that find central solutions for <B>pattern</B> classification in two-class <B>pattern</B> <B>recognition</B>  it is a standard technique to have an algorithm finding hyperplanes which which are defined in the paper are found to be quite good  cacm march  1979 slagle  j  <B>pattern</B> <B>recognition</B>  <B>pattern</B> classification  linear discriminants  central hyperplanes  centering  centrality
42 Q0 1030 42 0.09386714 Lucene_47
<B>techniques</B> for the simulation of <B>computer</B> logic the simulation of a digital <B>computer</B> is an integral part of most <B>computer</B> design automation systems  the <B>evaluation</B> of the boolean functions which characterize the <B>computer</B> being simulated constitutes one major portion of a simulation system  four general procedural classes for evaluating these functions are defined  toward greatly increased
42 Q0 1908 43 0.09364208 Lucene_47
 decade-the professionals who  as nonprogrammers  are <B>using</B> the <B>computer</B> as an aid in decision-making - solving situation an experimental comparison of problem-solving <B>using</B> time-sharing and batch-processing <B>computer</B> systems conducted at mit is described in this paper  this study is the first known attempt results indicate equal cost for usage of the two <B>computer</B> systems  however  a much higher level
42 Q0 1427 44 0.09306895 Lucene_47
simulation of radioisotope scans by <B>computer</B> in radioisotope scanning  a field which is assuming increasing importance in medical diagnosis  the scan is a two-dimensional <B>pattern</B> made up of dots scans has been written for a pdp-1 <B>computer</B> with auxiliary disk storage and cathode ray tube display  past and present research <B>using</B> the output of the simulator has shown the flexibility of the system
42 Q0 2788 45 0.09248009 Lucene_47
finding circles by an array of accumulators cacm february  1975 kimme  c  balard  d  sklansky  j  picture processing  <B>pattern</B> <B>recognition</B>  curve detection line fitting 3.63 ca750211 jb january 10  1978 9 15 am 2788 4 2788 2910 4 2788 2400 5 2788 2788 5 2788 2788 5 2788 2788 5 2788 2910 5 2788 2400 6 2788 2788 6 2788
42 Q0 2910 46 0.09248009 Lucene_47
equivalence of hough curve detection to template matching cacm november  1977 stockman  g  c  picture processing  <B>pattern</B> <B>recognition</B>  curve detection  hough transformation  template matching 3.63 6.9 ca771106 jb december 27  1977 7 23 am 2788 4 2910 2910 4 2910 2910 4 2910 2400 5 2910 2788 5 2910 2910 5 2910 2910 5 2910 2910 5 2910
42 Q0 893 47 0.09114593 Lucene_47
significance arithmetic on a digital <B>computer</B> the 7090 at nyu has been modified to include is handled in this mode is discussed  several numerical experiments <B>using</B> this mode are described and comparisons are made with the ordinary  normalized mode   examples include power series <B>evaluation</B>  linear equations solution  determinant <B>evaluation</B> and matrix inversion  cacm march  1963 goldstein
42 Q0 1870 48 0.090733215 Lucene_47
some <B>techniques</B> for <B>using</B> pseudorandom numbers in <B>computer</B> simulation an algorithm is described by which uniform pseudorandom integers may be used to construct binary  numbers  in which the probability that each bit in the word is a 1-bit and can assume any desired parameter value  <B>techniques</B> for making use of such  numbers  in simulation programming are described  cacm july  1969 donnelly  t
42 Q0 2720 49 0.08988033 Lucene_47
 and utilization of a set of disk drives with differing operational characteristics is examined <B>using</B> analytical <B>techniques</B>  <B>using</B> standard queueing theory  each disk drive is characterized by a queueing model examples <B>using</B> 2314 and 3330 combinations are examined  cacm september  1975 piepmeier  w  f  disk drive hierarchies  system <B>evaluation</B>  input output  modeling  queueing theory  balancing  scheduling
42 Q0 1534 50 0.08974235 Lucene_47
dad  the c  operating system the design and implementation of the c  operating system  dad  is described in detail  this system is designed for the control data 3600 <B>using</B> a large drum backing store as it integrates into the rest of the system  the <B>techniques</B> found useful in the development of dad are given  and an assessment is made of the validity of various design decisions  <B>performance</B> figures
42 Q0 2634 51 0.089032106 Lucene_47
an <B>evaluation</B> of statistical software in the social sciences several hundred college and university <B>computer</B> installations now offer various types of statistical packages for general use  among those most widely available are osiris  spss  bmd  data-text  and tsar  in order to provide users are summarized as to cost and <B>performance</B>  cacm june  1974 slysz  w  d  statistical computation  statistical
42 Q0 2892 52 0.089032106 Lucene_47
  <B>computer</B> communication networks  interprocess communication  measurement  packet switching  <B>performance</B> <B>evaluation</B> and efficiency  resource sharing 3.81 4.39 4.6 4.9 ca760101 jb january 5  1978 10 49
42 Q0 1915 53 0.08464199 Lucene_47
 line <B>recognition</B>  three-dimensional representation  plane-faced objects  perspective view  machine rendering of solids  automatic drawing  displaying <B>techniques</B>  <B>computer</B> graphics  man machine interaction  man machine communication  <B>computer</B>-aided design 4.40 4.41 4.49 ca690402 jb february 17  1978
42 Q0 3048 54 0.08390766 Lucene_47
<B>performance</B> <B>evaluation</B> of highly concurrent computers by deterministic simulation simulation is presented as a practical technique for <B>performance</B> <B>evaluation</B> of alternative configurations of highly for <B>performance</B> <B>evaluation</B>  without the necessity of emulating the system  as a case study  as in the ibm 360 195  cacm november  1978 kumar  b  davidson  e  <B>performance</B> <B>evaluation</B>  deterministic
42 Q0 633 55 0.08092008 Lucene_47
simulation and analysis of biochemical systems  iii  analysis and <B>pattern</B> <B>recognition</B>  cacm february  1962 garfinkel  d  polk  w  higgins  j  j  ochser  r  t  ca620210 jb march 20  1978 3 43 pm 238 4 633 633 4 633 633 4 633 643 4 633 238 5 633 633 5 633 633 5 633 633 5 633 643 5 633 238 6 633 633 6 633 633 6 633 643 6 633
42 Q0 2951 56 0.07885858 Lucene_47
  and statistical <B>performance</B> <B>evaluation</B> tools are employed to investigate the feasibility of a dynamicdynamic response time prediction for <B>computer</B> networks if the ultimate aim of a computing network is resource sharing  then the human component as well as the technical component of networking must  a  response time monitor  <B>computer</B> networks  time-sharing systems  comparative response time  arpa
42 Q0 1170 57 0.07824576 Lucene_47
analyzing english syntax with a <B>pattern</B>-learning parser a dependency analysis system based on <B>pattern</B> <B>recognition</B> and learning logic was developed to infer word classes and rules of syntactic combination from experience with text which had been analyzed  the characteristics used to form word to its governor in the depth <B>pattern</B> of the sentence  the system was tested on 400 elementary basic
42 Q0 3135 58 0.07824576 Lucene_47
 containing specified substructures  cacm april  1979 lesk  a  three-dimensional <B>pattern</B> <B>recognition</B>  chemicaldetection of three-dimensional patterns of atoms in chemical structures an algorithm for detecting occurrences of a three-dimensional <B>pattern</B> of objects within a larger structure is presented  the search technique presented uses the geometric structure of the <B>pattern</B> to define characteristics
42 Q0 2561 59 0.07778717 Lucene_47
  the procedures make use of a similarity structure which is imposed on the data base <B>using</B> nonnumerical <B>clustering</B> algorithms  they are implemented in a model fact retrieval system which uses a formal  inference  inductive inference  <B>clustering</B>  fact retrieval  heuristics 3.61 3.71 3.79 ca741213 jb
42 Q0 2882 60 0.076667085 Lucene_47
  cacm february  1976 siler  k  f  database architecture  database <B>performance</B> and <B>evaluation</B>  inventeda stochastic <B>evaluation</B> model for database organization in data retrieval systems experimental work in the valuation of large scale data retrieval systems has been scarce due to its difficulty  effectiveness of the methodology is demonstrated by <B>using</B> the model to study the effect of database
42 Q0 1526 61 0.07456785 Lucene_47
multiprogramming under a page on demand strategy a model of multiprogramming for a particular <B>computer</B> system <B>using</B> a page on demand strategy is developed  analysis of this model is used to predict <B>performance</B>  measured by the average usage of the cpu  when user programs are typical of those arising from an interactive time sharing environment  the effect of several hardware modifications is also
42 Q0 1938 62 0.071493216 Lucene_47
 first-level quantitative time-sharing system <B>performance</B> <B>evaluation</B>  cacm january  1969 stimler  s  time-sharing <B>performance</B> criteria  time-sharing system operation  time-sharing <B>performance</B> analysissome criteria for time-sharing system <B>performance</B> time-sharing systems  as defined in this article to utilize the full resources of the system that makes quantitative <B>evaluation</B> of time-sharing
42 Q0 2716 63 0.07014764 Lucene_47
optimizing the <B>performance</B> of a relational algebra database interface an approach for implementing automatic programming <B>techniques</B> so that the interface analyzes and efficiently refines the high level was designed <B>using</B> this approach  is described in detail  squiral seeks to minimize query response time the <B>performance</B> of a particular user query is described  cacm october  1975 smith  j  m  yen-tang chang
42 Q0 3136 64 0.06997383 Lucene_47
price <B>performance</B> patterns of u  <B>computer</B> systems econometric models of the u  <B>computer</B> market have been developed to study the relationships between system price and hardware <B>performance</B>  single measures of price <B>performance</B> such as  grosch s law  are shown to be so over simplified  cacm april  1979 cale  e  gremillion  l  mckenney  j  price <B>performance</B>  grosch s law  u  <B>computer</B>
42 Q0 2400 65 0.06936007 Lucene_47
  picture processing  <B>pattern</B> <B>recognition</B>  line detection  curve detection  colinear points  point
42 Q0 3013 66 0.06936007 Lucene_47
 processing  <B>pattern</B> <B>recognition</B>  edge detection 3.63 ca780210 jb march 28  1978 1 56 pm 3013 5 3013 3013
42 Q0 2902 67 0.06930884 Lucene_47
dynamic memory allocation in <B>computer</B> simulation this paper investigates the <B>performance</B> of 35 cases  algorithm <B>performance</B> was measured in terms of processing time  memory usage  and external with others  cacm november  1977 nielsen  n  r  algorithm <B>performance</B> dynamic memory allocation  dynamic  memory management  programming <B>techniques</B>  simulation  simulation memory management  simulation
42 Q0 2145 68 0.069136105 Lucene_47
automation of etching-<B>pattern</B> layout help  heuristic etching-<B>pattern</B> layout program  is an application program developed to computerize the tedious and error-prone although vitally important wiring by the heuristic path with respect to a <B>performance</B> function for each point-to-point  and point  cacm november  1971 aramaki  i  kawabata  t  kazuhiko  a  heuristic etching-<B>pattern</B> layout  wiring
42 Q0 1543 69 0.066676006 Lucene_47
<B>computer</B> formulation of the equations of motion <B>using</B> tensor notation a means is described of the mathematical <B>techniques</B> employed  with the program prepared for this purpose the <B>computer</B> and reducing the need for human participation in the formulation of certain types of <B>computer</B> problems  by the use of tensor calculus and a <B>computer</B> language designed to facilitate symbolic mathematical
42 Q0 961 70 0.06583628 Lucene_47
limited bit manipulation <B>using</B> fortran ii <B>techniques</B> are developed for manipulating bits <B>using</B> only fortran ii  these <B>techniques</B> allow individual bits to be tested  certain fields to be shifted  and numbers coded in bcd to be converted to binary  cacm december  1964 oster  c  a  ca641210 jb march 9  1978 3 27 pm 961 5 961 961 5 961 961 5 961
42 Q0 2871 71 0.06308113 Lucene_47
logical analysis of programs most present systems for verification of <B>computer</B> programs  this paper suggests conducting a logical analysis of programs by <B>using</B> invariants which express what is actually occurring in the program  the first part of the paper is devoted to <B>techniques</B> for the automatic generation of invariants  the second part provides criteria for <B>using</B> the invariants to check
42 Q0 851 72 0.06305158 Lucene_47
design and characteristics of a variable-length record sort <B>using</B> new fixed-length record sorting <B>techniques</B> this paper describes the application of several new <B>techniques</B> for sorting fixed-length records to the problems of variable-length record sorting  the <B>techniques</B> have been implemented on a sylvania 9400 <B>computer</B> system with 32,000 fixed-length words of memory  specifically  the <B>techniques</B>
42 Q0 2401 73 0.06153212 Lucene_47
 to obtain single isolated elements  one for each <B>pattern</B>  is presented  this procedure may be used for counting patterns on a matrix  and a hardware implementation of the algorithm <B>using</B> large scale any <B>pattern</B>  regardless of the complexity of its configuration  problems regarding merging necessary to obtain a single isolated element from a <B>pattern</B>  are reviewed and discussed
42 Q0 2903 74 0.06153212 Lucene_47
  called  recursion in troduction   is described and applied to two algorithms which solve <B>pattern</B> matching problems  by <B>using</B> recursion in troduction  algorithms which manipulate a stack are first programs with a very efficient running time  in particular  it is shown how the fast linear <B>pattern</B>  recursion elimination  <B>pattern</B> matching algorithms  stacks  computational induction 4.0 4.2 5.20 5.24
42 Q0 1827 75 0.060897086 Lucene_47
 pinkerton  t  b  <B>performance</B> monitoring  <B>performance</B> measurement  program behavior  <B>performance</B> data  multiprogramming <B>performance</B>  software measurement  time-sharing <B>performance</B>  system <B>evaluation</B><B>performance</B> monitoring in a time-sharing system a software measurement facility which is part of monitoring operating system and user program behavior and <B>performance</B>  the overall structure
42 Q0 2571 76 0.060664006 Lucene_47
  scheduling  modeling  <B>performance</B> <B>evaluation</B> 4.32 8.1 ca741203 jb january 16  1978 9 51 am 2571 4 2571 3072 <B>performance</B>  a modified strategy monitor control is investigated for the case of task execution
42 Q0 3119 77 0.060664006 Lucene_47
  scheduling disciplines  <B>performance</B> <B>evaluation</B>  queueing models 4.32 4.6 6.2 8.1 ca790104 dh april 10  1979the impact of distributions and disciplines on multiple processor systems simple queueing models are used to study the <B>performance</B> tradeoffs of multiple processor systems  issues considered include the impact of cpu service disciplines and distributions  level of multiprogramming  multitasking
42 Q0 2746 78 0.060487192 Lucene_47
  the algorithm consists of constructing a finite state <B>pattern</B> matching machine from the keywords and then <B>using</B> the <B>pattern</B> matching machine to process the text string in a single pass  construction of the <B>pattern</B> matching machine takes time proportional to the sum of the lengths of the keywords  the number of state transitions made by the <B>pattern</B> matching machine in processing the text string
42 Q0 827 79 0.058191597 Lucene_47
disk file sorting sorting <B>techniques</B> <B>using</B> an ibm 1401 with a random access storage device are evaluated  cacm june  1963 schick  t  ca630622 jb march 14  1978 10 02 am 827 5 827 827 5 827 827 5 827
42 Q0 3001 80 0.057800055 Lucene_47
  f  r  jr  coding  hash coding  retrieval  secondary keys  <B>pattern</B> <B>recognition</B>  artificial
42 Q0 2535 81 0.05719631 Lucene_47
 a user to the <B>computer</B> and  consequently  affects the <B>performance</B> of a time-shared <B>computer</B>  there is noticeable improvement in the <B>performance</B> of the <B>computer</B>  model   in the sense that time-shared scheduling so that there may be little or no change in the <B>computer</B>-communications system <B>performance</B>the effects of multiplexing on a <B>computer</B>-communications system a study is made of the way in which
42 Q0 3072 82 0.056782007 Lucene_47
feedback coupled resource allocation policies in the multiprogramming- multiprocessor <B>computer</B>- multiprocessor <B>computer</B> systems are presented  the basic control variables used are the data-flow rates both distribution-driven and trace-driven <B>techniques</B>  even relatively simple dynamic schedulers are shown to improve system <B>performance</B>  as measured by user cpu time  over that given by optimal
42 Q0 2859 83 0.0562517 Lucene_47
interference in multiprocessor <B>computer</B> systems with interleaved memory this paper analyzes the memory interference caused by several processors simultaneously <B>using</B> several memory modules  exect model are tested against some measurements of program behavior and simulations of systems <B>using</B> memory references from real programs  the model results provide a good indication of the <B>performance</B>
42 Q0 1609 84 0.05490638 Lucene_47
 with a very small expenditure of time  results of experiments <B>using</B> these <B>techniques</B> are givenscheduling university course examinations by <B>computer</B> a new approach to the problem of scheduling course examinations is presented  in principle  an examination schedule which requires a minimum number of examination periods and satisfies the constraint that no student be required to take two
42 Q0 2343 85 0.05490638 Lucene_47
a proposal to establish a pseudo virtual memory via writable overlays many <B>computer</B> systems solve executable storage size problems for large programs by <B>using</B> overlays  however  it appears that no one overlay scheme contains a well-balanced combination of the most useful capabilities which are found in various existing <B>techniques</B>  a proposal is presented which utilizes several of the best
42 Q0 2862 86 0.054566108 Lucene_47
 to estimate the <B>performance</B> of the page fault frequency  pff  replacement algorithm  in this model is represented by a semi-markov model  <B>using</B> these models  such parameters as the inter-page-fault-page-fault interval  etc  are able to be analytically determined  <B>using</B> these models to evaluate these parameter values permits study of the <B>performance</B> of the replacement algorithm by simulating
42 Q0 2035 87 0.053049885 Lucene_47
 to minimize the limitations of the small memory  <B>techniques</B> developed for handling scroll editing  filing design was strongly influenced by <B>performance</B> criteria established in interviews held with linc users themselves during the specification period  cacm july  1970 wilkes  m  a  conversational <B>computer</B>
42 Q0 1792 88 0.05243771 Lucene_47
  erikson  w  j  grant  e  e  online vs  off line <B>performance</B>  programmer <B>computer</B> communicationexploratory experimental studies comparing online and off line programming <B>performance</B> two exploratory experiments were conducted at system development corporation to compare debugging <B>performance</B> of programmers working under conditions of on-line and off line access to a <B>computer</B>
42 Q0 2258 89 0.051962186 Lucene_47
additional results on key-to-address transform <B>techniques</B>  a fundamental <B>performance</B> study on large existing formatted files cacm november  1972 lum  v  y  yuen  p  s  t  hashing  hashing <B>techniques</B>  hashing methods  hash coding  keys  key transformation  key-to-address transformation  direct addressing  direct access method  randomizing  random access file organization  file search  scatter
42 Q0 1435 90 0.050995212 Lucene_47
design of <B>computer</B> simulation experiments for industrial systems the aim of this paper is to provide background information on the existing literature on experimental design <B>techniques</B> which may be applicable to the design of <B>computer</B> simulation experiments for industrial systems  although major emphasis is placed on analysis of variance <B>techniques</B>  three other <B>techniques</B> of data analysis
42 Q0 2287 91 0.04975202 Lucene_47
 properties are utilized in developing a new scanning algorithm  the problem of detection and <B>recognition</B>  the  tangency problem  involved in practical scanning is discussed  and a solution based on minimizing <B>computer</B>  automatic scanning  contour maps  digitizing  contour lines  topology  detection and <B>recognition</B>
42 Q0 1542 92 0.049711894 Lucene_47
 model 30 <B>using</B> a second read-only storage unit  the system consists of a microprogrammed compiler space required and compiler and interpreter <B>performance</B> obtained  the role of microprogramming be executed efficiently by microprograms on existing <B>computer</B> hardware  cacm september  1967 weber  h
42 Q0 1325 93 0.049121242 Lucene_47
remote  on-line  real-time <B>computer</B> diagnosis of the clinical electrocardiogram presented for the remote  online  real-time digital <B>computer</B> diagnosis of clinical electrocardiograms  it seems matched filters  the development of three dimensional <B>pattern</B> analysis  the analysis of parallel electrocardiographer-<B>computer</B> diagnostic interaction  and a study of the possibility of introducing major
42 Q0 678 94 0.049119174 Lucene_47
 <B>computer</B> s digital circuits  and generates corresponding sets of machine instructions which are subsequently executed on the  host  <B>computer</B>  <B>techniques</B> are discussed for increasing the sophistication of the boolean compiler so as to optimize bit-time <B>computer</B> simulation  the <B>techniques</B> are applicableoptimizing bit-time <B>computer</B> simulation a major component of a bit-time <B>computer</B> simulation program
42 Q0 2798 95 0.049116272 Lucene_47
analysis of interleaved memory systems <B>using</B> blockage buffers a model of interleaved memory systems investigate the <B>performance</B> of various system structures  i e  schemes for sending instruction and data requests to the memory system  <B>performance</B> is measured by determining the distribution burnett  g  j  coffman  e  g  jr  interleaved memory systems  modular memory systems  memory <B>performance</B>
42 Q0 1590 96 0.048587125 Lucene_47
pitch period determination of speech sounds a <B>computer</B> procedure which determines pitch periods by the <B>recognition</B> of the peak structure of the speech waveform is described  speech sounds were sampled by a microphone and an analog-to-digital converter attached to an interconnected ibm 7090-pdp-1 system  these utterances were recorded at the normal noise level of the <B>computer</B> room but were
42 Q0 2375 97 0.04766416 Lucene_47
 head disks are compared <B>using</B> the <B>performance</B> criteria of expected seek time  system oriented are obtained  the variance of waiting time is introduced as another meaningful measure of <B>performance</B> to measure total <B>performance</B> including system oriented and individual request oriented measures of input loading conditions  the selection and implementation of a maximum <B>performance</B> two-policy
42 Q0 2452 98 0.04746534 Lucene_47
<B>evaluation</B> and selection of file organization-a model and system this work first discusses the factors that affect file  data base  organization <B>performance</B>  an elusive subject  and then presents and to facilitate as much as possible the process of data base structure design and <B>evaluation</B>  cacm september  1973 cardenas  a  f  file organization  file structures  file management  file organization <B>performance</B>
42 Q0 1642 99 0.046423048 Lucene_47
time sharing on a <B>computer</B> with a small memory <B>techniques</B> to make time sharing attractive on a <B>computer</B> with a small central memory are presented   small  is taken to mean that only one user program plus a monitor will fit into the memory at any time  the <B>techniques</B> depend on having two levels of secondary storage  level 1  several times larger than the main memory and quite fast  and level 2
42 Q0 2985 100 0.046321224 Lucene_47
 for <B>computer</B> services  chargeout systems  and user management attitudes about their <B>computer</B>-based <B>pattern</B> that would be expected from the hypothesis of the four stages of edp growth  15   the results of <B>computer</B>-based systems  development and main tenance of <B>computer</B>-based systems is asserted  <B>computer</B> management  <B>computer</B> budget  chargeout  stage hypothesis  control 2.41 2.43 3.50 ca770307 jb
*************Query 43*************************

43 Q0 2771 1 0.2506652 Lucene_47
 bounded by many faces  cacm april  1975 braid  i  c  computational geometry  <B>computer</B>-aided design  graphics  machined components  polyhedra  <B>shape</B> synthesis  three-<B>dimensional</B> modeling 3.2 8.2 ca750406 jb of solid objects to be synthesized and stored using a <B>computer</B>  synthesis begins with primitive solids like together or subtracted  <B>two</B> algorithms to perform addition are described  for practical designers
43 Q0 2569 2 0.23169577 Lucene_47
<B>computer</B> generation of gamma random variates with non-integral <B>shape</B> parameters when the <B>shape</B> parameter  a  is integral  generating gamma random variables with a digital <B>computer</B> is straightforward  there is no simple method for generating gamma random variates with non-integral <B>shape</B> parameters  a common procedure is to approximately generate such random variables by use of the so-called
43 Q0 3052 3 0.23153621 Lucene_47
cold-start vs  warm-start miss ratios in a <B>two</B>-level <B>computer</B> storage hierarchy  miss ratio measurements are often made from a  cold start   that is made with the first-level store initially empty than  cold-start  miss ratios cast doubt on the widespread belief that the observed  s-<B>shape</B> function  multiprogramming  s-<B>shape</B> 3.70 4.32 9.35 ca781009 dh january 29  1979 5 16 pm 2374 4 3052
43 Q0 3098 4 0.2123065 Lucene_47
<B>computer</B> generation of gamma random variables a new method for generating random variables from the gamma distribution with nonintegral <B>shape</B> parameter a is proposed  this method is similar to <B>two</B> other methods recently given by wallace and fishman  it is compared with fishman s and ahrens variables  rejection method  <B>computer</B> methods 5.5 8.1 ca780509 dh february 26  1979 1 10 pm 2847 4 3098
43 Q0 3107 5 0.20211774 Lucene_47
generating beta variates with nonintegrel <B>shape</B> parameters a new rejection method is described for generating beta variates  the method is compared with previously published methods both theoretically and through <B>computer</B> timings  it is suggested that the method has advantages in both speed and programming simplicity over previous methods  especially for  difficult  combinations of parameter
43 Q0 2883 6 0.1882229 Lucene_47
 are given  these show how various information about the <B>shape</B> of the contour of an object can be embedded and the separation of touching objects  cacm february  1976 martelli  a  picture processing  pattern <B>recognition</B>
43 Q0 3125 7 0.1734063 Lucene_47
 information or restrictions on the <B>shape</B> of the program graph  testing this algorithm has shown that its redundancy  data flow <B>analysis</B>  boolean systems 4.12 5.21 5.24 ca790204 dh april 10  1979 4 19 pm 3125 5
43 Q0 2829 8 0.17118402 Lucene_47
texture and reflection in <B>computer</B> generated images in 1974 catmull developed a new algorithm for rendering images of bivariate surface patches  this paper describes extensions of this algorithm function  the <B>shape</B> and size of this weighting function are chosen using digital signal processing these new techniques are included  cacm october  1976 blinn  j  f  newell  m  e  <B>computer</B> graphics  graphic
43 Q0 3046 9 0.17118402 Lucene_47
<B>computer</B> generation of gamma random variables - ii a rejection method is proposed for generating gamma variates with nonintegral <B>shape</B> parameter a  a  gt  1  this method is similar to other methods given by fishman  wallace  and tadikamalla and is faster than these methods for a gt  2  the core  1978 tadikamalla  p  gamma variables  rejection method  <B>computer</B> methods 5.5 8.1 ca781105 dh january
43 Q0 2847 10 0.16843146 Lucene_47
sampling from the gamma distribution on a <B>computer</B> this paper describes a method of generating gamma variates that appears to be less costly than wallace s recently suggested method  for large <B>shape</B> parameter  a   the cost of computation is proportional to  a   whereas wallace s method is proportional to  a   experimentation by robinson and lewis indicates that for small  a  the method suggested
43 Q0 2754 11 0.15531474 Lucene_47
a syntactic algorithm for peak detection in waveforms with applications to cardiography peaks in a digitized waveform are detected by an algorithm incorporating piecewise linear approximation and tabular parsing techniques  several parameters serve to identify the waveform context enabling accurate measurement of peak amplitude  duration  and <B>shape</B>  the algorithm is of sufficient speed to allow
43 Q0 2341 12 0.15308277 Lucene_47
  nonnumerical programming  snobol4  data types  <B>two</B>-<B>dimensional</B> mathematics  test processing for snobol4  a block is a three-<B>dimensional</B> aggregate of characters in the form of a right parallelepiped  best thought of as a three-<B>dimensional</B> extension to a string   the third dimension is used of program-defined connection points  some blocks adapt in size and <B>shape</B> to their environment  blocks
43 Q0 2455 13 0.12942895 Lucene_47
a generalization of avl trees a generalization of avl trees is proposed in which imbalances up to  triangle <B>shape</B>  is a small integer  an experiment is performed to compare these trees with standard avl trees and with balanced trees on the basis of mean retrieval time  of amount of restructuring expected  and on the worst case of retrieval time  it is shown that  by permitting imbalances of up
43 Q0 1528 14 0.1044883 Lucene_47
three fonts of <B>computer</B> drawn letters detailed <B>descriptions</B> are given for three fonts of letters  letter <B>shapes</B> are entirely described by numbers  the basic vectors are in a general form so the fonts may be easily drawn on a variety of <B>computers</B> and cathode-ray tubes  the fonts include both upper and lower case roman letters  mathematical signs  and upper and lower case greek letters  design
43 Q0 3149 15 0.10216202 Lucene_47
-<B>dimensional</B> bodies corresponding to given <B>two</B>-<B>dimensional</B> line-structure data  cacm june  1979 shapira  r  freeman  h  scene <B>analysis</B>  cyclic order  artificial intelligence  three-<B>dimensional</B> reconstruction   picture processing  <B>computer</B> graphics  pattern <B>recognition</B>  3.2 3.6 8.2 ca790605 dh august 22  1979 1the cyclic order property of vertices as an aid in scene <B>analysis</B> a cyclic-order property
43 Q0 2232 16 0.094224 Lucene_47
 in pattern <B>recognition</B> and the geometrical concept itself  the object of the work is to clarify how the word description can be made precise so that <B>computer</B> algorithms for feature extraction may  and <B>descriptions</B> of alternate widths  all widths are calculated for an illustrative example  graphical  a  feature extraction  pattern <B>recognition</B> figure properties  picture processing  integral geometry
43 Q0 2113 17 0.09414992 Lucene_47
  structure <B>recognition</B>  pattern <B>recognition</B>  <B>matching</B> procedures  tree-structure interpretation times for large-scale <B>matching</B> procedures can be substantially reduced  the description makes frequent english sentence analyzer  by structuring an area of the <B>computer</B> s central core storage in such a way that the individual locations of bytes and bits come to represent the data involved in the <B>matching</B>
43 Q0 2054 18 0.093442224 Lucene_47
  cacm june  1970 elder  h  a  speech <B>recognition</B>  word <B>recognition</B>  pattern-<B>matching</B>  patternon the feasibility of voice input to an on-line <B>computer</B> processing system an on-line digital <B>computer</B> processing system is considered in which an ordinary telephone is the complete terminal device  input to the <B>computer</B> being provided as a sequence of spoken words  and output to the user being
43 Q0 3135 19 0.07889652 Lucene_47
 containing specified substructures  cacm april  1979 lesk  a  three-<B>dimensional</B> pattern <B>recognition</B>  chemicaldetection of three-<B>dimensional</B> patterns of atoms in chemical structures an algorithm for detecting occurrences of a three-<B>dimensional</B> pattern of objects within a larger structure is presented demanded of candidates for <B>matching</B>  this is useful in cases where the properties of each atom
43 Q0 1272 20 0.07829011 Lucene_47
 summary reports not possible for either <B>humans</B> or <B>computers</B> to produce alone  cacm april  1965 doule  l  b beyond mere correction and improvement of <B>computer</B> output  is exemplified by the use  chief among them being interpretation and expansion of <B>computer</B> output in such processes as factor <B>analysis</B>  applications are described  such processes as factor <B>analysis</B>  applications are described
43 Q0 2402 21 0.072187446 Lucene_47
pictorial pattern <B>recognition</B> and the phase problem of x-ray crystallography the availability of interactive  three-<B>dimensional</B>  <B>computer</B> graphics systems coupled to powerful digital <B>computers</B> encourages the development of algorithms adapted to this environment  pictorial pattern <B>recognition</B> <B>recognition</B> algorithms is hindered by the fact that the cross-correlation between a model
43 Q0 1553 22 0.056647263 Lucene_47
contextual understanding by <B>computers</B> a further development of a <B>computer</B> program  eliza  capable of conversing in natural language is discussed  the importance of context to both human and machine understanding is stressed  it is argued that the adequacy of the level of understanding achieved understanding on the part of either <B>humans</B> or machines is impossible  cacm august  1967 weizenbaum  j  ca670802
43 Q0 2751 23 0.055943906 Lucene_47
illumination for <B>computer</B> generated pictures the quality of <B>computer</B> generated images of three-<B>dimensional</B> scenes depends on the shading technique used to paint the objects on the cathode-ray tube visual <B>perception</B> and the fundamental laws of optics are considered in the development of a shading  b  t  <B>computer</B> graphics  graphic display  hidden surface removal  3.26 3.41 8.2 ca750602 jb january
43 Q0 462 24 0.050426546 Lucene_47
<B>computer</B> pattern <B>recognition</B> techniques  electrocardiographic diagnosis the use of programmed digital <B>computers</B> as general pattern classification and <B>recognition</B> devices is one phase of the current lively interest in artificial intelligence  it is important to choose a class of signals which <B>recognition</B>  in this way comparisons between machine and human performance may be obtained
43 Q0 3197 25 0.0497363 Lucene_47
structures of standards-processing organizations in the <B>computer</B> area in line with the acm s policy statement  comm  acm 5  nov  1962   547-549   the following organizational <B>descriptions</B> have been provided in order to describe standardization activities pertinent to <B>computers</B> and information processing  cacm june  1966 gorn  s  bemer  r  w  green  j  ca630626 es march 17  1982 10 10 am 3197 5
43 Q0 825 26 0.047922216 Lucene_47
pip  a photo-interpretive program for the <B>analysis</B> of spark-chamber data  an operating <B>computer</B> program that processes photographically recorded data is described  the input to the program consists of spark-chamber photographs on which tracks of high-energy particles are recorded  the program automatically scans  <B>measures</B> and performs the preliminary interpretation of these photographs
43 Q0 2924 27 0.0478126 Lucene_47
 abel  j  f  greenberg  d  p  <B>computer</B> graphics  three-<B>dimensional</B> surface representation  splinesan interactive <B>computer</B> graphics approach to surface representation an in teractive <B>computer</B> graphics method has been developed for the rapid generation of arbitrary shaped three-<B>dimensional</B> surfaces  complex surfaces can be created by the combination of a number of <B>shapes</B> that have been separately
43 Q0 2910 28 0.046821125 Lucene_47
equivalence of hough curve detection to template <B>matching</B> cacm november  1977 stockman  g  c  picture processing  pattern <B>recognition</B>  curve detection  hough transformation  template <B>matching</B> 3.63 6.9 ca771106 jb december 27  1977 7 23 am 2788 4 2910 2910 4 2910 2910 4 2910 2400 5 2910 2788 5 2910 2910 5 2910 2910 5 2910 2910 5 2910
43 Q0 2370 29 0.043866426 Lucene_47
an experimental laboratory for pattern <B>recognition</B> and signal processing an interactive <B>computer</B> center for three years  the system includes <B>two</B> flying-spot scanners and a tv camera specially interfaced to a process control digital <B>computer</B>  dot-mode and vector displays  analog input and output are described and typical applications in scanner control  optical character <B>recognition</B> and image
43 Q0 2841 30 0.043286197 Lucene_47
designing surfaces in 3-d an experimental system for <B>computer</B>-aided design of free-form surfaces drawings on a head-mounted display  and they are designed with the aid of a three-<B>dimensional</B>  wand   which allows 3-d movements of the points controlling the <B>shapes</B> of the surfaces   2  all graphics  <B>computer</B>-aided design  picture processing  b-splines  3-d displays 3.80 6.22 8.2 ca760803 jb
43 Q0 3100 31 0.04159764 Lucene_47
 <B>matching</B>  induces abstractions by finding relational properties common to <B>two</B> or more exemplars  three tasks solved by a program that uses an interference-<B>matching</B> algorithm are presented  several problems concerning the description of the training examples and the adequacy of interference <B>matching</B>an interference <B>matching</B> technique for inducing abstractions a method for inducing knowledge
43 Q0 1260 32 0.039586127 Lucene_47
least-squares <B>analysis</B> of resonance spectra on small <B>computers</B> the problem of analyzing data from a mossbauer effect experiment is discussed  by using the cut step procedure for convergence and by imposing physical constraints on the functional form of the calculation it is possible to make the <B>analysis</B> on a small <B>computer</B>  the <B>analysis</B> has been carried out on an ibm 1410 <B>computer</B> with a 40,000
43 Q0 2988 33 0.03714896 Lucene_47
 model is proposed as being broadly applicable to the <B>analysis</B> of in teractive <B>computer</B> systems which network models of <B>computer</B> systems  empirical analyses and analytic studies based on applying variables such as memory requirement distribution and job swap time  and performance <B>measures</B>  system performance  queueing network models  in teractive <B>computer</B> systems 4.32 ca770304 jb december
43 Q0 2310 34 0.03591231 Lucene_47
language <B>analysis</B> in the humanities the use of the <B>computer</B> in the language-oriented humanities  this paper argues that the <B>computer</B> s major role as to language <B>analysis</B> in the humanities as desirable  the implications of the <B>computer</B> for a  science  of the humanities-a science entailing gathering are necessary  e g  analyzing literature or teaching a student to write a composition  the <B>computer</B> can
43 Q0 1399 35 0.03472793 Lucene_47
on top-to-bottom <B>recognition</B> and left recursion a procedure is given for obtaining structural <B>descriptions</B> in a context-free grammar by performing the <B>recognition</B> according to a strongly equivalent  left-recursion-freegrammar  the effect of allowing null strings in the rewriting rules is discussed  cacm july  1966 kurki-suonio  r  ca660713 jb march 2  1978 8 29 pm 1350 4 1399 1399 4 1399 1659 4
43 Q0 2289 36 0.034434646 Lucene_47
cellular arrays for the solution of graph problems a cellular array is a <B>two</B>-<B>dimensional</B>  checkerboard type interconnection of identical modules  or cells   where each cell contains a few bits applications to wire routing  pert chart <B>analysis</B>  and the <B>analysis</B> of many types of networks-in-memory arrays  parallel processing  special purpose <B>computers</B>  algorithms for distance and spanning tree
43 Q0 252 37 0.03362413 Lucene_47
programming a duplex <B>computer</B> system this paper describes a method of duplex-<B>computer</B> programming that has been used with <B>two</B> <B>computers</B> in a military defense system  the method combines special programs with a basic data processing program package  the duplex operation gives the system greater reliability  after achieving the required level of integration  both <B>computers</B> do similar processing
43 Q0 2153 38 0.03361973 Lucene_47
experiments with an automated instructional system for numerical methods a <B>computer</B> system to press from a <B>computer</B>-controlled presentation to a student-controlled investigation  the system is designed as a classroom-independent course of study  and has been used for <B>two</B> semesters by students in lieu of conventional classroom instruction  initial <B>measures</B> of effectiveness  student acceptance
43 Q0 2308 39 0.033055756 Lucene_47
<B>computers</B> and urban society this brief survey of the use of <B>computers</B> in urban society covers  the <B>computer</B> can be  if properly used  with respect for human dignity and civil liberty of such <B>computer</B> usage will outweigh the costs and that we may look forward to an expansion of such usage management  engineering <B>analysis</B>  information systems 3.23 3.39 3.53 3.72 3.82 3.89 ca720720 jb january 30
43 Q0 409 40 0.032257184 Lucene_47
 and or programmers has been developed and realized on the ibm 709 7090 <B>computer</B>  the system is based on a master file concept and has provisions for accepting  storing  and retrieving both <B>descriptions</B> of distinct data <B>descriptions</B> and the content and use of such <B>descriptions</B> are discussed in some detail
43 Q0 2692 41 0.03178367 Lucene_47
 the parts of the polygon which lie outside the volume  in <B>two</B> dimensions the algorithms permit clipping need store only <B>two</B> vertex values and may begin its processing as soon as the first output vertex boundaries  clipping against very complex window <B>shapes</B> is practical  for perspective applications in three dimentions  a six-plane truncated pyramid is chosen as the clipping volume  the <B>two</B>
43 Q0 2215 42 0.031323228 Lucene_47
   respectively  some <B>computer</B> simulated experiments in character <B>recognition</B> are presented  the resultsapplication of game tree searching techniques to sequential pattern <B>recognition</B> a sequential pattern <B>recognition</B>  spr  procedure does not test all the features of a pattern at once  instead nature  chance   virtually all the powerful techniques developed for searching <B>two</B>-person  strictly
43 Q0 1726 43 0.030746441 Lucene_47
 <B>analysis</B>  these areas are then rescanned at a higher resolution suitable for character <B>recognition</B>preliminary investigation of techniques for automated reading of unformatted text methods for converting unstructured printed material into <B>computer</B> code are experimentally investigated  an operator nagy  g  pattern <B>recognition</B>  character <B>recognition</B>  text reading  information retrieval
43 Q0 2811 44 0.029867053 Lucene_47
structural pattern <B>recognition</B> of carotid pulse waves using a general waveform parsing system a general waveform parsing system with application to structural pattern <B>recognition</B> of carotid pulse <B>analysis</B> system has been applied with good results to these pulse waves to detect and measure structural to other waveforms  cacm december  1976 stockman  g  kanal  l  kyle  m  c  structural pattern <B>recognition</B>
43 Q0 2287 45 0.02986228 Lucene_47
 properties are utilized in developing a new scanning algorithm  the problem of detection and <B>recognition</B> of contour lines is solved by a <B>two</B> color labeling method  it is shown that for maps containing normal  the  tangency problem  involved in practical scanning is discussed  and a solution based on minimizing <B>computer</B>  automatic scanning  contour maps  digitizing  contour lines  topology  detection and <B>recognition</B>
43 Q0 1325 46 0.029561039 Lucene_47
 matched filters  the development of three <B>dimensional</B> pattern <B>analysis</B>  the <B>analysis</B> of parallel electrocardiographer-<B>computer</B> diagnostic interaction  and a study of the possibility of introducing majorremote  on-line  real-time <B>computer</B> diagnosis of the clinical electrocardiogram presented for the remote  online  real-time digital <B>computer</B> diagnosis of clinical electrocardiograms  it seems
43 Q0 1915 47 0.02936896 Lucene_47
 line <B>recognition</B>  three-<B>dimensional</B> representation  plane-faced objects  perspective view  machine rendering of solids  automatic drawing  displaying techniques  <B>computer</B> graphics  man machine interaction  man machine communication  <B>computer</B>-aided design 4.40 4.41 4.49 ca690402 jb february 17  1978
43 Q0 1002 48 0.029289946 Lucene_47
a rapid method for digital filtering since much of the <B>computer</B> time spent in time-series <B>analysis</B> is used for multiplications  a minimum multiplication method was devised for digital filtering  with the expectation that it would be useful in the on line  real-time <B>analysis</B> of biological data  and their application on <B>computers</B> whose assemblers allow the definition of recursive macros  cacm
43 Q0 698 49 0.029273912 Lucene_47
data-dial  <B>two</B>-way communication with <B>computers</B> from ordinary dial telephones an operating system is described which allows users to call up a remotely located <B>computer</B> from ordinary dial telephones  no special hardware or connections are required at the users  telephones  input to the <B>computer</B> is through the telephone dial output from the <B>computer</B> is in spoken form  results of a test
43 Q0 2375 50 0.029259011 Lucene_47
a comparative <B>analysis</B> of disk scheduling policies five well-known scheduling policies for movable to measure total performance including system oriented and individual request oriented <B>measures</B> of input loading conditions  the selection and implementation of a maximum performance <B>two</B>-policy  auxiliary storage  direct access storage  disk <B>analysis</B>  disk scheduling  performance criteria
43 Q0 2828 51 0.029144265 Lucene_47
hierarchical geometric models for visible surface algorithms the geometric structure inherent in the definition of the <B>shapes</B> of three-<B>dimensional</B> objects and environments is used not just to define their relative motion and placement  but also to assist in solving many other problems of systems for producing pictures by <B>computer</B>  by using an extension of traditional structure information
43 Q0 2494 52 0.028495163 Lucene_47
 <B>analysis</B> and <B>two</B> methods of cluster <B>analysis</B>  cacm june  1973 ling  r  f  <B>computer</B> graphics  clustera <B>computer</B> generated aid for cluster <B>analysis</B> a <B>computer</B> generated graphic method  which can be used in conjunction with any hierarchical scheme of cluster <B>analysis</B>  is described and illustrated or dissimilarities by <B>computer</B> printed symbols  of character overstrikes  of various shades of darkness
43 Q0 1771 53 0.028258368 Lucene_47
curriculum 68 -- recommendations for academic programs in <B>computer</B> science -- a report of the acm curriculum committee on <B>computer</B> science this report contains recommendations on academic programs in <B>computer</B> science which were developed by the acm curriculum committee on <B>computer</B> science  a classification of the subject areas contained in <B>computer</B> science is presented and twenty-<B>two</B> courses
43 Q0 2387 54 0.027806278 Lucene_47
maximum computing power and cost factors in the centralization problem a simple <B>analysis</B> of some <B>computer</B>-economic factors involved in comparing multimachine installations versus large single machine february  1972 oldehoeft  a  e  halstead  m  h  centralization  decentralization  economics of <B>computers</B>  <B>computer</B> management  economies of scale 2.41 ca720204 jb january 31  1978 4 25 pm 1653 4 2387 2387 4
43 Q0 2703 55 0.027446464 Lucene_47
the intrinsically exponential complexity of the <B>circularity</B> problem for attribute grammars the semantics of a context-free language with the syntax of the language  the <B>circularity</B> problem many cases use an exponential amount of timen improved version of knuth s <B>circularity</B> testing algorithm jazayeri  m  ogden  w  f  rounds  w  c  attribute grammars  <B>circularity</B> problem  context-free grammars
43 Q0 2201 56 0.026644602 Lucene_47
animator  an on-line <B>two</B>-<B>dimensional</B> film animation system animator is a <B>computer</B> animation system strips  cacm april  1971 talbot  p  a  carr iii  j  w  coulter jr   r  r  hwang  r  c  <B>computer</B> graphics  <B>computer</B> animation  on-line systems  <B>two</B>-<B>dimensional</B> languages  crt  microfilm recorder 3.41 3.80 <B>computer</B> animation techniqueshe dec-338 serves as an input terminal for movie making  allowing the trial
43 Q0 2947 57 0.026624272 Lucene_47
sitar  an interactive text processing system for small <B>computers</B> sitar  a low-cost in teractive text handling and text <B>analysis</B> system for nontechnical users  is in many ways comparable  it is implemented on a pdp 11 time-sharing <B>computer</B> invoked by a crt with microprogrammed editing functions  literary <B>analysis</B>  linguistic <B>analysis</B>  command languages 3.4 3.7 ca770705 jb december 28  1977 10 20
43 Q0 2030 58 0.026276926 Lucene_47
context-sensitive parsing this paper presents a canonical form for context-sensitive derivations and a parsing algorithm which finds each context-sensitive <B>analysis</B> once and only once  the amount the <B>two</B> types of analyses is discussed  the algorithm appears to be complementary to an algorithm by s grammars  formal language theory  parsing  parsing algorithms  <B>recognition</B> algorithms 3.42 5.22 5.23
43 Q0 3001 59 0.026276926 Lucene_47
 of values of variables  <B>two</B> efficient solutions for this problem are described  both methods have negation as well as conjunction  but is subject to the possibility of errors  an error <B>analysis</B> is given  f  r  jr  coding  hash coding  retrieval  secondary keys  pattern <B>recognition</B>  artificial
43 Q0 1891 60 0.025932364 Lucene_47
three-<B>dimensional</B> <B>computer</B> display a stereographic display terminal has been produced using  spinrad  r  j  <B>computer</B> graphics  three-<B>dimensional</B> display  swept raster display  interactive to feed standard television monitors  to produce a stereographic display the <B>computer</B> calculates the projected video images of an object  viewed from <B>two</B> separate points  the resulting video maps
43 Q0 3136 61 0.02574919 Lucene_47
price performance patterns of u  <B>computer</B> systems econometric models of the u  <B>computer</B> market have <B>measures</B> of price performance such as  grosch s law  are shown to be so over simplified market for larger  general purpose <B>computer</B> systems  the other market is the developing one for small business <B>computer</B> systems  a market which is relatively unstable with low price predictability
43 Q0 531 62 0.025546776 Lucene_47
 <B>computer</B>  honeywell 800   here we present in more detail our initial procedures for the person-<B>matching</B>person-<B>matching</B> by electronic methods record linkage in the updating of files is accomplished in many establishments through the use of a preassigned number  such as payroll number  customer number in <B>matching</B>  cacm july  1962 phillips jr   w  bahn  a  k  miyasaki  m  ca620730 jb march 17  1978 7 51 pm 531
43 Q0 2903 63 0.025183897 Lucene_47
  called  recursion in troduction   is described and applied to <B>two</B> algorithms which solve pattern <B>matching</B> problems  by using recursion in troduction  algorithms which manipulate a stack are first <B>matching</B> algorithm of knuth  morris  and pratt can be derived in a few steps from a simple nonlinear  recursion elimination  pattern <B>matching</B> algorithms  stacks  computational induction 4.0 4.2 5.20 5.24
43 Q0 2339 64 0.024381872 Lucene_47
 to test the feasibility of translating verbal <B>descriptions</B> to numerical codes in a <B>computer</B> program  primary emphasis was placed on computerized construction of a reference file of verbal <B>descriptions</B><B>computer</B>-assigned codes from verbal responses it is often desirable to convert verbal responses  cacm june  1972 o reagan  r  t  verbal responses  <B>computer</B> coding  reference list  historical response
43 Q0 633 65 0.024007212 Lucene_47
simulation and <B>analysis</B> of biochemical systems  iii  <B>analysis</B> and pattern <B>recognition</B>  cacm february  1962 garfinkel  d  polk  w  higgins  j  j  ochser  r  t  ca620210 jb march 20  1978 3 43 pm 238 4 633 633 4 633 633 4 633 643 4 633 238 5 633 633 5 633 633 5 633 633 5 633 643 5 633 238 6 633 633 6 633 633 6 633 643 6 633
43 Q0 3116 66 0.023986496 Lucene_47
  typically  drawings are used in an attempt to detect such unwanted interferences  but the <B>two</B>-<B>dimensional</B>  static drafting medium does not always show interferences among three-<B>dimensional</B>  moving parts  this paper presents a <B>computer</B> representation for solids and surfaces and algorithms which carry or as piecewise planar surfaces  <B>two</B> types of interference checking are discussed  detection
43 Q0 1855 67 0.023721337 Lucene_47
 <B>analysis</B>  parsing  <B>analysis</B> procedure  <B>recognition</B> procedure  english sentences  linguisticsa program for the syntactic <B>analysis</B> of english sentences a program is described which produces <B>analysis</B> paths simultaneously while processing the sentence from left to right  the form of the <B>analysis</B> procedure  techniques for keeping the size of the <B>analysis</B> record within reasonable limits
43 Q0 2556 68 0.0235696 Lucene_47
 such as feature extraction  approximate tree <B>matching</B>  and strategy improvement by feedback from the <B>matching</B> process  a pilot program incorporating the principles is described and preliminary operating  cacm january  1973 james  e  b  partridge  d  p  adaptive  linguistic pattern <B>matching</B>  automatic parsing  approximate match  compiler  program statement <B>analysis</B>  syntax <B>analysis</B> 3.62 3.63 3.65
43 Q0 320 69 0.02356918 Lucene_47
 is given in which <B>two</B> logic tables are used  logic tables are <B>two</B>-<B>dimensional</B> in nature  enabling us directly into a <B>computer</B> program and so eliminate the need for flow charting and hand coding  cacm
43 Q0 2163 70 0.023401322 Lucene_47
education related to the use of <B>computers</B> in organizations the acm curriculum committee on <B>computer</B> <B>computers</B> is discussed  and the plans of the committee are outlined  the initial approach of the committee has been to describe the education necessary for the effective use of <B>computers</B> in organizations available  cacm september  1971 teichroew  d  education  information <B>analysis</B>  systems design  business
43 Q0 495 71 0.0231277 Lucene_47
 <B>measures</B> of the resulting parameters  inversion of this matrix of coefficients is required  many for a high-speed <B>computer</B>  all n 2 elements must be stored and manipulated  whereas only  n   1  2 of them are independent  in order to allow a <B>computer</B> of given memory capacity to handle a larger matrix
43 Q0 1427 72 0.022608694 Lucene_47
simulation of radioisotope scans by <B>computer</B> in radioisotope scanning  a field which is assuming increasing importance in medical diagnosis  the scan is a <B>two</B>-<B>dimensional</B> pattern made up of dots  areas of increased source activity are represented on the scan by areas of increased dot density scans has been written for a pdp-1 <B>computer</B> with auxiliary disk storage and cathode ray tube display
43 Q0 2973 73 0.022608694 Lucene_47
sorting on a mesh-connected parallel <B>computer</B> <B>two</B> algorithms are presented for sorting n 2 elements on an n x n mesh-connected processor array that require o n  routing and comparison steps  the best in time within small constant factors  extensions to higher-<B>dimensional</B> arrays are also given  cacm april  1977 thompson  c  d  kung  h  t  parallel <B>computer</B>  parallel sorting  parallel merge  routing
43 Q0 2560 74 0.022496324 Lucene_47
a queuing model of a multiprogrammed <B>computer</B> with a <B>two</B>-level storage system the results are presented of an <B>analysis</B> of a probabilistic model of a multiprogrammed <B>computer</B> system with a <B>two</B>-level storage system in which there is sequential dependency of accesses between the devices  expressions  multiprogrammed <B>computer</B> system  storage system  hierarchical index sets 4.32 ca730101 jb january 24  1978 4
43 Q0 2925 75 0.02208661 Lucene_47
 reconstruction  contour data  serial sections  three-<B>dimensional</B> <B>computer</B> graphics  minimum cost pathsoptimal surface reconstruction from planar contours in many scientific and technical endeavors  a three-<B>dimensional</B> solid must be reconstructed from serial sections  either to aid in the comprehension of the object s structure or to facilitate its automatic manipulation and <B>analysis</B>  this paper
43 Q0 1518 76 0.021806471 Lucene_47
an experimental model of system 360 the problem of predicting the performance of modern <B>computer</B> systems is formidable  one general technique which can ease this problem is macroscopic simulation  this paper reports on the applicability of that technique to system 360  the paper describes an experimental model of system 360-its hardware  software  and its environment  the <B>measures</B> of system
43 Q0 1515 77 0.021520363 Lucene_47
a <B>computer</B> system for inference execution and data retrieval this paper presents a rand project concerned with the use of <B>computers</B> as assistants in the logical <B>analysis</B> of large collections of factual data  a system called relational data file was developed for this purpose  the relational data file is briefly detailed and problems arising from its implementation are discussed  cacm november
43 Q0 2711 78 0.021435391 Lucene_47
a vector space model for automatic indexing in a document retrieval  or other pattern <B>matching</B> environment where stored entities  documents  are compared with each other or with incoming patterns  search requests   it appears that the best indexing  property  space is one where each entity lies  s  automatic information retrieval  automatic indexing  content <B>analysis</B>  document space 3.71 3.73
43 Q0 1554 79 0.021164898 Lucene_47
a <B>computer</B> technique for displaying n-<B>dimensional</B> hyperobjects a digital <B>computer</B> and automatic plotter have been used to generate three-<B>dimensional</B> stereoscopic movies of the three-<B>dimensional</B> parallel and perspective projections of four-<B>dimensional</B> hyperobjects rotating in four-<B>dimensional</B> space  the observed projections and their motions were a direct extension of three-<B>dimensional</B> experience
43 Q0 2825 80 0.020882322 Lucene_47
the bmd and bmdp series of statistical <B>computer</B> programs cacm october  1976 frane  j  w  <B>analysis</B> of variance  cluster <B>analysis</B>  contingency tables  data <B>analysis</B>  discriminant <B>analysis</B>  factor <B>analysis</B>  graphics  outliers  regression  time series  transformations 1.3 3.3 4.0 5.5 ca761006 jb january 3  1978 4 18 pm 2825 4 2825 2419 5 2825 2825 5 2825 2825 5 2825 2825 5 2825
43 Q0 2894 81 0.020830164 Lucene_47
a methodology for interactive <B>computer</B> service measurement a measurement methodology applicable to in teractive <B>computer</B> service is described  its primary purpose is to enable external  user-oriented assessment of <B>computer</B> performance  instead of the more frequently used in ternal system system  <B>computer</B> service  measurement  performance  external measurement  methodology  measurement
43 Q0 2369 82 0.020742005 Lucene_47
 of three-<B>dimensional</B> objects are visible and which are invisible when the objects are rotated about some axis  this paper describes a polygon comparison scheme in which the relationships of <B>two</B> polygons the visible and hidden line relationship between <B>two</B> polygons  additional work must be done line problem  display programming  <B>computer</B> graphics  displays  graphics  <B>computer</B> drawn picture
43 Q0 1366 83 0.020737318 Lucene_47
<B>computer</B> simulation-discussion of the technique and comparison of languages the purpose of this paper is to present a comparison of some <B>computer</B> simulation languages and of some of the involved in comparing software packages for digital <B>computers</B> are discussed in part i  the issue is obvious  users of digital <B>computers</B> must choose from available languages or write their own  substantial costs
43 Q0 2407 84 0.020558415 Lucene_47
 it are specifiedetailed course <B>descriptions</B> are presented  program organization and a problems  management systems  information systems  information <B>analysis</B>  system design  systems <B>analysis</B> 1.52
43 Q0 2303 85 0.020184387 Lucene_47
archaeology of <B>computers</B> - reminiscences  1945-1947 the period preceding the founding of acm was dominated by the first large <B>computer</B> eniac  its characteristics  described here  foreshadow later developments  cacm july  1972 alt  f  l  history of <B>computers</B> 1.2 ca720725 jb january 30  1978 10 36 am 2303 5 2303 2303 5 2303 2303 5 2303
43 Q0 1604 86 0.020162 Lucene_47
further <B>analysis</B> of a computing center environment empirical distributions of program lengths  execution times  processing times  and loading times of over 10,000 jobs serviced in a university computing center environment are presented  the data are subdivided according to certain characteristics as well as statistical <B>measures</B> of other interesting properties  the results are interpreted in terms
43 Q0 1653 87 0.020162 Lucene_47
system performance evaluation  survey and appraisal the state of the art of system performance evaluation is reviewed and evaluation goals and problems are examined  throughput  turnaround  and availability are defined as fundamental <B>measures</B> of performance  overhead and cpu speed are placed is discussed  as well as pitfalls which may be encountered when using them  <B>analysis</B>  simulation  and synthesis
43 Q0 2003 88 0.02015724 Lucene_47
 to extend the use of the <B>two</B> languages to different <B>computer</B>-assisted applications  cacm septemberan interactive software system for <B>computers</B>-aided design  an application to circuit project designer and <B>computer</B> during various steps of the design process  are presented  the main emphasis is given to the description of the features of the <B>two</B> high level user oriented languages  operating
43 Q0 2194 89 0.01964267 Lucene_47
 of the blocks of coding produced by an assembler or compiler when  1  the length of each <B>computer</B>  some <B>computers</B> permit either 8-bit addressing  interpreted relative to the location counter  or full 16-bit addressing of all of memory  when assembling or compiling <B>two</B> or more blocks of instructions which have many mutual references in such a <B>computer</B>  there is no simple iterative procedure
43 Q0 1809 90 0.01946009 Lucene_47
numerical <B>analysis</B> in a ph  <B>computer</B> science program numerical <B>analysis</B> is the study of methods the question of background and emphasis  the numerical <B>analysis</B> program in the <B>computer</B> science department should emphasize an awareness of the problems of <B>computer</B> implementation and experimental procedures parter  s  v  ph  program  numerical <B>analysis</B>  course separation  education 1.52 ca691203 jb february
43 Q0 3132 91 0.018930303 Lucene_47
experiments with some algorithms that find central solutions for pattern classification in <B>two</B>-class pattern <B>recognition</B>  it is a standard technique to have an algorithm finding hyperplanes which separates the <B>two</B> classes in a linearly separable training set  the traditional methods find in the empty space between the <B>two</B> classes  since a central hyperplane does not favor one class
43 Q0 2967 92 0.018840577 Lucene_47
a comparison of hardware and software associative memories in the context of <B>computer</B> graphics the associative processing of line drawings  apld  system utilizes a hardware associative memory and creates  modifies  deletes  stores  and retrieves <B>two</B>-<B>dimensional</B> line drawings consisting of poin ts  lines  rectangles  and triangles  the apld functions were duplicated on the tx-2 <B>computer</B> at m  s
43 Q0 3049 93 0.018829621 Lucene_47
 of the system  the design of sembegs is founded upon the basic assumption that the true aim of <B>computer</B> graphics  bagdams  which provides a common means of communicating the <B>descriptions</B> of graphical entities between  and manipulating the <B>descriptions</B> of graphical entities provided by  and received by application programs  graphics packages  and graphical devices  cacm november  1978 wendorf  j  <B>computer</B> graphics  data
43 Q0 1381 94 0.018729564 Lucene_47
impact of <B>computers</B> on the undergraduate mathematics curriculum the use of <B>computers</B> to permit fields by the use of <B>computers</B>  the present paper suggests that that portion of the undergraduate because of <B>computers</B>  an early introduction to programming is desirable to permit a continuing use stage an intensive introduction to numerical <B>analysis</B> should be added to the current curriculum
43 Q0 847 95 0.018688522 Lucene_47
a penny-<B>matching</B> program the logic of a penny-<B>matching</B> program written for the csx-1 is described  cacm june  1963 wall  e  brown  r  m  ca630602 jb march 14  1978 10 27 am 847 5 847 847 5 847 847 5 847
43 Q0 3047 96 0.018669255 Lucene_47
using synthetic images to register real images with surface models a number of image <B>analysis</B> tasks can benefit from registration of the image with a model of the surface being imaged  automatic alignment by <B>matching</B> the real image with a synthetic image obtained from a surface model and known models  image transformation  image <B>matching</B>  shaded images 3.63 3.11 3.14 8.2 3.83 ca781104 dh january
43 Q0 3026 97 0.018389221 Lucene_47
the evolution of the sperry univac 1100 series  a his tory  <B>analysis</B>  and projection the 1100 series systems are sperry univac s large-scale main frame <B>computer</B> systems  beginning with the 1107 in 1962  the 1100 series has progressed through a succession of eight compatible <B>computer</B> models-speed register  or <B>two</B> operands from high-speed registers  the 1100 operating system is designed
43 Q0 2980 98 0.01826727 Lucene_47
the editing of picture segmentations using local <B>analysis</B> of graphs a major problem in picture processing is the elimination of the large number of spurious regions that result from an initial segmentation by region growing techniques  such regions have been eliminated either on the basis  pavlidis  t  picture processing  pattern <B>recognition</B>  segmentation  region editing 3.63 ca770402 jb
43 Q0 1844 99 0.01822104 Lucene_47
a modular <B>computer</B> sharing system an alternative approach to the design and organization described is a conceptually simple arrangement of a bank of interchangeable <B>computers</B>  each of which is a memory processor pair  that are assigned to process terminal jobs as they arrive  one of the <B>computers</B> serves as the master or control <B>computer</B> and supervises the collection and distribution of messages
43 Q0 2322 100 0.018178247 Lucene_47
 devices and incidentally for the design of superscale <B>computers</B>  cacm july  1972 foster  c  c  <B>computer</B> architecture  projection  microcomputers  <B>computer</B> design  <B>computer</B> organization 1.2 2.1 6.0 6.2a view of <B>computer</B> architecture an attempt is made to predict the developments of the next 25 years in the field of <B>computer</B> architecture  standardized  inexpensive microcomputers on a single chip
*************Query 44*************************

44 Q0 2829 1 0.9502308 Lucene_47
<B>texture</B> and reflection in <B>computer</B> generated images in 1974 catmull developed a new algorithm in the areas of <B>texture</B> simulation and lighting models  the parameterization of a patch defines coming from a given direction is modeled in a similar manner to the <B>texture</B> mapping and then added to the intensity obtained from the <B>texture</B> mapping  several examples of images synthesized using
44 Q0 2523 2 0.7602646 Lucene_47
a region coloring technique for scene <B>analysis</B> a method of converting a picture into a  cartoon  or  map  whose regions correspond to differently textured regions is described  <B>texture</B> edges in the picture are detected  and solid regions surrounded by these  usually broken  edges are  colored  rosenfeld  a  picture processing  scene <B>analysis</B>  edge detection 3.63 8.2 ca730405 jb january 24
44 Q0 1002 3 0.14101861 Lucene_47
a rapid method for digital filtering since much of the <B>computer</B> time spent in time-series <B>analysis</B> is used for multiplications  a minimum multiplication method was devised for digital filtering  with the expectation that it would be useful in the on line  real-time <B>analysis</B> of biological data and band-pass designs  programs are available for implementing both the <B>synthesis</B> of these filters
44 Q0 2325 4 0.1061867 Lucene_47
numerical mathematics and <B>computer</B> science numerical mathematics is viewed as the <B>analysis</B>  these are  foundations  finite precision number systems  computational complexity   <B>synthesis</B> and <B>analysis</B> of algorithms  <B>analysis</B> of error  programs and program libraries  cacm july  1972 traub  j  f  numerical mathematics  <B>computer</B> science  mathematics of computation  algorithms  continuous algorithms 1.3 5.0 5.1
44 Q0 2825 5 0.10556476 Lucene_47
the bmd and bmdp series of statistical <B>computer</B> programs cacm october  1976 frane  j  w  <B>analysis</B> of variance  cluster <B>analysis</B>  contingency tables  data <B>analysis</B>  discriminant <B>analysis</B>  factor <B>analysis</B>  graphics  outliers  regression  time series  transformations 1.3 3.3 4.0 5.5 ca761006 jb january 3  1978 4 18 pm 2825 4 2825 2419 5 2825 2825 5 2825 2825 5 2825 2825 5 2825
44 Q0 1809 6 0.09138955 Lucene_47
numerical <B>analysis</B> in a ph  <B>computer</B> science program numerical <B>analysis</B> is the study of methods the question of background and emphasis  the numerical <B>analysis</B> program in the <B>computer</B> science department should emphasize an awareness of the problems of <B>computer</B> implementation and experimental procedures parter  s  v  ph  program  numerical <B>analysis</B>  course separation  education 1.52 ca691203 jb february
44 Q0 1679 7 0.08172537 Lucene_47
 series <B>analysis</B>  digital filtering  spectral <B>analysis</B>  real-time spectrum analyzers  fourier <B>analysis</B>  discrete fourier transform  digital spectrum <B>analysis</B>  fourier <B>analysis</B> algorithm  fourier <B>synthesis</B>
44 Q0 525 8 0.08073914 Lucene_47
a <B>computer</B> technique for handling <B>analysis</B> of variance cacm august  1962 howell  j  r  ca620803 jb march 17  1978 7 32 pm 525 5 525 525 5 525 525 5 525
44 Q0 533 9 0.080656245 Lucene_47
digital <B>synthesis</B> of correlated stationary noise in this note we propose a method of generating stationary noise with a prescribed auto-covariance function by digital methods  the need for such a technique often arises in testing the performance of data processing and engineering systems  where <B>analysis</B>  in practice  discrete harmonic <B>analysis</B> as presented in the third section is used  cacm july
44 Q0 2494 10 0.07904168 Lucene_47
a <B>computer</B> generated aid for cluster <B>analysis</B> a <B>computer</B> generated graphic method  which can be used in conjunction with any hierarchical scheme of cluster <B>analysis</B>  is described and illustrated <B>analysis</B> and two methods of cluster <B>analysis</B>  cacm june  1973 ling  r  f  <B>computer</B> graphics  cluster or dissimilarities by <B>computer</B> printed symbols  of character overstrikes  of various shades of darkness
44 Q0 1260 11 0.07824727 Lucene_47
least-squares <B>analysis</B> of resonance spectra on small computers the problem of analyzing data from a mossbauer effect experiment is discussed  by using the cut step procedure for convergence and by imposing physical constraints on the functional form of the calculation it is possible to make the <B>analysis</B> on a small <B>computer</B>  the <B>analysis</B> has been carried out on an ibm 1410 <B>computer</B> with a 40,000
44 Q0 974 12 0.07116403 Lucene_47
a technique for reading gapless tapes makes electrocardiograph <B>analysis</B> feasible on the ibm 7090 to study arrhythmias and higher frequency components of the electrocardiogram  long series of patient heart cycles must be examined before valid comparison of different heart beats can be made  a technique is presented for the automatic <B>analysis</B> of long series heart cycles via a digital <B>computer</B>  cacm
44 Q0 2812 13 0.07064498 Lucene_47
<B>computer</B>-aided <B>analysis</B> and design of information systems this paper describes the use of <B>computer</B>-aided <B>analysis</B> for the design and development of an integrated financial management system by the navy material command support activity  nmcsa   <B>computer</B>-aided <B>analysis</B> consists of a set december  1976 nunamaker  j  f  jr  konsynski  b  r  jr  ho  t  singer  c  <B>computer</B>-aided <B>analysis</B>
44 Q0 1653 14 0.06982004 Lucene_47
 is discussed  as well as pitfalls which may be encountered when using them  <B>analysis</B>  simulation  and <B>synthesis</B>
44 Q0 461 15 0.067282625 Lucene_47
coding of medical case history data for <B>computer</B> <B>analysis</B> cacm october  1962 lipkin  m  woodbury  m  a  ca621019 jb march 17  1978 6 59 pm 461 5 461 461 5 461 461 5 461
44 Q0 1435 16 0.06706908 Lucene_47
design of <B>computer</B> simulation experiments for industrial systems the aim of this paper be applicable to the design of <B>computer</B> simulation experiments for industrial systems  although major emphasis is placed on <B>analysis</B> of variance techniques  three other techniques of data <B>analysis</B> are considered-multiple ranking procedures  sequential sampling and spectral <B>analysis</B>  the paper treats
44 Q0 1014 17 0.066606395 Lucene_47
machine controls for <B>analysis</B> of variance a major problem in using the <B>analysis</B> of variance  as the number of factors increases  is the exponential rise in the number of interactions  even though to the <B>computer</B> to handle the bulk of work involved in computing the interactions  a program device to get the <B>computer</B> to do this is described  cacm august  1964 weldon  r  j  ca640816 jb march 9  1978
44 Q0 1709 18 0.06335091 Lucene_47
a modification of efroymson s technique for stepwise regression <B>analysis</B> the computational technique conventionally used for stepwise multiple linear regression requires the storage of an n x n allows the <B>analysis</B> of problems containing more variables  alternatively  it permits the <B>analysis</B>  correlation  linear statistical models  statistical <B>computer</B> programs  curve fitting 4.0 4.40 5.0
44 Q0 2286 19 0.06335091 Lucene_47
automatic error <B>analysis</B> for determining precision the problem considered is that of evaluating a rational expression to within any desired tolerance on a <B>computer</B> which performs variable-precision floating-point arithmetic operations  an automatic error <B>analysis</B> technique is given for determining  error <B>analysis</B>  interval arithmetic  precision control 5.11 ca720904 jb january 27  1978 4 39 pm
44 Q0 1404 20 0.062786184 Lucene_47
computational aspects of multiple covariance <B>analysis</B> on a multifactor structure the computational procedure for the <B>analysis</B> of multiple covariance in statistics is discussed with reference to the <B>analysis</B> of variance  a special operator calculus developed by hartly for programming <B>analysis</B> of variance for multifactor experiments is extended to cover the <B>analysis</B> of covariance  this extension
44 Q0 1732 21 0.06041604 Lucene_47
factorial <B>analysis</B> of variance  algorithm 330  g1   cacm june  1968 oliver i  factorial variance <B>analysis</B>  variance  statistical <B>analysis</B> 5.5 ca680613 jb february 22  1978 3 21 pm 1732 5 1732 1732 5 1732 1732 5 1732
44 Q0 1823 22 0.06041604 Lucene_47
factorial <B>analysis</B> of variance  algorithm  g1   cacm november  1969 howell  j  r  factorial variance <B>analysis</B>  variance  statistical <B>analysis</B> 5.5 ca691107 jb february 15  1978 12 22 pm 1823 5 1823 1823 5 1823 1823 5 1823
44 Q0 2310 23 0.060272824 Lucene_47
language <B>analysis</B> in the humanities the use of the <B>computer</B> in the language-oriented humanities  this paper argues that the <B>computer</B> s major role as to language <B>analysis</B> in the humanities as desirable  the implications of the <B>computer</B> for a  science  of the humanities-a science entailing gathering are necessary  e g  analyzing literature or teaching a student to write a composition  the <B>computer</B> can
44 Q0 2751 24 0.060130555 Lucene_47
illumination for <B>computer</B> generated pictures the quality of <B>computer</B> generated images of three-dimensional scenes depends on the shading technique used to paint the objects on the cathode-ray tube visual <B>perception</B> and the fundamental laws of optics are considered in the development of a shading  b  t  <B>computer</B> graphics  graphic display  hidden surface removal  3.26 3.41 8.2 ca750602 jb january
44 Q0 1325 25 0.059944253 Lucene_47
remote  on-line  real-time <B>computer</B> diagnosis of the clinical electrocardiogram presented for the remote  online  real-time digital <B>computer</B> diagnosis of clinical electrocardiograms  it seems matched filters  the development of three dimensional pattern <B>analysis</B>  the <B>analysis</B> of parallel electrocardiographer-<B>computer</B> diagnostic interaction  and a study of the possibility of introducing major
44 Q0 2771 26 0.057465803 Lucene_47
the <B>synthesis</B> of solids bounded by many faces a technique is presented which allows a class of solid objects to be synthesized and stored using a <B>computer</B>  <B>synthesis</B> begins with primitive solids like bounded by many faces  cacm april  1975 braid  i  c  computational geometry  <B>computer</B>-aided design  graphics  machined components  polyhedra  shape <B>synthesis</B>  three-dimensional modeling 3.2 8.2 ca750406 jb
44 Q0 2739 27 0.055890907 Lucene_47
the restriction language for <B>computer</B> grammars of natural language over the past few years  a number of systems for the <B>computer</B> <B>analysis</B> of natural language sentences have been based on augmented a group of restrictions to which a tree must conform in order to be a valid sentence <B>analysis</B> for computerized natural language <B>analysis</B>  the language is used in the current implementation
44 Q0 1782 28 0.055809945 Lucene_47
a numerical integration formula useful in fourier <B>analysis</B> a numerical integration formula  such a formulation is useful in fourier <B>analysis</B> to improve accuracy and ease of usage  a complete set of formulas for numerical fourier <B>analysis</B> is given  cacm january  1968 meisel  w  s  numerical integration  fourier <B>analysis</B>  integration 5.16 ca680112 jb february 23  1978 2 05 pm 1782 5 1782 1782 5
44 Q0 1801 29 0.055809945 Lucene_47
<B>analysis</B> of variance for balanced experiments  algorithm 367  g2   cacm december  1969 claringbold  p  j  <B>analysis</B> of variance  <B>analysis</B> of covariance  regression <B>analysis</B>  experimental design  balanced experiment  missing data  interblock estimate  intra block estimate 5.14 5.5 ca691211 jb february 15  1978 2 14 pm 1801 4 1801 1801 5 1801 1801 5 1801 1801 5 1801 1802 5 1801
44 Q0 2447 30 0.053826097 Lucene_47
sard kernels for certain bivariate cubatures an error <B>analysis</B> for some bivariate cubatures is given  the remainders are obtained by the use of sard kernels  numerical results and <B>computer</B> graphs are given for some of the kernel functions  cacm september  1973 barnhill  r  e  pilcher  d  t  cubatures  sard kernels  numerical integration  remainder formulas 5.13 5.16 ca730908 jb january 23  1978 8
44 Q0 2735 31 0.053826097 Lucene_47
discrimination in the employment of women in the <B>computer</B> industry cacm july  1975 weber  r  e  gilchrist  b  discrimination against women  salaries  employment  programmers  systems <B>analysis</B>  keypunch operators  machine operators 2.40 2.41 2.42 ca750707 jb january 9  1978 9 55 am 2735 5 2735 2735 5 2735 2735 5 2735 2823 5 2735 2735 6 2735
44 Q0 726 32 0.053826097 Lucene_47
a general program for the <B>analysis</B> of square and rectangular lattice designs this paper describes a general-purpose program that will handle those incomplete block designs known as square and rectangular lattices  flow diagrams are given so that the method of calculation may be programmed for any digital <B>computer</B>  cacm september  1963 smillie  k  w  ca630932 jb march 13  1978 6 53 pm 726 5 726
44 Q0 3078 33 0.053380884 Lucene_47
<B>analysis</B> of the availability of <B>computer</B> systems using <B>computer</B>- aided algebra analytical results  related to the availability of a <B>computer</B> system constructed of unreliable processors  are presented in this paper  these results are obtained by using various <B>computer</B>-aided algebraic manipulation analyzed here  cacm july  1978 chattergy  r  pooch  u  <B>computer</B>-aided algebra  symbol manipulation
44 Q0 2634 34 0.053373016 Lucene_47
an evaluation of statistical software in the social sciences several hundred college and university <B>computer</B> installations now offer various types of statistical packages for general use  among those software  descriptive statistics  bivariate tables  pearson correlation  regression  factor <B>analysis</B>  one-way <B>analysis</B> of variance 1.3 3.30 4.19 4.22 4.49 5.5 ca740612 jb january 17  1978 2 54 pm 2634 5
44 Q0 3149 35 0.053373016 Lucene_47
the cyclic order property of vertices as an aid in scene <B>analysis</B> a cyclic-order property is defined for bodies bounded by smooth-curved faces  the property is shown to be useful for analyzing  freeman  h  scene <B>analysis</B>  cyclic order  artificial intelligence  three-dimensional reconstruction   picture processing  <B>computer</B> graphics  pattern recognition  3.2 3.6 8.2 ca790605 dh august 22  1979 1
44 Q0 1916 36 0.05279243 Lucene_47
<B>analysis</B> of boolean program models for time-shared  paged environments directed graphs or their associated matrices are frequently used to represent the logical structure of sequences of <B>computer</B> is also contained  <B>analysis</B> of these models prior to execution yields information valuable in determining loading  during execution  the <B>analysis</B> may be used for  look ahead  control of page turning  cacm
44 Q0 2871 37 0.05279243 Lucene_47
logical <B>analysis</B> of programs most present systems for verification of <B>computer</B> programs are incomplete in that intermediate inductive assertions must be provided manually by the user  termination  this paper suggests conducting a logical <B>analysis</B> of programs by using invariants which express what  1976 katz  s  manna  z  logical <B>analysis</B>  invariants  program verification  correctness
44 Q0 2947 38 0.05279243 Lucene_47
sitar  an interactive text processing system for small computers sitar  a low-cost in teractive text handling and text <B>analysis</B> system for nontechnical users  is in many ways comparable  it is implemented on a pdp 11 time-sharing <B>computer</B> invoked by a crt with microprogrammed editing functions  literary <B>analysis</B>  linguistic <B>analysis</B>  command languages 3.4 3.7 ca770705 jb december 28  1977 10 20
44 Q0 2062 39 0.04934605 Lucene_47
 sequential sampling procedures are applied to the <B>analysis</B> of data generated by a <B>computer</B> simulation experiment with a multi-item inventory model  for each procedure the cost of <B>computer</B> time required to achieve given levels of statistical precision is calculated  also the cost of <B>computer</B> time using comparable fixed sample size methods is calculated  the <B>computer</B> costs of fixed sample size
44 Q0 1855 40 0.049329486 Lucene_47
a program for the syntactic <B>analysis</B> of english sentences a program is described which produces <B>analysis</B> paths simultaneously while processing the sentence from left to right  the form of the <B>analysis</B> procedure  techniques for keeping the size of the <B>analysis</B> record within reasonable limits information  cacm august  1969 dewar  h  bratley  p  syntactic <B>analysis</B>  language processing  language
44 Q0 1034 41 0.0488337 Lucene_47
autosate an automated data system <B>analysis</B> technique is described  the technique is designed to alleviate some of the principal problems that beset current <B>analysis</B>-large data workloads  long span for conducting data system <B>analysis</B> and using the results  and the lack of a technique to control data system changes throughout its lifetime  the <B>analysis</B> is geared to determining workload  relationships
44 Q0 1802 42 0.04833283 Lucene_47
regression using certain direct product matrices  algorithm 366  g2   cacm december  1969 claringbold  p  j  <B>analysis</B> of variance  <B>analysis</B> of covariance  regression <B>analysis</B>  experimental design  matrix direct product  protection operator  orthogonal matrix 5.14 5.5 ca691210 jb february 15  1978 2 23 pm 1801 5 1802 1802 5 1802 1802 5 1802 1802 5 1802 1802 6 1802
44 Q0 1365 43 0.047841776 Lucene_47
  programming system provides a powerful tool for performing mathematical <B>analysis</B>  it is an extension of fortran iv which permits the use of the <B>computer</B> to perform the tedious algebraic computations that arise equations with literal coefficients  nonlinear maximum likelihood estimation  tensor <B>analysis</B>  and generation of the coefficients of equations in keplerian motion  these types of <B>analysis</B>-which arose
44 Q0 1272 44 0.047576 Lucene_47
 beyond mere correction and improvement of <B>computer</B> output  is exemplified by the use  chief among them being interpretation and expansion of <B>computer</B> output in such processes as factor <B>analysis</B>  applications are described  such processes as factor <B>analysis</B>  applications are described
44 Q0 1885 45 0.047576 Lucene_47
a <B>computer</B> system for transformational grammar a comprehensive system for transformational grammar has been designed and implemented on the ibm 360 67 <B>computer</B>  the system deals random phrase structure generator  a lexical insertion algorithm  an extended definition of <B>analysis</B> syntax  language processing  language <B>analysis</B>  sentence generation  lexical insertion  computational
44 Q0 1482 46 0.047097836 Lucene_47
bugsys  a programming system for picture processing-not for debugging bugsys is a picture processing and measuring system that depends upon a pictorial input to the <B>computer</B> s memory  bugsys can be used for many types of applications  in particular  the authors have used the system for the <B>analysis</B> of linear graphs  the main concept of the system is the use of a collection of programmable
44 Q0 2643 47 0.047097836 Lucene_47
the minimization of spatially-multiplexed character sets the paper describes a technique for compacting character sets in a digital <B>computer</B> while retaining fast access to individual bits  it considers the problem of minimizing the storage needed to contain such tables  reduction techniques  parsing  lexical <B>analysis</B> scanning  string processing  spatial multiplexing 4.9 ca740603 jb january 17
44 Q0 825 48 0.047097836 Lucene_47
pip  a photo-interpretive program for the <B>analysis</B> of spark-chamber data  an operating <B>computer</B> program that processes photographically recorded data is described  the input to the program consists of spark-chamber photographs on which tracks of high-energy particles are recorded  the program automatically scans  measures and performs the preliminary interpretation of these photographs
44 Q0 931 49 0.047097836 Lucene_47
systematic mistake <B>analysis</B> of digital <B>computer</B> programs cacm february  1963 miller  j  c  maloney  c  j  ca630202 jb march 14  1978 2 23 pm 1324 4 931 931 4 931 931 4 931 931 4 931 931 5 931 931 5 931 931 5 931 202 5 931 396 5 931 2616 5 931 634 5 931 795 5 931 931 6 931 931 6 931 1548 6 931 1684 6 931 2517 6 931 404 6 931
44 Q0 2560 50 0.046940807 Lucene_47
a queuing model of a multiprogrammed <B>computer</B> with a two-level storage system the results are presented of an <B>analysis</B> of a probabilistic model of a multiprogrammed <B>computer</B> system with a two-level storage system in which there is sequential dependency of accesses between the devices  expressions  multiprogrammed <B>computer</B> system  storage system  hierarchical index sets 4.32 ca730101 jb january 24  1978 4
44 Q0 1686 51 0.046895936 Lucene_47
<B>computer</B> <B>synthesis</B> of holograms for 3-d display optical and digital holography are reviewed  the mathematical model and computational techniques of the authors  digital holographic process are discussed  and applications of <B>computer</B> holography are suggested  <B>computer</B> holograms have been made transforms  <B>computer</B> applications  display device  photography  physics  mathematics  image
44 Q0 2050 52 0.04614351 Lucene_47
automatic parsing for content <B>analysis</B> although automatic syntactic and semantic <B>analysis</B> <B>analysis</B> is one  do not have such a stringent coverage requirement  preliminary studies show of coverage for content <B>analysis</B> variables which compares favorably to manual methods  in variables which is normally processed  cacm june  1970 damerau  f  j  content <B>analysis</B>  parsing  syntactic <B>analysis</B>  natural
44 Q0 1605 53 0.044477515 Lucene_47
   programmer time  <B>computer</B> time  elapsed time  etc   which were considered to be definitive of  system effectiveness   and <B>analysis</B> of variance techniques were employed to estimate system differences in these variables after differences due to the design factors had been eliminated  statistical <B>analysis</B>
44 Q0 2113 54 0.044477515 Lucene_47
 english sentence analyzer  by structuring an area of the <B>computer</B> s central core storage in such a way the input hierarchical structures  cacm february  1970 von glasersfeld  e  parsing  syntactic <B>analysis</B>  natural-language <B>analysis</B>  linguistic data processing  computational linguistics  correlational grammar
44 Q0 675 55 0.044477515 Lucene_47
coding clinical laboratory data for automatic storage and retrieval a series of clinical laboratory codes have been developed to accept and store urin <B>analysis</B>  blood chemistry  and hematology test developed and presents a listing of the urin <B>analysis</B> codes  five criteria used in developing to the problem is described  flexible  <B>computer</B>-produced  composite laboratory reports are also discussed
44 Q0 2308 56 0.04408775 Lucene_47
  the <B>computer</B> can be  if properly used  with respect for human dignity and civil liberty of such <B>computer</B> usage will outweigh the costs and that we may look forward to an expansion of such usage management  engineering <B>analysis</B>  information systems 3.23 3.39 3.53 3.72 3.82 3.89 ca720720 jb january 30
44 Q0 2387 57 0.04408775 Lucene_47
maximum computing power and cost factors in the centralization problem a simple <B>analysis</B> of some <B>computer</B>-economic factors involved in comparing multimachine installations versus large single machine installations is given  and a mathematical model is derived to assist policy decisions  cacm  <B>computer</B> management  economies of scale 2.41 ca720204 jb january 31  1978 4 25 pm 1653 4 2387 2387 4
44 Q0 2977 58 0.04408775 Lucene_47
the stage hypothesis and the s-curve  some contradictory evidence this paper presents the results of a study testing the s-shaped budget curve of nolan s stage model of <B>computer</B> development the concept of a stage model  the <B>analysis</B> suggests an alternative model of budget growth and a separation between models of budgeting growth and growth stages in the development of the <B>computer</B>
44 Q0 2999 59 0.04408775 Lucene_47
an approach to multidimensional data array processing by <B>computer</B> some recent work on the development of general-purpose <B>computer</B>-based statistical and data processing capabilities for handling multidimensional arrays of data is presented  attention is first given to some of the general problems processing  table processing  statistical <B>analysis</B>  data retrieval  data processing  syntax for data
44 Q0 1003 60 0.042979036 Lucene_47
a <B>computer</B> <B>analysis</B> method for thermal diffusion in biochemical systems in the thermal detection the reactants and the flow of heat packets  in such a way that the <B>computer</B> continually stores the heat distribution  a <B>computer</B> <B>analysis</B> method is here regarded as one in which the physical laws-relaxation times of concentric insulating layers  a <B>computer</B> program was developed which gives
44 Q0 1507 61 0.042291224 Lucene_47
a multiprogramming environment for online data acquis ition and <B>analysis</B> an experimental system for acquis ition and <B>analysis</B> of large bodies of data derived from scientific experiments is described  its architecture and implementation is largely based on certain objectives and characteristics of a general data <B>analysis</B> scheme  early applications have been oriented towards the investigation
44 Q0 1250 62 0.04185746 Lucene_47
graphic symbols for problem definition and <B>analysis</B>-a standards working paper cacm june  1965 ca650605 jb march 7  1978 12 35 pm 1250 5 1250 1250 5 1250 1250 5 1250
44 Q0 167 63 0.04185746 Lucene_47
combining algol statement <B>analysis</B> with validity checking cacm july  1960 mcisaac  p  ca600706 jb march 20  1978 9 15 pm 167 5 167 167 5 167 167 5 167
44 Q0 329 64 0.04185746 Lucene_47
 for <B>analysis</B>  this report presents a new concept in automatic <B>analysis</B>  the relative-frequency approach abstracting  included in the report is a summary of automatic <B>analysis</B> studies published as of the date for the solution of problems of automatic <B>analysis</B>  cacm may  1961 edmundson  h  p  wyllys  r  e
44 Q0 2820 65 0.041566327 Lucene_47
 and most semantic <B>analysis</B> is performed as the program is entered and as it is subsequently edited  <B>analysis</B> is performed character by character  the most remarkable feature of caps is its ability  or cobolin conjunction with a <B>computer</B> assisted course on introductory <B>computer</B> science  cacm november  error correction  interpreters  debugging  <B>computer</B> assisted instruction  <B>computer</B> science education
44 Q0 2823 66 0.041121706 Lucene_47
the status of women and minorities in academic <B>computer</B> science the results of a survey concerning women and minority students and faculty in <B>computer</B> science during the years 1971 to 1975 are presented  <B>analysis</B> of the data indicated that effective affirmative action programs for recruitment for later employment in <B>computer</B> science  also  possible discrimination in employment of women and minority
44 Q0 3026 67 0.041121706 Lucene_47
the evolution of the sperry univac 1100 series  a his tory  <B>analysis</B>  and projection the 1100 series systems are sperry univac s large-scale main frame <B>computer</B> systems  beginning with the 1107 in 1962  the 1100 series has progressed through a succession of eight compatible <B>computer</B> models <B>computer</B> series  <B>computer</B> architecture  multiprocessing languages  data management systems  end
44 Q0 1526 68 0.04036957 Lucene_47
multiprogramming under a page on demand strategy a model of multiprogramming for a particular <B>computer</B> system using a page on demand strategy is developed  <B>analysis</B> of this model is used to predict performance  measured by the average usage of the cpu  when user programs are typical of those arising from an interactive time sharing environment  the effect of several hardware modifications is also
44 Q0 1658 69 0.04036957 Lucene_47
<B>analysis</B> of algorithms for the zero-one programming problem this paper is concerned with a review and examination of several existing algorithms for the zero-one programming problem  computational experience is summarized  the machine time and storage requirements of several of the algorithms are compared over several test problems of small and intermediate size  <B>computer</B> experiments still
44 Q0 2490 70 0.04036957 Lucene_47
 proportional to max  v e  when executed on a random access <B>computer</B>  cacm june  1973 hopcroft  j  tarjan  r  graphs <B>analysis</B> of algorithms  graph manipulation 5.32 ca730610 jb january 23  1978 1 55 pm 2490
44 Q0 2516 71 0.04036957 Lucene_47
hierarchical storage in information retrieval a probabilistic <B>analysis</B> is employed to determine the effect of hierarchical storage organizations on information retrieval operations  the data storage hardware is assumed to consist on n-levels of linearly connected memory hardware with increasing of fast semiconductor memory  <B>computer</B> core memory  extended core storage  disk memory  and data cells
44 Q0 1045 72 0.03946359 Lucene_47
programming <B>analysis</B> of variance by sequences of operators and isomorphic mappings a special operator calculus developed by hartley in 1956 together with a new mapping scheme has been found to be efficient in programming <B>analysis</B> of variance for multifactor experiments  the operator calculus and the mapping scheme are described in detail  cacm july  1964 peng  k  c  ca640702 jb march 9  1978 8 30
44 Q0 1529 73 0.03946359 Lucene_47
decomposition programming an <B>analysis</B> of matrix substructure a petroleum blending problem was analyzed in order to compare the primal and primal-dual decomposition algorithms  in the course of the <B>analysis</B>  a substructure was discovered which has relevance to the relative performance of the two algorithms and to their absolute performance as compared with a standard primal-simplex solution
44 Q0 1780 74 0.03946359 Lucene_47
harmonic <B>analysis</B> for symmetrically distributed data  algorithm 320  c6   cacm february  1968 hunter  d  b  harmonic <B>analysis</B>  cosine series  sine series  function approximation  curve fitting  trigonometric series 5.13 ca680202 jb february 23  1978 1 34 pm 1780 5 1780 1780 5 1780 1780 5 1780
44 Q0 1917 75 0.03946359 Lucene_47
an algol procedure for the fast fourier transform with arbitrary factors  algorithm 339  c6   cacm march  1969 singleton  r  c  fast fourier transform  complex fourier transform  multivariate fourier transform  fourier series  harmonic <B>analysis</B>  spectral <B>analysis</B>  orthogonal polynomials  orthogonal transformation  virtual core memory  permutation 3.15 3.83 5.12 5.14 ca690310 jb february 20  1978
44 Q0 2988 76 0.039117344 Lucene_47
 model is proposed as being broadly applicable to the <B>analysis</B> of in teractive <B>computer</B> systems which network models of <B>computer</B> systems  empirical analyses and analytic studies based on applying  system performance  queueing network models  in teractive <B>computer</B> systems 4.32 ca770304 jb december
44 Q0 3022 77 0.039117344 Lucene_47
<B>computer</B> science faculties  the current status of minorities and women the results of a survey <B>computer</B> science are presented  faculty members were compared with respect to professional background  salaries  teaching load  publication records  and research grants  <B>analysis</B> of the data indicated  faculty  <B>computer</B> science degree programs  affirmative action  teaching loads  salaries
44 Q0 3032 78 0.039117344 Lucene_47
 <B>computer</B> network include  1  transmission of separately addressed packets   2  multidestination is a practical algorithm for broadcast routing in store-and-forward packet switching <B>computer</B> developed for its <B>analysis</B> in this paper  and also because it can be implemented in existing networks  metcalfe  r  reverse path forwarding  broadcast packets  routing  <B>computer</B> networks  store-and-forward
44 Q0 1792 79 0.0380608 Lucene_47
 of programmers working under conditions of on-line and off line access to a <B>computer</B>  erikson  w  j  grant  e  e  online vs  off line performance  programmer <B>computer</B> communication  debugging effectiveness  time sharing vs  batch processing  factor <B>analysis</B> application  programmer trainee performance  basic programming knowledge test  experienced programmer study  <B>analysis</B>
44 Q0 2924 80 0.037743703 Lucene_47
an interactive <B>computer</B> graphics approach to surface representation an in teractive <B>computer</B> graphics method has been developed for the rapid generation of arbitrary shaped three-dimensional surfaces  the method is a <B>synthesis</B> of spline theory and algorithms  an in teractive means for man-machine abel  j  f  greenberg  d  p  <B>computer</B> graphics  three-dimensional surface representation  splines
44 Q0 2125 81 0.03752132 Lucene_47
a note on minimal length polygonal approximation to a <B>digitized</B> contour a method for extracting a smooth polygonal contour from a <B>digitized</B> image is illustrated  the ordered sequence of contour points and the connection graph of the image are first obtained by a modified ledley algorithm in one  u  <B>digitized</B> image  connection tree  minimal polygon  optimal approximation  nonlinear programming
44 Q0 2923 82 0.036914807 Lucene_47
high-level data flow <B>analysis</B> in contrast to the predominant use of low-level in termediate text  high-level data flow <B>analysis</B> deals with programs essentially at source level and exploits the control flow information implicit in the parse tree  the need for high-level flow <B>analysis</B> arises from  this paper proposes a simple general method of high-level data flow <B>analysis</B> that allows free use of escape
44 Q0 2754 83 0.036763236 Lucene_47
a syntactic algorithm for peak detection in waveforms with applications to cardiography peaks in a <B>digitized</B> waveform are detected by an algorithm incorporating piecewise linear approximation and tabular parsing techniques  several parameters serve to identify the waveform context enabling accurate  cacm may  1975 horowitz  s  l  peak detection  <B>digitized</B> waveform  piecewise linear approximation
44 Q0 1307 84 0.036739793 Lucene_47
a lightpen-controlled program for on-line data <B>analysis</B> this paper describes a technique designed to ease the use of a data processing system by a person  in particular  a scientist  who  it is essential that he be aided in composing commands to the <B>computer</B>  in the system described  the user before him on menus  by means of a <B>computer</B>-drive scope  he selects the various vocabulary elements
44 Q0 1517 85 0.036739793 Lucene_47
methods for analyzing data from <B>computer</B> simulation experiments this paper addresses itself to the problem of analyzing data generated by <B>computer</B> simulations of economic systems  we first turn to a hypothetical firm  whose operation is represented by single-channel  multistation queueing model  and evaluate these techniques  the paper adopts the position that the particular technique of <B>analysis</B>
44 Q0 2522 86 0.036739793 Lucene_47
the design  implementation  and evaluation of a working set dispatcher the behavior of a <B>computer</B> system is largely dependent upon the algorithms employed to allocate the system resources of a dispatcher based on the working set principle  presents data to permit <B>analysis</B> of its behavior  and indicates future directions of research on methods of controlling a <B>computer</B> system  cacm april  1973
44 Q0 1637 87 0.03624962 Lucene_47
problems in the statistical <B>analysis</B> of simulation experiments  the comparison of means and the length of sample records research is continued into statistical <B>analysis</B> of simulation experiments containing autocorrelated time series  it is shown how to estimate the lengths of sample records needed the possibilities of statistical spectral <B>analysis</B> as applied to simulation experiments  cacm february
44 Q0 1911 88 0.03624962 Lucene_47
on coordination reduction and sentence <B>analysis</B> a class of coordination phenomena in natural languages is considered within the frame work of transformational theory  to account for these phenomena to the syntactic <B>analysis</B> problem for this class of grammars is outlined  precise specification coordination  coordination reduction  syntactic <B>analysis</B>  grammar testing program  rule testing 3.42 ca690406
44 Q0 2877 89 0.03624962 Lucene_47
a program data flow <B>analysis</B> procedure the global data relationships in a program can be exposed and codified by the static <B>analysis</B> methods described in this paper  a procedure is given which determines all the definitions which can possibly  reach  each node of the control flow graph indistinguishably  cacm march  1976 allen  j  e  cocke  j  program optimization  data flow <B>analysis</B>  flow graphs
44 Q0 2478 90 0.03615867 Lucene_47
<B>computer</B> science-seminars for undergraduates cacm july  1973 kandel  a  education  <B>computer</B> science  curriculum  imprecise <B>synthesis</B>  fuzzy educational structure 1.52 6.0 ca730708 jb january 23  1978 11 24 am 1413 4 2478 1654 4 2478 1720 4 2478 1771 4 2478 1927 4 2478 2147 4 2478 2163 4 2478 2345 4 2478 2478 4 2478 2478 4 2478 2478 4 2478 2594 4 2478 2852 4 2478 2899 4 2478 3003 4 2478 3130 4
44 Q0 2181 91 0.035587255 Lucene_47
the state of <B>computer</B> oriented curricula in business schools 1970 the acm committee on <B>computer</B> the state of the art and to develop a series of recommendations for improving <B>computer</B> education were covered  curricula for the general manager  <B>computer</B>-related material in required and functional courses  and curricula for students concentrating on <B>computer</B>-based information systems
44 Q0 2671 92 0.034881216 Lucene_47
a note on a combinatorial problem of burnett and coffman cacm march  1974 stone  h  s  memories  interleaving  derangements  rencontres  combinatorial <B>analysis</B> 5.39 6.34 ca740312 jb january 18  1978 10 54 am 2671 5 2671 2671 5 2671 2671 5 2671
44 Q0 2701 93 0.034881216 Lucene_47
a fast and usually linear algorithm for global flow <B>analysis</B>  abstract only--complete paper jacm 23,1 january  1976  a new algorithm for global flow <B>analysis</B> on reducible graphs is presented graham  s  l  wegman  m  global flow <B>analysis</B>  data flow  code optimization  common subexpression elimination  live-dead <B>analysis</B>  information propagation  flow graph  reducibility  go-to-less
44 Q0 2831 94 0.034881216 Lucene_47
<B>analysis</B> of the pff replacement algorithm via a semi-markov model  corrigendum  cacm september  1976 chu  w  w  opderbeck  h  ca760908 dmm february 1  1978 9 54 am 2831 5 2831 2831 5 2831 2831 5 2831
44 Q0 85 95 0.034881216 Lucene_47
error <B>analysis</B> in floating point arithmetic cacm may  1959 carr iii  j  w  ca590501 jb march 22  1978 6 43 pm 1148 5 85 85 5 85 85 5 85 85 5 85 85 6 85
44 Q0 912 96 0.034881216 Lucene_47
addressing an array yi in k-dimensions by fortran for <B>analysis</B> of variance cacm march  1963 garber  m  j  ca630309 jb march 14  1978 1 44 pm 912 5 912 912 5 912 912 5 912 1014 5 912 912 6 912
44 Q0 1424 97 0.03453064 Lucene_47
automatic <B>analysis</B> of electronic digital circuits using list processing a mapping from black diagrams of digital circuits to list structures is described  together with a list processing program written for the control data 3600 which uses this mapping to automatically carry out circuit <B>analysis</B>  cacm may  1966 shalla  l  ca660513 jb march 3  1978 9 24 am 1424 5 1424 1424 5 1424 1424 5 1424 1846
44 Q0 1668 98 0.03453064 Lucene_47
an algol procedure for the fast fourier transform with arbitrary factors  algorithm 339  c6   cacm november  1968 singleton  r  c  fast fourier transform  multivariate fourier transform  fourier series  harmonic <B>analysis</B>  spectral <B>analysis</B>  orthogonal polynomials  orthogonal transformation  virtual core memory  permutation 3.15 3.83 5.12 5.14 ca681111 jb february 21  1978 2 26 pm 1668 4 1668 1668
44 Q0 1837 99 0.03453064 Lucene_47
an algol convolution procedure based on the fast fourier transform  algorithm 345  c6   cacm october  1969 singleton  r  c  fast fourier transform  complex fourier transform  multivariate fourier transform  fourier series  harmonic <B>analysis</B>  spectral <B>analysis</B>  orthogonal polynomials  orthogonal transformation  convolution  auto covariance  autocorrelation  cross-correlation  digital filtering
44 Q0 1921 100 0.03453064 Lucene_47
an algol convolution procedure based on the fast fourier transform  algorithm 345  c6   cacm march  1969 singleton  r  c  fast fourier transform  complex fourier transform  multivariate fourier transform  fourier series  harmonic <B>analysis</B>  spectral <B>analysis</B>  orthogonal polynomials  orthogonal transformation  convolution  auto covariance  autocorrelation  cross-correlation  digital filtering
*************Query 45*************************

45 Q0 2452 1 0.15588546 Lucene_47
evaluation and <B>selection</B> of <B>file</B> organization-a model and <B>system</B> this work first discusses the factors that affect <B>file</B>  data base  organization <B>performance</B>  an elusive subject  and then presents  <B>file</B> organization model  <B>file</B> structure design  <B>secondary</B> <B>index</B> organization  simulation  data base for the specific situation  the <B>system</B> is a convenient tool to study <B>file</B> structures
45 Q0 1976 2 0.14194985 Lucene_47
 november  1970 lum  v  y  <B>file</B> organization  <B>secondary</B> <B>index</B> files  inverted files  <B>information</B> retrieval to replace the <B>use</B> of the popular <B>secondary</B> <B>index</B> filing scheme  or inverted files on <B>secondary</B> key of the records  that satisfy different combinations of <B>secondary</B> <B>index</B> values in  buckets   it is possible to an <B>index</B> <B>file</B>  although each bucket may be used for many combinations of values and a combination
45 Q0 2765 3 0.13138218 Lucene_47
 <B>file</B> organization  data base <B>performance</B> and measurement  <B>secondary</B> <B>index</B> organization  <B>information</B>  the formulations presented are necessary to be used in conjunction with any <B>index</B> <B>selection</B> criteriaanalysis and <B>performance</B> of inverted data base structures the need to envision and architecture data base systems in a hierarchical level by level framework is stressed  the inverted data base  <B>file</B>
45 Q0 2816 4 0.12583528 Lucene_47
optimal <B>reorganization</B> of <B>distributed</B> space disk files in most database organizations  the cost the proper tradeoff between <B>performance</B>  storage costs  and <B>reorganization</B> costs  this paper considers the optimum points at which to reorganize a database  a disk <B>file</B> organization which allows for <B>distributed</B> free space is described  a cost function describing the excess costs due to physical
45 Q0 2318 5 0.11127534 Lucene_47
the role of computer <B>system</B> <B>models</B> in <B>performance</B> evaluation <B>models</B> constitute a useful means of investigating computer <B>system</B> <B>performance</B>  this paper examines the interrelationships between <B>models</B> and other methods for evaluating the <B>performance</B> of computer systems and establishes circumstances  <B>performance</B>  analytic-<B>models</B>  simulation-<B>models</B>  <B>system</B>-<B>models</B> 2.43 2.44 6.2 8.3 ca720710 jb january
45 Q0 2926 6 0.10071096 Lucene_47
 -trees with variable-length records  if records of each length are uniformly <B>distributed</B> within the <B>file</B>  and if a wide distribution of record lengths exists within the <B>file</B>  then this strategy results in shallow trees with fast access times  the <B>performance</B> of this strategy in an application-tree  <B>index</B>  database  tree storage structure  searching 3.73 4.33 4.34 ca770908 jb december 27  1977
45 Q0 1412 7 0.096826375 Lucene_47
the banking <B>information</B> <B>system</B> concept most large commercial banks have progressed to the point of data base approach toward a banking <B>information</B> <B>system</B>  the banking <B>information</B> <B>system</B> now serves and providing more complex combinations of <B>information</B> for management <B>use</B>  both kinds of processing draw upon a common store of data contained in the direct access central <B>file</B>  this data base <B>includes</B>
45 Q0 2114 8 0.09349766 Lucene_47
a formal <B>system</B> for <B>information</B> retrieval from files a generalized <B>file</B> structure is provided by which the concepts of keyword  <B>index</B>  record  <B>file</B>  directory  <B>file</B> structure  directory decoding-value pair  <B>index</B>  keyword  record  record address  k-pointer  k-list  <B>file</B>  directory  generalized <B>file</B> structure  inverted <B>file</B>  <B>index</B>-sequential-<B>file</B>  multilist <B>file</B>  description  <B>file</B> search
45 Q0 2812 9 0.08554841 Lucene_47
computer-aided analysis and design of <B>information</B> systems this paper describes the <B>use</B> of computer-aided analysis for the design and development of an integrated financial management <B>system</B>  computer <B>selection</B> and <B>performance</B> evaluation  there are four major components  problem statement  <B>information</B> systems  logical <B>system</B> design  problem statement language  problem statement analyzer
45 Q0 1194 10 0.07795088 Lucene_47
 services   1  easy accessibility to the <B>information</B> files by users unfamiliar with <B>file</B> organization repository  the main features of the <B>information</B> <B>system</B> are direct user access via on-line through linked <B>index</B> terms and other <B>file</B> relationships  the first contribution to the acm repositoryestablishment of the acm repository and principles of the ir <B>system</B> applied to its operation
45 Q0 2969 11 0.076523766 Lucene_47
  <B>databases</B>  <B>distributed</B> <B>databases</B>  optimal <B>file</B> location 3.81 3.51 4.33 ca770503 jb december 29  1977 2 the model  a search procedure for the <B>file</B> location problem is described  along with an example
45 Q0 3002 12 0.07473555 Lucene_47
 requests access the <B>file</B> <B>system</B>  and each request requires <B>information</B> from one or more variable lengtha record and <B>file</B> partitioning model one of the main objectives in the design of a <B>file</B> <B>system</B> to be known  and to be mutually independent  the <B>file</B> <B>system</B> uses one or more storage devices babad  j  m  <B>file</B> <B>system</B>  <B>file</B> design  <B>file</B> partitioning  record partitioning 3.73 ca770103 jb
45 Q0 3137 13 0.071226835 Lucene_47
a methodology for the design of <B>distributed</B> <B>information</B> systems a macro model of a <B>distributed</B> <B>information</B> <B>system</B> in presented  the model describes the major costs of using an <B>information</B> <B>system</B> from of an interactive transaction processing <B>system</B>  cacm april  1979 bucci  g  streeter  d  <B>distributed</B> processing  <B>system</B> design  cost minimization  <B>distributed</B> database  interactive computing  economic
45 Q0 1745 14 0.06898624 Lucene_47
 in creating the envisioned <B>information</B> service industry is dependent upon three accomplishments   1  the restructuring of our <B>information</B> processing industry so that a clear division of costs is made among computing  communications  and the development of <B>information</B> services   2  the wide <B>use</B> of multiaccess <B>system</B> concepts so that <B>information</B> services may share in the <B>use</B> of computer installations
45 Q0 3128 15 0.06882509 Lucene_47
 synchronization  interprocess communication  <B>distributed</B> systems  security <B>models</B>  mutual exclusion arguments and also simplifies implementation in <B>distributed</B> systems  the mechanism is defined formally  and then several examples of its <B>use</B> are given  the relationship of the mechanism to protection mechanisms in the <B>system</B> is explained  in particular  eventcounts are shown to be applicable
45 Q0 2978 16 0.06739858 Lucene_47
analysis of design alternatives for virtual memory indexes a class of <B>index</B> structures for <B>use</B> in a virtual memory environment is described  design alternatives within this class of <B>index</B> structures in the <B>index</B> are structured  and whether or not keys are compressed  the average cost of retrieving entries of crossing a page boundary in the <B>index</B> structure  formulas for the retrieval costs for possible
45 Q0 1226 17 0.06703596 Lucene_47
the organization of structured files a data <B>file</B> is an integral part of a data processing <B>system</B>  in many systems  the <B>selection</B> of an organization for the data within the <B>file</B> can be critical to the <B>system</B> s operating efficiency  this paper provides the systems designer with an <B>information</B> source with a reference which allows him to limit the number of <B>file</B> organizations he must consider for his <B>system</B>
45 Q0 1534 18 0.06693605 Lucene_47
 are given  and an assessment is made of the validity of various design <B>decisions</B>  <B>performance</B> figuresdad  the c  operating <B>system</B> the design and implementation of the c  operating <B>system</B>  dad  is described in detail  this <B>system</B> is designed for the control data 3600 using a large drum backing store job stack environment  the <B>use</B> of the drums  the buffering of input and output on slow peripherals
45 Q0 1032 19 0.06387015 Lucene_47
 of nonrelevant material  and  c  <B>file</B> organization to make access to <B>information</B> efficient  for identification <B>performance</B>  and the second is a self-generating subset of the <B>file</B> with a high probability of beingtheoretical considerations in <B>information</B> retrieval systems <B>information</B> storage and retrieval systems are composed of three major components   a  identification of <B>information</B> and tagging
45 Q0 3012 20 0.063559525 Lucene_47
the <B>use</B> of an interactive <B>information</B> storage and retrieval <B>system</B> in medical <B>research</B> this paper presents the results of a study of the <B>use</B> of an interactive computerized storage and retrieval  implementation  <B>system</B> <B>use</B>  <B>information</B> storage and retrieval <B>system</B> 2.10 3.50 3.72 ca780301 jb march 28  1978 by frequently chosen laboratory reference leaders in influencing the <B>use</B> of this <B>system</B>  the implications
45 Q0 3089 21 0.06212624 Lucene_47
  and the <B>system</B> saturation point  cacm june  1978 gelenbe  e  derochette  d  database reliability  <B>file</B> systems  checkpoints  recovery procedures  checking techniques  reliability and <B>system</B> <B>performance</B><B>performance</B> of rollback recovery systems under intermittent failures a mathematical model of a transaction-oriented <B>system</B> under intermittent failures is proposed  the <B>system</B> is assumed to operate
45 Q0 2631 22 0.061641958 Lucene_47
an <B>information</B>-theoretic approach to text searching in direct access systems using direct access computer files of bibliographic <B>information</B>  an attempt is made to overcome one of the problems often associated with <B>information</B> retrieval  namely  the maintenance and <B>use</B> of large dictionaries  <B>file</B> organization  direct access  <B>information</B> retrieval  character string  bit vector 3.42 3.70 3.73
45 Q0 1519 23 0.060959466 Lucene_47
 and off line jobs <B>use</B> a common command language  the <B>system</B> <B>includes</B> a multilevel device-independentgeorge 3-a general purpose time sharing and operating <B>system</B> an operating <B>system</B> is described which of online console users while at the same time running several off line  background  jobs  the <B>system</B> is not oriented towards either mode and can be either a batch processing <B>system</B>  such as the atlas
45 Q0 2984 24 0.06000066 Lucene_47
cost utilization  a measure of <B>system</B> <B>performance</B> a method is presented for evaluating computer <B>system</B> <B>performance</B> in terms of a cost utilization factor and a measure of imbalance  these coefficients indicate the extent to which the total <B>system</B> cost is effectively utilized  the method <B>includes</B> a technique for the visual representation of <B>system</B> <B>performance</B>  cacm march  1977 borovits  i  ein-dor
45 Q0 3070 25 0.05985317 Lucene_47
  and a central-server queueing network <B>models</B> the <B>use</B> of <B>system</B> processors  the accuracy and efficiency to produce efficient yet accurate <B>system</B> <B>models</B>  in an example based on a simple hypothetical  h  <B>performance</B> evaluation  simulation  queueing network <B>models</B>  central server model 4.32 4.35 8.1hybrid simulation <B>models</B> of computer systems this paper describes the structure and operation
45 Q0 2860 26 0.0595171 Lucene_47
 the applicability of these rules to large commercial <B>databases</B>  guidelines for selecting identifier or <B>secondary</B> bucket sizes  a mathematical model which explicitly considers storage device <B>system</B> costs  a specific design example is presented and solved  cacm june  1976 severance  d  duhne  r  data management  <B>file</B> retrieval  searching  addressing techniques  hashing functions  synonym
45 Q0 2437 27 0.056965344 Lucene_47
general <B>performance</B> analysis of key-to-address transformation methods using an abstract <B>file</B> concept this paper presents a new approach to the analysis of <B>performance</B> of the various key-to-address transformation methods  in this approach the keys in a <B>file</B> are assumed to have been selected from access  scatter storage  <B>information</B> retrieval  hashing analysis  randomization <B>performance</B> analysis 3.7
45 Q0 2957 28 0.056787934 Lucene_47
  update <B>operations</B> on such <B>databases</B> must preserve two invariants  well-defined relations are distinct of  well-definedness   specifies aggregation abstractions  relational <B>databases</B> defined as collections <B>decisions</B> concerning aggregate structure from <B>decisions</B> concerning key identification  it is suggested
45 Q0 2375 29 0.055717144 Lucene_47
 head disks are compared using the <B>performance</B> criteria of expected seek time  <B>system</B> oriented to measure total <B>performance</B> including <B>system</B> oriented and individual request oriented measures of input loading conditions  the <B>selection</B> and implementation of a maximum <B>performance</B> two-policy are obtained  the variance of waiting time is introduced as another meaningful measure of <B>performance</B>
45 Q0 2949 30 0.055080336 Lucene_47
a correctness proof of a topology <B>information</B> main tenance protocol for a <B>distributed</B> computer network in order for the nodes of a <B>distributed</B> computer network to communicate  each node must have <B>information</B> about the network s topology  since nodes and links sometimes crash  a scheme is needed  network topology  routing problem in networks  <B>distributed</B> operating <B>system</B>  store and forward
45 Q0 2988 31 0.054196935 Lucene_47
  <B>system</B> <B>performance</B>  queueing network <B>models</B>  in teractive computer systems 4.32 ca770304 jb december network <B>models</B> of computer systems  empirical analyses and analytic studies based on applying this methodology to an actual multiaccess in teractive <B>system</B> are reported  relations between workload variables such as memory requirement distribution and job swap time  and <B>performance</B> measures
45 Q0 1267 32 0.05415023 Lucene_47
<B>performance</B> of systems used for data transmission transfer rate of <B>information</B> bits -an asa tutorial standard <B>information</B> thruput as a characteristic of systems <B>performance</B> is discussed  this discussion <B>includes</B> the pertinent aspects of <B>information</B> transfer  of determination of transfer rate that a <B>performance</B> characteristic involving <B>information</B> rate can best be expressed as the trib in conjunction
45 Q0 1271 33 0.053615846 Lucene_47
<B>secondary</B> key retrieval using an ibm 7090-1301 <B>system</B> the <B>secondary</B> key retrieval method involves the preparation of <B>secondary</B> storage lists from primary data records  search requests are satisfied by logical <B>operations</B> on appropriate lists  producing a complete set of addresses of primary records relevant to the request  experimental results are presented and a comparative analysis is given
45 Q0 696 34 0.052600365 Lucene_47
an automatic data acquisition and inquiry <B>system</B> using disk files lockheed missiles and space company has installed a large-scale automatic data acquisition  ada  <B>system</B> which ties together the company s manufacturing facilities located in van nuys and sunnyvale  california  the <B>system</B> <B>includes</B> to the data processing center  a large capacity rca 366 data disc <B>file</B> is used to store <B>information</B>
45 Q0 2991 35 0.05190046 Lucene_47
 of these techniques lead to improved <B>file</B> <B>performance</B> for <B>secondary</B> storage devices  as shown by empirical by smoothing the key-to-address transformation  and by adding shadow buckets to an open chaining <B>file</B> in the key set  shadow buckets in the key search sequence reduce the effect of nonuniformity in <B>file</B> loading method  randomizing  random access  <B>file</B> addressing  <B>file</B> organizations  <B>file</B> structures  scatter
45 Q0 2951 36 0.051276643 Lucene_47
 be fully investigated to achieve this goal  this <B>research</B> is a first step toward assisting the user  and statistical <B>performance</B> evaluation tools are employed to investigate the feasibility of a dynamic response time monitor that is capable of providing comparative response time <B>information</B> for users wishing to process various computing applications at some network computing node  the <B>research</B> clearly
45 Q0 2892 37 0.050975196 Lucene_47
 for various <B>models</B> of <B>system</B> <B>use</B> is studied  some measurements of line efficiency for the arpanet with those for the current <B>system</B>  cacm january  1976 kleinrock  l  naylor  w  e  opderbeck  h  arpanet  <B>performance</B> evaluation and efficiency  resource sharing 3.81 4.39 4.6 4.9 ca760101 jb january 5  1978 10 49
45 Q0 1652 38 0.0497505 Lucene_47
a code for non-numeric <B>information</B> processing applications in online systems a code has been specifically designed to simplify the internal <B>information</B> processing <B>operations</B> within an online computer <B>system</B> with respect to non-numeric applications  and to maximize the transfer rate of the <B>information</B> channel linking the <B>system</B> and the <B>system</B> user  the code has direct application to problems
45 Q0 3136 39 0.049209177 Lucene_47
price <B>performance</B> patterns of u  computer systems econometric <B>models</B> of the u  computer market have been developed to study the relationships between <B>system</B> price and hardware <B>performance</B>  single measures of price <B>performance</B> such as  grosch s law  are shown to be so over simplified as to be meaningless  multiple-regression <B>models</B> predicting <B>system</B> cost as a function of several hardware
45 Q0 3011 40 0.046914663 Lucene_47
 of management <B>information</B> systems  mis  bear little relation to the <B>information</B> systems currently in <B>use</B> by top <B>information</B>  cacm march  1978 dutton  w  kraemer  k  computer utilization  management <B>information</B> <B>system</B> the <B>use</B> of relatively unsophisticated applications  despite the unsophisticated nature of these systems  management <B>use</B> of computing is surprisingly common  but also varied in its extent among local
45 Q0 3181 41 0.046409752 Lucene_47
public protection and education with eft <B>research</B> has revealed the existence of widespread  as a result  any effort to stimulate meaningful public participation in <B>decisions</B> on the introduction of eft systems will require a coordinated educational effort of considerable scale  in addition  <B>research</B> has revealed shortcomings in the present <B>system</B> for defining responsibilities  liabilities
45 Q0 397 42 0.046047334 Lucene_47
  the reference material <B>includes</B> basically an <B>index</B>  title  source  class  summary and cross reference for each entry  the identification <B>includes</B> basically codes for a matrix of descriptors  an entrya card format for reference files in <B>information</B> processing this paper proposes a card format suitable for a variety of reference files in <B>information</B> processing  an 80-column ibm card is divided
45 Q0 3090 43 0.045923743 Lucene_47
 the impacts of an automated client-tracking <B>system</B> on the clients  caseworkers  administrators  and <B>operations</B> of the welfare agencies that <B>use</B> it are reported  the major impact of this <B>system</B> features of the computer-based <B>system</B> and of the organizational demands placed upon different agencies  administrators  and caseworkers  it illustrates the way  successful  automated <B>information</B>
45 Q0 2390 44 0.04556233 Lucene_47
 in a multiterminal computer <B>system</B>  users of the <B>system</B> can store in the computer an updated <B>file</B> by the explosion of papers in the mathematical sciences and the drawbacks that this places on <B>research</B>  this paper describes how the <B>system</B> can be organized and the role required of readers  writers  and commentators  cacm february  1972 pager  d  interactive <B>system</B>  organization of scientific community
45 Q0 2979 45 0.044994384 Lucene_47
 <B>research</B> efforts concerning human decision making under uncertainly and risk and human problem solving and inductive inferences and form and <B>optimize</B> heuristic rules  and how machines can reach similar framework has been provided that should have a fairly wide range of applicability  the <B>models</B> of human making  <B>models</B> of game learning  poker  gambling and bluffing 3.36 3.62 3.61 3.64 3.65 3.66 ca770403
45 Q0 3058 46 0.044935104 Lucene_47
 applications are discussed and <B>performance</B> is evaluated  cacm october  1978 shneiderman  b  jump searching  sequential files  <B>file</B> management  search strategies  database structures  <B>index</B> searchingjump searching  a fast sequential search technique when sequential <B>file</B> structures must be used and binary searching is not feasible  jump searching becomes an appealing alternative  this paper
45 Q0 3082 47 0.044888455 Lucene_47
time  clocks  and the ordering of events in a <B>distributed</B> <B>system</B> the concept of one event happening before another in a <B>distributed</B> <B>system</B> is examined  and is shown to define a partial ordering of the events  a <B>distributed</B> algorithm is given for synchronizing a <B>system</B> of logical clocks which can be used to totally order the events  the <B>use</B> of the total ordering is illustrated with a method
45 Q0 1695 48 0.044006776 Lucene_47
 neurophysiological <B>research</B> so that the systematic development of neural <B>models</B> can be coordinatedplexus-an on-line <B>system</B> for modeling neural networks a description is presented of plexus  a <B>system</B> which enables a user to construct and specify a neural network  to analyze the output data produced by the network  and to store and retrieve networks and data from a library  the <B>system</B>  operated
45 Q0 2493 49 0.043864302 Lucene_47
 the cost per access may be reduced  however  the high cost of a <B>reorganization</B> prohibits frequent reorganizations  this paper examines strategies for selecting the optimum <B>reorganization</B> points  cacm june  1973 shneiderman  b  data base  <B>reorganization</B>  files  <B>information</B> retrieval 3.73 ca730607 jboptimum data base <B>reorganization</B> points in certain data base organization schemes the cost per
45 Q0 2307 50 0.04352643 Lucene_47
 on user needs  and for a continuous <B>reorganization</B> of the stored <B>information</B> as a function of earlier <B>file</B> processing and of normal collection growth  the proposed procedures provide powerful tools for <B>information</B> retrieval and for the control of dynamic library collections in which new items is then outlined in which clustered files are searched and <B>information</B> is retrieved following
45 Q0 1680 51 0.043142967 Lucene_47
  programming  and <B>information</B> retrieval  it is written in fortran iv  g  for the ibm <B>system</B> 360  model  of the operating <B>system</B>  language processors and compilers  simulation <B>models</B>  mathematical solutiona general-purpose display processing and tutorial <B>system</B> adept  a display-expedited processing and tutorial  <B>system</B> is described  this <B>system</B> was designed to improve man-computer communications
45 Q0 2359 52 0.043000534 Lucene_47
 <B>use</B> of the <B>file</B> in the <B>index</B> as opposed to the sequential mode  using hashed overflow  the timean improved <B>index</B> sequential access method using hashed overflow the <B>index</B> sequential access method  isam  is one of the most important <B>file</B> management systems used with moveable head disk devices  this study investigates the <B>use</B> of an unconventional method of treating overflow records  the method
45 Q0 2849 53 0.04298394 Lucene_47
ethernet  <B>distributed</B> packet switching for local computer networks ethernet is a branching broadcast communication <B>system</B> for carrying digital data packets among locally <B>distributed</B> computing of access to the ether for packet broadcasts is <B>distributed</B> among the contending transmitting is <B>distributed</B> among the receiving stations using packet address recognition  design principles
45 Q0 3129 54 0.042601425 Lucene_47
  generates a demand vector which designates the space required in each <B>file</B> for record addition  whenever one <B>file</B> runs out of space  the <B>system</B> must be reorganized  this paper considers severaloptimal storage allocation for serial files a computer <B>system</B> uses several serial files  the files  yechiali  u  serial files  storage allocation  <B>reorganization</B>  partitioned dataset 3.5 3.7 4.33 4.6
45 Q0 3134 55 0.04241544 Lucene_47
the <B>use</B> of normal multiplication tables for <B>information</B> storage and retrieval this paper describes multiplication table as a directory for the <B>information</B> <B>system</B>  algorithms for the organization the appropriateness of the above approach to a given <B>information</B> <B>system</B> are described  for a certain class an improved modification of the inverted <B>file</B> technique  cacm march  1979 motzkin  d  <B>information</B>
45 Q0 2669 56 0.04212026 Lucene_47
  program <B>models</B>  <B>performance</B> measurement  multilevel memory systems  virtual memory  associative memorya simple linear model of demand paging <B>performance</B> predicting the <B>performance</B> of a proposed automatically managed multilevel memory <B>system</B> requires a model of the patterns by which programs refer to the <B>information</B> stored in the memory  some recent experimental measurements on the multics virtual
45 Q0 1066 57 0.0418173 Lucene_47
growing applications of linear programming <B>use</B> of linear programming <B>models</B> has grown so computer subprograms must be organized into an integrated <B>system</B>  emphasis in this paper is devoted on such systems  some of the components of such a <B>system</B> are  translation of problem statement entry  data <B>file</B> at the computer center  data processing and editing prior to solving the simplex
45 Q0 2140 58 0.04119468 Lucene_47
 combined indices  cacm december  1971 mullin  j  k  <B>file</B> organization  combined <B>index</B> files  inverted files  <B>information</B> retrieval  query  multi-attribute retrieval  <B>file</B> update 3.73 3.74 3.79 ca711203 jb communications of the acm  v  y  lum introduced a technique of <B>file</B> indexing named combined indices combined indices under conditions of <B>file</B> usage with different fractions of retrieval and update
45 Q0 409 59 0.040640287 Lucene_47
cl-1  an environment for a compiler a flexible  large-scale programming <B>system</B> to facilitate the solution of <B>information</B> processing problems and to provide intercommunication between programs and or programmers has been developed and realized on the ibm 709 7090 computer  the <B>system</B> is based on a master <B>file</B> concept and has provisions for accepting  storing  and retrieving both descriptions
45 Q0 1699 60 0.04034667 Lucene_47
 of the <B>research</B> is that an <B>information</B> retrieval <B>system</B> that provides for man-machine dialogue at a remote in evaluation of such a <B>system</B> include ease of <B>use</B>  learning time  and effectiveness of actual retrieval  three  bergman  s  franks  w  rubinoff  e  <B>information</B> retrieval testing  <B>information</B> <B>system</B> evaluationexperimental evaluation of <B>information</B> retrieval through a teletypewriter experiments designed
45 Q0 2718 61 0.040174082 Lucene_47
a preliminary <B>system</B> for the design of dbtg data structures the functional approach to database design is introduced  in this approach the goal of design is to derive a data structure which is capable of supporting a set of anticipated queries rather than a structure which  <B>models</B> the business used to generate declaratives  cacm october  1975 gerritsen  r  network model of <B>databases</B>  data
45 Q0 2716 62 0.04011569 Lucene_47
optimizing the <B>performance</B> of a relational algebra database interface an approach for implementing of e  f  codd s relational algebra are presented  and a methodology for composing them to <B>optimize</B> the <B>performance</B> of a particular user query is described  cacm october  1975 smith  j  m  yen-tang chang  p  relational database  database optimization  inverted <B>file</B>  automatic programming  query
45 Q0 2319 63 0.039731655 Lucene_47
operating <B>system</B> <B>performance</B> an overview of the current and future positions with respect to operating <B>system</B> <B>performance</B> is given  while a great deal of <B>information</B> and a large number of <B>models</B> be developed to be able to analyze and design the <B>performance</B> aspects of an operating <B>system</B> although  c  computer <B>system</B>  operating <B>system</B>  <B>performance</B> evaluation  <B>performance</B> measurement  measurement
45 Q0 2370 64 0.039472688 Lucene_47
an experimental laboratory for pattern recognition and signal processing an interactive computer-controlled scanning and display <B>system</B> has been in operation at the ibm thomas j  watson <B>research</B> center for three years  the <B>system</B> <B>includes</B> two flying-spot scanners and a tv camera specially facilities  and a variety of other experimental equipment  the <B>system</B> design and programming support
45 Q0 2358 65 0.038753476 Lucene_47
 has grown  the need to share <B>information</B> among <B>system</B> users has become increasingly apparent  many several users to share data via input and output of <B>information</B> stored in files kept in <B>secondary</B> and <B>system</B> programs of all <B>information</B>  independent of its physical storage location  <B>information</B>  c  t  daley  r  c  operating <B>system</B>  multics  virtual memory  segmentation  <B>information</B> sharing
45 Q0 2976 66 0.038682062 Lucene_47
approximating block accesses in database organizations cacm april  1977 yao  s  b  database  inverted <B>file</B> organization  database <B>performance</B> and measurement  <B>information</B> retrieval  query answering 3.70 3.72 4.33 ca770406 jb december 29  1977 5 06 am 2976 4 2976 2976 4 2976 2976 4 2976 2688 5 2976 2765 5 2976 2882 5 2976 2976 5 2976 2976 5 2976 2976 5 2976
45 Q0 1033 67 0.03867119 Lucene_47
  the completely symbolic operating <B>system</B> <B>includes</B> display and entry of program and data  sequence controlexperimental personalized array translator <B>system</B> a <B>system</B> designed for intimate man-machine interaction in a general-purpose problem-solving environment is experimentally operational  the <B>system</B> numeric  boolean  relational and <B>selection</B> operators on operands which can be entire arrays
45 Q0 1456 68 0.038593303 Lucene_47
 vehicle for <B>research</B> on the logic of question answering  examples of methods of inputting <B>information</B>storage and retrieval of aspects of meaning in directed graph structures an experimental <B>system</B> english word the syntactic <B>information</B>  definitional material  and references to the contexts in which  they are inadequate vehicles for language processing on any large scale-at east until they can <B>use</B>
45 Q0 2542 69 0.038532462 Lucene_47
 which overcomes many of the difficulties is proposed  a <B>system</B> which integrates <B>performance</B> the <B>performance</B> <B>information</B> obtained from these routines as feedback  the problems which adversely affecta software design and evaluation <B>system</B> a critical failure of current software <B>system</B> design and implementation methodology is that the <B>performance</B> of a proposed design is not evaluated before
45 Q0 3059 70 0.038499497 Lucene_47
<B>models</B> for parallel processing within programs  application to cpu i o and i o i o overlap approximate queueing <B>models</B> for internal parallel processing by individual programs in a multiprogrammed <B>system</B> are developed in this paper  the solution technique is developed by network decomposition  the <B>models</B> are formulated in terms of cpu i o and i o i o overlap and applied to the analysis
45 Q0 2424 71 0.03789517 Lucene_47
dynamic verification of operating <B>system</B> <B>decisions</B> dynamic verification of a decision implies independent hardware and software  the dynamic verification of operating <B>system</B> <B>decisions</B> is used on the prime <B>system</B> being designed and constructed at the university of california  berkeley  prime <B>system</B> which does not make certain <B>decisions</B> improperly even in the presence of a single hardware
45 Q0 3152 72 0.037526343 Lucene_47
storage <B>reorganization</B> techniques for matrix computation in a paging environment in order to reorganize the data into submatrix form and to <B>use</B> block multiplication rather than to <B>use</B> the best for accomplishing this <B>reorganization</B> is given  this also makes possible the derivation the technique of strassen to the reorganized data  the <B>reorganization</B> block multiplication scheme is shown
45 Q0 2092 73 0.036763117 Lucene_47
 these features in their operation are all described and illustrated  examples of the <B>system</B> s <B>performance</B>  it is shown that the <B>use</B> of semantic <B>information</B> in deductive question answering greatly facilitates of the protosynthex iii pro totype language processing <B>system</B> are described and exemplified in detail  the <B>system</B> is written in lisp 1.5 and operates on the q-32 time-sharing <B>system</B>  the <B>system</B> s data
45 Q0 2634 74 0.036723956 Lucene_47
 with a basis for <B>selection</B> and <B>use</B>  tests were made for each of these systems  and the results are summarized as to cost and <B>performance</B>  cacm june  1974 slysz  w  d  statistical computation  statisticalan evaluation of statistical software in the social sciences several hundred college and university computer installations now offer various types of statistical packages for general <B>use</B>  among those
45 Q0 1279 75 0.036682643 Lucene_47
<B>use</B> of a conditional base number <B>system</B> for encoding sequences of correlated characters a procedure is described for the relatively efficient encoding of sequences of characters which have predecessor-successor <B>selection</B> rules  the procedure is shown to assign a unique integer to each sequence and to generate a reasonably compact set of values  cacm april  1965 brown  r  m  ca650412 jb march 7
45 Q0 3087 76 0.03576564 Lucene_47
an english language question answering <B>system</B> for a large relational database by typing requests of aircraft flight and maintenance data using a <B>system</B> called planes  the design and implementation of this <B>system</B> is described and illustrated with detailed examples of the operation of <B>system</B> components and examples of overall <B>system</B> operation  the language processing portion of the <B>system</B> uses
45 Q0 2846 77 0.035490163 Lucene_47
compressed tries this paper presents a new data structure  called a compressed trie or c-trie  to be used in <B>information</B> retrieval systems  it has the same underlying m-ary tree structure as a trie  first the c-trie is analyzed as a data structure  and then several methods of its <B>use</B> for relatively static <B>databases</B> are discussed  cacm july  1976 maly  k  data structure  database  m-ary tree
45 Q0 1926 78 0.034447584 Lucene_47
description of format  a text-processing program format is a production program which facilitates the editing and printing of  finished  documents directly on the printer of a relatively small  64k  computer <B>system</B>  it features good <B>performance</B>  totally free-form input  very flexible formatting capabilities including up to eight columns per page  automatic capitalization  aids for <B>index</B>
45 Q0 2680 79 0.034426257 Lucene_47
optimal space allocation on disk storage devices when the amount of space required for <B>file</B> storage exceeds the amount which can be kept on-line  <B>decisions</B> must be made as to which files are to be permanently resident and which mountable  these <B>decisions</B> will affect the number of mount requests  disk analysis  disk optimization  disk files <B>file</B> systems  <B>file</B> scheduling  space allocation  memory
45 Q0 2977 80 0.034334663 Lucene_47
 in an organization  <B>research</B> on the data processing budgets of california counties fails to support the s-shaped curve or the <B>use</B> of budgets as a basis for a stage model  however  the results do not invalidate and a separation between <B>models</B> of budgeting growth and growth stages in the development of the computer
45 Q0 1912 81 0.034015737 Lucene_47
 environment  cacm april  1969 katz  j  h  simulation  scheduling  appointment <B>system</B>  outpatient department  medicine  health  management science  <B>operations</B> <B>research</B> 3.34 3.59 ca690405 jb february 17  1978 4
45 Q0 2288 82 0.033851724 Lucene_47
 of an <B>information</B> retrieval <B>system</B> with a minimal search time and no redundant storage  some important theorems an <B>information</B> retrieval <B>system</B> based on the consecutive retrieval property is also discussed  cacm september  1972 ghosh  s  p  <B>file</B> organization  consecutive storage  consecutive retrieval  <B>information</B><B>file</B> organization  the consecutive retrieval property the consecutive retrieval property
45 Q0 2645 83 0.033496667 Lucene_47
 is written in the first language  a go-to-less programming language which <B>includes</B> most additional <B>information</B> about the program written in the first language and to output results are included  the limitations of the present <B>system</B>  its relation to knuth s work on the analysis of algorithms  and some of the directions for further <B>research</B> are also discussed  cacm june  1974 ccohen  j
45 Q0 2258 84 0.033446528 Lucene_47
additional results on key-to-address transform techniques  a fundamental <B>performance</B> study on large existing formatted files cacm november  1972 lum  v  y  yuen  p  s  t  hashing  hashing techniques addressing  direct access method  randomizing  random access <B>file</B> organization  <B>file</B> search  scatter storage  <B>information</B> retrieval 3.7 3.72 3.73 3.74 3.79 4.9 ca721111 jb january 27  1978 1 31 pm 2258 4
45 Q0 1827 85 0.03338063 Lucene_47
<B>performance</B> monitoring in a time-sharing <B>system</B> a software measurement facility which is part of a general purpose time-sharing <B>system</B> is described  the date collection facility  dcf  has been of monitoring operating <B>system</B> and user program behavior and <B>performance</B>  the overall structure  multiprogramming <B>performance</B>  software measurement  time-sharing <B>performance</B>  <B>system</B> evaluation
45 Q0 1960 86 0.033360947 Lucene_47
process management and resource sharing in the multiaccess <B>system</B> esope the main design principles of the multiaccess <B>system</B> esope are described  emphasis is placed on basic ideas underlying the design rather than on implementation details  the main features of the <B>system</B> include the ability given to any user to schedule his own parallel processes using <B>system</B> primitive <B>operations</B>  the <B>file</B>
45 Q0 2327 87 0.033045396 Lucene_47
 of how the brain processes <B>information</B>  cacm july  1972 arbib  m  a  automata theory  brain theory  network complexity  resolution of redundancy of potential command  frog visual <B>system</B>  reticular formation mode <B>selection</B> 3.36 3.65 5.22 ca720701 jb january 30  1978 3 46 pm 2327 5 2327 2327 5 2327 2327 5
45 Q0 2470 88 0.0328694 Lucene_47
 how the <B>system</B> can be used to build composite data types out of simper ones with the <B>operations</B> by which they can be introduced into the <B>system</B>  the technique is contrasted with the <B>use</B>fen-an axiomatic basis for program semantics a formal <B>system</B> is presented which abstracts the notions of data item  function  and relation  it is argued that the <B>system</B> is more suitable than set
45 Q0 2882 89 0.0328422 Lucene_47
 and prohibitive cost  this paper discusses a simulation model of a data retrieval <B>system</B> which has the effect of significantly reducing the cost of experimentation and enabling <B>research</B> never attempted  cacm february  1976 siler  k  f  database architecture  database <B>performance</B> and evaluation  invented list  threaded list  cellular list  <B>information</B> retrieval  database organizations  query complexity
45 Q0 1173 90 0.032581355 Lucene_47
the <B>performance</B> of a <B>system</B> for automatic segmentation of programs within an algol compiler  gier algol  the gier algol compiler makes <B>use</B> of an automatic <B>system</B> for handling the transfers of program segments from the drum store to the core store at program execution time  the logic of this <B>system</B> is described  the <B>performance</B> of the <B>system</B> is discussed  primarily on the basis of execution times
45 Q0 2722 91 0.0325033 Lucene_47
  attribute  <B>information</B> retrieval <B>system</B>  nearest neighbor queries  partial match queries  as a data structure for storage of <B>information</B> to be retrieved by associative searches  the k-d tree <B>file</B> are  insertion  o  log n   deletion of the root  o  n  k-1  k   deletion of a random node  o  log n   and optimization  guarantees logarithmic <B>performance</B> of searches   o  n log n   search
45 Q0 1792 92 0.0323649 Lucene_47
exploratory experimental studies comparing online and off line programming <B>performance</B> two exploratory experiments were conducted at <B>system</B> development corporation to compare debugging <B>performance</B>  these are the first known studies that measure programmers  <B>performance</B> under controlled conditions for standard differences in programmer <B>performance</B>  methodological problems encountered in designing and conducting
45 Q0 1210 93 0.031863775 Lucene_47
<B>file</B>-handling within fortran this note describes some fortran subroutines to facilitate handling of tape files  they allow symbolic naming of <B>information</B> files  without violating the casual scientific programmer s idea of simplicity  some comments on two years <B>use</B> of these subroutines are given  cacm august  1965 harrison  m  c  ca650814 jb march 6  1978 7 59 pm 1210 5 1210 1210 5 1210 1210 5
45 Q0 2876 94 0.03180922 Lucene_47
  the control over what a user is allowed to do with a piece of <B>information</B> supplied to him by the database  the ability to condition the supply of <B>information</B> on its intended <B>use</B> is called here in database systems is understood to be the control over what <B>information</B> a given user can get from resolution of privacy  interaction with <B>databases</B> 3.50 3.70 4.20 4.30 ca760304 jb january 4  1978 4 44
45 Q0 2195 95 0.031138187 Lucene_47
 in the input picture the optimal <B>system</B> of lines according to the given figure of merit  due is then discussed  the method described is suitable for parallel processing because the <B>operations</B>  interaction graph  <B>secondary</B> optimization problem 3.63 3.66 5.42 ca710504 jb february 3  1978 2 49 pm
45 Q0 1765 96 0.030951118 Lucene_47
expenditures  sources of funds  and utilization of digital computers for <B>research</B> and instruction the utilization of computers used for <B>research</B> and instruction in institutions of higher education are presented  cacm april  1968 hamblen  j  w  computing centers  <B>research</B>  instruction  utilization  expenditures  support  sources of funds  higher education  post <B>secondary</B> education  colleges  universities
45 Q0 2324 97 0.030690996 Lucene_47
 science  <B>operations</B> <B>research</B>  algorithms 5.41 8.3 ca720704 jb january 30  1978 3 14 pm 2324 5 2324management science  a view from nonlinear programming a brief history of integer and continuous nonlinear programming is presented as well as the current obstacles to practical <B>use</B> of these mathematical programming techniques  it is forecast that the useful contributions to nonlinear programming
45 Q0 1854 98 0.03031235 Lucene_47
 and errors  and that it therefore may heavily contribute to the unreliability of programs making <B>use</B> of programs with concurrent activities  the scheme <B>includes</B> a set of basic instructions and test on the ibm <B>system</B> 360  two programs using these instructions  written in pl360  are presented organization  <B>file</B> handling  pl360 4.21 4.22 4.32 4.41 6.21 ca690901 jb february 15  1978 5 14 pm 1380 4
45 Q0 1653 99 0.03015813 Lucene_47
<B>system</B> <B>performance</B> evaluation  survey and appraisal the state of the art of <B>system</B> <B>performance</B> evaluation is reviewed and evaluation goals and problems are examined  throughput  turnaround  and availability are defined as fundamental measures of <B>performance</B>  overhead and cpu speed are placed of <B>information</B>  the central role of measurement in <B>performance</B> evaluation and in the development
45 Q0 3168 100 0.029817574 Lucene_47
comment on  an optimal evaluation of boolean expressions in an online query <B>system</B>   cacm october  1979 laird  p  query  boolean expression  <B>information</B> retrieval  <B>file</B> organization 3.53.70 3.73 3.74 ca791001 db january 16  1980 4 50 pm 3168 4 3168 3168 4 3168 3169 4 3168 2965 5 3168 3002 5 3168 3168 5 3168 3168 5 3168 3168 5 3168
*************Query 46*************************

46 Q0 2711 1 0.4014858 Lucene_47
  s  <B>automatic</B> <B>information</B> <B>retrieval</B>  <B>automatic</B> <B>indexing</B>  content analysis  document space 3.71 3.73a vector space model for <B>automatic</B> <B>indexing</B> in a document <B>retrieval</B>  or other pattern matching be expressible as a function of the density of the object space  in particular  <B>retrieval</B> <B>performance</B> to choose an optimum <B>indexing</B> vocabulary for a collection of documents  typical <B>evaluation</B> results
46 Q0 2990 2 0.3386952 Lucene_47
  1977 yu  c  t  salton  g  <B>information</B> <B>retrieval</B>  <B>automatic</B> <B>indexing</B>  content analysis  term accuracyeffective <B>information</B> <B>retrieval</B> using term accuracy the <B>performance</B> of <B>information</B> <B>retrieval</B> on measuring the <B>retrieval</B> <B>performance</B> of an average user query  unfortunately  formal proofs are difficult to construct for the average case  in the present study  <B>retrieval</B> <B>evaluation</B> is based
46 Q0 1032 3 0.27733186 Lucene_47
theoretical <B>considerations</B> in <B>information</B> <B>retrieval</B> systems <B>information</B> storage and <B>retrieval</B> systems are composed of three major components   a  identification of <B>information</B> and tagging it for effective <B>retrieval</B>   b  searching strategy  how to enter the file to circumvent the scanning <B>performance</B>  and the second is a self-generating <B>subset</B> of the file with a high probability of being
46 Q0 1457 4 0.2120262 Lucene_47
data manipulation and programming <B>problems</B> in <B>automatic</B> <B>information</B> <B>retrieval</B> <B>automatic</B> <B>information</B> in <B>automatic</B> <B>information</B> systems are first briefly reviewed  a variety of data representations  advantages of these programming languages for the <B>retrieval</B> <B>application</B> are examined  and suggestions are made for the design of programming facilities to aid in <B>information</B> <B>retrieval</B>  cacm march  1966
46 Q0 329 5 0.18894248 Lucene_47
 is discussed in detail  as is its <B>application</B> to <B>problems</B> of <B>automatic</B> <B>indexing</B> and <B>automatic</B><B>automatic</B> abstracting and <B>indexing</B> survey and recommendations in preparation for the widespread use of <B>automatic</B> scanners which will read documents and transmit their contents to other machines for the solution of <B>problems</B> of <B>automatic</B> analysis  cacm may  1961 edmundson  h  p  wyllys  r  e
46 Q0 2631 6 0.17376876 Lucene_47
 computer files of bibliographic <B>information</B>  an attempt is made to overcome one of the <B>problems</B> often associated with <B>information</B> <B>retrieval</B>  namely  the maintenance and use of large dictionaries of this <B>subset</B> are then used as index keys for <B>retrieval</B>  the rectangular distribution of key june  1974 barton  i  j  creasey  s  e  lynch  m  f  snell  m  j  text searching  <B>information</B> <B>theory</B>
46 Q0 2451 7 0.14470582 Lucene_47
design of tree structures for efficient querying a standard <B>information</B> <B>retrieval</B> operation and <B>retrieval</B>  <B>clustering</B>  search  data structure  data management  query answering 3.62 3.74 ca730904 poses an optimization problem in the design of such trees to serve a well-specified <B>application</B> between observed <B>performance</B> and that of an intuitively attractive ideal search procedure
46 Q0 2307 8 0.13577998 Lucene_47
 for <B>information</B> <B>retrieval</B> and for the control of dynamic library collections in which new items are continually added and old ones are retired  cacm july  1972 salton  g  <B>automatic</B> <B>indexing</B>  <B>automatic</B>dynamic document processing the current role of computers in <B>automatic</B> document processing is then outlined in which clustered files are searched and <B>information</B> is retrieved following
46 Q0 1653 9 0.12474091 Lucene_47
 of <B>information</B>  the central role of measurement in <B>performance</B> <B>evaluation</B> and in the developmentsystem <B>performance</B> <B>evaluation</B>  survey and appraisal the state of the art of system <B>performance</B> <B>evaluation</B> is reviewed and <B>evaluation</B> goals and <B>problems</B> are examined  throughput  turnaround  and availability are defined as fundamental measures of <B>performance</B>  overhead and cpu speed are placed
46 Q0 2542 10 0.11410509 Lucene_47
 the <B>performance</B> <B>information</B> obtained from these routines as feedback  the <B>problems</B> which adversely affecta software design and <B>evaluation</B> system a critical failure of current software system design and implementation methodology is that the <B>performance</B> of a proposed design is not evaluated before which overcomes many of the difficulties is proposed  a system which integrates <B>performance</B>
46 Q0 2984 11 0.10266006 Lucene_47
  p  computer system  <B>performance</B> <B>evaluation</B>  cost utilization  system balance 2.44 ca770308 jbcost utilization  a measure of system <B>performance</B> a method is presented for evaluating computer system <B>performance</B> in terms of a cost utilization factor and a measure of imbalance  these coefficients indicate the extent to which the total system cost is effectively utilized  the method <B>includes</B>
46 Q0 2217 12 0.099994324 Lucene_47
 of predicate calculus clauses were created for use in the <B>automatic</B> learning of better <B>evaluation</B> functions demonstrated that the learning program could simultaneously improve <B>performance</B> on <B>problems</B> in a specificexperiments in <B>automatic</B> learning for a multipurpose heuristic program an <B>automatic</B> learning in predicate calculus  multiple s proving program  pp  uses two <B>evaluation</B> functions to guide its
46 Q0 1236 13 0.0992835 Lucene_47
the smart <B>automatic</B> document <B>retrieval</B> system-an illustration a fully <B>automatic</B> document <B>retrieval</B> is used in the <B>retrieval</B> process by leaving the exact sequence of operations initially unspecified can in general be relied upon to retrieve the wanted <B>information</B>  a typical search request is used as an example in the present report to illustrate systems operations and <B>evaluation</B> procedures  cacm
46 Q0 2882 14 0.09778362 Lucene_47
a stochastic <B>evaluation</B> model for database organization in data <B>retrieval</B> systems experimental work in the valuation of large scale data <B>retrieval</B> systems has been scarce due to its difficulty  cacm february  1976 siler  k  f  database architecture  database <B>performance</B> and <B>evaluation</B>  invented list  threaded list  cellular list  <B>information</B> <B>retrieval</B>  database organizations  query complexity
46 Q0 2568 15 0.0952082 Lucene_47
 be presented in the terminology of classical network <B>theory</B>  one such formulation is  given a nondirected <B>subset</B> are connected by anarc  an obvious lower limit to this number is the size of the largest strongly usually finds the largest strongly connected subgraph  and to discuss the <B>application</B> of this algorithm to the solution of school scheduling and exam scheduling <B>problems</B>  cacm december  1974 salazar
46 Q0 2265 16 0.09315645 Lucene_47
 checking problem based on the notions of abstraction and <B>application</B> of functions  in particular  a program is mapped into an expression within a decidable <B>subset</B> of the lambda calculus  which characterizes the type relations within the program and eliminates all other <B>information</B>  the determination correct program or the constant  error   an <B>application</B> to type checking in algol 60 is made
46 Q0 1267 17 0.09240423 Lucene_47
<B>performance</B> of systems used for data transmission transfer rate of <B>information</B> bits -an asa tutorial standard <B>information</B> thruput as a characteristic of systems <B>performance</B> is discussed  this discussion <B>includes</B> the pertinent aspects of <B>information</B> transfer  of determination of transfer rate that a <B>performance</B> characteristic involving <B>information</B> rate can best be expressed as the trib in conjunction
46 Q0 1976 18 0.09234308 Lucene_47
 november  1970 lum  v  y  file organization  secondary index files  inverted files  <B>information</B> <B>retrieval</B>multi-attribute <B>retrieval</B> with combined indexes in this paper a file organization scheme designed to retrieve all keys satisfying any input query derived from a <B>subset</B> of fields by a single access few possible values  redundancy  in some cases  is the same as the secondary <B>indexing</B> method
46 Q0 1675 19 0.09130022 Lucene_47
a note on a relevance estimate and its improvement in this paper the effect of iterating the improvement procedure is examined  it is shown that applications of the improvement factor beyond the first time are ineffectual  and that the factor is but a scale factor  cacm november  1968 korfhage  r  r  <B>information</B> <B>retrieval</B>  relevance  <B>indexing</B>  classification 3.70 3.71 3.74 ca681104 jb february 21
46 Q0 2561 20 0.08598123 Lucene_47
 <B>clustering</B> algorithms  they are implemented in a model fact <B>retrieval</B> system which uses a formal  inference  inductive inference  <B>clustering</B>  fact <B>retrieval</B>  heuristics 3.61 3.71 3.79 ca741213 jba heuristic approach to inductive inference in fact <B>retrieval</B> systems heuristic procedures are presented which have been developed to perform inferences by generalizing from available <B>information</B>
46 Q0 1652 21 0.085239105 Lucene_47
 of the <B>information</B> channel linking the system and the system user  the code has direct <B>application</B> to <B>problems</B> in area such as <B>information</B> <B>retrieval</B>  document classification  computer-aided teaching and text editinga code for non-numeric <B>information</B> processing applications in online systems a code has been specifically designed to simplify the internal <B>information</B> processing operations within an online computer
46 Q0 2991 22 0.08499883 Lucene_47
 storage  search method  collisions  synonyms  <B>clustering</B>  <B>information</B> <B>retrieval</B>  open addressingimproving the access time for random access files <B>clustering</B> in the key set is decreased by smoothing the key-to-address transformation  and by adding shadow buckets to an open chaining file of these techniques lead to improved file <B>performance</B> for secondary storage devices  as shown by empirical
46 Q0 944 23 0.080549195 Lucene_47
  may be used to construct numeric  alphabetic or alphanumeric trees  such trees have <B>information</B> storage and <B>retrieval</B> properties applicable to <B>problems</B> involving large quantities of data or to <B>problems</B> where the quantity  word length and distribution of stored <B>information</B> is not known a priori properties is available  of prime interest is the <B>application</B> where a symbol table  dictionary or similar
46 Q0 675 24 0.07777994 Lucene_47
coding clinical laboratory data for <B>automatic</B> storage and <B>retrieval</B> a series of clinical laboratory results for <B>automatic</B> data processing  the codes  although constructed as part of a computerized  along with reproduction of such a report  the paper concludes that even though many <B>problems</B> remain unsolved  the next ten years could witness the emergence of a practical automated <B>information</B> system
46 Q0 891 25 0.07767372 Lucene_47
everyman s <B>information</B> <B>retrieval</B> system the <B>information</B> <B>retrieval</B> problem whose solution  is quite general and is applicable to many different types of <B>retrieval</B> <B>problems</B>  further the method of solution makes it possible for many groups who have previously dismissed an <B>information</B> <B>retrieval</B>  for the present solution makes it possible to install an <B>information</B> <B>retrieval</B> program in less than
46 Q0 3169 26 0.07706326 Lucene_47
note on  an optimal <B>evaluation</B> of boolean expressions in an online query system   cacm october  1979 gudes  e  hoffman  a  query  boolean expression  optimal <B>evaluation</B>  <B>information</B> <B>retrieval</B> 3.50 3.70 3.74 ca791002 db january 16  1980 4 52 pm 3168 4 3169 3169 4 3169 2965 5 3169 3169 5 3169 3169 5 3169 3169 5 3169
46 Q0 1926 27 0.07657039 Lucene_47
  computer system  it features good <B>performance</B>  totally free-form input  very flexible formatting capabilities including up to eight columns per page  <B>automatic</B> capitalization  aids for index  m  text processing  <B>indexing</B>  printing  documentation  text editing  formatting  frequency
46 Q0 1699 28 0.07619691 Lucene_47
experimental <B>evaluation</B> of <B>information</B> <B>retrieval</B> through a teletypewriter experiments designed to evaluate the capabilities of mechanized <B>information</B> <B>retrieval</B> systems  with emphasis on interactive  bergman  s  franks  w  rubinoff  e  <B>information</B> <B>retrieval</B> testing  <B>information</B> system <B>evaluation</B> of the research is that an <B>information</B> <B>retrieval</B> system that provides for man-machine dialogue at a remote
46 Q0 2140 29 0.0756092 Lucene_47
  <B>information</B> <B>retrieval</B>  query  multi-attribute <B>retrieval</B>  file update 3.73 3.74 3.79 ca711203 jb<B>retrieval</B>-update speed tradeoffs using combined indices in a paper in the november 1970 communications of the acm  v  y  lum introduced a technique of file <B>indexing</B> named combined indices  this technique permitted decreased <B>retrieval</B> time at the cost of increased storage space  this paper examines
46 Q0 2959 30 0.07174748 Lucene_47
  sba  is a system within which <B>application</B> experts-nonprogrammers-can describe and execute their applications on a computer  the user of sba views his <B>application</B> as manipulation of <B>information</B> in two automate this <B>application</B> by giving  examples  to the system of how he manually manipulates the <B>information</B>  the query-by-example database language is a <B>subset</B> of the sba programming language  cacm
46 Q0 1627 31 0.07120474 Lucene_47
 of certain data management and <B>information</B> <B>retrieval</B> systems  the concept of level changing is introduced and its <B>application</B> to the multilevel store is discussed  a possible means for physically organizing the <B>information</B> for efficient use of the multilevel store is presented  cacm march  1967 morenoff  e<B>application</B> of level changing to a multilevel storage organization a technique for organizing
46 Q0 1272 32 0.07061881 Lucene_47
expanding the editing function in language data processing in <B>automatic</B> abstracting  citation <B>indexing</B>  mechanical translation and other such procedures  editing is required whenever the <B>automatic</B> method leaves something to be desired  this paper discusses the economy of editing as a function  such as the quick  unbiased <B>evaluation</B> of a large volume of incoming mail or telegrams  yielding
46 Q0 2139 33 0.067148775 Lucene_47
  substring  hashing  <B>subset</B>  signature  <B>information</B> compression  <B>information</B> <B>retrieval</B>  searching 3.74
46 Q0 3168 34 0.066189505 Lucene_47
comment on  an optimal <B>evaluation</B> of boolean expressions in an online query system   cacm october  1979 laird  p  query  boolean expression  <B>information</B> <B>retrieval</B>  file organization 3.53.70 3.73 3.74 ca791001 db january 16  1980 4 50 pm 3168 4 3168 3168 4 3168 3169 4 3168 2965 5 3168 3002 5 3168 3168 5 3168 3168 5 3168 3168 5 3168
46 Q0 2268 35 0.06608045 Lucene_47
   the testing procedure is described together with the <B>evaluation</B> criteria applied  a set of test <B>problems</B> on which the programs were tested is included in an appendix  for the particular <B>problems</B> the <B>performance</B> of several computer programs for integrating systems of ordinary differential the best <B>performance</B>  cacm november  1972 fox  p  ordinary differential equations  integration  program
46 Q0 1665 36 0.06580215 Lucene_47
<B>automatic</B> generation of efficient lexical processors using finite state techniques the practical <B>application</B> of the <B>theory</B> of finite-state automata to automatically generate lexical processors allowable in a language given in terms of a <B>subset</B> of regular expressions  the output of the system important consideration  in designing a system for <B>automatic</B> generation of a lexical processor  the goal
46 Q0 2976 37 0.06565473 Lucene_47
approximating block accesses in database organizations cacm april  1977 yao  s  b  database  inverted file organization  database <B>performance</B> and measurement  <B>information</B> <B>retrieval</B>  query answering 3.70 3.72 4.33 ca770406 jb december 29  1977 5 06 am 2976 4 2976 2976 4 2976 2976 4 2976 2688 5 2976 2765 5 2976 2882 5 2976 2976 5 2976 2976 5 2976 2976 5 2976
46 Q0 2454 38 0.06534192 Lucene_47
 to implement  implementation <B>considerations</B> such as storage allocation strategies and order of <B>evaluation</B> are examined in some detail  cacm september  1973 buzen  j  p  queueing <B>theory</B>  queueing
46 Q0 3089 39 0.06504385 Lucene_47
<B>performance</B> of rollback recovery systems under intermittent failures a mathematical model with a checkpointing and rollback recovery method to ensure reliable <B>information</B> processing  the model is used to derive the principal <B>performance</B> measures  including availability  response time systems  checkpoints  recovery procedures  checking techniques  reliability and system <B>performance</B>
46 Q0 1415 40 0.06437183 Lucene_47
 immediate prospects for improving the <B>performance</B> of <B>automatic</B> message <B>retrieval</B> systems  they may<B>automatic</B> derivation of microsentences the decomposition of long complex english sentences into shorter kernel-like constituent sentences  microsentences has often been suggested as an avenue toward conducting <B>automatic</B> <B>retrieval</B> of natural language messages  to explore the prospects of such a step
46 Q0 2669 41 0.06423016 Lucene_47
a simple linear model of demand paging <B>performance</B> predicting the <B>performance</B> of a proposed to the <B>information</B> stored in the memory  some recent experimental measurements on the multics virtual will suffice  the simple model combines the effect of the <B>information</B> reference pattern with the effect of the <B>automatic</B> management algorithm to produce a single  composite statement  the mean number of memory
46 Q0 1948 42 0.06240757 Lucene_47
computers in group <B>theory</B>  a survey computers are being applied to an increasingly diverse range of <B>problems</B> in group <B>theory</B>  the most important areas of <B>application</B> at present are coset enumeration  group <B>theory</B> programs range from simple combinatorial or numerical programs to large symbol is included  cacm january  1969 cannon  j  j  group <B>theory</B>  coset enumeration  subgroup lattices
46 Q0 1194 43 0.062118646 Lucene_47
  is reviewed briefly  two principles are presented as paramount in the provision of <B>information</B> services   1  easy accessibility to the <B>information</B> files by users unfamiliar with file organization repository  the main features of the <B>information</B> system are direct user access via on-line and expandable search vocabulary  user access through many facets of document <B>indexing</B>  and stochastic search
46 Q0 1290 44 0.061071448 Lucene_47
 for <B>information</B> interchange -a tutorial this paper gives the <B>considerations</B> of task group x3.3.4 upon solutions to the <B>problems</B> of transparency to the basic ascii communication control characters control <B>problems</B> of handling material such as off line encrypted data or non-ascii codes by means communication control procedures using the american stand ard code for <B>information</B> interchange  cacm
46 Q0 696 45 0.06096645 Lucene_47
an <B>automatic</B> data acquisition and inquiry system using disk files lockheed missiles and space company has installed a large-scale <B>automatic</B> data acquisition  ada  system which ties together the company s manufacturing facilities located in van nuys and sunnyvale  california  the system <B>includes</B> to the data processing center  a large capacity rca 366 data disc file is used to store <B>information</B>
46 Q0 1108 46 0.06053963 Lucene_47
 of the entire system and the effect data processing <B>considerations</B> have on the design of the tracker system  the three system units  connected in cascade  comprise the control loop  for this <B>application</B> measurement <B>information</B>  this <B>information</B> is sequentially read into a special purpose digital
46 Q0 2575 47 0.060373675 Lucene_47
the best-match problem in document <B>retrieval</B> cacm november  1974 van rijsbergen  c  j  document <B>retrieval</B>  best match  <B>clustering</B>  file searching  matching  dissimilarity  hierarchy  classification 3.73 3.74 3.79 5.30 ca741109 jb january 16  1978 10 09 am 2575 4 2575 2966 4 2575 3134 4 2575 2524 5 2575 2575 5 2575 2575 5 2575 2575 5 2575
46 Q0 3041 48 0.06019364 Lucene_47
 of the <B>application</B> of mst s to dictionary lookup for english is presented  and the <B>performance</B> obtained is contrasted search  heaps  balanced trees  zipf s law  <B>information</B> <B>retrieval</B> 3.74 5.25 5.39 ca781110 dh january
46 Q0 2033 49 0.05847016 Lucene_47
 of space required to contain the hash-coded <B>information</B> from that associated with conventional methods conventional methods  in such applications  it is envisaged that overall <B>performance</B> could be improved associated with new methods  an example is discussed which illustrates possible areas of <B>application</B>  scatter storage  searching  storage layout  <B>retrieval</B> trade-offs  <B>retrieval</B> efficiency  storage
46 Q0 1651 50 0.05711176 Lucene_47
 <B>evaluation</B>  large lp <B>problems</B> would doubtless benefit from an input system more suited for bulk data  for subsequent use either as a pedagogical device or for solving rather small lp <B>problems</B>  this latter  limited the input deck as an aid in identification  e g   of row constraints  the article <B>includes</B> examples
46 Q0 2812 51 0.05638344 Lucene_47
  computer selection and <B>performance</B> <B>evaluation</B>  there are four major components  problem statement language  problem statement analyzer  generator of alternative designs  and <B>performance</B> evaluatorcomputer-aided analysis and design of <B>information</B> systems this paper describes the use of computer <B>information</B> in order to create a complete problem definition  the analyzed problem statement was translated
46 Q0 1792 52 0.055348877 Lucene_47
 differences in programmer <B>performance</B>  methodological <B>problems</B> encountered in designing and conductingexploratory experimental studies comparing online and off line programming <B>performance</B> two exploratory experiments were conducted at system development corporation to compare debugging <B>performance</B>  these are the first known studies that measure programmers  <B>performance</B> under controlled conditions for standard
46 Q0 2484 53 0.05514171 Lucene_47
  and may serve as a basis for developing a formal <B>theory</B> on the subject  cacm july  1973 huang  j  c  data base  data-base management  <B>information</B> <B>retrieval</B>  <B>information</B> structure  file organizationa note on <B>information</B> organization and storage since the logical structure of a data base can in different <B>information</B> structures  as list  tree  ring  etc  thus the problem of <B>information</B>
46 Q0 1827 54 0.055111296 Lucene_47
  multiprogramming <B>performance</B>  software measurement  time-sharing <B>performance</B>  system <B>evaluation</B><B>performance</B> monitoring in a time-sharing system a software measurement facility which is part of monitoring operating system and user program behavior and <B>performance</B>  the overall structure of <B>information</B> obtained with the facility and of applications in which it has been useful  some
46 Q0 1935 55 0.05317379 Lucene_47
 method described is binary in nature and offers new potential for <B>information</B> <B>retrieval</B> systems  cacm february  1969 arora  s  r  dent  w  t  binary pattern  file examination  graph <B>theory</B>  <B>information</B> <B>retrieval</B>  mathematical model  partitioning  probabilistic method  random sequencing  search
46 Q0 2318 56 0.051659383 Lucene_47
the role of computer system models in <B>performance</B> <B>evaluation</B> models constitute a useful means of investigating computer system <B>performance</B>  this paper examines the interrelationships between models and other methods for evaluating the <B>performance</B> of computer systems and establishes circumstances under which the use of a model is appropriate  cacm july 1972 kimbleton  s  r  modeling  <B>evaluation</B>
46 Q0 2327 57 0.05015475 Lucene_47
toward an automata <B>theory</B> of brains a source of ideas for automata <B>theory</B>-the study of the brain-has been pushed aside in mathematical development of the <B>theory</B>  this paper suggests the ways in which automata <B>theory</B> might evolve over the next 25 years if it is to contribute to an understanding of how the brain processes <B>information</B>  cacm july  1972 arbib  m  a  automata <B>theory</B>  brain <B>theory</B>
46 Q0 1855 58 0.050129432 Lucene_47
 and for avoiding the need for dynamic <B>application</B> of certain transformational rules are described  a number of examples of output produced by the program are given  the output <B>includes</B> timing <B>information</B>  cacm august  1969 dewar  h  bratley  p  syntactic analysis  language processing  language
46 Q0 2288 59 0.049807202 Lucene_47
 of an <B>information</B> <B>retrieval</B> system with a minimal search time and no redundant storage  some important theorems an <B>information</B> <B>retrieval</B> system based on the consecutive <B>retrieval</B> property is also discussed  cacm september  1972 ghosh  s  p  file organization  consecutive storage  consecutive <B>retrieval</B>  <B>information</B>file organization  the consecutive <B>retrieval</B> property the consecutive <B>retrieval</B> property
46 Q0 2258 60 0.049241047 Lucene_47
 storage  <B>information</B> <B>retrieval</B> 3.7 3.72 3.73 3.74 3.79 4.9 ca721111 jb january 27  1978 1 31 pm 2258 4additional results on key-to-address transform techniques  a fundamental <B>performance</B> study on large existing formatted files cacm november  1972 lum  v  y  yuen  p  s  t  hashing  hashing techniques  hashing methods  hash coding  keys  key transformation  key-to-address transformation  direct
46 Q0 2437 61 0.048721224 Lucene_47
 access  scatter storage  <B>information</B> <B>retrieval</B>  hashing analysis  randomization <B>performance</B> analysis 3.7general <B>performance</B> analysis of key-to-address transformation methods using an abstract file concept this paper presents a new approach to the analysis of <B>performance</B> of the various key-to-address  and the average <B>performance</B> of the transformation methods on these files will be used as the potential
46 Q0 2518 62 0.048672948 Lucene_47
 tables to construct an <B>application</B> program through the selection of certain source statements from general and special purpose programming for a significant class of large scale <B>problems</B>  the elements of the approach are discussed an existing <B>application</B> is described  cacm may  1973 low  d  w  customizing  modeling  applications development  programmer productivity  simulator generation  <B>automatic</B>
46 Q0 2967 63 0.048164535 Lucene_47
-addressable memory  graphics  <B>information</B> <B>retrieval</B>  data structures  software <B>evaluation</B>  hardware <B>evaluation</B>  parallel processing  database management 3.71 3.72 3.73 3.74 4.34 4.6 6.22 8.2 ca770505
46 Q0 1527 64 0.047884263 Lucene_47
a grammar base question answering procedure the subject of this paper is a procedure for the <B>automatic</B> <B>retrieval</B> of certain segments of stored <B>information</B>  either explicitly or implicitly represented for this set of sentences  sentence recognition itself is a procedure for retrieving <B>information</B>  when the recognition function succeeds  its value represents the requested <B>information</B>  cacm october  1967
46 Q0 2050 65 0.04707135 Lucene_47
 language processing  <B>information</B> <B>retrieval</B>  language analysis  text processing 3.42 3.71 ca700605 jb<B>automatic</B> parsing for content analysis although <B>automatic</B> syntactic and semantic analysis is not yet possible for all of an unrestricted natural language text  some applications  of which content analysis is one  do not have such a stringent coverage requirement  preliminary studies show
46 Q0 1398 66 0.046912376 Lucene_47
 are derived from <B>information</B> <B>theory</B>  cacm july  1966 sterling  t  gleser  m  haberman  s  pollackrobot data screening  a solution to multivariate type <B>problems</B> in the biological and social sciences a new approach is outlined toward the solution of the type of multivariate problem that is found usually in the biological and social sciences as well as in medicine  this approach uses a  logical
46 Q0 2835 67 0.046346612 Lucene_47
recursion analysis for compiler optimization a relatively simple method for the detection of recursive use of procedures is presented for use in compiler optimization  implementation <B>considerations</B> are discussed  and a modification of the algorithm is given to further improve optimization  this analysis can also be used to determine what possible <B>subset</B> of values could be assumed by variables
46 Q0 1516 68 0.046089184 Lucene_47
<B>automatic</B> data compression the  <B>information</B> explosion  noted in recent years makes it essential that storage requirements for all <B>information</B> be kept to a minimum  a fully <B>automatic</B> and rapid three-part compressor which can be used with  any  body of <B>information</B> to greatly reduce slow external  anpak for the <B>automatic</B> compression of  any  <B>information</B>  and iopak for further compression
46 Q0 2598 69 0.045139506 Lucene_47
extending the <B>information</B> <B>theory</B> approach to converting limited-entry decision tables to computer-understood problem in <B>information</B> <B>theory</B> of noiseless coding  the results of the noiseless coding  the analogy between the two <B>problems</B> is also used to develop improvements to the <B>information</B> algorithm  flowcharting  <B>information</B> <B>theory</B>  noiseless channel  sorting 3.50 5.31 ca740910 jb january 17  1978 8
46 Q0 2046 70 0.04459708 Lucene_47
   a prompting service which supplies such <B>information</B> is not a satisfactory solution  activities of users at terminals and most <B>application</B> programs should remain unaffected when the internal traffic and natural growth in the types of stored <B>information</B>  existing noninferential  formatted data on relations  other than logical inference  are discussed and applied to the <B>problems</B> of redundancy
46 Q0 1572 71 0.0433668 Lucene_47
the simulation of time sharing systems the development of new large scale time-sharing systems has raised a number of <B>problems</B> for computation center management  not only is it necessary to develop would suggest  and there are few guides to assist in the analysis of <B>performance</B> characteristics  the model was implemented in a limited fortran <B>subset</B> that is compatible with most fortran iv compilers
46 Q0 1621 72 0.04336145 Lucene_47
computer typesetting of algol an <B>application</B> of computer-aided typesetting is introduced  a working method is described for publishing algol by computerized translation from hardware into reference representation  computerized planning of typographical lay-out and computerized control a correct algol documentation without spending valuable time and power on typographic <B>considerations</B>
46 Q0 3048 73 0.043306984 Lucene_47
<B>performance</B> <B>evaluation</B> of highly concurrent computers by deterministic simulation simulation is presented as a practical technique for <B>performance</B> <B>evaluation</B> of alternative configurations of highly for <B>performance</B> <B>evaluation</B>  without the necessity of emulating the system  as a case study  as in the ibm 360 195  cacm november  1978 kumar  b  davidson  e  <B>performance</B> <B>evaluation</B>  deterministic
46 Q0 3059 74 0.042733938 Lucene_47
 of these <B>problems</B>  the percentage <B>performance</B> improvement from cpu i o overlap is found to be greatestmodels for parallel processing within programs  <B>application</B> to cpu i o and i o i o overlap approximate queueing models for internal parallel processing by individual programs in a multiprogrammed system are developed in this paper  the solution technique is developed by network decomposition
46 Q0 2951 75 0.042436957 Lucene_47
  and statistical <B>performance</B> <B>evaluation</B> tools are employed to investigate the feasibility of a dynamic response time monitor that is capable of providing comparative response time <B>information</B> for users
46 Q0 1048 76 0.041800104 Lucene_47
approximate solution of axially symmetric <B>problems</B> a variety of physical <B>problems</B> in such diverse fields as electrostatic field <B>theory</B>  heat and ideal fluid flow  and stress concentration <B>theory</B> reduce  under the assumption of axial symmetry  to the study of an elliptic partial differential equation  dirichlet-type <B>problems</B> associated with this equation are studied on regions whose boundaries
46 Q0 1830 77 0.041568357 Lucene_47
<B>retrieval</B> times for a packed direct access inverted file cacm october  1969 bayes  a  j  <B>information</B> <B>retrieval</B>  direct access memory  data base  inverted list 3.70 4.41 ca691016 jb february 15  1978 1 27 pm 1830 5 1830 1830 5 1830 1830 5 1830
46 Q0 2965 78 0.04136844 Lucene_47
an optimal <B>evaluation</B> of boolean expressions in an online query system cacm may  1977 hanani  m  z  query  boolean expression  <B>information</B> <B>retrieval</B>  file organization 3.5 3.70 3.74 ca770507 jb december 29  1977 1 51 am 2155 4 2965 2406 4 2965 2710 4 2965 2715 4 2965 2716 4 2965 2717 4 2965 2718 4 2965 2765 4 2965 2765 4 2965 2817 4 2965 2888 4 2965 2901 4 2965 2957 4 2965 2959 4 2965 2965 4 2965
46 Q0 2722 79 0.04109878 Lucene_47
 uses are given  cacm september  1975 bently  j  l  associative <B>retrieval</B>  binary search trees  key  attribute  <B>information</B> <B>retrieval</B> system  nearest neighbor queries  partial match queries  as a data structure for storage of <B>information</B> to be retrieved by associative searches  the k-d tree  log n   and optimization  guarantees logarithmic <B>performance</B> of searches   o  n log n   search
46 Q0 2278 80 0.041029435 Lucene_47
on foster s <B>information</B> storage and <B>retrieval</B> using avl trees cacm september  1972 tan  k  c  binary trees  search trees  <B>information</B> storage  <B>information</B> <B>retrieval</B> 3.70 3.73 3.74 ca720912 jb january 27  1978 4 10 pm 2278 5 2278 2278 5 2278 2278 5 2278 2455 5 2278 2278 6 2278 2388 6 2278
46 Q0 1769 81 0.04097877 Lucene_47
the expanding world of computers the onward sweep of <B>automatic</B> processing of <B>information</B> is impeded by nine principal barriers  geography  cost  problem complexity  man-machine communication these barriers is the universal need for processing <B>information</B>  ever more urgent as the greater part to governments and scientists to use in studying the <B>problems</B> being created by the population explosion
46 Q0 1167 82 0.040899083 Lucene_47
on the translation of machine language programs <B>automatic</B> translation of machine language programs is becoming a highly desirable goal with the advent of new large-scale computers  the pitfalls that make it difficult to achieve completely <B>automatic</B> translations are analyzed  and it is shown that these are primarily of a semantic nature  a semi-<B>automatic</B> procedure for resolving semantic <B>problems</B>
46 Q0 1087 83 0.040575244 Lucene_47
<B>problems</B> in <B>automatic</B> abstracting a variety of <B>problems</B> concerning the design and operation of an <B>automatic</B> abstracting system are discussed  the purpose is to a general view of several major problem areas  no attempt is made to discuss details or to indicate preferences among alternative solutions  cacm april  1964 edmundson  h  p  ca640422 jb march 10  1978 12 21 am 1087 4 1087 634 4 1087 1087
46 Q0 1711 84 0.04034902 Lucene_47
  <B>information</B> is given on patents  copyrights and trade secret protection for programs  and the problem of using copyrighted material in <B>information</B> storage and <B>retrieval</B> systems  including the pending of computers may be alerted to potential legal <B>problems</B>  focus is also on trouble spots in contracting
46 Q0 1911 85 0.04004165 Lucene_47
on coordination reduction and sentence analysis a class of coordination phenomena in natural languages is considered within the frame work of transformational <B>theory</B>  to account for these phenomena grammar  this machinery <B>includes</B> certain rule schemata  the conditions under which they are to be applied  generative grammar  transformational <B>theory</B>  syntax  coordination  sentence coordination  sentence
46 Q0 651 86 0.039937932 Lucene_47
a survey of languages and systems for <B>information</B> <B>retrieval</B> cacm january  1962 grems  m  ca620108 jb march 20  1978 4 36 pm 651 5 651 651 5 651 651 5 651
46 Q0 2059 87 0.039359834 Lucene_47
 of a syntax-driven compiler  <B>application</B> areas for this language are operation research  network <B>problems</B>  control <B>theory</B>  traffic <B>problems</B>  etc  cacm may  1970 crespi-reghizzi  s  morpurgo  r  graphs
46 Q0 2346 88 0.037582304 Lucene_47
hu-tucker minimum redundancy alphabetic coding method  z   algorithm a428  cacm may  1972 yohe  j  m  <B>information</B> <B>theory</B>  coding <B>theory</B>  hu-tucker method  minimum redundancy coding 5.6 ca720514 jb january 31  1978 9 30 am 2346 4 2346 2459 4 2346 1114 5 2346 2346 5 2346 2346 5 2346 2346 5 2346
46 Q0 2319 89 0.037382565 Lucene_47
operating system <B>performance</B> an overview of the current and future positions with respect to operating system <B>performance</B> is given  while a great deal of <B>information</B> and a large number of models  c  computer system  operating system  <B>performance</B> <B>evaluation</B>  <B>performance</B> measurement  measurement be developed to be able to analyze and design the <B>performance</B> aspects of an operating system although
46 Q0 2765 90 0.036960322 Lucene_47
 file organization  data base <B>performance</B> and measurement  secondary index organization  <B>information</B> storage and <B>retrieval</B>  query answering 3.70 3.71 3.72 3.74 3.79 4.0 ca750502 jb january 9  1978 3 15 pmanalysis and <B>performance</B> of inverted data base structures the need to envision and architecture timing and blocking specifications identified as having a first-order effect on <B>performance</B>
46 Q0 1938 91 0.036899555 Lucene_47
 first-level quantitative time-sharing system <B>performance</B> <B>evaluation</B>  cacm january  1969 stimler  s  time-sharing <B>performance</B> criteria  time-sharing system operation  time-sharing <B>performance</B> analysissome criteria for time-sharing system <B>performance</B> time-sharing systems  as defined in this article to utilize the full resources of the system that makes quantitative <B>evaluation</B> of time-sharing
46 Q0 2883 92 0.03661766 Lucene_47
an <B>application</B> of heuristic search methods to edge and contour detection this paper presents a method for detecting edges and contours in noisy pictures  the properties of an edge are embedded are given  these show how various <B>information</B> about the shape of the contour of an object can be embedded  edge detection  contour detection  contour following  optimization <B>problems</B>  dynamic programming
46 Q0 2390 93 0.036224812 Lucene_47
  readers  writers  commentators  computer utility  <B>information</B> <B>retrieval</B>  trees  data structures 1.0 1.1a proposal for a computer-based interactive scientific community because of the <B>problems</B> created by the explosion of papers in the mathematical sciences and the drawbacks that this places on research  it is suggested that a tree of all mathematical results and terminology be maintained
46 Q0 3134 94 0.036191996 Lucene_47
the use of normal multiplication tables for <B>information</B> storage and <B>retrieval</B> this paper describes a method for the organization and <B>retrieval</B> of attribute based <B>information</B> systems  using the normal an d <B>retrieval</B> of <B>information</B> are described  this method is particularly suitable for queries of <B>information</B> systems  the normal multiplication table method yields far more rapid <B>retrieval</B>
46 Q0 2092 95 0.036126733 Lucene_47
 these features in their operation are all described and illustrated  examples of the system s <B>performance</B>  it is shown that the use of semantic <B>information</B> in deductive question answering greatly facilitates to be made of this <B>information</B>  it is concluded that the development of protosynthex iii into a practically  artificial intelligence  computational linguistics  language processing  fact <B>retrieval</B> 3.42 3.61 ca700306
46 Q0 2932 96 0.036055963 Lucene_47
complexity of computations the framework for research in the <B>theory</B> of complexity of computations is described  emphasizing the in terrelation between seemingly diverse <B>problems</B> and methods  illustrative examples of practical and theoretical significance are given  directions for new research  in tractable <B>problems</B>  probabilistic algorithms 5.25 ca770901 jb december 28  1977 6 54 am 2932 5 2932
46 Q0 1173 97 0.03587264 Lucene_47
the <B>performance</B> of a system for <B>automatic</B> segmentation of programs within an algol compiler  gier algol  the gier algol compiler makes use of an <B>automatic</B> system for handling the transfers of program segments from the drum store to the core store at program execution time  the logic of this system is described  the <B>performance</B> of the system is discussed  primarily on the basis of execution times
46 Q0 2923 98 0.03512519 Lucene_47
 flow <B>information</B> to reflect program changes  and derives new global <B>information</B> helpful in solving many familiar global flow analysis <B>problems</B>  an illustrative <B>application</B> to live variable analysis the control flow <B>information</B> implicit in the parse tree  the need for high-level flow analysis arises from
46 Q0 397 99 0.034855485 Lucene_47
a card format for reference files in <B>information</B> processing this paper proposes a card format suitable for a variety of reference files in <B>information</B> processing  an 80-column ibm card is divided  the reference material <B>includes</B> basically an index  title  source  class  summary and cross reference for each entry  the identification <B>includes</B> basically codes for a matrix of descriptors  an entry
46 Q0 2516 100 0.03458726 Lucene_47
hierarchical storage in <B>information</B> <B>retrieval</B> a probabilistic analysis is employed to determine the effect of hierarchical storage organizations on <B>information</B> <B>retrieval</B> operations  the data storage hardware is assumed to consist on n-levels of linearly connected memory hardware with increasing  1973 salasin  j  <B>information</B> <B>retrieval</B>  hierarchical storage 3.70 3.72 3.73 3.74 3.79 3.90 6.20
*************Query 47*************************

47 Q0 1699 1 0.20390977 Lucene_47
 of the research is that an <B>information</B> <B>retrieval</B> <B>system</B> that provides for man-machine dialogue at a remote in evaluation of such a <B>system</B> include ease of <B>use</B>  learning time  and effectiveness of actual <B>retrieval</B>  three  bergman  s  franks  w  rubinoff  e  <B>information</B> <B>retrieval</B> testing  <B>information</B> <B>system</B> evaluationexperimental evaluation of <B>information</B> <B>retrieval</B> through a teletypewriter experiments designed
47 Q0 3012 2 0.14432757 Lucene_47
the <B>use</B> of an interactive <B>information</B> storage and <B>retrieval</B> <B>system</B> in medical research this paper presents the results of a study of the <B>use</B> of an interactive computerized storage and <B>retrieval</B>  implementation  <B>system</B> <B>use</B>  <B>information</B> storage and <B>retrieval</B> <B>system</B> 2.10 3.50 3.72 ca780301 jb march 28  1978 by frequently chosen laboratory reference leaders in influencing the <B>use</B> of this <B>system</B>  the implications
47 Q0 1032 3 0.14125608 Lucene_47
theoretical considerations in <B>information</B> <B>retrieval</B> systems <B>information</B> storage and <B>retrieval</B> systems are composed of three major components   a  identification of <B>information</B> and tagging it for effective <B>retrieval</B>   b  searching strategy  how to enter the file to circumvent the <B>scanning</B> of nonrelevant material  and  c  file organization to make access to <B>information</B> efficient  for identification
47 Q0 2288 4 0.13898657 Lucene_47
 of an <B>information</B> <B>retrieval</B> <B>system</B> with a minimal <B>search</B> time and no redundant storage  some important theorems an <B>information</B> <B>retrieval</B> <B>system</B> based on the consecutive <B>retrieval</B> property is also discussed  cacm september  1972 ghosh  s  p  file organization  consecutive storage  consecutive <B>retrieval</B>  <B>information</B>file organization  the consecutive <B>retrieval</B> property the consecutive <B>retrieval</B> property
47 Q0 2711 5 0.12685406 Lucene_47
 be expressible as a function of the density of the object space  in particular  <B>retrieval</B> <B>performance</B>  s  automatic <B>information</B> <B>retrieval</B>  automatic indexing  content analysis  document space 3.71 3.73a vector space model for automatic indexing in a document <B>retrieval</B>  or other pattern matching  <B>search</B> requests   it appears that the best indexing  property  space is one where each entity lies
47 Q0 2990 6 0.12092758 Lucene_47
effective <B>information</B> <B>retrieval</B> using term accuracy the <B>performance</B> of <B>information</B> <B>retrieval</B> on measuring the <B>retrieval</B> <B>performance</B> of an average <B>user</B> query  unfortunately  formal proofs on optimizing the <B>performance</B> of a specific <B>user</B> query  the concept of query term accuracy is in troduced  1977 yu  c  t  salton  g  <B>information</B> <B>retrieval</B>  automatic indexing  content analysis  term accuracy
47 Q0 1506 7 0.11860069 Lucene_47
 inquiry  monitor was developed primarily to support non-numerical applications such as <B>retrieval</B> from very large files by means of a  dialogue  between a <B>system</B> <B>user</B> and a <B>retrieval</B> application  the monitor was designed so that it could work with a small computer  an ibm <B>system</B> 360 30   therefore facilities  and input-<B>output</B> were all scheduled  an unusual feature of the <B>system</B>
47 Q0 2979 8 0.11348515 Lucene_47
 and inductive inferences and form and <B>optimize</B> heuristic <B>rules</B>  and how machines can reach similar framework has been provided that <B>should</B> have a fairly wide range of applicability  the <B>models</B> of human judgment  choice  and <B>decision</B> making are incorporated in a large scale complex program research efforts concerning human <B>decision</B> making under uncertainly and risk and human problem solving
47 Q0 2451 9 0.11198123 Lucene_47
design of tree structures for efficient querying a standard <B>information</B> <B>retrieval</B> operation is to <B>determine</B> which records in a data collection satisfy a given query expressed in terms of data values between observed <B>performance</B> and that of an intuitively attractive ideal <B>search</B> procedure and <B>retrieval</B>  clustering  <B>search</B>  data structure  data management  query answering 3.62 3.74 ca730904
47 Q0 2970 10 0.10777513 Lucene_47
achieving specific accuracy in simulation <B>output</B> analysis this paper extends the <B>use</B> of the regenerative property of queueing systems in the analysis of simulation <B>output</B>  in particular  it describes a sequential estimation method which <B>when</B> used with the regenerative property allows results to be obtained with specified statistical accuracy  this method <B>includes</B> a test to check the normality
47 Q0 2516 11 0.106547736 Lucene_47
hierarchical storage in <B>information</B> <B>retrieval</B> a probabilistic analysis is employed to <B>determine</B> the effect of hierarchical storage organizations on <B>information</B> <B>retrieval</B> operations  the data storage  1973 salasin  j  <B>information</B> <B>retrieval</B>  hierarchical storage 3.70 3.72 3.73 3.74 3.79 3.90 6.20 data access times and increasing data storage capabilities  a <B>system</B> might  for example  consist
47 Q0 1937 12 0.103029214 Lucene_47
codas  a data display <B>system</B> codas  a customer oriented data <B>system</B>  is a <B>user</B>-oriented data <B>retrieval</B> and display <B>system</B>  the command language of the <B>system</B> provides the <B>user</B> with an easy means for specifying data <B>retrieval</B> and display requests  data is displayed as tables and graphs produced display  <B>information</B> <B>retrieval</B>  graphic display  command languages  report program generation  management
47 Q0 1359 13 0.1015544 Lucene_47
data filtering applied to <B>information</B> storage and <B>retrieval</B> applications manipulation of data strings is the most complex processing function in <B>information</B> storage and <B>retrieval</B> applications  data controlled by the <B>use</B> of procedural directives  the sequence of procedural directives is derived from a job assumed to be expressed in a <B>user</B>-oriented source language  each data string with the structured
47 Q0 2318 14 0.09870249 Lucene_47
the role of computer <B>system</B> <B>models</B> in <B>performance</B> evaluation <B>models</B> constitute a useful means of investigating computer <B>system</B> <B>performance</B>  this paper examines the interrelationships between <B>models</B> and other methods for evaluating the <B>performance</B> of computer systems and establishes circumstances  <B>performance</B>  analytic-<B>models</B>  simulation-<B>models</B>  <B>system</B>-<B>models</B> 2.43 2.44 6.2 8.3 ca720710 jb january
47 Q0 1194 15 0.097985916 Lucene_47
 repository  the main features of the <B>information</B> <B>system</B> are direct <B>user</B> access via on-line teletypewriter console  direct <B>user</B> access to all details of the <B>system</B> organization  unrestricted and expandable <B>search</B> vocabulary  <B>user</B> access through many facets of document indexing  and stochastic <B>search</B> lists are provided by the repository <B>system</B> for <B>retrieval</B> by concept coordination  cacm october  1965
47 Q0 2722 16 0.09760388 Lucene_47
 uses are given  cacm september  1975 bently  j  l  associative <B>retrieval</B>  binary <B>search</B> trees  key  attribute  <B>information</B> <B>retrieval</B> <B>system</B>  nearest neighbor queries  partial match queries  log n   and optimization  guarantees logarithmic <B>performance</B> of searches   o  n log n   <B>search</B>multidimensional binary <B>search</B> trees used for associative searching this paper develops
47 Q0 1527 17 0.09756053 Lucene_47
 for the automatic <B>retrieval</B> of certain segments of stored <B>information</B>  either explicitly or implicitly represented  through questions posed in natural language sentences  this procedure makes <B>use</B> of a sentence for this set of sentences  sentence recognition itself is a procedure for retrieving <B>information</B>  <B>when</B> and ungrammatical sentences of a natural language  it is possible to make <B>use</B> of a recognition device
47 Q0 2307 18 0.09668516 Lucene_47
 an interactive <B>user</B>-controlled <B>search</B> process  methods are described for an automatic query modification based on <B>user</B> needs  and for a continuous reorganization of the stored <B>information</B> as a function for <B>information</B> <B>retrieval</B> and for the control of dynamic library collections in which new items <B>search</B> and <B>retrieval</B>  iterative searching  mechanized library processing  collection growth
47 Q0 2046 19 0.094361424 Lucene_47
   a prompting service which supplies such <B>information</B> is not a satisfactory solution  activities of users at terminals and most application programs <B>should</B> remain unaffected <B>when</B> the internal representation of data is changed and even <B>when</B> some aspects of the external representation are changed  change traffic and natural growth in the types of stored <B>information</B>  existing noninferential  formatted data
47 Q0 1680 20 0.0934201 Lucene_47
  programming  and <B>information</B> <B>retrieval</B>  it is written in fortran iv  g  for the ibm <B>system</B> 360  model  of the operating <B>system</B>  language processors and compilers  simulation <B>models</B>  mathematical solution instruction  tutorial systems  programming  simulation  modeling  <B>information</B> <B>retrieval</B> operatinga general-purpose display processing and tutorial <B>system</B> adept  a display-expedited processing
47 Q0 1652 21 0.09185562 Lucene_47
 of the <B>information</B> channel linking the <B>system</B> and the <B>system</B> <B>user</B>  the code has direct application to problems in area such as <B>information</B> <B>retrieval</B>  document classification  computer-aided teaching and text editinga code for non-numeric <B>information</B> processing applications in online systems a code has been specifically designed to simplify the internal <B>information</B> processing operations within an online computer
47 Q0 1236 22 0.09072148 Lucene_47
the smart automatic document <B>retrieval</B> <B>system</B>-an illustration a fully automatic document <B>retrieval</B> <B>system</B> operating on the ibm 7094 is described  the <B>system</B> is characterized by the fact that several  and adapting the <B>search</B> strategy to the needs of individual users  the <B>system</B> is used not only can in general be relied upon to retrieve the wanted <B>information</B>  a typical <B>search</B> request is used
47 Q0 2947 23 0.08918504 Lucene_47
  <B>information</B> <B>retrieval</B>  text editing  minicomputers  crts time sharing  bibliographic <B>search</B> and <B>retrieval</B>sitar  an interactive text processing <B>system</B> for small computers sitar  a low-cost in teractive text handling and text analysis <B>system</B> for nontechnical users  is in many ways comparable to in teractive bibliographical <B>search</B> and <B>retrieval</B> systems  but has several additional features
47 Q0 3134 24 0.08713236 Lucene_47
the <B>use</B> of normal multiplication tables for <B>information</B> storage and <B>retrieval</B> this paper describes a method for the organization and <B>retrieval</B> of attribute based <B>information</B> systems  using the normal multiplication table as a directory for the <B>information</B> <B>system</B>  algorithms for the organization an d <B>retrieval</B> of <B>information</B> are described  this method is particularly suitable for queries
47 Q0 2278 25 0.08510191 Lucene_47
on foster s <B>information</B> storage and <B>retrieval</B> using avl trees cacm september  1972 tan  k  c  binary trees  <B>search</B> trees  <B>information</B> storage  <B>information</B> <B>retrieval</B> 3.70 3.73 3.74 ca720912 jb january 27  1978 4 10 pm 2278 5 2278 2278 5 2278 2278 5 2278 2455 5 2278 2278 6 2278 2388 6 2278
47 Q0 2882 26 0.08145408 Lucene_47
a stochastic evaluation model for database organization in data <B>retrieval</B> systems experimental work in the valuation of large scale data <B>retrieval</B> systems has been scarce due to its difficulty and prohibitive cost  this paper discusses a simulation model of a data <B>retrieval</B> <B>system</B> which has list  threaded list  cellular list  <B>information</B> <B>retrieval</B>  database organizations  query complexity
47 Q0 1908 27 0.079538554 Lucene_47
  <B>user</B> <B>performance</B>  man machine communications  cost effectiveness  on-line vs off-line <B>performance</B>  <B>decision</B>-making <B>performance</B>  <B>user</B> programmer behavior  programming experimental empirical studies would have resulted if the time-sharing users had stopped work <B>when</B> they reached a <B>performance</B> level to evaluate two such systems for what may well be the predominant <B>user</B> population within the next
47 Q0 2848 28 0.07893735 Lucene_47
synthesis of <B>decision</B> <B>rules</B> <B>decision</B> tables can be used as an effective tool during an interview of complete <B>decision</B> tables but rather sets of <B>decision</B> <B>rules</B>  the purpose of this paper is to provide a procedure for synthesizing the <B>decision</B> <B>rules</B> and thus provide an aid in developing a structure of complete <B>decision</B> tables  cacm july  1976 cheng  c  rabin  j  <B>decision</B> <B>rules</B>  <B>decision</B> tables
47 Q0 891 29 0.07787404 Lucene_47
everyman s <B>information</B> <B>retrieval</B> <B>system</B> the <B>information</B> <B>retrieval</B> problem whose solution  is quite general and is applicable to many different types of <B>retrieval</B> problems  further the method of solution makes it possible for many groups who have previously dismissed an <B>information</B> <B>retrieval</B>  for the present solution makes it possible to install an <B>information</B> <B>retrieval</B> program in less than
47 Q0 1651 30 0.07616234 Lucene_47
  the <B>user</B> may also  under very general requirements only  liberally <B>use</B> editorial comments throughout of input  <B>output</B> from a solution routine presently in <B>use</B>  and a skeleton flowchart of the input  for subsequent <B>use</B> either as a pedagogical device or for solving rather small lp problems  this latter  limited  <B>use</B> derives not at all from inherent limitations in the code itself  but from an efficiency
47 Q0 2258 31 0.0759927 Lucene_47
 addressing  direct access method  randomizing  random access file organization  file <B>search</B>  scatter storage  <B>information</B> <B>retrieval</B> 3.7 3.72 3.73 3.74 3.79 4.9 ca721111 jb january 27  1978 1 31 pm 2258 4additional results on key-to-address transform techniques  a fundamental <B>performance</B> study on large existing formatted files cacm november  1972 lum  v  y  yuen  p  s  t  hashing  hashing techniques
47 Q0 2370 32 0.07400839 Lucene_47
-controlled <B>scanning</B> and display <B>system</B> has been in operation at the ibm thomas j  watson research center for three years  the <B>system</B> <B>includes</B> two flying-spot scanners and a tv camera specially interfaced to a process control digital computer  dot-mode and vector displays  analog input and <B>output</B> facilities  and a variety of other experimental equipment  the <B>system</B> design and programming support
47 Q0 2092 33 0.073871896 Lucene_47
 these features in their operation are all described and illustrated  examples of the <B>system</B> s <B>performance</B>  it is shown that the <B>use</B> of semantic <B>information</B> in deductive question answering greatly facilitates of the protosynthex iii pro totype language processing <B>system</B> are described and exemplified in detail  the <B>system</B> is written in lisp 1.5 and operates on the q-32 time-sharing <B>system</B>  the <B>system</B> s data
47 Q0 3087 34 0.073672496 Lucene_47
an english language question answering <B>system</B> for a large relational database by typing requests of aircraft flight and maintenance data using a <B>system</B> called planes  the design and implementation of this <B>system</B> is described and illustrated with detailed examples of the operation of <B>system</B> components and examples of overall <B>system</B> operation  the language processing portion of the <B>system</B> uses
47 Q0 3041 35 0.072279535 Lucene_47
 <B>search</B>  heaps  balanced trees  zipf s law  <B>information</B> <B>retrieval</B> 3.74 5.25 5.39 ca781110 dh january is a binary <B>search</B> tree each node of which contains two key values-a node value which is a maximally frequent median of a node s descendents as its split value to force the <B>search</B> tree to be perfectly balanced  achieving both a space efficient representation of the tree and high <B>search</B> speed  unlike frequency
47 Q0 1627 36 0.072177686 Lucene_47
 of certain data management and <B>information</B> <B>retrieval</B> systems  the concept of level changing is introduced the <B>information</B> for efficient <B>use</B> of the multilevel store is presented  cacm march  1967 morenoff  eapplication of level changing to a multilevel storage organization a technique for organizing the devices of a computer storage <B>system</B> is described  this technique  called the multilevel store
47 Q0 2114 37 0.07202701 Lucene_47
a formal <B>system</B> for <B>information</B> <B>retrieval</B> from files a generalized file structure is provided  and record <B>retrieval</B> are defined and from which some of the frequently used file structures file structure  inverted file  index-sequential-file  multilist file  description  file <B>search</B>  directory <B>search</B>  serial processing of lists  prime keyword  parallel processing of lists 3.70 3.73 3.74
47 Q0 1489 38 0.07061761 Lucene_47
data  documentation and <B>decision</B> tables in business data processing systems  it is necessary to be able to define and document data  files  programs and <B>decision</B> <B>rules</B> in a way that adequately represents both  1  their changing <B>information</B> content  and  2  their continuous interaction  tabular description makes this possible  being notably objective  through and economical in cost and time <B>when</B>
47 Q0 440 39 0.070486665 Lucene_47
 and other personal particulars  the underlying problem is that of making nearly maximum <B>use</B> of items of identifying <B>information</B> that are individually unreliable but that may collectively be of considerable discriminating power  <B>rules</B> that can be applied generally to name <B>retrieval</B> systems have been for demographic research purposes  these <B>rules</B> are described  and the ways in which <B>information</B>
47 Q0 2561 40 0.069389425 Lucene_47
a heuristic approach to inductive inference in fact <B>retrieval</B> systems heuristic procedures are presented which have been developed to perform inferences by generalizing from available <B>information</B>  the procedures make <B>use</B> of a similarity structure which is imposed on the data base using nonnumerical clustering algorithms  they are implemented in a model fact <B>retrieval</B> <B>system</B> which uses a formal
47 Q0 2547 41 0.067850664 Lucene_47
representation of contours ad regions for efficient computer <B>search</B> a novel computer-searchable value  an application of this representation to handling terrain <B>information</B> illustrates its utility  the algebraic properties of the data structure make it computationally easy to <B>determine</B> whether the closed boundary representing the union or intersection of two closed boundaries  and <B>determine</B>
47 Q0 239 42 0.0675975 Lucene_47
inefficiency of the <B>use</B> of boolean functions for <B>information</B> <B>retrieval</B> systems cacm december  1961 verhoeff  j  goffman  w  belzer  j  ca611211 jb march 15  1978 10 10 pm 239 5 239 239 5 239 239 5 239
47 Q0 944 43 0.06720644 Lucene_47
storage and <B>search</B> properties of a tree-organized memory <B>system</B> a memory with list properties  1  may be used to construct numeric  alphabetic or alphanumeric trees  such trees have <B>information</B> storage and <B>retrieval</B> properties applicable to problems involving large quantities of data or to problems where the quantity  word length and distribution of stored <B>information</B> is not known a priori
47 Q0 1936 44 0.066519536 Lucene_47
 level of the tree  cacm february  1969 patt  y  n  <B>information</B> <B>retrieval</B>  file searching  treevariable length tree structures having minimum average <B>search</B> time sussenguth suggests in a paper  1963  that a file <B>should</B> be organized as a doubly-chained tree structure if it is necessary both to <B>search</B> and to update frequently  such a structure provides a compromise between the fast <B>search</B> slow
47 Q0 1514 45 0.06651631 Lucene_47
 of an adjustment statistic  an example evaluates the gain parameters for a typical <B>information</B> <B>retrieval</B> <B>system</B>  cacm november  1967 shumway  r  h  ca671106 jb february 26  1978 2 59 pm 1514 5 1514 1514on the expected gain from adjust ing matched term <B>retrieval</B> systems a file adjustment procedure based on maximizing the bayes expected gain proposed for matched term <B>retrieval</B> systems  the expected
47 Q0 2070 46 0.0645725 Lucene_47
a formal <B>system</B> for <B>information</B> <B>retrieval</B> from files cacm april  1970 hsiao  d  harary  f  ca700414 jb february 13  1978 2 37 pm 2070 5 2070 2070 5 2070 2070 5 2070
47 Q0 275 47 0.0645725 Lucene_47
dynamic storage allocation for an <B>information</B> <B>retrieval</B> <B>system</B> cacm october  1961 sams  b  h  ca611006 jb march 16  1978 12 58 pm 275 5 275 275 5 275 275 5 275
47 Q0 2314 48 0.06272241 Lucene_47
  as is the duality of data <B>retrieval</B> and function evaluation  syntax directed input and <B>output</B> of data wouldrequirements for advanced programming systems for list processing list processing systems <B>should</B> stores  this paper presents an overview of a number of <B>system</B> features which the author feels are important to improve the productivity of programmers working in such domains  a <B>system</B> view it taken
47 Q0 2976 49 0.062141873 Lucene_47
approximating block accesses in database organizations cacm april  1977 yao  s  b  database  inverted file organization  database <B>performance</B> and measurement  <B>information</B> <B>retrieval</B>  query answering 3.70 3.72 4.33 ca770406 jb december 29  1977 5 06 am 2976 4 2976 2976 4 2976 2976 4 2976 2688 5 2976 2765 5 2976 2882 5 2976 2976 5 2976 2976 5 2976 2976 5 2976
47 Q0 1695 50 0.06197854 Lucene_47
plexus-an on-line <B>system</B> for modeling neural networks a description is presented of plexus  a <B>system</B> which enables a <B>user</B> to construct and specify a neural network  to analyze the <B>output</B> data produced by the network  and to store and retrieve networks and data from a library  the <B>system</B>  operated entirely from a digital display unit  interacts directly with the <B>user</B> and permits easy and rapid
47 Q0 3095 51 0.0611845 Lucene_47
 <B>retrieval</B>  range conditions  binary <B>search</B> tree  tree traversal  selective traversal 3.74 5.24 5.25a selective traversal algorithm for binary <B>search</B> trees the problem of selecting data items from a binary <B>search</B> tree according to a list of range conditions is considered  the process of visiting node in the tree  the algorithm is particularly useful and efficient <B>when</B> examination of data
47 Q0 1681 52 0.060252685 Lucene_47
easy english a language for <B>information</B> <B>retrieval</B> through a remote typewriter console easy english into an equivalent query expressed in the <B>retrieval</B> <B>system</B> s original symbolic command language  which is briefly  on-line searching  remote console communication  <B>information</B> <B>retrieval</B>  man-machine communication  remote terminal communication  translator  document <B>retrieval</B>  conversational mode  <B>information</B>
47 Q0 2598 53 0.05988355 Lucene_47
extending the <B>information</B> theory approach to converting limited-entry <B>decision</B> tables to computer programs this paper modifies an earlier algorithm for converting <B>decision</B> tables into flowcharts which minimize subsequent execution time <B>when</B> compiled into a computer program  the algorithms to be added to the <B>decision</B> table  finally  the <B>information</B> algorithm is compared with an algorithm
47 Q0 1747 54 0.059767906 Lucene_47
 <B>system</B> <B>should</B> adopt explicit criteria for accepting or rejecting proposed <B>system</B> features  three reproducibility of <B>output</B>  these criteria imply that a <B>user</B> can  if he desires  either know or control all the influences affecting the content and extent of his computer s <B>output</B>  to define the scope systems  operating systems design  multiprogramming  multiprogrammed systems  multiprogrammed <B>system</B>
47 Q0 1935 55 0.059650525 Lucene_47
randomized binary <B>search</B> technique a mathematical model is developed for the mean and variance of the number of trials to recover a given document in a randomly received list of files  the <B>search</B> method described is binary in nature and offers new potential for <B>information</B> <B>retrieval</B> systems  cacm <B>retrieval</B>  mathematical model  partitioning  probabilistic method  random sequencing  <B>search</B>
47 Q0 2372 56 0.05951475 Lucene_47
on the implementation of security measures in <B>information</B> systems the security of an <B>information</B> <B>system</B> may be represented by a model matrix whose elements are <B>decision</B> <B>rules</B> and whose row and column <B>decision</B> <B>rules</B> enables one to perform much of the checking of security only once at translation time existing systems  and serves as a framework for a proposal for general security <B>system</B> implementation
47 Q0 2978 57 0.058843892 Lucene_47
analysis of design alternatives for virtual memory indexes a class of index structures for <B>use</B> are analyzed  these alternatives include a choice of <B>search</B> strategy  whether or not pages of crossing a page boundary in the index structure  formulas for the <B>retrieval</B> costs for possible the <B>retrieval</B> costs of the alternatives  qualitative comparisons of the main tenance costs
47 Q0 1976 58 0.058479913 Lucene_47
 november  1970 lum  v  y  file organization  secondary index files  inverted files  <B>information</B> <B>retrieval</B>multi-attribute <B>retrieval</B> with combined indexes in this paper a file organization scheme designed to replace the <B>use</B> of the popular secondary index filing scheme  or inverted files on secondary key fields  is described  through the <B>use</B> of redundancy and storing keys  or access numbers
47 Q0 2176 59 0.057650425 Lucene_47
 which minimizes the number of input-<B>output</B> operations for a given order of merge  <B>when</B> sorting on movable arm disks  the number of seeks is equal to the number of input-<B>output</B> operations  and the seek of merge sorting on movable arm disks <B>when</B> the input data are not random  and that this <B>output</B> buffer more conventional allocation  this analysis makes <B>use</B> of a particular distribution function
47 Q0 2631 60 0.057553884 Lucene_47
an <B>information</B>-theoretic approach to text searching in direct access systems using direct access computer files of bibliographic <B>information</B>  an attempt is made to overcome one of the problems often associated with <B>information</B> <B>retrieval</B>  namely  the maintenance and <B>use</B> of large dictionaries  file organization  direct access  <B>information</B> <B>retrieval</B>  character string  bit vector 3.42 3.70 3.73
47 Q0 2535 61 0.056732945 Lucene_47
 a <B>user</B> to the computer and  consequently  affects the <B>performance</B> of a time-shared computer-communications <B>system</B>  it is concluded that while  for certain values of <B>system</B> parameters so that there may be little or no change in the computer-communications <B>system</B> <B>performance</B>the effects of multiplexing on a computer-communications <B>system</B> a study is made of the way in which
47 Q0 2765 62 0.055616666 Lucene_47
 to <B>determine</B> the optimum set of index keys  cacm may  1975 cardenas  a  f  data base architecture  inverted file organization  data base <B>performance</B> and measurement  secondary index organization  <B>information</B>analysis and <B>performance</B> of inverted data base structures the need to envision and architecture timing and blocking specifications identified as having a first-order effect on <B>performance</B>
47 Q0 1271 63 0.05498834 Lucene_47
secondary key <B>retrieval</B> using an ibm 7090-1301 <B>system</B> the secondary key <B>retrieval</B> method involves the preparation of secondary storage lists from primary data records  <B>search</B> requests are satisfied by logical operations on appropriate lists  producing a complete set of addresses of primary records relevant to the request  experimental results are presented and a comparative analysis is given
47 Q0 2519 64 0.054776225 Lucene_47
on the problem of communicating complex <B>information</B> the nature of the difficulty involved in communicating mathematical results between scientists using a computer based <B>information</B> <B>retrieval</B> <B>system</B> is examined  the problem is analyzed in terms of psychological and <B>information</B>-processing processes of the structure inherent in the <B>information</B> we are communicating  and a sophisticated interactive <B>system</B>
47 Q0 2967 65 0.05469242 Lucene_47
-addressable memory  graphics  <B>information</B> <B>retrieval</B>  data structures  software evaluation  hardwarea comparison of hardware and software associative memories in the context of computer graphics the associative processing of line drawings  apld  <B>system</B> utilizes a hardware associative memory of hardware associative memory technology  namely input <B>output</B> and cost effectiveness  are also
47 Q0 2846 66 0.05459703 Lucene_47
  to be used in <B>information</B> <B>retrieval</B> systems  it has the same underlying m-ary tree structure as a trie  in the analysis part of the paper it will be shown that for a collection of n keys the <B>retrieval</B> time  measured of the order n  m log2 n  bits  this improvement in storage requirements and <B>retrieval</B> time is achieved  first the c-trie is analyzed as a data structure  and then several methods of its <B>use</B>
47 Q0 1519 67 0.054564614 Lucene_47
 and off line jobs <B>use</B> a common command language  the <B>system</B> <B>includes</B> a multilevel device-independent supervisor  ibsys  or gecos   or a multiaccess <B>system</B>  resembling  to the <B>user</B>  ctss or multics   or bothgeorge 3-a general purpose time sharing and operating <B>system</B> an operating <B>system</B> is described which of online console users while at the same time running several off line  background  jobs  the <B>system</B>
47 Q0 1830 68 0.054470856 Lucene_47
<B>retrieval</B> times for a packed direct access inverted file cacm october  1969 bayes  a  j  <B>information</B> <B>retrieval</B>  direct access memory  data base  inverted list 3.70 4.41 ca691016 jb february 15  1978 1 27 pm 1830 5 1830 1830 5 1830 1830 5 1830
47 Q0 1705 69 0.054256976 Lucene_47
 in the form of equivalent algol statements is also provided <B>when</B> <B>use</B> is made of the subset oti  otr  otb  ota  the berkeley style of providing <B>information</B> on the form of <B>output</B> using prior calls of procedures such as real format is defined  a <B>use</B> of the parameter outchannel to provide <B>information</B>a set of basic input-<B>output</B> procedures  algorithm 335  15   by means of the primitives in symbol
47 Q0 1855 70 0.054242283 Lucene_47
 and for avoiding the need for dynamic application of certain transformational <B>rules</B> are described  a number of examples of <B>output</B> produced by the program are given  the <B>output</B> <B>includes</B> timing <B>information</B>  cacm august  1969 dewar  h  bratley  p  syntactic analysis  language processing  language
47 Q0 1700 71 0.054203596 Lucene_47
  idea from punched card <B>information</B> <B>retrieval</B> methods has been mated with the idea of superimposed punching to produce a programming technique which cuts computer run time in half on a test <B>search</B> of 33,000 subject index entries  a <B>search</B> program using the device has been operational since late coding  natural language searching text searching  <B>information</B> compaction  computer <B>search</B> technique
47 Q0 2984 72 0.053221274 Lucene_47
cost utilization  a measure of <B>system</B> <B>performance</B> a method is presented for evaluating computer <B>system</B> <B>performance</B> in terms of a cost utilization factor and a measure of imbalance  these coefficients indicate the extent to which the total <B>system</B> cost is effectively utilized  the method <B>includes</B> a technique for the visual representation of <B>system</B> <B>performance</B>  cacm march  1977 borovits  i  ein-dor
47 Q0 1725 73 0.053177807 Lucene_47
  ordered lists  ordered <B>information</B> <B>retrieval</B>  ordered <B>retrieval</B> theorem  column digit values  digita simple proof of lewin s ordered-<B>retrieval</B> theorem for associative memories an efficient method of ordered <B>retrieval</B> of binary words from an associative memory  as described by lewin  is based on the <B>use</B> of special readout circuits which indicate the digit values present in the individual digit
47 Q0 3070 74 0.05309045 Lucene_47
  and a central-server queueing network <B>models</B> the <B>use</B> of <B>system</B> processors  the accuracy and efficiency to produce efficient yet accurate <B>system</B> <B>models</B>  in an example based on a simple hypothetical  h  <B>performance</B> evaluation  simulation  queueing network <B>models</B>  central server model 4.32 4.35 8.1hybrid simulation <B>models</B> of computer systems this paper describes the structure and operation
47 Q0 1307 75 0.05268129 Lucene_47
 to ease the <B>use</B> of a data processing <B>system</B> by a person  in particular  a scientist  who  it is essential that he be aided in composing commands to the computer  in the <B>system</B> described  the <B>user</B> required by pointing with the light pen  by <B>use</B> of a small unordered set of rewriting <B>rules</B> applied to the <B>system</B>  he does not have to learn or remember the grammar  the program restricts the <B>user</B> severely
47 Q0 2319 76 0.0526538 Lucene_47
operating <B>system</B> <B>performance</B> an overview of the current and future positions with respect to operating <B>system</B> <B>performance</B> is given  while a great deal of <B>information</B> and a large number of <B>models</B> be developed to be able to analyze and design the <B>performance</B> aspects of an operating <B>system</B> although  c  computer <B>system</B>  operating <B>system</B>  <B>performance</B> evaluation  <B>performance</B> measurement  measurement
47 Q0 2832 77 0.05249655 Lucene_47
faster <B>retrieval</B> from context trees  corrigendum  context trees provide a convenient way of storing improves on previous context tree <B>retrieval</B> algorithms  it is based on the observation that in typical <B>retrieval</B>  a <B>retrieval</B> is started from the position of the previous <B>retrieval</B> and auxiliary structures are built up to make the <B>search</B> rapid  algorithms for addition and deletion of data and for garbage
47 Q0 1115 78 0.052322425 Lucene_47
randomized binary searching with tree structure a more efficient method of using tree structures is proposed  which utilizers both plus and minus branches in the <B>search</B> path  very significant gains result <B>when</B> the <B>search</B> key <B>includes</B> alphabetic characters  cacm march  1964 clampett jr   h  a  ca640317 jb march 10  1978 2 30 am 1115 5 1115 1115 5 1115 1115 5 1115 1935 5 1115 849 6 1115 1115 6 1115
47 Q0 1415 79 0.052020594 Lucene_47
 immediate prospects for improving the <B>performance</B> of automatic message <B>retrieval</B> systems  they may conducting automatic <B>retrieval</B> of natural language messages  to explore the prospects of such a step to operate on the tree structure <B>output</B> of the analyzer  and the microsentences that were produced
47 Q0 1827 80 0.05188212 Lucene_47
 of monitoring operating <B>system</B> and <B>user</B> program behavior and <B>performance</B>  the overall structure<B>performance</B> monitoring in a time-sharing <B>system</B> a software measurement facility which is part for off-line processing  events in <B>user</B> programs which are unrelated to <B>system</B> actions are recorded  multiprogramming <B>performance</B>  software measurement  time-sharing <B>performance</B>  <B>system</B> evaluation
47 Q0 3168 81 0.051658 Lucene_47
comment on  an optimal evaluation of boolean expressions in an online query <B>system</B>   cacm october  1979 laird  p  query  boolean expression  <B>information</B> <B>retrieval</B>  file organization 3.53.70 3.73 3.74 ca791001 db january 16  1980 4 50 pm 3168 4 3168 3168 4 3168 3169 4 3168 2965 5 3168 3002 5 3168 3168 5 3168 3168 5 3168 3168 5 3168
47 Q0 3169 82 0.051658 Lucene_47
note on  an optimal evaluation of boolean expressions in an online query <B>system</B>   cacm october  1979 gudes  e  hoffman  a  query  boolean expression  optimal evaluation  <B>information</B> <B>retrieval</B> 3.50 3.70 3.74 ca791002 db january 16  1980 4 52 pm 3168 4 3169 3169 4 3169 2965 5 3169 3169 5 3169 3169 5 3169 3169 5 3169
47 Q0 1456 83 0.05155549 Lucene_47
storage and <B>retrieval</B> of aspects of meaning in directed graph structures an experimental <B>system</B> english word the syntactic <B>information</B>  definitional material  and references to the contexts in which vehicle for research on the logic of question answering  examples of methods of inputting <B>information</B>  they are inadequate vehicles for language processing on any large scale-at east until they can <B>use</B>
47 Q0 1457 84 0.051324286 Lucene_47
data manipulation and programming problems in automatic <B>information</B> <B>retrieval</B> automatic <B>information</B> <B>retrieval</B> programs require the manipulation of a variety of different data structures  including are made for the design of programming facilities to aid in <B>information</B> <B>retrieval</B>  cacm march  1966 in automatic <B>information</B> systems are first briefly reviewed  a variety of data representations
47 Q0 2968 85 0.050519183 Lucene_47
  j  l  schwab  b  binary <B>search</B> trees  avl trees  weight-balanced trees  path length  analysis of algorithms  <B>information</B> storage and <B>retrieval</B> 3.7 3.72 3.74 5.31 ca770504 jb december 29  1977 2 16 am and extensions   weight-balance  i e  bb and wb   and total restructuring-for building balanced binary <B>search</B> are given for an efficient <B>use</B> of the methods  if insertion and subsequent queries are the only
47 Q0 1412 86 0.050431468 Lucene_47
the banking <B>information</B> <B>system</B> concept most large commercial banks have progressed to the point of data base approach toward a banking <B>information</B> <B>system</B>  the banking <B>information</B> <B>system</B> now serves and providing more complex combinations of <B>information</B> for management <B>use</B>  both kinds of processing draw and customer may be discerned  in introducing the banking <B>information</B> <B>system</B> concept  a gradual
47 Q0 2033 87 0.050018623 Lucene_47
 of space required to contain the hash-coded <B>information</B> from that associated with conventional methods conventional methods  in such applications  it is envisaged that overall <B>performance</B> could be improved by using a smaller core resident hash area in conjunction with the new methods and  <B>when</B> necessary  scatter storage  searching  storage layout  <B>retrieval</B> trade-offs  <B>retrieval</B> efficiency  storage
47 Q0 651 88 0.049858157 Lucene_47
a survey of languages and systems for <B>information</B> <B>retrieval</B> cacm january  1962 grems  m  ca620108 jb march 20  1978 4 36 pm 651 5 651 651 5 651 651 5 651
47 Q0 2580 89 0.049495324 Lucene_47
 to the method is a set of productions together with sets of applicability <B>rules</B> and weight <B>rules</B> which operate on the productions deciding <B>when</B> and to what extent they are available for <B>use</B>  several scientists  cacm november  1974 rader  g  m  artificial intelligence  heuristic programming  <B>models</B>
47 Q0 2198 90 0.049303062 Lucene_47
 of transactions initiated from terminals by parametric users-the lowest level of <B>user</B>  the <B>use</B> of cobol languages  data structures  storage structures  <B>information</B> <B>retrieval</B>  transaction processing 3.5 independence and binding the four <B>user</B> levels are identified and described  technical problems facing future
47 Q0 2394 91 0.049134538 Lucene_47
ordering  -f  -f  -f     -f x       <B>when</B> f x  is positive monotonic cacm january  1972 salzer  h  e  ordering  storage  <B>retrieval</B>  positive functions  monotonic functions  increasing functions  decreasing function  binary <B>system</B>  chebyshev zeros  square rots  continued fractions 5.40 ca720109 jb february 1  1978 9 05 am 2394 4 2394 2394 4 2394 1872 5 2394 1903 5 2394 2394 5 2394 2394 5 2394 2394
47 Q0 2622 92 0.04895919 Lucene_47
a <B>user</B> authentication scheme not requiring secrecy in the computer in many computer operating systems a <B>user</B> authenticates himself by entering a secret password known solely to himself and the <B>system</B>  the <B>system</B> compares this password with one recorded in a password table which is available to only to the table  but he can penetrate the <B>system</B> only if he can invert h to <B>determine</B> an input that produces
47 Q0 2293 93 0.04893212 Lucene_47
comment on average binary <B>search</B> length cacm august  1972 jones  p  r  searching  binary searching  record <B>retrieval</B> 3.74 ca720809 jb january 30  1978 9 26 am 2293 4 2293 2157 5 2293 2293 5 2293 2293 5 2293 2293 5 2293
47 Q0 2991 94 0.048614215 Lucene_47
 storage  <B>search</B> method  collisions  synonyms  clustering  <B>information</B> <B>retrieval</B>  open addressing in the key set  shadow buckets in the key <B>search</B> sequence reduce the effect of nonuniformity in file loading of these techniques lead to improved file <B>performance</B> for secondary storage devices  as shown by empirical
47 Q0 2889 95 0.048366517 Lucene_47
 trees  <B>information</B> storage and <B>retrieval</B>  searching 3.7 3.72 3.74 4.49 5.39 ca760104 jb january 5  1978<B>performance</B> of height-balanced trees this paper presents the results of simulations that investigate the <B>performance</B> of height-balanced  hb k   trees  it is shown that the only statistic of hb 1  trees  avl trees  that is a function of the size of the tree is the time to <B>search</B> for an item
47 Q0 2139 96 0.048321452 Lucene_47
  substring  hashing  subset  signature  <B>information</B> compression  <B>information</B> <B>retrieval</B>  searching 3.74implementation of the substring test by hashing a technique is described for implementing the test which determines if one string is a substring of another  <B>when</B> there is low probability that the test will be satisfied  it is shown how the operation can be speeded up considerably if it is preceded
47 Q0 2988 97 0.0480733 Lucene_47
  <B>system</B> <B>performance</B>  queueing network <B>models</B>  in teractive computer systems 4.32 ca770304 jb december network <B>models</B> of computer systems  empirical analyses and analytic studies based on applying this methodology to an actual multiaccess in teractive <B>system</B> are reported  relations between workload variables such as memory requirement distribution and job swap time  and <B>performance</B> measures
47 Q0 1267 98 0.048031874 Lucene_47
<B>performance</B> of systems used for data transmission transfer rate of <B>information</B> bits -an asa tutorial standard <B>information</B> thruput as a characteristic of systems <B>performance</B> is discussed  this discussion <B>includes</B> the pertinent aspects of <B>information</B> transfer  of determination of transfer rate that a <B>performance</B> characteristic involving <B>information</B> rate can best be expressed as the trib in conjunction
47 Q0 3088 99 0.047604438 Lucene_47
 processors  main storage partitions and <B>user</B> tasks  examples are provided to illustrate the <B>use</B>  buffering  input <B>output</B>  overlap  <B>performance</B>  resource allocation  throughput  timesharing 3.72 4.30
47 Q0 1698 100 0.047519743 Lucene_47
  cacm september  1968 denning  p  j  statistical <B>models</B> for input-<B>output</B>  operating <B>system</B> designa statistical model for console behavior in multiuser computers the ability of a computer <B>system</B> computations efficiently  it is quite difficult to characterize a particular <B>user</B>  but rather easy to characterize the entire <B>user</B> community  based on the properties of this community we have postulated
*************Query 48*************************

48 Q0 409 1 0.19911161 Lucene_47
 and instances of large and complex <B>data</B> sets  as well as <B>algorithms</B> defined on these <B>data</B> sets  both <B>data</B> of distinct <B>data</B> descriptions and the content and <B>use</B> of such descriptions are discussed in some detail  cacm january  1961 cheatham jr   t  <B>e</B>  collins jr   <B>g</B>  o  leonard  <B>g</B>  f  ca610105 jb march 17  1978cl-1  an environment for a compiler a flexible  large-scale <B>programming</B> system to facilitate
48 Q0 2142 2 0.19457515 Lucene_47
 and medicine  <B>e</B> <B>g</B>  in electron microscopy and x-ray photography  in which it is desirable to estimate determined and the problem is to find the  most representative  picture  three <B>algorithms</B> are described  all using monte carlo <B>methods</B>  which were designed to solve this problem  the <B>algorithms</B>  image processing  <B>linear</B> <B>programming</B>  mathematical <B>programming</B>  monte carlo techniques
48 Q0 1066 3 0.18145606 Lucene_47
 in terms of basic <B>data</B> to <B>linear</B> <B>programming</B> matrix coefficients  <B>data</B> transmission for direct <B>computer</B>growing applications of <B>linear</B> <B>programming</B> <B>use</B> of <B>linear</B> <B>programming</B> models has grown so to the underlying <B>principles</B> upon which future <B>linear</B> <B>programming</B> systems must be based change  it no longer is adequate merely to reduce a mathematical <B>algorithm</B>  i <B>e</B>  the simplex method
48 Q0 2646 4 0.17354546 Lucene_47
 input and output of blocks of <B>data</B> to buffer and primary memories for a mono-programmed <B>computer</B> behavior  while the <B>methods</B> are not restricted to <B>numerical</B> computations  matrix and partial differential equation <B>methods</B> are typical examples of their <B>use</B>  it is shown that latency may be masked of the <B>data</B> base being considered  cacm may  1974 gold  d  <B>e</B>  kuck  d  j  buffer memory  memory hierarchy
48 Q0 1651 5 0.16092546 Lucene_47
an interpretive input routine for <B>linear</B> <B>programming</B> in this descriptive article an input code is presented which greatly simplifies <B>data</B> input to any <B>linear</B> <B>programming</B> solution routine  for subsequent <B>use</B> either as a pedagogical device or for solving rather small lp problems  this latter  limited the input deck as an aid in identification  <B>e</B> <B>g</B>   of row constraints  the article <B>includes</B> examples
48 Q0 2314 6 0.156719 Lucene_47
 facilitate <B>use</B> of complex <B>data</B> stores  cacm july  1972 bobrow  d  <B>g</B>  list processing  <B>programming</B> languages  design of <B>programming</B> languages  interactive systems  control <B>structures</B>  <B>data</B> <B>structures</B>  programmable control <B>structures</B>  and sophisticated <B>data</B> communication mechanisms  interactiverequirements for advanced <B>programming</B> systems for list processing list processing systems should
48 Q0 2968 7 0.13105391 Lucene_47
 trees are compared  the criteria for comparison encompass theoretical aspects  <B>e</B> <B>g</B>  path lengths  and implementation independent and machine <B>algorithm</B>-dependent measures  <B>e</B> <B>g</B>  run time   a detaileda comparison of tree-balancing <B>algorithms</B> several <B>algorithms</B>-height-balance  i <B>e</B>  avl are given for an efficient <B>use</B> of the <B>methods</B>  if insertion and subsequent queries are the only
48 Q0 2701 8 0.1297357 Lucene_47
a fast and usually <B>linear</B> <B>algorithm</B> for global flow analysis  abstract only--complete paper jacm  the <B>algorithm</B> is shown to treat a very general class of function spaces  for a graph of <B>e</B> edges  the <B>algorithm</B> has a worst case time bound of o <B>e</B> log <B>e</B>  function operations  it is also shown that in <B>programming</B> terms  the number of operations is proportional to <B>e</B> plus the number of exits from program loops
48 Q0 2433 9 0.12836947 Lucene_47
 provides a means of expressing <B>data</B> and control <B>structures</B> suitable for exploiting illiac iv parallelism of these features for <B>data</B> layout and <B>algorithm</B> structure are discussed  and the conclusion is drawn that <B>data</B> method of <B>data</B> allocation is then presented  language <B>structures</B> to utilize this storage method and express parallel <B>algorithms</B> are described  cacm october  1973 millstein  r  <B>e</B>  array processing
48 Q0 1433 10 0.12719932 Lucene_47
a note on <B>linear</B> <B>programming</B> <B>algorithm</B> design  a combinatorial problem as <B>linear</B> <B>programming</B> models grow bigger and bigger in size  much actual <B>data</B> that must be memorized is often put on magnetic tape or disk  and consequently there is an improportionality fast rise in the consumption of <B>computer</B> timeo cut down this expense  an ever increasing effort is made to design more efficient <B>algorithms</B>
48 Q0 2310 11 0.11902173 Lucene_47
 are necessary  <B>e</B> <B>g</B>  analyzing literature or teaching a student to write a composition  the <B>computer</B> canlanguage analysis in the humanities the <B>use</B> of the <B>computer</B> in the language-oriented humanities as desirable  the implications of the <B>computer</B> for a  <B>science</B>  of the humanities-a <B>science</B> entailing gathering <B>data</B> for the construction and testing of models-are neither widely recognized nor accepted
48 Q0 1769 12 0.118385755 Lucene_47
  <B>computer</B>-aided design  problem-oriented languages  <B>data</B> communication  education  <B>computer</B> <B>science</B> of human work activity changes from production to service  <B>computer</B> developments in hardware  <B>programming</B>  time-sharing  education  <B>data</B> communication  and displays are judged by how effectively by nine principal barriers  geography  cost  problem <B>complexity</B>  man-machine communication
48 Q0 2324 13 0.11807572 Lucene_47
management <B>science</B>  a view from nonlinear <B>programming</B> a brief history of integer and continuous nonlinear <B>programming</B> is presented as well as the current obstacles to practical <B>use</B>  <B>linear</B> <B>programming</B>  mathematical <B>programming</B>  nonlinear <B>programming</B>  quadratic <B>programming</B>  management <B>science</B>  operations research  <B>algorithms</B> 5.41 8.3 ca720704 jb january 30  1978 3 14 pm 2324 5 2324
48 Q0 2226 14 0.113383204 Lucene_47
  with two <B>algorithms</B> for the zero-one <B>linear</B> <B>programming</B> problem  an error in gue s paper is corrected  the utility of one of the <B>algorithms</B> as a suboptimizer is indicated  cacm january  1971 proll  l  <B>g</B>  operations research  integer <B>programming</B>  zero-one variables  <B>algorithms</B> 5.39 5.41 ca710108 jbfurther evidence for the analysis of <B>algorithms</B> for the zero-one <B>programming</B> problem the purpose
48 Q0 2273 15 0.111402564 Lucene_47
conversion of decision tables by rule mask method without rule mask two <B>algorithms</B> for <B>generating</B> <B>computer</B> programs from decision tables are described  the <B>algorithms</B> allow handling limited entry rules which are not applicable  <B>algorithms</B> 1 and 2  or conditions which are already tested  <B>algorithm</B> 2   the new <B>algorithms</B> combine to a certain degree the advantages of mask <B>methods</B> with those of tree
48 Q0 2402 16 0.11127152 Lucene_47
 building  i <B>e</B>  the <B>use</B> of chemical information to frame  structural hypotheses  which can computationally be tested and refined by reference to the experimental <B>data</B>  application of standard pattern of interactive  three-dimensional  <B>computer</B> graphics systems coupled to powerful digital computers encourages the development of <B>algorithms</B> adapted to this environment  pictorial pattern recognition
48 Q0 2877 17 0.11014209 Lucene_47
 an  interval  ordered edge listing <B>data</B> structure and handles reducible and irreducible graphs indistinguishably  cacm march  1976 allen  j  <B>e</B>  cocke  j  program <B>optimization</B>  <B>data</B> flow analysis  flow graphsa program <B>data</B> flow analysis procedure the global <B>data</B> relationships in a program can be exposed and codified by the static analysis <B>methods</B> described in this paper  a procedure is given which
48 Q0 1722 18 0.11005356 Lucene_47
<B>methods</B> of convergence improvement for some improper integrals in the <B>numerical</B> integration schemes can often be improved by <B>use</B> of recent advances in the theory of nonlinear transformations  however  for several important integrals  <B>e</B> <B>g</B>  integrals whose integrands are rational polynomials  these transformations fail to yield much improvement  in this paper  several <B>methods</B> of convergence
48 Q0 2695 19 0.10391526 Lucene_47
 is an important computational tool in <B>numerical</B> <B>linear</B> algebra  consider the class of sparse matrices which of increments are <B>linear</B> in n  this compares very favorably with standard transformation <B>methods</B>  otherwise  early rejection will occur  cacm january  1974 gibbs  n  <B>e</B>  poole  w  <B>g</B>  jr  tridiagonal compared with standard transformations  a graph theoretic <B>algorithm</B> which examines an arbitrary n x n
48 Q0 1654 20 0.10269417 Lucene_47
a university s educational program in <B>computer</B> <B>science</B> after a review of the power of contemporary computers  <B>computer</B> <B>science</B> is defined in several ways  the objectives of <B>computer</B> <B>science</B> education through a <B>computer</B> <B>science</B> department  the program at stanford university is reviewed as an example  the appendices include syllabic of ph  qualifying examinations for stanford s <B>computer</B> <B>science</B>
48 Q0 3130 21 0.10248383 Lucene_47
 component and other material is presented  <B>issues</B> related to undergraduate <B>computer</B> <B>science</B> educationcurriculum  78 - recommendations for the undergraduate program in <B>computer</B> <B>science</B> contained in this report are the recommendations for the undergraduate degree program in <B>computer</B> <B>science</B> of the curriculum committee on <B>computer</B> <B>science</B>  c3s  of the association for computing machinery  acm
48 Q0 2665 22 0.10099858 Lucene_47
copying list <B>structures</B> using bounded workspace two new <B>algorithms</B> are presented for list structure is necessary to achieve <B>linear</B> speed  a variation of the second <B>algorithm</B> solves an open problem cell tag bits the task can be performed in time n 2  the second <B>algorithm</B>  assuming one tag bit in each cell  delivers attractive practical speed  any noncyclic structure is copied in <B>linear</B> speed
48 Q0 2850 23 0.09978085 Lucene_47
symbolic execution and program testing this paper describes the symbolic execution of programs  instead of supplying the normal inputs to a program  <B>e</B> <B>g</B>  numbers  one supplies symbols representing programs written in a simple pl i style <B>programming</B> language  it <B>includes</B> many standard debugging features formulas over the input symbols  the difficult  yet interesting <B>issues</B> arise during the symbolic
48 Q0 3165 24 0.098822385 Lucene_47
 illustrated by the outline of <B>algorithms</B> for area computation and point inclusion  the <B>algorithm</B> is applied september  1979 nagy  <B>g</B>  wagle  s  polygon maps  cellularization  gridding  geographic <B>data</B> <B>structures</B>  computational geometry  <B>computer</B> cartography  automated cartography 3.14 4.34 8.2 ca790906 db by cellular maps  an important operation in geographical <B>data</B> processing  is analyzed  the <B>data</B>
48 Q0 2325 25 0.09773567 Lucene_47
<B>numerical</B> mathematics and <B>computer</B> <B>science</B> <B>numerical</B> mathematics is viewed as the analysis of continuous <B>algorithms</B>  four of the components of <B>numerical</B> mathematics are discussed of <B>algorithms</B>  analysis of error  programs and program libraries  cacm july  1972 traub  j  f  <B>numerical</B> mathematics  <B>computer</B> <B>science</B>  mathematics of computation  <B>algorithms</B>  continuous <B>algorithms</B> 1.3 5.0 5.1
48 Q0 2306 26 0.097061366 Lucene_47
ancient babylonian <B>algorithms</B> the early origins of mathematics are discussed  emphasizing those aspects which seem to be of greatest interest from the standpoint of <B>computer</B> <B>science</B>  a number of old babylonian tablets  many of which have never before been translated into english  are quoted  cacm july  1972 knuth  d  <B>e</B>  history of computation  babylonian tablets  sexagesimal number system
48 Q0 2094 27 0.09640492 Lucene_47
 specialist method  cacm march  1970 watson  <B>g</B>  a  minimax approximation  nonlinear approximation  <B>linear</B>on an <B>algorithm</B> for nonlinear minimax approximation certain nonlinear minimax approximation problems are characterize d by properties which permit the application of special <B>algorithms</B>  mainly based on the exchange <B>algorithms</B> of remes  1934  1935   for their solution  in this paper the application
48 Q0 1183 28 0.09517035 Lucene_47
a note on the <B>use</B> of a digital <B>computer</B> for doing tedious algebra and <B>programming</B> a special purpose compiler was written with fortran ii language and made possible the writing of very long programs by the <B>computer</B>  the procedure is based on a straight-forward <B>use</B> of format statements for <B>generating</B> machine-written programs  cacm october  1965 veronis  <B>g</B>  ca651012 jb march 6  1978 6 31 pm 1183 5
48 Q0 3032 29 0.09497025 Lucene_47
 routing procedures and <B>data</B> <B>structures</B> already available for packet switching  reverse path forwarding is a practical <B>algorithm</B> for broadcast routing in store-and-forward packet switching <B>computer</B> of a network  <B>algorithms</B> for accomplishing this delivery through a store-and-forward packet switching <B>computer</B> network include  1  transmission of separately addressed packets   2  multidestination
48 Q0 2081 30 0.09476997 Lucene_47
 calculus  <B>data</B> <B>structures</B>  <B>linear</B> <B>programming</B>  matrix  matrix concatenation  matrix sequences  <B>programming</B> languages  sequence operations  symbol manipulation 4.12 4.22 5.14 5.41 ca700403 jb february 13 <B>data</B> <B>structures</B> suitable for a high level algorithmic language for mathematical <B>programming</B> and cumulative operators  <B>algorithms</B> are given which <B>use</B> symbol manipulation of matrix expressions so
48 Q0 95 31 0.09098545 Lucene_47
 equations which contains mathematical functions requiring the <B>use</B> of subroutines for <B>numerical</B> solution by electronic <B>computer</B>  tabular <B>data</B> for <B>numerical</B> solution by hand calculation or function generators when analog <B>methods</B> are applied can sometimes be expanded to an equivalent set of equations which do  1959 powers  j  <B>e</B>  ca590301 jb march 22  1978 8 08 pm 95 5 95 95 5 95 95 5 95
48 Q0 3037 32 0.0909754 Lucene_47
a <B>linear</B> sieve <B>algorithm</B> for finding prime numbers a new <B>algorithm</B> is presented for finding all primes between 2 and n  the <B>algorithm</B> executes in time proportional to n  assuming that multiplication <B>complexity</B> as the <B>algorithm</B> presented by mairson  6   however  our version is perhaps simpler and more in time proportional to n  cacm december  1978 gries  d  misra  j  primes  <B>algorithms</B>  <B>data</B>
48 Q0 2699 33 0.08943945 Lucene_47
 to be proved  once facts of this kind have been established  automatic choice of <B>data</B> <B>structures</B> becomes possible  the <B>methods</B> employed are based upon  and extend  known techniques of <B>data</B> flow analysis  cacm december  1975 schwartz  j  t  program <B>optimization</B>  automatic <B>programming</B>  high-level languagesautomatic <B>data</B> structure choice in a language of very high level setl is a set-theoretically
48 Q0 2283 34 0.08935704 Lucene_47
thinning <B>algorithms</B> on rectangular  hexagonal  and triangular arrays in this report three thinning <B>algorithms</B> are developed  one each for <B>use</B> with rectangular  hexagonal  and triangular arrays  the approach to the development of each <B>algorithm</B> is the same  pictorial results produced by each of the <B>algorithms</B> are presented and the relative performances of the <B>algorithms</B> are compared  it is found
48 Q0 1886 35 0.08898447 Lucene_47
  1969 breuer  m  a  factorization <B>algorithms</B>  code <B>optimization</B>  sequencing of operations  detection are to be compiled  <B>methods</B> are presented for increasing the efficiency of the object code produced by first factoring the expressions  i <B>e</B>  finding a set of subexpressions each of which occurs in two <B>algorithm</B> is then executed in order to minimize the total number of temporary storage cells
48 Q0 1385 36 0.08806285 Lucene_47
   <B>science</B> of operation and <B>programming</B>  campaign of 1958-60  during which an attempt was made to bring concepts such as <B>linear</B> <B>programming</B> to ordinary chinese workers and peasants  communist china<B>computer</B> technology in communist china  1956-1965 based on information from translations of communist chinese news items and periodical literature for the 1965 period  <B>computer</B> technology in china
48 Q0 3092 37 0.086567745 Lucene_47
 problem area  cacm june  1978 lientz  b  swanson  <B>e</B>  tompkins  <B>g</B>  software maintenance  <B>use</B> of productivity aids  management and technical <B>issues</B> 3.50 4.6 ca780605 dh february 26  1979 11 59 am 3092 5 3092 systems and <B>programming</B> resources consumed range as high as 75-80 percent in each category  however and <B>programming</B> groups   2  maintenance and enhancement tend to be viewed by management as at least
48 Q0 1612 38 0.086392954 Lucene_47
 with complicated syntactic <B>structures</B> which are in practice only sparsely occupied  <B>e</B> <B>g</B>   arithmetic expressionstop-to-bottom parsing rehabilitated  this note is concerned with the efficiency of the top-to-bottom parsing <B>algorithm</B> as used in connection with <B>programming</B> language grammars  it is shown  for instance  that retracing of unprofitable paths can often be eliminated by a suitable rearrangement
48 Q0 1457 39 0.08602948 Lucene_47
<B>data</B> manipulation and <B>programming</B> problems in automatic information retrieval automatic information retrieval programs require the manipulation of a variety of different <B>data</B> <B>structures</B>  including <B>linear</B> text  sparse matrices  and tree or list <B>structures</B>  the main <B>data</B> manipulations to be performed in automatic information systems are first briefly reviewed  a variety of <B>data</B> representations
48 Q0 1677 40 0.08542927 Lucene_47
storage organization in <B>programming</B> systems the system of program and <B>data</B> representation that has been in <B>use</B> on the rice university <B>computer</B> for five years is described  each logical entity of programmed addressing  flexibility of <B>data</B> <B>structures</B>  efficiency of memory utilization  variability control  codewords  <B>data</B> representation  program representation  <B>data</B> <B>structures</B>  storage
48 Q0 2589 41 0.08500983 Lucene_47
a <B>computer</B> routine for quadratic and <B>linear</B> <B>programming</B> problems  <B>algorithm</B> r431  cacm october  1974 proll  l  <B>g</B>  ca741009 jb january 16  1978 11 10 am 2589 4 2589 1353 5 2589 2589 5 2589 2589 5 2589 2589 5 2589
48 Q0 1147 42 0.083798245 Lucene_47
on the <B>numerical</B> solution of boundary value problems for <B>linear</B> ordinary differential equations  a <B>numerical</B> method is presented for the solution of boundary value problems involving <B>linear</B> ordinary differential equations  the method described is noniterative and makes <B>use</B> of any one-step <B>numerical</B>  comments are made concerning some <B>numerical</B> results of applying the method to a specific problem
48 Q0 2904 43 0.08284108 Lucene_47
 extensions  including <B>linear</B> function test replacement  are discussed  these <B>algorithms</B> should fit well into an integrated package of local <B>optimization</B> <B>algorithms</B>  cacm november  1977 cocke  j  compilers  <B>optimization</B> of compiled code  program analysis  operator strength reduction  test replacementan <B>algorithm</B> for reduction of operator strength a simple <B>algorithm</B> which uses an indexed temporary
48 Q0 2767 44 0.082374096 Lucene_47
 chosen to show the advantages and limitations of the <B>algorithms</B>  the end-order tree <B>algorithm</B> is shown to be an advantageous  immediate replacement for the <B>algorithm</B> in <B>use</B> with current simulationa comparison of simulation event list <B>algorithms</B> four <B>algorithms</B> are considered which can be used to schedule events in a general purpose discrete simulation system  two of the <B>algorithms</B> are new
48 Q0 2986 45 0.08118924 Lucene_47
 by a practical <B>algorithm</B> that is asymptotically faster than those in common <B>use</B>  for example  how <B>complexity</B>  sparse relation  boolean matrix  directed graph  wirth-weber precedence relation  <B>linear</B> to compute <B>linear</B> precedence functions in o n 2  steps is shown  as well as how to compute <B>linear</B> precedence functions in o n  steps  where n is the size of a grammer  the heart of the <B>algorithms</B>
48 Q0 2490 46 0.0810968 Lucene_47
efficient <B>algorithms</B> for graph manipulation  h   <B>algorithm</B> a447  efficient <B>algorithms</B> are presented is the number of vertices and <B>e</B> is the number of edges  each <B>algorithm</B> requires time and space proportional to max  v <B>e</B>  when executed on a random access <B>computer</B>  cacm june  1973 hopcroft  j  tarjan  the <B>algorithm</B> for partitioning of a graph into simple paths is iterative and each iteration produces a new
48 Q0 2828 47 0.080125555 Lucene_47
 <B>algorithms</B>  hidden surface <B>algorithms</B>  hierarchical <B>data</B> <B>structures</B>  geometric models 5.31 8.2hierarchical geometric models for visible surface <B>algorithms</B> the geometric structure inherent for producing pictures by <B>computer</B>  by using an extension of traditional structure information  the range of <B>complexity</B> of an environment is greatly increased while the visible <B>complexity</B> of any given
48 Q0 2113 48 0.08002437 Lucene_47
 the input hierarchical <B>structures</B>  cacm february  1970 von glasersfeld  <B>e</B>  parsing  syntactic analysisthe multistore parser for hierarchical syntactic <B>structures</B> a syntactic parser is described for hierarchical concatenation patterns that are presented to the analyzer in the form of <B>linear</B> strings <B>use</B> of examples taken from the fully operational implementation of the parser in an experimental
48 Q0 1924 49 0.07993776 Lucene_47
 to the <B>algorithm</B>  cacm march  1969 mckellar  a  c  coffman jr   <B>e</B>  <B>g</B>  matrix <B>algorithms</B>  array processing  paging system  it is shown that carefully designed matrix <B>algorithms</B> can lead to enormous savings in the number time  examination of addition  multiplication  and inversion <B>algorithms</B> shows that a partitioned matrix representation  i <B>e</B>  one submatrix or partition per page  in most cases induced fewer page faults
48 Q0 1744 50 0.07922093 Lucene_47
stable <B>numerical</B> <B>methods</B> for obtaining the chebyshev solution to an overdetermined system of equations an implementation of stiefel s exchange <B>algorithm</B> for determining a chebyshev solution to an overdetermined system of <B>linear</B> equations is presented  that uses gaussian lu decomposition with row  overdetermined <B>linear</B> systems  <B>linear</B> equations exchange <B>algorithm</B> 5.13 5.14 5.41 ca680601 jb february 22
48 Q0 3010 51 0.07918174 Lucene_47
value orientation of <B>computer</B> <B>science</B> students technological and nontechnological value orientations are investigated with special attention to the <B>complexity</B> of value <B>structures</B>  <B>computer</B> <B>science</B> students  who are closely associated with technology  contrast with social <B>science</B> students  who of minnesota in 1972  <B>computer</B> <B>science</B> majors were found to have a more complex value structure
48 Q0 1195 52 0.07843294 Lucene_47
uplifts-university of pittsburgh <B>linear</B> file tandem system a series of <B>computer</B> programs has been <B>linear</B> file system on an ibm 1401-7090 combined <B>data</B> processing system  the program are note-worthy <B>data</B>  and format the output for <B>optimization</B> of processing on the ibm 7090 system  the programs  <B>e</B>  ca650911 jb march 6  1978 7 10 pm 1195 5 1195 1195 5 1195 1195 5 1195
48 Q0 2890 53 0.07722707 Lucene_47
 analysis for a simple network  cacm january  1976 agnew  c  <B>e</B>  routing <B>algorithms</B>  adaptive routingon quadratic adaptive routing <B>algorithms</B> two analytic models of a store-and-forward communications the equilibrium  stationary state  maintained by an adaptive routing <B>algorithm</B>  these models show conditions suggests that a modification of the adaptive <B>algorithm</B> will result in optimality
48 Q0 2141 54 0.07716277 Lucene_47
  cacm december  1971 amidon  <B>e</B>  l  akin  <B>g</B>  s  <B>data</B> compression  map storage  information retrievalalgorithmic selection of the best method for compressing map <B>data</B> strings the best of a dozen different <B>methods</B> for compressing map <B>data</B> is illustrated  the choices are generated by encoding <B>data</B> strings-sequence of like codes-by three <B>methods</B> and in four directions  relationships are developed
48 Q0 1504 55 0.07692346 Lucene_47
<B>algorithms</B> for finding a fundamental set of cycles for an undirected <B>linear</B> graph given the adjacency matrix of the graph  the <B>algorithm</B> presented in this paper finds a spanning tree and then constructs the set of fundamental cycles  our <B>algorithm</B> is slower than an <B>algorithm</B> presented by welch of nodes and edges  when storage is limited our <B>algorithm</B> is superior to welch s  however  when
48 Q0 1658 56 0.07652139 Lucene_47
analysis of <B>algorithms</B> for the zero-one <B>programming</B> problem this paper is concerned with a review and examination of several existing <B>algorithms</B> for the zero-one <B>programming</B> problem  computational experience is summarized  the machine time and storage requirements of several of the <B>algorithms</B>  integer <B>programming</B>  zero-one variables  <B>algorithms</B> 5.39 5.41 ca681208 jb february 21  1978 1 31 pm
48 Q0 2692 57 0.07616877 Lucene_47
 hidden-surface computations  cacm january  1974 sutherland  i  <B>e</B>  hodgman  <B>g</B>  w  <B>computer</B> graphicsreentrant polygon clipping a new family of clipping <B>algorithms</B> is described  these <B>algorithms</B> the parts of the polygon which lie outside the volume  in two dimensions the <B>algorithms</B> permit clipping vertices introduced in sequence to describe any newly-cut edge or edges  the <B>algorithms</B> easily handle
48 Q0 2716 58 0.07526789 Lucene_47
  p  relational database  database <B>optimization</B>  inverted file  automatic <B>programming</B>  query a  smart  interface to support a relational view of <B>data</B> is proposed  the basic idea is to employ automatic <B>programming</B> techniques so that the interface analyzes and efficiently refines the high level and space utilization by   1  performing global query <B>optimization</B>   2  exploiting disjoint
48 Q0 2522 59 0.07481646 Lucene_47
  and indicates future directions of research on <B>methods</B> of controlling a <B>computer</B> system  cacm april  1973the design  implementation  and evaluation of a working set dispatcher the behavior of a <B>computer</B> system is largely dependent upon the <B>algorithms</B> employed to allocate the system resources proposed  two implementations along these <B>principles</B> have been reported  but it seems that in neither
48 Q0 2186 60 0.07481146 Lucene_47
<B>numerical</B> properties of the ritz-trefftz <B>algorithm</B> for optimal control in this paper the ritz-trefftz <B>algorithm</B> is applied to the <B>computer</B> solution of the state regulator problem  the <B>algorithm</B>  cacm june  1971 bosarge jr   w  <B>e</B>  johnson  o  <B>g</B>  splines  regulator problem  control theory of the paper is to describe the <B>algorithm</B> and establish its properties as a valid and useful
48 Q0 2932 61 0.07456653 Lucene_47
<B>complexity</B> of computations the framework for research in the theory of <B>complexity</B> of computations is described  emphasizing the in terrelation between seemingly diverse problems and <B>methods</B> are discussed  cacm september  1977 rabin  m  o  <B>complexity</B> of computations  algebraic <B>complexity</B>  in tractable problems  probabilistic <B>algorithms</B> 5.25 ca770901 jb december 28  1977 6 54 am 2932 5 2932
48 Q0 1098 62 0.07438581 Lucene_47
 well-known <B>computer</B> <B>programming</B> languages which  among them  exhibit all the principal are reviewed  forms of <B>data</B> <B>structures</B> which are manipulated  necessity for dynamic allocation and within the machine  <B>methods</B> for storage allocation  <B>programming</B> formalisms and special processesa comparison of list-processing <B>computer</B> languages  including a detailed comparison of comit  ipl-v
48 Q0 2592 63 0.074038446 Lucene_47
on generation of test problems for <B>linear</B> <B>programming</B> codes users of <B>linear</B> <B>programming</B> <B>computer</B> and an illustrative implementation of a method for <B>generating</B> <B>linear</B> <B>programming</B> test problems of the solutions provided by such codes  large scale <B>linear</B> <B>programming</B> codes at most installations are assumed  d  walters  a  s  <B>linear</B> <B>programming</B>  test problem generation  lp program evaluation  lp program
48 Q0 1309 64 0.073450625 Lucene_47
  the system requires initial preparation of large <B>data</B> banks containing <B>data</B> in elementary form  <B>use</B> of two special languages  extract and matran  permits selective extraction of any <B>data</B> subseta <B>computer</B> user-oriented system a <B>computer</B> language system has been developed which makes possible fast preparation of management reports  regardless of computational <B>complexity</B> or format variety
48 Q0 3124 65 0.07230856 Lucene_47
 in the construction of <B>data</B>-driven <B>algorithms</B>  cacm february  1979 gull w  jenkins  m  nested arrays  apl arrays  recursive <B>data</B> <B>structures</B>  trees  <B>data</B>-driven <B>algorithms</B>  theory of arrays 4.22 5.29recursive <B>data</B> <B>structures</B> in apl a mathematical study of three approaches for defining nested array to be a recursive <B>data</B> structure equivalent to a tree structure in which all <B>data</B> is stored
48 Q0 3132 66 0.071655944 Lucene_47
 a noncentral hyperplane  six <B>algorithms</B> for finding central hyperplanes are tested on three <B>data</B> sets  although frequently used practice  the modified relaxation <B>algorithm</B> is very poor  three <B>algorithms</B>experiments with some <B>algorithms</B> that find central solutions for pattern classification in two-class pattern recognition  it is a standard technique to have an <B>algorithm</B> finding hyperplanes which
48 Q0 2627 67 0.07153346 Lucene_47
  <B>e</B>  <B>g</B>  jr  sethi  r  minimizing mean finishing time  minimizing mean flow time  sequencing <B>algorithms</B>  optimal scheduling <B>algorithms</B>  deterministic scheduling models 4.32 5.39 ca740704 jb january 17 the <B>algorithms</B> known for minimizing mean finishing time  in addition to presenting and analyzing new <B>algorithms</B>
48 Q0 1797 68 0.07077196 Lucene_47
solution of <B>linear</B> programs in 0-1  <B>algorithm</B> 341  h   cacm december  1969 proll  l  <B>g</B>  <B>linear</B> <B>programming</B>  zero-one variables  partial enumeration 5.41 ca691215 jb february 15  1978 2 06 pm 1797 5 1797 1797 5 1797 1797 5 1797
48 Q0 2798 69 0.070579164 Lucene_47
 investigate the performance of various system <B>structures</B>  i <B>e</B>  schemes for sending instruction and <B>data</B> requests to the memory system  performance is measured by determining the distribution burnett  <B>g</B>  j  coffman  <B>e</B>  <B>g</B>  jr  interleaved memory systems  modular memory systems  memory performance these investigations is that separately grouping instruction and <B>data</B> requests for memory can substantially
48 Q0 1601 70 0.07013377 Lucene_47
parallel <B>numerical</B> <B>methods</B> for the solution of equations classical iterative procedures for the <B>numerical</B> solution of equations provide at each stage a single new approximation to the root families of <B>numerical</B> procedures which <B>use</B> the technique of the procedures in a parallel processing are superior to standard <B>algorithms</B>  cacm may  1967 shedler  <B>g</B>  s  ca670505 jb february 28  1978 10 44 am
48 Q0 3125 71 0.06993999 Lucene_47
 that requires less execution time  cacm february  1979 morel  <B>e</B>  renvoise  c  optimizer  <B>optimization</B>global <B>optimization</B> by suppression of partial redundancies the elimination of redundant problem  i <B>e</B>  the elimination of computations performed twice on a given execution path  such computations are termed partially redundant  moreover  the <B>algorithm</B> does not require any graphical
48 Q0 3118 72 0.06972711 Lucene_47
 bound to the number of steps required buy a permutation <B>algorithm</B> is derived  and the class of optimum <B>algorithms</B> is identified  cacm january  1979 bongiovanni  <B>g</B>  luccio  f  bubble memory  memory loops  permutation <B>algorithm</B>  <B>data</B> block shift 4.34 5.30 6.34 ca790103 dh april 10  1979 12 04 pm 3118 5permutation of <B>data</B> blocks in a bubble memory a common internal organization of bubble memories
48 Q0 1809 73 0.06951594 Lucene_47
<B>numerical</B> analysis in a ph  <B>computer</B> <B>science</B> program <B>numerical</B> analysis is the study of <B>methods</B> the question of background and emphasis  the <B>numerical</B> analysis program in the <B>computer</B> <B>science</B> department should emphasize an awareness of the problems of <B>computer</B> implementation and experimental procedures parter  s  v  ph  program  <B>numerical</B> analysis  course separation  education 1.52 ca691203 jb february
48 Q0 2553 74 0.06912529 Lucene_47
the practical aspect of <B>computer</B> <B>science</B> education-discussion cacm january  1973 blount  s  <B>e</B>  education  <B>computer</B> engineering  <B>computer</B> <B>science</B> curriculum  systems design 1.52 6.0 ca730108 jb january 24  1978 4 09 pm 2553 5 2553 2553 5 2553 2553 5 2553
48 Q0 1529 75 0.06855024 Lucene_47
decomposition <B>programming</B> an analysis of matrix substructure a petroleum blending problem was analyzed in order to compare the primal and primal-dual decomposition <B>algorithms</B>  in the course <B>algorithms</B> and to their absolute performance as compared with a standard primal-simplex solution without decomposition  cacm october  1967 bell  <B>e</B>  j  ca671004 jb february 27  1978 2 33 pm 1529 5 1529
48 Q0 47 76 0.06850749 Lucene_47
<B>russian</B> visit to u  computers cacm november  1959 zaitzeff  <B>e</B>  m  astrahan  m  m  ca591101 jb march 22  1978 3 59 pm 47 5 47 47 5 47 47 5 47
48 Q0 2484 77 0.06827103 Lucene_47
 of binary relations  an <B>algorithm</B> for constructing subsets of a set  and an <B>algorithm</B> for selecting an element from the given set of objects  the <B>use</B> of different relations and <B>algorithms</B> resultsa note on information organization and storage since the logical structure of a <B>data</B> base can be represented by a tree or graph  it is quite natural for us to view the process of designing a <B>data</B>
48 Q0 1905 78 0.06804208 Lucene_47
the simplex method of <B>linear</B> <B>programming</B> using lu decomposition standard <B>computer</B> implementations of dantzig s simplex method for <B>linear</B> <B>programming</B> are based upon forming the inverse of the basic is slow  but has good round-off error behavior  the implementation appears as cacm <B>algorithm</B> 350  cacm may  1969 bartels  r  h  goulub  <B>g</B>  h  simplex method  <B>linear</B> <B>programming</B>  lu decomposition
48 Q0 2766 79 0.067689374 Lucene_47
copying cyclic list <B>structures</B> in <B>linear</B> time using bounded workspace a bounded workspace copying <B>algorithm</B> for arbitrary list <B>structures</B> is given  this <B>algorithm</B> operates in <B>linear</B> time and does not require tag bits  the best previous bounded workspace copying <B>algorithms</B> achieved n 2 time without or variable size nodes  cacm may  1975 fisher  d  a  list processing  copying  <B>linear</B> time  space <B>complexity</B>
48 Q0 2903 80 0.06727356 Lucene_47
 stack <B>algorithm</B>  cacm november  1977 bird  r  s  program transformation  <B>optimization</B> of programs  called  recursion in troduction   is described and applied to two <B>algorithms</B> which solve pattern matching problems  by using recursion in troduction  <B>algorithms</B> which manipulate a stack are first translated into recursive <B>algorithms</B> in which no stack operations occur  these <B>algorithms</B> are then subjected
48 Q0 1692 81 0.066831134 Lucene_47
<B>numerical</B> solution of a thin plate heat transfer problem the <B>numerical</B> solution of a system of <B>linear</B> equations resulting from a discrete approximation to a thin plate heat transfer problem is considered  the slow convergence of point iterative <B>methods</B> is analyzed and shown to be caused by one september  1968 stewart iii  <B>g</B>  lick  d  w  heat transfer problem  poisson equation  boundary value
48 Q0 2953 82 0.06607219 Lucene_47
notes on recursion elimination various <B>methods</B> of recursion elimination are applied form arise in connection with tree traversal and sorting <B>algorithms</B>  each method of recursion removal involves the <B>use</B> of one or more stacks  and the solutions are compared on the basis of their running time  cacm june  1977 bird  r  s  recursion elimination  <B>optimization</B> of programs  stacks  trees
48 Q0 1392 83 0.06597639 Lucene_47
experience with formac <B>algorithm</B> design various facets of the design and implementation of mathematical expression manipulation <B>algorithms</B> are discussed  concrete examples are provided by the formac expand and differentiation <B>algorithms</B>  a basic formac utility routine  and an experiment details from the formac implementation are presented  an attempt is made to stress <B>principles</B> and ideas
48 Q0 2900 84 0.065543406 Lucene_47
  cacm november  1977 grapa  <B>e</B>  belford  <B>g</B>  <B>g</B>  file allocation  <B>computer</B> networks  distributed <B>data</B>some theorems to aid in solving the file allocation problem the file allocation problem-i <B>e</B>  the problem of finding the optimal set of network sites at which to locate copies of a file-is known to be  in general  polynomial complete  heuristics and other aids to finding optimal  or near-optimal
48 Q0 129 85 0.06532272 Lucene_47
rootfinder ii  <B>algorithm</B> 15  cacm november  1960 forsythe  <B>g</B>  <B>e</B>  herriot  j  <B>g</B>  ca601106 jb march 20  1978 7 59 pm 129 5 129 129 5 129 129 5 129
48 Q0 3018 86 0.06466805 Lucene_47
 presented a method for determining keyword conflicts and described a heuristic <B>algorithm</B> which solves a certain combinatorial <B>optimization</B> problem in connection with this method  this <B>optimization</B> this edge-clique-cover problem and the graph coloring problem is established which allows <B>algorithms</B> for either one of these problems to be constructed from <B>algorithm</B> for the other  as consequences
48 Q0 2832 87 0.0645445 Lucene_47
 <B>data</B> which is to be viewed as a hierarchy of contexts  this note presents an <B>algorithm</B> which improves on previous context tree retrieval <B>algorithms</B>  it is based on the observation that in typical are built up to make the search rapid  <B>algorithms</B> for addition and deletion of <B>data</B> and for garbage bindings  <B>data</B> <B>structures</B> 3.69 3.74 4.10 ca760907 jb january 4  1978 8 49 am 2832 5 2832 2832 5 2832
48 Q0 2835 88 0.06444394 Lucene_47
recursion analysis for compiler <B>optimization</B> a relatively simple method for the detection of recursive <B>use</B> of procedures is presented for <B>use</B> in compiler <B>optimization</B>  implementation considerations are discussed  and a modification of the <B>algorithm</B> is given to further improve <B>optimization</B>  k  <B>g</B>  recursion  compiler <B>optimization</B> 4.12 ca760904 jb january 4  1978 9 36 am 2835 5 2835 2835 5
48 Q0 2389 89 0.063588314 Lucene_47
 of constraints  the <B>algorithms</B> used to solve problems expressed in this language rely on heuristic <B>programming</B>  both the language and the search <B>algorithms</B> are detailed  cacm february  1972 eastman  c  mpreliminary report on a system for general space planning a <B>computer</B> language and a set of programs planning problems  the language is an extension of algol and <B>includes</B> means to represent spaces
48 Q0 2032 90 0.06280585 Lucene_47
 are derived and illustrated  cacm july  1970 coffman jr   <B>e</B>  <B>g</B>  eve  j  <B>data</B> <B>structures</B>  tree <B>structures</B>  file <B>structures</B>  scatter tables  hashing functions  information retrieval 3.70 3.74 ca700705file <B>structures</B> using hashing functions a general method of file structuring is proposed which uses a hashing function to define tree structure  two types of such trees are examined
48 Q0 2447 91 0.062444825 Lucene_47
sard kernels for certain bivariate cubatures an error analysis for some bivariate cubatures is given  the remainders are obtained by the <B>use</B> of sard kernels  <B>numerical</B> results and <B>computer</B> graphs are given for some of the kernel functions  cacm september  1973 barnhill  r  <B>e</B>  pilcher  d  t  cubatures  sard kernels  <B>numerical</B> integration  remainder formulas 5.13 5.16 ca730908 jb january 23  1978 8
48 Q0 1759 92 0.06221471 Lucene_47
transportation problem  <B>algorithm</B> 293  h   cacm april  1968 bayer  <B>g</B>  transportation problem  <B>linear</B> <B>programming</B> 5.41 ca680411 jb february 23  1978 10 20 am 1759 5 1759 1759 5 1759 1759 5 1759
48 Q0 2056 93 0.06221471 Lucene_47
gomory  <B>algorithm</B> 263a  h   cacm may  1970 proll  l  <B>g</B>  <B>linear</B> <B>programming</B>  integer variables  dual method 5.41 ca700510 jb february 13  1978 1 17 pm 2056 5 2056 2056 5 2056 2056 5 2056
48 Q0 2936 94 0.061668437 Lucene_47
an efficient <B>data</B> structure for the simulation event set recently <B>algorithms</B> have been presented <B>algorithms</B>  in this paper a new event scheduling <B>algorithm</B> is presented which improves on two aspects of the best of the previously published <B>algorithms</B>  first  the new <B>algorithm</B> s performance is quite insensitive to skewed distributions  and second  its worst-case <B>complexity</B> is o  n   where n
48 Q0 3200 95 0.061626196 Lucene_47
a formac program for the solution of <B>linear</B> boundary and initial value problems a <B>computer</B> program is described which has been developed for obtaining approximate solutions to <B>linear</B> initial <B>includes</B>  1  the equations  in symbolic form  to be satisfied - the differential equations  equations describing auxiliary conditions such as boundary conditions  etc  2  a <B>numerical</B> description
48 Q0 2997 96 0.061349668 Lucene_47
 <B>algorithms</B> <B>use</B> the  divide and conquer  technique and recursively apply a merge procedure for two nonin tersecting convex hulls  since any convex hull <B>algorithm</B> requires at least o n log n  operations  the time <B>complexity</B> of the proposed <B>algorithms</B> is optimal within a multiplicative constant  cacm february  1977 preparata  f  p  hong  s  j  computational <B>complexity</B>  convex hull  optimal <B>algorithms</B>
48 Q0 695 97 0.060872093 Lucene_47
 appear to have disk connotations  cacm october  1963 carlson  b  <B>g</B>  voorhes  <B>e</B>  a  ca631030 jb march<B>use</B> of the disk file on stretch the paper begins by briefly describing the stretch  ibm 7030  <B>computer</B> with special emphasis given to the organization and operation of its input-output equipment  are not currently filed on the disk  certain <B>programming</B> techniques are discussed for transmitting words between
48 Q0 1605 98 0.06076072 Lucene_47
  were specified as design factors in the experiment  <B>data</B> was obtained for six variables  <B>e</B> <B>g</B>   programmer time  <B>computer</B> time  elapsed time  etc   which were considered to be definitive of  system <B>programming</B> problems was assigned to each of a group of four <B>programming</B> subjects  influences external
48 Q0 3103 99 0.060584504 Lucene_47
automatic <B>data</B> structure selection  an example and overview the <B>use</B> of several levels  this process is discussed in detail for an example program  general <B>issues</B> in <B>data</B> structure selection are also reviewed  cacm may  1978 low  j  abstract <B>data</B> types  automatic <B>programming</B>  <B>data</B> with abstract <B>data</B> types such as sets and lists  programmer time can be saved by automating
48 Q0 1619 100 0.060215224 Lucene_47
error-free <B>methods</B> for statistical computations neely has discussed computational error generated by some <B>algorithms</B> used to compute various statistics  in the present paper <B>methods</B> are described which are error-free  simple in concept  and usually less costly in machine time than those mentioned by neely  cacm march  1967 rodden  b  <B>e</B>  ca670310 jb february 28  1978 1 02 pm 1619 4 1619 3166 4
*************Query 49*************************

49 Q0 2390 1 0.32983255 Lucene_47
  readers  writers  commentators  computer utility  <B>information</B> <B>retrieval</B>  trees  data structures 1.0 1.1a proposal for a computer-<B>based</B> interactive scientific community because of the problems created of their current <B>knowledge</B>  and on selecting a paper to read  they can obtain from the computer the minimum subtree of theorems required to bring them from what they already know to the background <B>knowledge</B> which
49 Q0 3012 2 0.31263226 Lucene_47
the use of an interactive <B>information</B> storage and <B>retrieval</B> system in medical research this paper presents the results of a study of the use of an interactive computerized storage and <B>retrieval</B>  implementation  system use  <B>information</B> storage and <B>retrieval</B> system 2.10 3.50 3.72 ca780301 jb march 28  1978 on user reactions were gathe red from a questionnaire  the results show the important <B>role</B> played
49 Q0 2631 3 0.29963508 Lucene_47
 june  1974 barton  <B>i</B>  j  creasey  s  <B>e</B>  lynch  m  f  snell  m  j  text searching  <B>information</B> theory  file organization  direct access  <B>information</B> <B>retrieval</B>  character string  bit vector 3.42 3.70 3.73an <B>information</B>-theoretic approach to text searching in direct access <B>systems</B> using direct access associated with <B>information</B> <B>retrieval</B>  namely  the maintenance and use of large dictionaries
49 Q0 1514 4 0.29599267 Lucene_47
on the expected gain from adjust ing matched term <B>retrieval</B> <B>systems</B> a file adjustment procedure <B>based</B> on maximizing the bayes expected gain proposed for matched term <B>retrieval</B> <B>systems</B>  the expected of an adjustment statistic  an example evaluates the gain parameters for a typical <B>information</B> <B>retrieval</B> system  cacm november  1967 shumway  r  h  ca671106 jb february 26  1978 2 59 pm 1514 5 1514 1514
49 Q0 2990 5 0.27041867 Lucene_47
effective <B>information</B> <B>retrieval</B> using term accuracy the performance of <B>information</B> <B>retrieval</B> <B>systems</B> can be evaluated in a number of different ways  much of the published evaluation work is <B>based</B> are difficult to construct for the average case  in the present study  <B>retrieval</B> evaluation is <B>based</B>  1977 yu  c  t  salton  g  <B>information</B> <B>retrieval</B>  automatic indexing  content analysis  term accuracy
49 Q0 3134 6 0.2564694 Lucene_47
the use of normal multiplication tables for <B>information</B> storage and <B>retrieval</B> this paper describes a method for the organization and <B>retrieval</B> of attribute <B>based</B> <B>information</B> <B>systems</B>  using the normal of <B>information</B> <B>systems</B>  the normal multiplication table method yields far more rapid <B>retrieval</B> an d <B>retrieval</B> of <B>information</B> are described  this method is particularly suitable for queries
49 Q0 1032 7 0.24756311 Lucene_47
theoretical considerations in <B>information</B> <B>retrieval</B> <B>systems</B> <B>information</B> storage and <B>retrieval</B> <B>systems</B> are composed of three major components   a  identification of <B>information</B> and tagging it for effective <B>retrieval</B>   b  searching strategy  how to enter the file to circumvent the scanning of nonrelevant material  and  c  file organization to make access to <B>information</B> efficient  for identification
49 Q0 1699 8 0.24419919 Lucene_47
experimental evaluation of <B>information</B> <B>retrieval</B> through a teletypewriter experiments designed to evaluate the capabilities of mechanized <B>information</B> <B>retrieval</B> <B>systems</B>  with emphasis on interactive  bergman  s  franks  w  rubinoff  <B>e</B>  <B>information</B> <B>retrieval</B> testing  <B>information</B> system evaluation  were conducted at the moore school <B>information</B> <B>systems</B> laboratory  the basic assumption
49 Q0 2402 9 0.24225445 Lucene_47
 techniques make possible a number of approaches to x-ray structure determination <B>based</B> on molecular model building  <B>i</B> <B>e</B>  the use of chemical <B>information</B> to frame  structural hypotheses  which can of interactive  three-dimensional  computer graphics <B>systems</B> coupled to powerful digital computers demonstrates that this <B>information</B> can be the basis of a technique for structure determination that can make
49 Q0 651 10 0.2340418 Lucene_47
a survey of languages and <B>systems</B> for <B>information</B> <B>retrieval</B> cacm january  1962 grems  m  ca620108 jb march 20  1978 4 36 pm 651 5 651 651 5 651 651 5 651
49 Q0 1627 11 0.2223789 Lucene_47
 of certain data management and <B>information</B> <B>retrieval</B> <B>systems</B>  the concept of level changing is introduced the <B>information</B> for efficient use of the multilevel store is presented  cacm march  1967 morenoff  <B>e</B>
49 Q0 2795 12 0.21045025 Lucene_47
  in generating sentences from meaning structures  the program employs both the <B>information</B> <B>retrieval</B>sentence paraphrasing from a conceptual base a model of natural language <B>based</B> on an underlying language-free representation of meaning is described  a program <B>based</B> on this model is able to produce of linguistic <B>knowledge</B>  which include   1  executable tests of conceptual properties stored
49 Q0 2307 13 0.19548707 Lucene_47
 for <B>information</B> <B>retrieval</B> and for the control of dynamic library collections in which new itemsdynamic document processing the current <B>role</B> of computers in automatic document processing is then outlined in which clustered files are searched and <B>information</B> is retrieved following an interactive user-controlled search process  methods are described for an automatic query modification <B>based</B>
49 Q0 239 14 0.19503485 Lucene_47
inefficiency of the use of boolean functions for <B>information</B> <B>retrieval</B> <B>systems</B> cacm december  1961 verhoeff  j  goffman  w  belzer  j  ca611211 jb march 15  1978 10 10 pm 239 5 239 239 5 239 239 5 239
49 Q0 1457 15 0.19401297 Lucene_47
data manipulation and programming problems in automatic <B>information</B> <B>retrieval</B> automatic <B>information</B> <B>retrieval</B> programs require the manipulation of a variety of different data structures  including in automatic <B>information</B> <B>systems</B> are first briefly reviewed  a variety of data representations are made for the design of programming facilities to aid in <B>information</B> <B>retrieval</B>  cacm march  1966
49 Q0 2311 16 0.19317557 Lucene_47
a generational perspective of <B>information</B> system development system development is categorized from developer are examined  cacm july  1972 benjamin  r  <B>i</B>  computing milieu  management data processing  hardware <B>systems</B>  software <B>systems</B>  <B>systems</B> development process  functional <B>systems</B>  management <B>systems</B> 2.0 3.50 4.0 6.20 ca720717 jb january 30  1978 11 22 am 2311 5 2311 2311 5 2311 2311 5 2311
49 Q0 1725 17 0.18696788 Lucene_47
a simple proof of lewin s ordered-<B>retrieval</B> theorem for associative memories an efficient method of ordered <B>retrieval</B> of binary words from an associative memory  as described by lewin  is <B>based</B> of both values  or of only one value  or contain no digits at all  <B>i</B> <B>e</B>  that the memory is empty  ordered lists  ordered <B>information</B> <B>retrieval</B>  ordered <B>retrieval</B> theorem  column digit values  digit
49 Q0 616 18 0.18653947 Lucene_47
an <B>information</B> algebra - phase <B>i</B> report-language structure group of the codasyl development-defining language  at the <B>systems</B> level of data processing  the report is <B>based</B>  for the most part  on a mathematical model called  an <B>information</B> algebra  developed primarily by r  bosak  it is hoped and understanding by professional programmers and <B>systems</B> analysts  and  c  with appreciation
49 Q0 1652 19 0.1828712 Lucene_47
a code for non-numeric <B>information</B> processing applications in online <B>systems</B> a code has been specifically designed to simplify the internal <B>information</B> processing operations within an online computer of the <B>information</B> channel linking the system and the system user  the code has direct application to problems in area such as <B>information</B> <B>retrieval</B>  document classification  computer-aided teaching and text editing
49 Q0 1236 20 0.1789858 Lucene_47
the smart automatic document <B>retrieval</B> system-an illustration a fully automatic document <B>retrieval</B> is used in the <B>retrieval</B> process by leaving the exact sequence of operations initially unspecified can in general be relied upon to retrieve the wanted <B>information</B>  a typical search request is used as an example in the present report to illustrate <B>systems</B> operations and evaluation procedures  cacm
49 Q0 2882 21 0.17465682 Lucene_47
a stochastic evaluation model for database organization in data <B>retrieval</B> <B>systems</B> experimental work in the valuation of large scale data <B>retrieval</B> <B>systems</B> has been scarce due to its difficulty before  the model is designed to estimate the <B>retrieval</B> workload of alternative data <B>retrieval</B> <B>systems</B>  these data <B>retrieval</B> <B>systems</B> can be organized under several database organizations  including
49 Q0 18 22 0.17280602 Lucene_47
simple automatic coding <B>systems</B> cacm july  1958 adams  <B>e</B>  s  schlesinger  s  <B>i</B>  ca580701 jb march 22  1978 9 06 pm 18 5 18 18 5 18 18 5 18
49 Q0 2985 23 0.17008929 Lucene_47
effects of chargeout on user manager attitudes the relationship of in ternal pricing <B>systems</B> for computer services  chargeout <B>systems</B>  and user management attitudes about their computer-<B>based</B> <B>information</B> <B>systems</B> is investigated  evidence is provided that the relationship conforms to a general of computer-<B>based</B> <B>systems</B>  development and main tenance of computer-<B>based</B> <B>systems</B> is asserted
49 Q0 1959 24 0.16546024 Lucene_47
an interrupt <B>based</B> organization for management <B>information</B> <B>systems</B> a programming structure the new organization which is proposed for management <B>information</B> <B>systems</B>  cacm december  1970 morgan  h  l  management <B>information</B> <B>systems</B>  integrated data processing  supervisors  interrupts monitoring shared data base <B>systems</B>  the bases for this organization are a generalized interrupt structure
49 Q0 1280 25 0.1653109 Lucene_47
numerical integration of a differential-difference equation with a decreasing time-lag <B>systems</B> in which variable time-lags are present are of common occurrence in biology  variable flow rates are a common cause of these variable lags  at present no extensive body of <B>knowledge</B> exists concerning on the solution itself are present  cacm april  1965 bellman  r  <B>e</B>  buell  j  d  kalaba  r  <B>e</B>  ca650411 jb march
49 Q0 1066 26 0.16527596 Lucene_47
 change  it no longer is adequate merely to reduce a mathematical algorithm  <B>i</B> <B>e</B>  the simplex method to the underlying principles upon which future linear programming <B>systems</B> must be <B>based</B> on such <B>systems</B>  some of the components of such a system are  translation of problem statement
49 Q0 2160 27 0.16521971 Lucene_47
  <B>information</B> <B>retrieval</B>  inverted file  key words  multilist  queries  searches 3.70 3.73 3.74 ca710904canonical structure in attribute <B>based</B> file organization a new file structure for attribute <B>based</B> <B>retrieval</B> is proposed in this paper  it allows queries involving arbitrary boolean functions of the allowed queries  thus  for example  the structure for <B>retrieval</B> on the basis of ranges
49 Q0 3177 28 0.15966243 Lucene_47
how to share a secret in this paper we show how to divide data d into n pieces in such a way that d is easily reconstructable from any k pieces  but even complete <B>knowledge</B> of k - 1 pieces reveals olutely no <B>information</B> about d  this technique enables the construction of robust key management schemes for cryptographic <B>systems</B> that can function securely and reliably even when misfortunes destroy
49 Q0 2288 29 0.15837407 Lucene_47
 an <B>information</B> <B>retrieval</B> system <B>based</B> on the consecutive <B>retrieval</B> property is also discussed  cacm september  1972 ghosh  s  p  file organization  consecutive storage  consecutive <B>retrieval</B>  <B>information</B> of an <B>information</B> <B>retrieval</B> system with a minimal search time and no redundant storage  some important theoremsfile organization  the consecutive <B>retrieval</B> property the consecutive <B>retrieval</B> property
49 Q0 3090 30 0.15425189 Lucene_47
 impacts of computing  organizational impacts of computing  management <B>information</B> <B>systems</B>  sociology of computing  <B>information</B> <B>systems</B> and service integration  urban <B>information</B> <B>systems</B> 2.11 3.53 ca780607 features of the computer-<B>based</B> system and of the organizational demands placed upon different agencies  administrators  and caseworkers  it illustrates the way  successful  automated <B>information</B>
49 Q0 3125 31 0.14752829 Lucene_47
 problem  <B>i</B> <B>e</B>  the elimination of computations performed twice on a given execution path <B>information</B> or restrictions on the shape of the program graph  testing this algorithm has shown that its that requires less execution time  cacm february  1979 morel  <B>e</B>  renvoise  c  optimizer  optimization redundancy  data flow analysis  boolean <B>systems</B> 4.12 5.21 5.24 ca790204 dh april 10  1979 4 19 pm 3125 5
49 Q0 2163 32 0.14661235 Lucene_47
 <B>information</B> <B>systems</B> education in colleges and universities  under a grant from the national science are presented on the need for education in administrative <B>information</B> <B>systems</B>  and appropriate college curricula and courses are suggested  also  the <B>role</B> of professional societies and organizations using available  cacm september  1971 teichroew  d  education  <B>information</B> analysis  <B>systems</B> design  business
49 Q0 1681 33 0.14313392 Lucene_47
easy english a language for <B>information</B> <B>retrieval</B> through a remote typewriter console easy english base  the moore school <B>information</B> <B>systems</B> laboratory files  requests are formulated in a standardized  on-line searching  remote console communication  <B>information</B> <B>retrieval</B>  man-machine communication  remote terminal communication  translator  document <B>retrieval</B>  conversational mode  <B>information</B>
49 Q0 2046 34 0.14110848 Lucene_47
   a prompting service which supplies such <B>information</B> is not a satisfactory solution  activities traffic and natural growth in the types of stored <B>information</B>  existing noninferential  formatted data <B>systems</B> provide users with tree-structured files or slightly more general network models of the data  in section 1  inadequacies of these models are discussed  a model <B>based</B> on n-ary relations
49 Q0 1886 35 0.13724144 Lucene_47
 by first factoring the expressions  <B>i</B> <B>e</B>  finding a set of subexpressions each of which occurs in two procedure is applied which orders the factors and expressions such that all <B>information</B> is computed switching expressions and of factoring polynomials encountered in symbol manipulating <B>systems</B>  cacm june
49 Q0 2798 36 0.13351153 Lucene_47
analysis of interleaved memory <B>systems</B> using blockage buffers a model of interleaved memory <B>systems</B> is presented  and the analysis of the model by monte carlo simulation is discussed  the simulations investigate the performance of various system structures  <B>i</B> <B>e</B>  schemes for sending instruction burnett  g  j  coffman  <B>e</B>  g  jr  interleaved memory <B>systems</B>  modular memory <B>systems</B>  memory performance
49 Q0 2846 37 0.13276567 Lucene_47
  to be used in <B>information</B> <B>retrieval</B> <B>systems</B>  it has the same underlying m-ary tree structure as a trie  in the analysis part of the paper it will be shown that for a collection of n keys the <B>retrieval</B> time  measured of the order n  m log2 n  bits  this improvement in storage requirements and <B>retrieval</B> time is achieved  trie  <B>retrieval</B> time  storage requirement  keys 3.70 3.74 3.75 ca760707 jb january 4  1978 12 26 pm
49 Q0 2198 38 0.12920211 Lucene_47
 languages  data structures  storage structures  <B>information</B> <B>retrieval</B>  transaction processing 3.5introduction to  feature analysis of generalized data base management <B>systems</B>  this paper management <B>systems</B>  this introduction gives a review of the current state of the art in these <B>systems</B> and discusses the differences and similarities between capabilities found in host language <B>systems</B>
49 Q0 1199 39 0.12877579 Lucene_47
a computer center simulation project today s computation centers are <B>based</B> on rapidly changing technologies of hardware and software <B>systems</B>  it is difficult  therefore  to base decisions on experience  in most instances  the benefits of comparable experience for a given problem situation that describes the operation of a computation center in terms of <B>information</B> nets  decision
49 Q0 1415 40 0.124699526 Lucene_47
 immediate prospects for improving the performance of automatic message <B>retrieval</B> <B>systems</B>  they may have practical value in man-machine <B>systems</B> using human monitors to select the preferred syntactic interpretation of a sentence  cacm june  1966 carmody  b  t jones jr   p  <B>e</B>  ca660606 jb march 3  1978 conducting automatic <B>retrieval</B> of natural language messages  to explore the prospects of such a step
49 Q0 1747 41 0.124648504 Lucene_47
three criteria for designing computing <B>systems</B> to facilitate debugging the designer of a computing clock  the synchronization of parallel processes  protection in multiprogrammed <B>systems</B>  and the assignment of capability indexes  cacm may  1968 van horn  <B>e</B>  c  computer design  computer design criteria  computer <B>systems</B>  computer <B>systems</B> design  input equipment  input equipment design  operating
49 Q0 2561 42 0.12332093 Lucene_47
a heuristic approach to inductive inference in fact <B>retrieval</B> <B>systems</B> heuristic procedures are presented which have been developed to perform inferences by generalizing from available <B>information</B> clustering algorithms  they are implemented in a model fact <B>retrieval</B> system which uses a formal  inference  inductive inference  clustering  fact <B>retrieval</B>  heuristics 3.61 3.71 3.79 ca741213 jb
49 Q0 2947 43 0.12332093 Lucene_47
sitar  an interactive text processing system for small computers sitar  a low-cost in teractive text handling and text analysis system for nontechnical users  is in many ways comparable to in teractive bibliographical search and <B>retrieval</B> <B>systems</B>  but has several additional features  <B>information</B> <B>retrieval</B>  text editing  minicomputers  crts time sharing  bibliographic search and <B>retrieval</B>
49 Q0 440 44 0.12331016 Lucene_47
 of identifying <B>information</B> that are individually unreliable but that may collectively be of considerable discriminating power  rules that can be applied generally to name <B>retrieval</B> <B>systems</B> have beenrecord linkage special difficulties are encountered in devising reliable <B>systems</B> for searching for demographic research purposes  these rules are described  and the ways in which <B>information</B>
49 Q0 1935 45 0.12180623 Lucene_47
 method described is binary in nature and offers new potential for <B>information</B> <B>retrieval</B> <B>systems</B>  cacm february  1969 arora  s  r  dent  w  t  binary pattern  file examination  graph theory  <B>information</B> <B>retrieval</B>  mathematical model  partitioning  probabilistic method  random sequencing  search
49 Q0 2318 46 0.12000566 Lucene_47
the <B>role</B> of computer system models in performance evaluation models constitute a useful means of investigating computer system performance  this paper examines the interrelationships between models and other methods for evaluating the performance of computer <B>systems</B> and establishes circumstances under which the use of a model is appropriate  cacm july 1972 kimbleton  s  r  modeling  evaluation
49 Q0 2002 47 0.119638965 Lucene_47
 and the way in which these elements may be combined into a system <B>based</B> on simple modules is demonstrated  these modules are specified independently and are independent of the axis <B>systems</B> or other such that the user could supply the minimum of <B>information</B>  and it should be fully integrable with user s program and other effects  cacm september  1970 hirschsoln  <B>i</B>  computer graphics  data potting  data display
49 Q0 2572 48 0.11883724 Lucene_47
 december  1974 press  l  <B>i</B>  community <B>information</B> utilities  social implications  public policy 2.1 2.3arguments for a moratorium on the construction of a community <B>information</B> utility in this article of computerized community <B>information</B> utilities  before accepting the inevitability and desirability is proposed   5  take steps to involve a representative group of ultimate users in <B>systems</B> design
49 Q0 3089 49 0.11788934 Lucene_47
performance of rollback recovery <B>systems</B> under intermittent failures a mathematical model with a checkpointing and rollback recovery method to ensure reliable <B>information</B> processing  the model  and the system saturation point  cacm june  1978 gelenbe  <B>e</B>  derochette  d  database reliability  file <B>systems</B>  checkpoints  recovery procedures  checking techniques  reliability and system performance
49 Q0 1541 50 0.117355786 Lucene_47
a language for modeling and simulating dynamic <B>systems</B> the general objective of this language is to facilitate both the modeling and experimental aspects of simulation studies  the ability to represent <B>systems</B> containing highly interactive processes is an essential feature  the nature of the language  and the <B>role</B> of the process concept  is presented by means of an extended example  cacm
49 Q0 1388 51 0.116116546 Lucene_47
  cacm august  1966 ball  w  <B>e</B>  berns  r  <B>i</B>  ca660810 jb march 2  1978 7 16 pm 1024 4 1388 1051 4automast  automatic mathematical analysis and symbolic translation a procedure for numerically solving <B>systems</B> of ordinary differential equation is shown to also generate symbolic solutions  the procedure is <B>based</B> on a finite taylor series expansion that includes an estimate of the error
49 Q0 1432 52 0.11499166 Lucene_47
incorporation of nonstandard input output devices into fortran <B>systems</B> a fortran system may readily be modified to handle input output with nonstandard media on the same basis on which it handles  this method was used to control output of alphanumeric <B>information</B> on a digital graph plotter  cacm may  1966 cohn  c  <B>e</B>  ca660505 jb march 3  1978 10 01 am 1432 5 1432 1432 5 1432 1432 5 1432
49 Q0 637 53 0.11486443 Lucene_47
a neliac-generated 7090-1401 compiler neliac <B>systems</B> for several different machines have been generated using the original neliac system developed at the naval electronics laboratory  san diego  in 1958  a basic  bootstrap  process was used to generate all but the first  <B>i</B> <B>e</B>  the <B>systems</B> were advantages in using a pol for constructing programming <B>systems</B>  this report presents the results
49 Q0 1680 54 0.11032837 Lucene_47
 instruction  tutorial <B>systems</B>  programming  simulation  modeling  <B>information</B> <B>retrieval</B> operating <B>systems</B>  graphics  displays  man-machine interface  on-line computing  graphic programming 1.5 3.3 3.5 3.8  programming  and <B>information</B> <B>retrieval</B>  it is written in fortran iv  g  for the ibm system 360  model
49 Q0 2519 55 0.11003013 Lucene_47
on the problem of communicating complex <B>information</B> the nature of the difficulty involved in communicating mathematical results between scientists using a computer <B>based</B> <B>information</B> <B>retrieval</B> system is examined  the problem is analyzed in terms of psychological and <B>information</B>-processing processes of the structure inherent in the <B>information</B> we are communicating  and a sophisticated interactive system
49 Q0 2968 56 0.10998855 Lucene_47
a comparison of tree-balancing algorithms several algorithms-height-balance  <B>i</B> <B>e</B>  avl and extensions   weight-balance  <B>i</B> <B>e</B>  bb and wb   and total restructuring-for building balanced binary search trees are compared  the criteria for comparison encompass theoretical aspects  <B>e</B> g  path lengths of algorithms  <B>information</B> storage and <B>retrieval</B> 3.7 3.72 3.74 5.31 ca770504 jb december 29  1977 2 16 am
49 Q0 2870 57 0.109388374 Lucene_47
 that enforce security  the model provides a unifying view of all <B>systems</B> that restrict <B>information</B> flow the secure flow of <B>information</B> through a program  cacm may  1976 denning  d  <B>e</B>  protection  securitya lattice model of secure <B>information</B> flow this paper investigates mechanisms that guarantee secure <B>information</B> flow in a computer system  these mechanisms are examined within a mathematical
49 Q0 1711 58 0.10720594 Lucene_47
  <B>information</B> is given on patents  copyrights and trade secret protection for programs  and the problem of using copyrighted material in <B>information</B> storage and <B>retrieval</B> <B>systems</B>  including the pending
49 Q0 2127 59 0.10632855 Lucene_47
-processing <B>systems</B> <B>based</B> on dictionaries with thousands of entries-with correspondingly large grammarsnatural language question-answering <B>systems</B>  1969 recent experiments in programming natural language question-answering <B>systems</B> are reviewed to summarize the methods that have been developed scale experimental <B>systems</B> and that a useful paradigm has evolved to guide research efforts
49 Q0 1233 60 0.10567429 Lucene_47
conventions for the use of symbols in the preparation of flowcharts for <B>information</B> processing <B>systems</B>  a standard working paper  this paper is intended as an outline of the various conventions which are being considered for the use of flowcharts for <B>information</B> processing <B>systems</B>  the conventions are applied to the use of the symbols appearing in the proposed american standard flowchart symbols
49 Q0 2583 61 0.10567429 Lucene_47
guidelines for humanizing computerized <B>information</B> <B>systems</B>  a report from stanley house cacm november  1974 sterling  t  d  humanization  social implication  management  <B>information</B> <B>systems</B>  regulations  social and behavioral sciences  philosophy 1.5 2 3.3 3.4 3.5 ca741101 jb january 16  1978 10 53 am 2583 5 2583 2583 5 2583 2583 5 2583 3142 5 2583 2583 6 2583 3076 6 2583
49 Q0 2711 62 0.10273989 Lucene_47
  s  automatic <B>information</B> <B>retrieval</B>  automatic indexing  content analysis  document space 3.71 3.73a vector space model for automatic indexing in a document <B>retrieval</B>  or other pattern matching be expressible as a function of the density of the object space  in particular  <B>retrieval</B> performance may correlate inversely with space density  an approach <B>based</B> on space density computations is used
49 Q0 1135 63 0.10198368 Lucene_47
 to emphasizing formal  <B>i</B> <B>e</B>   contents-independent  syntactical definitions  it relies exclusivelya general business-oriented language <B>based</B> on decision expressions  the structure of a digital is presented  such a structure  <B>based</B> on identifying and incorporating into a compiler the aspects complex applications  in terms of tables of control expressions which express only <B>information</B>
49 Q0 2812 64 0.10181003 Lucene_47
computer-aided analysis and design of <B>information</B> <B>systems</B> this paper describes the use of computer  <B>information</B> <B>systems</B>  logical system design  problem statement language  problem statement analyzer  the statement of requirements was written in ads  accurately defined <B>systems</B>  and analyzed <B>information</B> in order to create a complete problem definition  the analyzed problem statement was translated
49 Q0 1267 65 0.101049446 Lucene_47
performance of <B>systems</B> used for data transmission transfer rate of <B>information</B> bits -an asa tutorial standard <B>information</B> thruput as a characteristic of <B>systems</B> performance is discussed  this discussion includes the pertinent aspects of <B>information</B> transfer  of determination of transfer rate of <B>information</B> bits  trib   of residual errors  and of standard measurement conditions  the paper also
49 Q0 3059 66 0.101012334 Lucene_47
  the models are formulated in terms of cpu <B>i</B> o and <B>i</B> o <B>i</B> o overlap and applied to the analysis of these problems  the percentage performance improvement from cpu <B>i</B> o overlap is found to be greatest for <B>systems</B> which are in approximate cpu <B>i</B> o utilization balance and for low degrees of multiprogrammingmodels for parallel processing within programs  application to cpu <B>i</B> o and <B>i</B> o <B>i</B> o overlap
49 Q0 2407 67 0.10028733 Lucene_47
curriculum recommendations for undergraduate programs in <B>information</B> <B>systems</B> the need for education related to <B>information</B> <B>systems</B> in organizations is discussed  and a curriculum is proposed for an undergraduate program  material necessary for such programs is identified  and courses incorporating  management <B>systems</B>  <B>information</B> <B>systems</B>  <B>information</B> analysis  system design  <B>systems</B> analysis 1.52
49 Q0 2741 68 0.0997682 Lucene_47
 <B>systems</B>  <B>i</B>  unstable regimes of operations and  ii  critical computing loads which bring the systemdecomposability  instabilities  and saturation in multiprogramming <B>systems</B> a step-by-step approach to model the dynamic behavior and evaluate the performance of computing <B>systems</B> is proposed  it is <B>based</B> on a technique of variable aggregation and the concept of nearly decomposable system  both
49 Q0 1473 69 0.099167414 Lucene_47
the stability of the fourth order runge-kutta method for the solution of <B>systems</B> of differential equations the problem of the region of stability of the fourth order-runge-kutta method for the solution of <B>systems</B> of differential equations is studied  this region can be characterized by means by the electronic digital computer z22  cacm february  1966 karim  a  <B>i</B>  a  ca660211 jb march 3  1978
49 Q0 1924 70 0.098475136 Lucene_47
 representation  <B>i</B> <B>e</B>  one submatrix or partition per page  in most cases induced fewer page faultsorganizing matrices and matrix operations for paged memory <B>systems</B> matrix representations to the algorithm  cacm march  1969 mckellar  a  c  coffman jr   <B>e</B>  g  matrix algorithms  array processing  paging algorithms  paged memory <B>systems</B>  virtual memory <B>systems</B>  array storage allocation  storage
49 Q0 2479 71 0.0960949 Lucene_47
curriculum recommendations for graduate professional programs in <B>information</B> <B>systems</B>  recommended addendum on <B>information</B> <B>systems</B> administration an addendum to the report of the acm curriculum in the curriculum a course on <B>information</B> <B>systems</B> administration  it is important for two reasons   1 july  1973 mcfarlan  f  w  nolan  r  l  education  management <B>information</B> <B>systems</B>  <B>information</B> <B>systems</B>
49 Q0 2372 72 0.09558681 Lucene_47
on the implementation of security measures in <B>information</B> <B>systems</B> the security of an <B>information</B> banks  management <B>information</B> <B>systems</B> 3.50 3.73 4.12 4.22 4.39 ca720401 jb january 31  1978 1 59 pm existing <B>systems</B>  and serves as a framework for a proposal for general security system implementation within today s languages and operating <B>systems</B>  cacm april  1972 conway  r  w  maxwell  w  l  morgan
49 Q0 3100 73 0.094708644 Lucene_47
  j  rule induction  <B>knowledge</B> acquisition  partial matching  interference  graph matching  learning  induction  <B>knowledge</B> representation  informal <B>retrieval</B>  abstraction  generalization  languagean interference matching technique for inducing abstractions a method for inducing <B>knowledge</B> by abstraction from a sequence of training examples is described  the proposed method  interference
49 Q0 3181 74 0.09432458 Lucene_47
public protection and education with eft research has revealed the existence of widespread misinformation and lack of <B>knowledge</B> about eft among business and government as well as consumers <B>systems</B> will require a coordinated educational effort of considerable scale  in addition  research to the changing environment and consumer needs  cacm december  1979 long  r  electronic funds transfer <B>systems</B>
49 Q0 3169 75 0.09420734 Lucene_47
note on  an optimal evaluation of boolean expressions in an online query system   cacm october  1979 gudes  <B>e</B>  hoffman  a  query  boolean expression  optimal evaluation  <B>information</B> <B>retrieval</B> 3.50 3.70 3.74 ca791002 db january 16  1980 4 52 pm 3168 4 3169 3169 4 3169 2965 5 3169 3169 5 3169 3169 5 3169 3169 5 3169
49 Q0 1937 76 0.093878664 Lucene_47
 system design are described  cacm february  1969 day  r  h  mansfield  m  k  ellis  m  <B>e</B>  data display  <B>information</B> <B>retrieval</B>  graphic display  command languages  report program generation  management <B>retrieval</B> and display system  the command language of the system provides the user with an easy means for specifying data <B>retrieval</B> and display requests  data is displayed as tables and graphs produced
49 Q0 652 77 0.093403764 Lucene_47
use of semantic structure in <B>information</B> <B>systems</B> cacm january  1962 sable  j  d  ca620107 jb march 20  1978 4 37 pm 1324 5 652 652 5 652 652 5 652 652 5 652 634 6 652 652 6 652 653 6 652
49 Q0 1808 78 0.092465 Lucene_47
advanced cryptographic techniques for computers cryptographic techniques which can be used to maintain the confidentiality of <B>information</B> processed by computers are dealt with  special emphasis van tassel  d  cryptographic  cryptanalysis  ciphers secrecy <B>systems</B>  security <B>systems</B>  confidential <B>information</B> processing 1.3 2.12 2.19 3.73 3.81 4.41 ca691204 jb february 15  1978 4 20 pm 1808 5
49 Q0 2542 79 0.091982715 Lucene_47
 evaluation with design and implementation is described  this system is <B>based</B> on a simple  high level the performance <B>information</B> obtained from these routines as feedback  the problems which adversely affect  supervisory <B>systems</B>  debugging  program maintenance  modeling  system integration  simulation 4.0
49 Q0 2406 80 0.09189155 Lucene_47
a data definition and mapping language a data definition language <B>i</B> sa declarative computer and physical aspects of data is increasingly apparent  such languages will be a key <B>systems</B>  as well as in advanced data management <B>systems</B> and distributed data bases  this paper reviews past work of these  generalized  data definition languages are also discussed  cacm december  1973 sibley  <B>e</B>  h
49 Q0 2840 81 0.09189155 Lucene_47
protection in operating <B>systems</B> a model of protection mechanisms in computing <B>systems</B> is presented and its appropriateness is argued  the  safety  problem for protection <B>systems</B> under this model is to determine in a given situation whether a subject can acquire a particular right to an object  in restricted cases  it can be shown that this problem is decidable  <B>i</B> <B>e</B>  there is an algorithm
49 Q0 1745 82 0.09068718 Lucene_47
  1968 dennis  j  b  <B>information</B> networks  <B>information</B> <B>systems</B>  computing and free enterprise in creating the envisioned <B>information</B> service industry is dependent upon three accomplishments   1  the restructuring of our <B>information</B> processing industry so that a clear division of costs is made among computing  communications  and the development of <B>information</B> services   2  the wide use
49 Q0 1625 83 0.09027308 Lucene_47
on the automatic simplification of source-language programs methods of simplification that can be applied automatically to programs written in an algol-like language are discussed  the simplifications are <B>based</B> on the form of the program and the <B>knowledge</B> obtained by a processor  without any of automatic program improvement are suggested  cacm march  1967 clark  <B>e</B>  r  ca670304 jb february 28
49 Q0 2522 84 0.08983451 Lucene_47
 to the processes competing for them  recent research in time-sharing paging <B>systems</B> has developed the working set model for program behavior  and are source allocation strategy <B>based</B> on this model has been of a dispatcher <B>based</B> on the working set principle  presents data to permit analysis of its behavior rodriguez-rosell  j  dupuy  j  p  working set  dispatcher  scheduler  time-sharing <B>systems</B>  resource
49 Q0 2999 85 0.08948683 Lucene_47
 as wraps world bank <B>retrieval</B> and array processing system   cacm february  1977 muller  m  <B>e</B>  array processing  table processing  statistical analysis  data <B>retrieval</B>  data processing  syntax for dataan approach to multidimensional data array processing by computer some recent work on the development of general-purpose computer-<B>based</B> statistical and data processing capabilities for handling
49 Q0 2577 86 0.08895273 Lucene_47
an on-site data management system application in field archaeology cacm november  1974 brown  j  a  werner  b  apl-plus  archaeology  koster prehistoric site data management  <B>retrieval</B> <B>systems</B> 3.36 3.70 3.73 3.89 ca741107 jb january 16  1978 10 15 am 2577 5 2577 2577 5 2577 2577 5 2577
49 Q0 2345 87 0.08852145 Lucene_47
curriculum recommendations for graduate professional programs in <B>information</B> <B>systems</B> the need for education related to <B>information</B> <B>systems</B> in organizations is discussed  and a curriculum is proposed  1972 ashenhurst  r  l  education  management <B>systems</B>  <B>systems</B> analysis  management <B>information</B> <B>systems</B>  <B>information</B> <B>systems</B> development  <B>information</B> analysis  system design 1.52 3.51 ca720515 jb january
49 Q0 2750 88 0.08846029 Lucene_47
a cost oriented algorithm for data set allocation in storage hierarchies data set allocation in today s multilevel storage <B>systems</B> is usually <B>based</B> on qualitative  ad hoc decisions  while it would be desirable to obtain an optimal solution to this allocation problem  it is clear that the number  m  <B>e</B> wang  c  p  ling  h  data set allocation  hierarchical storage  storage system configuration
49 Q0 2553 89 0.08812013 Lucene_47
the practical aspect of computer science education-discussion cacm january  1973 blount  s  <B>e</B>  education  computer engineering  computer science curriculum  <B>systems</B> design 1.52 6.0 ca730108 jb january 24  1978 4 09 pm 2553 5 2553 2553 5 2553 2553 5 2553
49 Q0 1996 90 0.087949134 Lucene_47
<B>systems</B> of hyperbolic pde  d3   algorithm 392  cacm september  1970 smith  r  r  mccall  d  hyperbolic p d <B>e</B>   characteristic  extrapolation  second order p d <B>e</B>   quasilinear p  d  <B>e</B>  5.17 ca700909 jb february 10  1978 10 08 am 1996 5 1996 1996 5 1996 1996 5 1996
49 Q0 3028 91 0.087618396 Lucene_47
the manchester mark <B>i</B> and atlas  a his torical perspective in 30 years of computer design at manchester university two <B>systems</B> stand out  the mark <B>i</B>  developed over the period 1946-49  and the atlas  paging  virtual storage  extra codes  compilers  operating <B>systems</B>  ferranti  manchester mark <B>i</B>  atlas-generation and store management have evolved in the progression from mark <B>i</B> to atlas  the wider impact
49 Q0 1164 92 0.08677149 Lucene_47
emulation of large <B>systems</B> the conversion problem and a new technique called emulation are discussed  the technique of emulation is developed and includes sections on both the central processing unit  cpu  and the input output unit  <B>i</B> o   this general treatment is followed by three sections for the ibm 7074  7080 and 7090 <B>systems</B> on ibm system 360  cacm december  1965 tucker  s  g
49 Q0 3142 93 0.08565152 Lucene_47
 organizations and their public  also the <B>role</B> of poor man agement packages including poor software is indicated  while most management <B>systems</B> may be adequate  results of the survey raise concerns for instance   cacm may  1979 sterling  t  errors  <B>systems</B> errors  billing errors  management <B>systems</B>
49 Q0 2625 94 0.085317574 Lucene_47
  a computer using capability-<B>based</B> addressing may be substantially superior to present <B>systems</B>  shared addresses  <B>information</B> sharing  operating <B>systems</B>  computer utility  segmentation  taggedcapability-<B>based</B> addressing various addressing schemes making use of segment tables are examined  these inadequacies are traced to the lack of an efficient absolute address for objects in these <B>systems</B>  the direct
49 Q0 3088 95 0.08477239 Lucene_47
general equations for idealized cpu-<B>i</B> o overlap configurations general equations are derived for estimating the maximum possible utilization of main storage partitions  cpu and <B>i</B> o devices under different conditions in an idealized cpu-<B>i</B> o overlap model of multiprogrammed computer <B>systems</B>  the equations are directly applicable to any configuration consisting of sets of identical cpu s <B>i</B> o
49 Q0 2852 96 0.08354287 Lucene_47
 in computer science or in <B>information</B> <B>systems</B> mcfarlan and nolan have made a strong case for adding a course on <B>information</B> <B>systems</B> administration to the 13 courses proposed by the acm curriculum committee on computer education for management for graduate professional programs in <B>information</B> <B>systems</B> professional programs in <B>information</B> <B>systems</B> or for graduate professional programs in computer science
49 Q0 3137 97 0.083361536 Lucene_47
a methodology for the design of distributed <B>information</B> <B>systems</B> a macro model of a distributed <B>information</B> system in presented  the model describes the major costs of using an <B>information</B> system from the perspective of the end-user  the making evident the effect of various design and operating parameters on overall cost per transaction  the technique is illustrated by application to the design
49 Q0 1844 98 0.08283823 Lucene_47
 system if compatible computers are used  cacm october  1969 baskin  h  b  horowitz  <B>e</B>  b  tennison  r  d  rittenhouse  l  <B>e</B>  multiple terminal <B>systems</B>  terminal oriented <B>systems</B>  multiple processor <B>systems</B>  high availability  conversational <B>systems</B>  general purpose time-sharing <B>systems</B>  real-time  economic configurations are possible for a range of <B>systems</B> sizes that span at least one order of magnitude
49 Q0 1831 99 0.08243142 Lucene_47
a comment on optimal tree structures cacm october  1969 stanfel  l  <B>e</B>  <B>information</B> <B>retrieval</B>  file searching  tree structures  double chaining 3.70 3.73 3.74 ca691015 jb february 15  1978 1 31 pm 1831 5 1831 1831 5 1831 1831 5 1831 2257 5 1831 2360 5 1831 849 6 1831 849 6 1831 1831 6 1831 1831 6 1831 1936 6 1831 1936 6 1831 2360 6 1831
49 Q0 1349 100 0.08224641 Lucene_47
  many institutions plan to acquire complex time-shared <B>systems</B> in the near future  in the author s  the paucity of professional interchange of <B>knowledge</B>  the effects of these constraints are explicated  cacm
*************Query 50*************************

50 Q0 1811 1 0.48677123 Lucene_47
a case study in programming for <B>parallel</B>-<B>processors</B> an affirmative partial answer is provided to the question of whether it is possible to program <B>parallel</B>-processor computing systems to efficiently decrease execution time for useful problems  <B>parallel</B>-processor systems are multiprocessor systems in which several of the <B>processors</B> can simultaneously execute separate tasks of a single job  thus
50 Q0 3075 2 0.39546818 Lucene_47
fast <B>parallel</B> sorting algorithms a <B>parallel</B> bucket-sort algorithm is presented that requires time o log n  and the use of n <B>processors</B>  the algorithm makes use of a technique that requires more space than the product of <B>processors</B> and time  a realistic model is used model is used in which no memory 1   1 k <B>processors</B>  for k an arbitrary integer  the model of computation for this procedure permits
50 Q0 3156 3 0.39546818 Lucene_47
computing connected components on <B>parallel</B> computers we present a <B>parallel</B> algorithm which uses n2 <B>processors</B> to find the connected components of an undirected graph with n vertices in time o log2n   an o log2n  time bound also can be achieved using only n n  log2n   <B>processors</B>  the algorithm can be used to find the transitive closure of a symmetric boolean matrix  we assume that the <B>processors</B>
50 Q0 2714 4 0.3883885 Lucene_47
merging with <B>parallel</B> <B>processors</B> consider two linearly ordered sets a  b   a  m   b  n  m lt  n  and p  p lt  m  <B>parallel</B> <B>processors</B> working synchronously  the paper presents an algorithm for merging a and b with the p <B>parallel</B> <B>processors</B>  which requires at most 2 log2  2m 1    3m p     m p  log2 favorably with the previous best <B>parallel</B> merging algorithm  batcher s algorithm  which requires n p     m
50 Q0 2114 5 0.38347292 Lucene_47
a formal system for <B>information</B> <B>retrieval</B> from files a generalized file structure is provided by which the concepts of keyword  index  record  file  directory  file structure  directory decoding  and record <B>retrieval</B> are defined and from which some of the frequently used file structures  directory search  serial processing of lists  prime keyword  <B>parallel</B> processing of lists 3.70 3.73 3.74
50 Q0 2288 6 0.37654376 Lucene_47
 of an <B>information</B> <B>retrieval</B> system with a minimal search time and no redundant storage  some important theorems an <B>information</B> <B>retrieval</B> system based on the consecutive <B>retrieval</B> property is also discussed  cacm september  1972 ghosh  s  p  file organization  consecutive storage  consecutive <B>retrieval</B>  <B>information</B>file organization  the consecutive <B>retrieval</B> property the consecutive <B>retrieval</B> property
50 Q0 1680 7 0.3692628 Lucene_47
  programming  and <B>information</B> <B>retrieval</B>  it is written in fortran iv  g  for the ibm system 360  model instruction  tutorial systems  programming  simulation  modeling  <B>information</B> <B>retrieval</B> operating  of the operating system  language <B>processors</B> and compilers  simulation models  mathematical solution
50 Q0 2967 8 0.33648688 Lucene_47
-addressable memory  graphics  <B>information</B> <B>retrieval</B>  data structures  software evaluation  hardware evaluation  <B>parallel</B> processing  database management 3.71 3.72 3.73 3.74 4.34 4.6 6.22 8.2 ca770505
50 Q0 891 9 0.32335436 Lucene_47
everyman s <B>information</B> <B>retrieval</B> system the <B>information</B> <B>retrieval</B> problem whose solution  is quite general and is applicable to many different types of <B>retrieval</B> problems  further the method of solution makes it possible for many groups who have previously dismissed an <B>information</B> <B>retrieval</B>  for the present solution makes it possible to install an <B>information</B> <B>retrieval</B> program in less than
50 Q0 2570 10 0.32295823 Lucene_47
a comparison of list schedules for <B>parallel</B> processing systems the problem of scheduling two or more <B>processors</B> to minimize the execution time of a program which consists of a set of partially ordered tasks is studied  cases where task execution times are deterministic and others in which execution is presented  cacm december  1974 adam  t  l  chandy  k  m  dickson  j  r  <B>parallel</B> processing
50 Q0 1457 11 0.31614745 Lucene_47
data manipulation and programming problems in automatic <B>information</B> <B>retrieval</B> automatic <B>information</B> <B>retrieval</B> programs require the manipulation of a variety of different data structures  including are made for the design of programming facilities to aid in <B>information</B> <B>retrieval</B>  cacm march  1966 in automatic <B>information</B> systems are first briefly reviewed  a variety of data representations
50 Q0 1830 12 0.31425786 Lucene_47
<B>retrieval</B> times for a packed direct access inverted file cacm october  1969 bayes  a  j  <B>information</B> <B>retrieval</B>  direct access memory  data base  inverted list 3.70 4.41 ca691016 jb february 15  1978 1 27 pm 1830 5 1830 1830 5 1830 1830 5 1830
50 Q0 2278 13 0.31018358 Lucene_47
on foster s <B>information</B> storage and <B>retrieval</B> using avl trees cacm september  1972 tan  k  c  binary trees  search trees  <B>information</B> storage  <B>information</B> <B>retrieval</B> 3.70 3.73 3.74 ca720912 jb january 27  1978 4 10 pm 2278 5 2278 2278 5 2278 2278 5 2278 2455 5 2278 2278 6 2278 2388 6 2278
50 Q0 651 14 0.3019318 Lucene_47
a survey of languages and systems for <B>information</B> <B>retrieval</B> cacm january  1962 grems  m  ca620108 jb march 20  1978 4 36 pm 651 5 651 651 5 651 651 5 651
50 Q0 2175 15 0.30044508 Lucene_47
 the expression is to be executed  these subexpressions can be evaluated in serials  in <B>parallel</B> with a  cache  buffer memory  if the number of subexpressions which can be executed in <B>parallel</B> exceeds the number of available <B>processors</B>  then execution of some of these subexpressions must  <B>parallel</B> processing  cache  arithmetic expressions  subexpression ordering  computational trees  compilers
50 Q0 3134 16 0.27361244 Lucene_47
the use of normal multiplication tables for <B>information</B> storage and <B>retrieval</B> this paper describes a method for the organization and <B>retrieval</B> of attribute based <B>information</B> systems  using the normal an d <B>retrieval</B> of <B>information</B> are described  this method is particularly suitable for queries of <B>information</B> systems  the normal multiplication table method yields far more rapid <B>retrieval</B>
50 Q0 1699 17 0.26945135 Lucene_47
experimental evaluation of <B>information</B> <B>retrieval</B> through a teletypewriter experiments designed to evaluate the capabilities of mechanized <B>information</B> <B>retrieval</B> systems  with emphasis on interactive of the research is that an <B>information</B> <B>retrieval</B> system that provides for man-machine dialogue at a remote  bergman  s  franks  w  rubinoff  e  <B>information</B> <B>retrieval</B> testing  <B>information</B> system evaluation
50 Q0 2516 18 0.2614806 Lucene_47
hierarchical storage in <B>information</B> <B>retrieval</B> a probabilistic analysis is employed to determine the effect of hierarchical storage organizations on <B>information</B> <B>retrieval</B> operations  the data storage hardware is assumed to consist on n-levels of linearly connected memory hardware with increasing  1973 salasin  j  <B>information</B> <B>retrieval</B>  hierarchical storage 3.70 3.72 3.73 3.74 3.79 3.90 6.20
50 Q0 2497 19 0.25867742 Lucene_47
synchronizing <B>processors</B> with memory-content-generated interrupts implementations of the  lock-unlock  method of synchronizing <B>processors</B> in a multiprocessor system usually require uninterruptable of the <B>processors</B> and a special  read-interlock  cycle in the repertoire of the memory modules  when  debugging  <B>parallel</B> processing  associative memories  microprogramming 4.32 6.29 ca730603 jb january
50 Q0 2990 20 0.25601572 Lucene_47
effective <B>information</B> <B>retrieval</B> using term accuracy the performance of <B>information</B> <B>retrieval</B>  1977 yu  c  t  salton  g  <B>information</B> <B>retrieval</B>  automatic indexing  content analysis  term accuracy on measuring the <B>retrieval</B> performance of an average user query  unfortunately  formal proofs are difficult to construct for the average case  in the present study  <B>retrieval</B> evaluation is based
50 Q0 1514 21 0.25363058 Lucene_47
on the expected gain from adjust ing matched term <B>retrieval</B> systems a file adjustment procedure based on maximizing the bayes expected gain proposed for matched term <B>retrieval</B> systems  the expected of an adjustment statistic  an example evaluates the gain parameters for a typical <B>information</B> <B>retrieval</B> system  cacm november  1967 shumway  r  h  ca671106 jb february 26  1978 2 59 pm 1514 5 1514 1514
50 Q0 2070 22 0.2516098 Lucene_47
a formal system for <B>information</B> <B>retrieval</B> from files cacm april  1970 hsiao  d  harary  f  ca700414 jb february 13  1978 2 37 pm 2070 5 2070 2070 5 2070 2070 5 2070
50 Q0 239 23 0.2516098 Lucene_47
inefficiency of the use of boolean functions for <B>information</B> <B>retrieval</B> systems cacm december  1961 verhoeff  j  goffman  w  belzer  j  ca611211 jb march 15  1978 10 10 pm 239 5 239 239 5 239 239 5 239
50 Q0 275 24 0.2516098 Lucene_47
dynamic storage allocation for an <B>information</B> <B>retrieval</B> system cacm october  1961 sams  b  h  ca611006 jb march 16  1978 12 58 pm 275 5 275 275 5 275 275 5 275
50 Q0 292 25 0.2516098 Lucene_47
an <B>information</B> <B>retrieval</B> language for legal studies cacm september  1961 kehl  w  b  horty  j  f  bacon  c  r  t  mitchell  d  s  ca610902 jb march 16  1978 9 51 pm 292 5 292 292 5 292 292 5 292
50 Q0 1032 26 0.24319312 Lucene_47
theoretical considerations in <B>information</B> <B>retrieval</B> systems <B>information</B> storage and <B>retrieval</B> systems are composed of three major components   a  identification of <B>information</B> and tagging it for effective <B>retrieval</B>   b  searching strategy  how to enter the file to circumvent the scanning of nonrelevant material  and  c  file organization to make access to <B>information</B> efficient  for identification
50 Q0 2631 27 0.24319312 Lucene_47
an <B>information</B>-theoretic approach to text searching in direct access systems using direct access computer files of bibliographic <B>information</B>  an attempt is made to overcome one of the problems often associated with <B>information</B> <B>retrieval</B>  namely  the maintenance and use of large dictionaries  file organization  direct access  <B>information</B> <B>retrieval</B>  character string  bit vector 3.42 3.70 3.73
50 Q0 3012 28 0.24234092 Lucene_47
the use of an interactive <B>information</B> storage and <B>retrieval</B> system in medical research this paper presents the results of a study of the use of an interactive computerized storage and <B>retrieval</B> system  a monitor built into the computer system provided usage data for the study  additional data  implementation  system use  <B>information</B> storage and <B>retrieval</B> system 2.10 3.50 3.72 ca780301 jb march 28  1978
50 Q0 1681 29 0.2403547 Lucene_47
easy english a language for <B>information</B> <B>retrieval</B> through a remote typewriter console easy english  on-line searching  remote console communication  <B>information</B> <B>retrieval</B>  man-machine communication  remote terminal communication  translator  document <B>retrieval</B>  conversational mode  <B>information</B> remote typewriter console  it has been developed for <B>retrieval</B> of documents from a computerized data
50 Q0 2519 30 0.23825195 Lucene_47
on the problem of communicating complex <B>information</B> the nature of the difficulty involved in communicating mathematical results between scientists using a computer based <B>information</B> <B>retrieval</B> system is examined  the problem is analyzed in terms of psychological and <B>information</B>-processing processes of the structure inherent in the <B>information</B> we are communicating  and a sophisticated interactive system
50 Q0 2140 31 0.21927992 Lucene_47
  <B>information</B> <B>retrieval</B>  query  multi-attribute <B>retrieval</B>  file update 3.73 3.74 3.79 ca711203 jb<B>retrieval</B>-update speed tradeoffs using combined indices in a paper in the november 1970  this technique permitted decreased <B>retrieval</B> time at the cost of increased storage space  this paper examines combined indices under conditions of file usage with different fractions of <B>retrieval</B> and update
50 Q0 1937 32 0.21739763 Lucene_47
 display  <B>information</B> <B>retrieval</B>  graphic display  command languages  report program generation  managementcodas  a data display system codas  a customer oriented data system  is a user-oriented data <B>retrieval</B> and display system  the command language of the system provides the user with an easy means for specifying data <B>retrieval</B> and display requests  data is displayed as tables and graphs produced
50 Q0 2711 33 0.21739763 Lucene_47
  s  automatic <B>information</B> <B>retrieval</B>  automatic indexing  content analysis  document space 3.71 3.73a vector space model for automatic indexing in a document <B>retrieval</B>  or other pattern matching environment where stored entities  documents  are compared with each other or with incoming patterns be expressible as a function of the density of the object space  in particular  <B>retrieval</B> performance
50 Q0 2882 34 0.21126065 Lucene_47
 list  threaded list  cellular list  <B>information</B> <B>retrieval</B>  database organizations  query complexitya stochastic evaluation model for database organization in data <B>retrieval</B> systems experimental work in the valuation of large scale data <B>retrieval</B> systems has been scarce due to its difficulty and prohibitive cost  this paper discusses a simulation model of a data <B>retrieval</B> system which has
50 Q0 1627 35 0.2052274 Lucene_47
 of certain data management and <B>information</B> <B>retrieval</B> systems  the concept of level changing is introduced the <B>information</B> for efficient use of the multilevel store is presented  cacm march  1967 morenoff  e
50 Q0 2160 36 0.20142776 Lucene_47
  <B>information</B> <B>retrieval</B>  inverted file  key words  multilist  queries  searches 3.70 3.73 3.74 ca710904 <B>retrieval</B> is proposed in this paper  it allows queries involving arbitrary boolean functions of the allowed queries  thus  for example  the structure for <B>retrieval</B> on the basis of ranges of values of a given attribute would be very different from one where only <B>retrieval</B> on the basis
50 Q0 2455 37 0.20142776 Lucene_47
 avl trees and with balanced trees on the basis of mean <B>retrieval</B> time  of amount of restructuring expected  and on the worst case of <B>retrieval</B> time  it is shown that  by permitting imbalances of up to five units  the <B>retrieval</B> time is increased a small amount while the amount of restructuring correspondence is found  cacm august  1973 foster  c  c  avl trees  balanced trees  <B>information</B> storage
50 Q0 2846 38 0.20142776 Lucene_47
  to be used in <B>information</B> <B>retrieval</B> systems  it has the same underlying m-ary tree structure as a trie  in the analysis part of the paper it will be shown that for a collection of n keys the <B>retrieval</B> time  measured of the order n  m log2 n  bits  this improvement in storage requirements and <B>retrieval</B> time is achieved  trie  <B>retrieval</B> time  storage requirement  keys 3.70 3.74 3.75 ca760707 jb january 4  1978 12 26 pm
50 Q0 1675 39 0.20128787 Lucene_47
a note on a relevance estimate and its improvement in this paper the effect of iterating the improvement procedure is examined  it is shown that applications of the improvement factor beyond the first time are ineffectual  and that the factor is but a scale factor  cacm november  1968 korfhage  r  r  <B>information</B> <B>retrieval</B>  relevance  indexing  classification 3.70 3.71 3.74 ca681104 jb february 21
50 Q0 2532 40 0.20128787 Lucene_47
on harrison s substring testing technique cacm march  1973 bookstein  a  string  substring  hashing  <B>information</B> storage and <B>retrieval</B> 3.74 5.30 5.5 ca730307 jb january 24  1978 10 30 am 2532 4 2532 2631 4 2532 2746 4 2532 3001 4 2532 2139 5 2532 2532 5 2532 2532 5 2532 2532 5 2532 2631 5 2532 2139 6 2532 2532 6 2532
50 Q0 2976 41 0.20128787 Lucene_47
approximating block accesses in database organizations cacm april  1977 yao  s  b  database  inverted file organization  database performance and measurement  <B>information</B> <B>retrieval</B>  query answering 3.70 3.72 4.33 ca770406 jb december 29  1977 5 06 am 2976 4 2976 2976 4 2976 2976 4 2976 2688 5 2976 2765 5 2976 2882 5 2976 2976 5 2976 2976 5 2976 2976 5 2976
50 Q0 3168 42 0.20128787 Lucene_47
comment on  an optimal evaluation of boolean expressions in an online query system   cacm october  1979 laird  p  query  boolean expression  <B>information</B> <B>retrieval</B>  file organization 3.53.70 3.73 3.74 ca791001 db january 16  1980 4 50 pm 3168 4 3168 3168 4 3168 3169 4 3168 2965 5 3168 3002 5 3168 3168 5 3168 3168 5 3168 3168 5 3168
50 Q0 3169 43 0.20128787 Lucene_47
note on  an optimal evaluation of boolean expressions in an online query system   cacm october  1979 gudes  e  hoffman  a  query  boolean expression  optimal evaluation  <B>information</B> <B>retrieval</B> 3.50 3.70 3.74 ca791002 db january 16  1980 4 52 pm 3168 4 3169 3169 4 3169 2965 5 3169 3169 5 3169 3169 5 3169 3169 5 3169
50 Q0 634 44 0.20128787 Lucene_47
manipulation of trees in <B>information</B> <B>retrieval</B>  cacm february  1962 salton  g  ca620209 jb march 20  1978 3 44 pm 1087 4 634 634 4 634 931 5 634 1324 5 634 329 5 634 634 5 634 634 5 634 634 5 634 202 6 634 396 6 634 634 6 634 634 6 634 652 6 634 653 6 634
50 Q0 655 45 0.20128787 Lucene_47
comit as an ir language many of the features that make comit a good all around symbol manipulation language also render it well suited to various types of <B>information</B> <B>retrieval</B> programs  presented here is a general discussion of this unique and different programming language and an examination of some of its applications  cacm january  1962 yngve  v  h  ca620104 jb march 20  1978 4 46 pm 1145 5
50 Q0 2307 46 0.19386473 Lucene_47
 for <B>information</B> <B>retrieval</B> and for the control of dynamic library collections in which new items is then outlined in which clustered files are searched and <B>information</B> is retrieved following on user needs  and for a continuous reorganization of the stored <B>information</B> as a function search and <B>retrieval</B>  iterative searching  mechanized library processing  collection growth
50 Q0 1747 47 0.19328739 Lucene_47
 clock  the synchronization of <B>parallel</B> processes  protection in multiprogrammed systems  protection  memory protection  <B>information</B> security  <B>information</B> privacy  computing reliability  debugging  program debugging  program testing  <B>parallel</B> processing  <B>parallel</B> programming
50 Q0 1846 48 0.19328739 Lucene_47
on simulating networks of <B>parallel</B> processes in which simultaneous events may occur some problems  the technique will either find a method of simulating the <B>parallel</B> events or report by extending the <B>information</B> available to the solution technique  but in many cases the technique becomes computationally unfeasible when the additional <B>information</B> is provided  cacm september  1969 parnas  d
50 Q0 1927 49 0.19177288 Lucene_47
  <B>information</B> science  <B>information</B> organization  <B>information</B> <B>retrieval</B>  data <B>retrieval</B>  language analysis  <B>information</B> processing 1.52 3.42 3.70 ca690211 jb february 20  1978 9 50 am 1720 4 1927 1927 4<B>information</B> science in a ph  computer science program this report contains recommendations on a sample course curriculum in the general area of <B>information</B> organization and <B>information</B> system design
50 Q0 1725 50 0.18833557 Lucene_47
  ordered lists  ordered <B>information</B> <B>retrieval</B>  ordered <B>retrieval</B> theorem  column digit values  digita simple proof of lewin s ordered-<B>retrieval</B> theorem for associative memories an efficient method of ordered <B>retrieval</B> of binary words from an associative memory  as described by lewin  is based  memory access frequency  ordered <B>retrieval</B> efficiency  access frequency proof  <B>retrieval</B> theorem
50 Q0 1652 51 0.18783334 Lucene_47
 of the <B>information</B> channel linking the system and the system user  the code has direct application to problems in area such as <B>information</B> <B>retrieval</B>  document classification  computer-aided teaching and text editinga code for non-numeric <B>information</B> processing applications in online systems a code has been specifically designed to simplify the internal <B>information</B> processing operations within an online computer
50 Q0 2484 52 0.18783334 Lucene_47
  data base  data-base management  <B>information</B> <B>retrieval</B>  <B>information</B> structure  file organizationa note on <B>information</B> organization and storage since the logical structure of a data base can be represented by a tree or graph  it is quite natural for us to view the process of designing a data in different <B>information</B> structures  as list  tree  ring  etc  thus the problem of <B>information</B>
50 Q0 1959 53 0.18543756 Lucene_47
an interrupt based organization for management <B>information</B> systems a programming structure the new organization which is proposed for management <B>information</B> systems  cacm december  1970 morgan  h  l  management <B>information</B> systems  integrated data processing  supervisors  interrupts monitoring systems  supervisory systems  interrupt scheduling  <B>parallel</B> processing 3.51 4.22 4.32 ca701204 jb
50 Q0 1236 54 0.18116468 Lucene_47
the smart automatic document <B>retrieval</B> system-an illustration a fully automatic document <B>retrieval</B> system operating on the ibm 7094 is described  the system is characterized by the fact that several is used in the <B>retrieval</B> process by leaving the exact sequence of operations initially unspecified can in general be relied upon to retrieve the wanted <B>information</B>  a typical search request is used
50 Q0 2561 55 0.18116468 Lucene_47
a heuristic approach to inductive inference in fact <B>retrieval</B> systems heuristic procedures are presented which have been developed to perform inferences by generalizing from available <B>information</B> clustering algorithms  they are implemented in a model fact <B>retrieval</B> system which uses a formal  inference  inductive inference  clustering  fact <B>retrieval</B>  heuristics 3.61 3.71 3.79 ca741213 jb
50 Q0 2947 56 0.18116468 Lucene_47
  <B>information</B> <B>retrieval</B>  text editing  minicomputers  crts time sharing  bibliographic search and <B>retrieval</B>sitar  an interactive text processing system for small computers sitar  a low-cost in teractive text handling and text analysis system for nontechnical users  is in many ways comparable to in teractive bibliographical search and <B>retrieval</B> systems  but has several additional features
50 Q0 1359 57 0.177915 Lucene_47
data filtering applied to <B>information</B> storage and <B>retrieval</B> applications manipulation of data strings is the most complex processing function in <B>information</B> storage and <B>retrieval</B> applications  data string manipulation is discussed within the context of an interpretive processing environment controlled by the use of procedural directives  the sequence of procedural directives is derived from a job
50 Q0 1935 58 0.177915 Lucene_47
 method described is binary in nature and offers new potential for <B>information</B> <B>retrieval</B> systems  cacm february  1969 arora  s  r  dent  w  t  binary pattern  file examination  graph theory  <B>information</B> <B>retrieval</B>  mathematical model  partitioning  probabilistic method  random sequencing  search
50 Q0 2865 59 0.17665851 Lucene_47
verifying properties of <B>parallel</B> programs  an axiomatic approach an axiomatic method for proving a number of properties of <B>parallel</B> programs is presented  hoare has given a set of axioms for partial for the use of auxiliary variables  which are added to a <B>parallel</B> program as an aid to proving it correct  the <B>information</B> in a partial correctness proof can be used to prove such properties as mutual
50 Q0 1831 60 0.17612687 Lucene_47
a comment on optimal tree structures cacm october  1969 stanfel  l  e  <B>information</B> <B>retrieval</B>  file searching  tree structures  double chaining 3.70 3.73 3.74 ca691015 jb february 15  1978 1 31 pm 1831 5 1831 1831 5 1831 1831 5 1831 2257 5 1831 2360 5 1831 849 6 1831 849 6 1831 1831 6 1831 1831 6 1831 1936 6 1831 1936 6 1831 2360 6 1831
50 Q0 2781 61 0.17612687 Lucene_47
the algorithm sequential access method  an alternative to index sequential cacm march  1975 whitt  j  d  sullenberger  a  g  keys  direct access method  sequential access method  randomizing <B>information</B> <B>retrieval</B> 3.7 ca750307 jb january 9  1978 4 37 pm 2258 4 2781 2319 4 2781 2313 4 2781 2359 4 2781 2437 4 2781 2552 4 2781 2781 4 2781 2860 4 2781 2991 4 2781 2203 5 2781 2781 5 2781 2781 5 2781
50 Q0 2139 62 0.17590919 Lucene_47
  substring  hashing  subset  signature  <B>information</B> compression  <B>information</B> <B>retrieval</B>  searching 3.74
50 Q0 1601 63 0.173055 Lucene_47
<B>parallel</B> numerical methods for the solution of equations classical iterative procedures iteration are computationally independent  making the methods of interest in a <B>parallel</B> processing environment  convergence is insured by extracting the  best <B>information</B>  at each iteration  several families of numerical procedures which use the technique of the procedures in a <B>parallel</B> processing
50 Q0 1527 64 0.16254073 Lucene_47
a grammar base question answering procedure the subject of this paper is a procedure for the automatic <B>retrieval</B> of certain segments of stored <B>information</B>  either explicitly or implicitly represented for this set of sentences  sentence recognition itself is a procedure for retrieving <B>information</B>  when the recognition function succeeds  its value represents the requested <B>information</B>  cacm october  1967
50 Q0 2723 65 0.1616734 Lucene_47
 garbage collector are presented and discussed  the simple case of two <B>processors</B>  one performing lisp  the more complex cases involving several list <B>processors</B> and one or more garbage collection <B>processors</B> are also briefly discussed  cacm september  1975 steele  g  l  jr  garbage collection  storage reclamation  reclaimer  storage allocation  multiprocessing  synchronization  semaphores  <B>parallel</B>
50 Q0 2141 66 0.1509659 Lucene_47
  cacm december  1971 amidon  e  l  akin  g  s  data compression  map storage  <B>information</B> <B>retrieval</B>
50 Q0 2258 67 0.1509659 Lucene_47
 storage  <B>information</B> <B>retrieval</B> 3.7 3.72 3.73 3.74 3.79 4.9 ca721111 jb january 27  1978 1 31 pm 2258 4
50 Q0 2412 68 0.1509659 Lucene_47
comment on brent s scatter storage algorithm cacm november  1973 feldman  j  a  low  j  r  hashing  <B>information</B> storage and <B>retrieval</B>  scatter storage  searching  symbol table 3.7 3.73 3.74 4.1 4.9 ca731114 jb january 19  1978 4 40 pm 2412 4 2412 3053 4 2412 3083 4 2412 2412 5 2412 2412 5 2412 2412 5 2412 2543 5 2412 3053 5 2412 1329 6 2412 1785 6 2412 1973 6 2412 1992 6 2412 2107 6 2412 2109 6
50 Q0 2493 69 0.1509659 Lucene_47
 june  1973 shneiderman  b  data base  reorganization  files  <B>information</B> <B>retrieval</B> 3.73 ca730607 jb
50 Q0 2530 70 0.1509659 Lucene_47
an algorithm for extracting phrases in a space-optimal fashion  z   algorithm a444  cacm march  1973 wagner  r  a  <B>information</B> <B>retrieval</B>  coding  text compression 3.70 5.6 ca730309 jb january 24  1978 10 26 am 1973 4 2530 1992 4 2530 2138 4 2530 2203 4 2530 2251 4 2530 2530 4 2530 2530 4 2530 2537 4 2530 2543 4 2530 2559 4 2530 2573 4 2530 2623 4 2530 2819 4 2530 2991 4 2530 3053 4 2530 3083 4
50 Q0 1409 71 0.14870173 Lucene_47
 of <B>information</B> within the 22 mc memory allows a simple interface with the 340 kc arithmetic unit  which  the arithmetic unit has a command structure similar to large <B>parallel</B> machines  and uses flip-flop
50 Q0 1456 72 0.146591 Lucene_47
storage and <B>retrieval</B> of aspects of meaning in directed graph structures an experimental system that uses lisp to make a conceptual dictionary is described  the dictionary associates with each english word the syntactic <B>information</B>  definitional material  and references to the contexts in which vehicle for research on the logic of question answering  examples of methods of inputting <B>information</B>
50 Q0 1700 73 0.146591 Lucene_47
peekabit  computer offspring of punched card peekaboo  for natural language searching the  peekaboo  idea from punched card <B>information</B> <B>retrieval</B> methods has been mated with the idea of superimposed punching to produce a programming technique which cuts computer run time in half on a test search coding  natural language searching text searching  <B>information</B> compaction  computer search technique
50 Q0 1711 74 0.146591 Lucene_47
  <B>information</B> is given on patents  copyrights and trade secret protection for programs  and the problem of using copyrighted material in <B>information</B> storage and <B>retrieval</B> systems  including the pending
50 Q0 2623 75 0.146591 Lucene_47
 <B>information</B> coding techniques  cacm august  1974 hahn  b  file maintenance  <B>information</B> <B>retrieval</B>
50 Q0 2795 76 0.146591 Lucene_47
  in generating sentences from meaning structures  the program employs both the <B>information</B> <B>retrieval</B> in discrimination nets   2  <B>information</B> relating conceptual to syntactic roles  stored in a word-sense
50 Q0 440 77 0.146591 Lucene_47
 of identifying <B>information</B> that are individually unreliable but that may collectively be of considerable discriminating power  rules that can be applied generally to name <B>retrieval</B> systems have been for demographic research purposes  these rules are described  and the ways in which <B>information</B>
50 Q0 944 78 0.146591 Lucene_47
storage and search properties of a tree-organized memory system a memory with list properties  1  may be used to construct numeric  alphabetic or alphanumeric trees  such trees have <B>information</B> storage and <B>retrieval</B> properties applicable to problems involving large quantities of data or to problems where the quantity  word length and distribution of stored <B>information</B> is not known a priori
50 Q0 670 79 0.14398883 Lucene_47
 cooperatives  more challenging are questions relating to off-premises <B>processors</B>  particularly with respect to the obligation not to disclose <B>information</B> concerning a bank s customers  the adequacy
50 Q0 2451 80 0.14233202 Lucene_47
design of tree structures for efficient querying a standard <B>information</B> <B>retrieval</B> operation is to determine which records in a data collection satisfy a given query expressed in terms of data values file illustrates the concepts  cacm september  1973 casey  r  g  tree file  <B>information</B> storage and <B>retrieval</B>  clustering  search  data structure  data management  query answering 3.62 3.74 ca730904
50 Q0 2722 81 0.14233202 Lucene_47
 uses are given  cacm september  1975 bently  j  l  associative <B>retrieval</B>  binary search trees  key  attribute  <B>information</B> <B>retrieval</B> system  nearest neighbor queries  partial match queries  as a data structure for storage of <B>information</B> to be retrieved by associative searches  the k-d tree
50 Q0 1976 82 0.14099944 Lucene_47
 november  1970 lum  v  y  file organization  secondary index files  inverted files  <B>information</B> <B>retrieval</B>  data management  access method  secondary keys  storage with buckets  rapid <B>retrieval</B>  balanced filing scheme  elimination of false drops  combining indexes  query  multi-attribute <B>retrieval</B> 3.73 3.74multi-attribute <B>retrieval</B> with combined indexes in this paper a file organization scheme designed
50 Q0 1194 83 0.13003258 Lucene_47
  is reviewed briefly  two principles are presented as paramount in the provision of <B>information</B> services   1  easy accessibility to the <B>information</B> files by users unfamiliar with file organization repository  the main features of the <B>information</B> system are direct user access via on-line lists are provided by the repository system for <B>retrieval</B> by concept coordination  cacm october  1965
50 Q0 82 84 0.12849939 Lucene_47
handling identifiers as internal symbols in language <B>processors</B> substitution of computer-oriented symbols for programmer-oriented symbols in language <B>processors</B> is examined and a feasible method for doing so is presented  cacm june  1959 williams  f  a  ca590602 jb march 22  1978 6 38 pm 222 5 82 82 5 82 82 5 82 82 5 82 799 5 82 945 6 82 399 6 82 44 6 82 82 6 82 82 6 82 404 6 82
50 Q0 2645 85 0.12599023 Lucene_47
 additional <B>information</B> about the program written in the first language and to output results estimating its efficiency  <B>processors</B> for the two languages are also described  the first processor
50 Q0 2032 86 0.1258049 Lucene_47
 structures  file structures  scatter tables  hashing functions  <B>information</B> <B>retrieval</B> 3.70 3.74 ca700705
50 Q0 2050 87 0.1258049 Lucene_47
 language processing  <B>information</B> <B>retrieval</B>  language analysis  text processing 3.42 3.71 ca700605 jb
50 Q0 2390 88 0.1258049 Lucene_47
  readers  writers  commentators  computer utility  <B>information</B> <B>retrieval</B>  trees  data structures 1.0 1.1
50 Q0 2593 89 0.1258049 Lucene_47
  <B>information</B> <B>retrieval</B>  computer configurations  computer networks  data base task group language
50 Q0 2965 90 0.1258049 Lucene_47
an optimal evaluation of boolean expressions in an online query system cacm may  1977 hanani  m  z  query  boolean expression  <B>information</B> <B>retrieval</B>  file organization 3.5 3.70 3.74 ca770507 jb december 29  1977 1 51 am 2155 4 2965 2406 4 2965 2710 4 2965 2715 4 2965 2716 4 2965 2717 4 2965 2718 4 2965 2765 4 2965 2765 4 2965 2817 4 2965 2888 4 2965 2901 4 2965 2957 4 2965 2959 4 2965 2965 4 2965
50 Q0 3135 91 0.1258049 Lucene_47
 structure search  <B>information</B> <B>retrieval</B>  crystal -structure analysis  drug analysis and design 3.13
50 Q0 675 92 0.1258049 Lucene_47
coding clinical laboratory data for automatic storage and <B>retrieval</B> a series of clinical laboratory codes have been developed to accept and store urin analysis  blood chemistry  and hematology test results for automatic data processing  the codes  although constructed as part of a computerized unsolved  the next ten years could witness the emergence of a practical automated <B>information</B> system
50 Q0 2685 93 0.119448766 Lucene_47
the <B>parallel</B> execution of do loops methods are developed for the <B>parallel</B> execution of different iterations of a do loop  both asynchronous multiprocessor computers and array computers are considered  practical application to the design of compilers for such computers is discussed  cacm february  1974 lamport  l  <B>parallel</B> computing  multiprocessor computers  array computers  vector computers
50 Q0 1960 94 0.11896139 Lucene_47
 to any user to schedule his own <B>parallel</B> processes using system primitive operations  the file <B>information</B> about user behavior  cacm december  1970 betourne  c  boulenger  j  ferrie  j  kaiser  c
50 Q0 1262 95 0.118223615 Lucene_47
procedure-oriented language statements to facilitate <B>parallel</B> processing two statements are suggested which allow a programmer writing in a procedure-oriented language to indicate sections of program which are to be executed in <B>parallel</B>  the statements are do together and hold  these serve partly as brackets in establishing a range of <B>parallel</B> operation and partly to define each <B>parallel</B> path
50 Q0 141 96 0.118223615 Lucene_47
some thoughts on <B>parallel</B> processing cacm october  1960 yarbrough  l  d  ca601007 jb march 20  1978 8 16 pm 141 5 141 141 5 141 141 5 141
50 Q0 2700 97 0.118223615 Lucene_47
reduction  a method of proving properties of <B>parallel</B> programs when proving that a <B>parallel</B> program has a given property it is often convenient to assume that a statement is indivisible  i e properties such as halting  thus correctness proofs of a <B>parallel</B> system can often be greatly simplified  cacm december  1975 lipton  r  j  deadlock free  reduction  interruptible  indivisible  <B>parallel</B>
50 Q0 2973 98 0.118223615 Lucene_47
sorting on a mesh-connected <B>parallel</B> computer two algorithms are presented for sorting n 2 elements on an n x n mesh-connected processor array that require o n  routing and comparison steps  the best previous algorithm takes time o n log n   the algorithms of this paper are shown to be optimal april  1977 thompson  c  d  kung  h  t  <B>parallel</B> computer  <B>parallel</B> sorting  <B>parallel</B> merge  routing
50 Q0 392 99 0.118223615 Lucene_47
comment on a paper on <B>parallel</B> processing cacm february  1961 nekora  m  r  ca610206 jb march 17  1978 12 58 am 392 5 392 392 5 392 392 5 392
50 Q0 2092 100 0.117272794 Lucene_47
  it is shown that the use of semantic <B>information</B> in deductive question answering greatly facilitates to be made of this <B>information</B>  it is concluded that the development of protosynthex iii into a practically  artificial intelligence  computational linguistics  language processing  fact <B>retrieval</B> 3.42 3.61 ca700306
*************Query 51*************************

51 Q0 3075 1 0.681883 Lucene_47
fast <B>parallel</B> sorting <B>algorithms</B> a <B>parallel</B> bucket-sort algorithm is presented that requires time o log n  and the use of n <B>processors</B>  the algorithm makes use of a technique that requires more space than the product of <B>processors</B> and time  a realistic model is used model is used in which no memory 1   1 k <B>processors</B>  for k an arbitrary integer  the model of computation for this procedure permits
51 Q0 3156 2 0.64721256 Lucene_47
  graph theory  <B>parallel</B> processing  <B>algorithms</B>  transitive closure  connected component 5.25 5.32 6.22computing connected components on <B>parallel</B> computers we present a <B>parallel</B> algorithm which uses n2 <B>processors</B> to find the connected components of an undirected graph with n vertices in time o log2n   an o log2n  time bound also can be achieved using only n n  log2n   <B>processors</B>  the algorithm can
51 Q0 2570 3 0.560632 Lucene_47
a comparison of list schedules for <B>parallel</B> processing systems the problem of scheduling two or more <B>processors</B> to minimize the execution time of a program which consists of a set of partially times are random variables are analyzed  it is shown that different <B>algorithms</B> suggested is presented  cacm december  1974 adam  t  l  chandy  k  m  dickson  j  r  <B>parallel</B> processing
51 Q0 1811 4 0.4624071 Lucene_47
a case study in programming for <B>parallel</B>-<B>processors</B> an affirmative partial answer is provided to the question of whether it is possible to program <B>parallel</B>-processor computing systems to efficiently decrease execution time for useful problems  <B>parallel</B>-processor systems are multiprocessor systems in which several of the <B>processors</B> can simultaneously execute separate tasks of a single job  thus
51 Q0 2714 5 0.3689487 Lucene_47
merging with <B>parallel</B> <B>processors</B> consider two linearly ordered sets a  b   a  m   b  n  m lt  n  and p  p lt  m  <B>parallel</B> <B>processors</B> working synchronously  the paper presents an algorithm for merging a and b with the p <B>parallel</B> <B>processors</B>  which requires at most 2 log2  2m 1    3m p     m p  log2 favorably with the previous best <B>parallel</B> merging algorithm  batcher s algorithm  which requires n p     m
51 Q0 2973 6 0.31931004 Lucene_47
sorting on a mesh-connected <B>parallel</B> computer two <B>algorithms</B> are presented for sorting n 2 elements on an n x n mesh-connected processor array that require o n  routing and comparison steps  the best previous algorithm takes time o n log n   the <B>algorithms</B> of this paper are shown to be optimal april  1977 thompson  c  d  kung  h  t  <B>parallel</B> computer  <B>parallel</B> sorting  <B>parallel</B> merge  routing
51 Q0 2175 7 0.285407 Lucene_47
 the expression is to be executed  these subexpressions can be evaluated in serials  in <B>parallel</B> with a  cache  buffer memory  if the number of subexpressions which can be executed in <B>parallel</B> exceeds the number of available <B>processors</B>  then execution of some of these subexpressions must  <B>parallel</B> processing  cache  arithmetic expressions  subexpression ordering  computational trees  compilers
51 Q0 2723 8 0.27222264 Lucene_47
multiprocessing compactifying garbage collection <B>algorithms</B> for a multiprocessing compactifying garbage collector are presented and discussed  the simple case of two <B>processors</B>  one performing lisp  the more complex cases involving several list <B>processors</B> and one or more garbage collection <B>processors</B> are also briefly discussed  cacm september  1975 steele  g  l  jr  garbage collection  storage
51 Q0 2266 9 0.2614814 Lucene_47
  cacm november  1972 patrick  m  l  <B>parallel</B> numerical <B>algorithms</B>  real polynomials  real zerosa highly <B>parallel</B> algorithm for approximating all zeros of a polynomial with only real zeros an algorithm is described based on newton s method which simultaneously approximates all zeros of a polynomial with only real zeros  the algorithm  which is conceptually suitable for <B>parallel</B> computation
51 Q0 950 10 0.2614814 Lucene_47
<B>parallel</B> methods for integrating ordinary differential equations this paper is dedicated to the proposition that  in order to take full advantage for real-time computations of highly <B>parallel</B> computers as can be expected to be available in the near future  much of numerical analysis will have to be recast in a more  <B>parallel</B>  form  by this is meant that serial <B>algorithms</B> ought to be replaced
51 Q0 2497 11 0.24572995 Lucene_47
synchronizing <B>processors</B> with memory-content-generated interrupts implementations of the  lock-unlock  method of synchronizing <B>processors</B> in a multiprocessor system usually require uninterruptable of the <B>processors</B> and a special  read-interlock  cycle in the repertoire of the memory modules  when  debugging  <B>parallel</B> processing  associative memories  microprogramming 4.32 6.29 ca730603 jb january
51 Q0 3006 12 0.24400972 Lucene_47
anomalies with variable partition <B>paging</B> <B>algorithms</B> five types of anomalous behavior which may the fact that  with certain reference strings and <B>paging</B> <B>algorithms</B>  an increase in mean memory allocation may result in an increase in fault rate  two <B>paging</B> <B>algorithms</B>  are examined in terms  page fault frequency  <B>paging</B> <B>algorithms</B> 4.32 4.35 4.6 8.1 ca780307 jb march 28,1978 1 01 pm 1892 4
51 Q0 2557 13 0.2257863 Lucene_47
 to evaluate such products on ordinary serial computers as well as <B>parallel</B> computers is discussed  <B>algorithms</B> are presented which properly parse such matrix sequences subject to the constraints multiplication  operation minimization  <B>parallel</B> machine  time minimization 4.22 5.14 ca730104 jb january
51 Q0 3153 14 0.2204647 Lucene_47
 is examined in the context of a paged computer system  two parameterized <B>algorithms</B> which partition of a process or and <B>paging</B> and file devices  with fixed numbers of jobs  is studied to determine optimal alocation parameters on the expected response times under the two <B>algorithms</B>  numerical solutions  cacm july  1979 hine  j  mitrani  i  tsur  s  queueing networks  <B>paging</B>  virtual memory  performance
51 Q0 2128 15 0.21492967 Lucene_47
a processor allocation method for time-sharing a scheduling algorithm is proposed which is intended to minimize changes of tasks on <B>processors</B> and thereby reduce over-head  the algorithm also has application to more general resource allocation problems  it is implemented by means of a method  g  c  time sharing  resource allocation  scheduling <B>algorithms</B>  monitors  dynamic allocation
51 Q0 2289 16 0.20570335 Lucene_47
-in-memory arrays  <B>parallel</B> processing  special purpose computers  <B>algorithms</B> for distance and spanning tree in speed achieved by virtue of the possibilities for <B>parallel</B> processing  in this paper it is shown is the determination of <B>algorithms</B> that exploit the possibilities for parallelism  especially for problems whose solutions appear to be inherently serial  in particular  several parallelized <B>algorithms</B>
51 Q0 1810 17 0.20478645 Lucene_47
 on an automatic folding mechanism of simple design  a demand <B>paging</B> unit built at the ibm research center become a normal part of most computing systems  cacm december  1969 sayre  d  <B>paging</B>  automatic <B>paging</B>  demand <B>paging</B>  folding  automatic folding  storage hierarchies  memory hierarchies  replacement <B>algorithms</B>  performance  measurement 4.0 4.19 4.39 6.20 6.34 ca691202 jb february 15  1978 4 33 pm
51 Q0 1752 18 0.20182188 Lucene_47
 balancing for a medium size virtual memory <B>paging</B> machine are discussed in relation to a combined batch processing and time-sharing environment  a synopsis is given of the task scheduling and <B>paging</B> <B>algorithms</B> that were implemented  and the results of comparative simulation are given by tracing the development of the <B>algorithms</B> through six predecessor versions  throughout the discussion particular
51 Q0 2365 19 0.19735113 Lucene_47
matrix computations with fortran and <B>paging</B> the efficiency of conventional fortran programs for matrix computations can often be improved by reversing the order of nested loops  such modifications produce modest savings in many common situations and very significant savings for large problems run under an operating system which uses <B>paging</B>  cacm april  1972 moler  c  b  matrix <B>algorithms</B>  linear
51 Q0 2450 20 0.19735113 Lucene_47
empirical working set behavior the working set model for program behavior has been proposed in recent years as a basis for the design of scheduling and <B>paging</B> <B>algorithms</B>  although the words  working set  are now commonly encountered in the literature dealing with resource allocation rodriguez-rosell  j  virtual memory  <B>paging</B>  working set  software measurement  program behavior 4.3
51 Q0 3152 21 0.19735113 Lucene_47
storage reorganization techniques for matrix computation in a <B>paging</B> environment in order to multiply matrices while minimizing the number of page fetches required  it is often more efficient known <B>algorithms</B> which leave the matrices stored in row- or column- oriented form  an efficient method at no additional cost  cacm july  1979 fischer  p  probert  r  matrix multiplication  <B>paging</B>
51 Q0 2433 22 0.18815525 Lucene_47
 and express <B>parallel</B> <B>algorithms</B> are described  cacm october  1973 millstein  r  e  array processing  parallelism detection  explicit parallelism  array allocation  <B>parallel</B> control structures  illiac iv
51 Q0 1924 23 0.17989282 Lucene_47
 <B>algorithms</B> is also studied as a function of the number of pages of main memory available to the algorithm  cacm march  1969 mckellar  a  c  coffman jr   e  g  matrix <B>algorithms</B>  array processing  <B>paging</B> system  it is shown that carefully designed matrix <B>algorithms</B> can lead to enormous savings in the number time  examination of addition  multiplication  and inversion <B>algorithms</B> shows that a partitioned matrix
51 Q0 2692 24 0.17469084 Lucene_47
reentrant polygon clipping a new family of clipping <B>algorithms</B> is described  these <B>algorithms</B> the parts of the polygon which lie outside the volume  in two dimensions the <B>algorithms</B> permit clipping vertices introduced in sequence to describe any newly-cut edge or edges  the <B>algorithms</B> easily handle of the clipping window  the <B>algorithms</B> described achieve considerable simplicity by clipping separately
51 Q0 1601 25 0.1700847 Lucene_47
<B>parallel</B> numerical methods for the solution of equations classical iterative procedures iteration are computationally independent  making the methods of interest in a <B>parallel</B> processing families of numerical procedures which use the technique of the procedures in a <B>parallel</B> processing are interpreted in a <B>parallel</B> processing environment  in such an environment the procedures obtained
51 Q0 2740 26 0.1627116 Lucene_47
 of semaphores and extended semaphores  queue semaphores   the number of <B>parallel</B> processes is carefully  asynchronous structuring  buffering  <B>parallel</B> processes  synchronizing primitives  reentrant code  rc  reliability  program proving  coroutines  correctness  program maintenance  software <B>paging</B> 4.30 4.31 4.32
51 Q0 2373 27 0.16041465 Lucene_47
  schwartz  s  c  working-set model  <B>paging</B>  <B>paging</B> <B>algorithms</B>  program behavior  program modeling 4.3 for estimating these quantities is given  the relation to lru  least recently used  <B>paging</B> is characterized
51 Q0 2498 28 0.15589207 Lucene_47
minimizing wasted space in partitioned segmentation a paged virtual memory system using a finite number of page sizes is considered  two <B>algorithms</B> for assigning pages to segments are discussed  both of these algorithm are simple to implement  the problem of choosing the page sizes to minimize memory  <B>paging</B>  multiple page sizes  fragmentation  segmentation 4.0 4.3 4.32 6.34 8.3 ca730602 jb
51 Q0 2522 29 0.15589207 Lucene_47
the design  implementation  and evaluation of a working set dispatcher the behavior of a computer system is largely dependent upon the <B>algorithms</B> employed to allocate the system resources to the processes competing for them  recent research in time-sharing <B>paging</B> systems has developed the working set model for program behavior  and are source allocation strategy based on this model has been
51 Q0 2579 30 0.15589207 Lucene_47
register allocation via usage counts this paper introduces the notion of usage counts  shows how usage counts can be developed by <B>algorithms</B> that eliminate redundant computations  and describes how usage counts can provide the basis for register allocation  the paper compares register allocation  register allocation  compilers  programming languages  virtual memory  demand <B>paging</B> 4.12 4.2 4.39
51 Q0 2114 31 0.14938962 Lucene_47
 such as inverted files  index-sequential files  and multilist files are derived  two <B>algorithms</B> which retrieve  directory search  serial processing of lists  prime keyword  <B>parallel</B> processing of lists 3.70 3.73 3.74
51 Q0 2863 32 0.14818522 Lucene_47
 <B>algorithms</B>  cacm may  1976 prieve  b  g  fabry  r  s  demand <B>paging</B>  performance measurement  multilevel memory systems  virtual memory  working set  page replacement <B>algorithms</B>  optimal page replacement page replacement <B>algorithms</B> is presented  an optimum page replacement algorithm  called vmin  denning s working set  and the page partitioning replacement <B>algorithms</B> on five virtual memory programs
51 Q0 2838 33 0.14788818 Lucene_47
 normally requires by performing garbage collection on a second processor in <B>parallel</B> with list processing operations  or on a single processor time-shared with them  <B>algorithms</B> for recovering discarded list  time-sharing  multiprocessing  <B>parallel</B> processing  real time  data structures  analysis of <B>algorithms</B> 3.69 3.89 4.19 4.29 4.32 4.34 4.9 5.25 ca760901 jb january 4  1978 9 57 am 1024 4 2838 1051 4 2838
51 Q0 2645 34 0.14155513 Lucene_47
 estimating its efficiency  <B>processors</B> for the two languages are also described  the first processor are included  the limitations of the present system  its relation to knuth s work on the analysis of <B>algorithms</B> efficiency  analysis of <B>algorithms</B> 4.12 4.20 5.24 5.25 ca740601 jb january 17  1978 3 48 pm 1086 4 2645
51 Q0 1964 35 0.14155003 Lucene_47
comment on the working set model for program behavior cacm november  1970 bernstein  a  demand <B>paging</B>  working set  <B>paging</B> rate  multiprogramming 4.30 4.32 ca701115 jb february 9  1978 4 23 pm 1964 5 1964 1964 5 1964 1964 5 1964
51 Q0 2022 36 0.13869014 Lucene_47
note on an anomaly in <B>paging</B> cacm july  1970 pomeranz j  e  <B>paging</B> machines  demand <B>paging</B>  replacement algorithm 4.30 ca700715 jb february 10  1978 4 17 pm 2022 4 2022 2085 4 2022 3006 4 2022 1884 5 2022 2022 5 2022 2022 5 2022 2022 5 2022
51 Q0 1728 37 0.13749826 Lucene_47
further experimental data on the behavior of programs in a <B>paging</B> environment results are summarized from an empirical study directed at the measurement of program operating behavior in those replacement <B>algorithms</B> and for assessing the effects on performance of changes in the amount of storage allocated to executing programs  cacm july  1968 coffman  e  g  varian  l  c  <B>paging</B> systems  <B>paging</B>
51 Q0 1468 38 0.1307407 Lucene_47
syntax-directed interpretation of classes of pictures a descriptive scheme for classes of pictures based on labeling techniques using <B>parallel</B> processing <B>algorithms</B> was proposed by the author some  the <B>parallel</B> processing simulator  originally written for an ibm 7094 system  has now been rewritten for a cdc outputs using this grammar and the <B>parallel</B> processing simulator mentioned earlier  cacm march  1966
51 Q0 82 39 0.12206766 Lucene_47
handling identifiers as internal symbols in language <B>processors</B> substitution of computer-oriented symbols for programmer-oriented symbols in language <B>processors</B> is examined and a feasible method for doing so is presented  cacm june  1959 williams  f  a  ca590602 jb march 22  1978 6 38 pm 222 5 82 82 5 82 82 5 82 82 5 82 799 5 82 945 6 82 399 6 82 44 6 82 82 6 82 82 6 82 404 6 82
51 Q0 2872 40 0.120109186 Lucene_47
a counterintuitive example of computer <B>paging</B>  corrigendum  cacm april  1976 fagin  r  ca760404 jb january 4  1978 4 19 pm 2872 5 2872 2872 5 2872 2872 5 2872
51 Q0 1957 41 0.11951169 Lucene_47
the list set generator  a construct for evaluating set expressions the list set generator is defined and <B>algorithms</B> for its use are given  the list set generator is a construct which may be added to a list processing system or any system that handles sets  it efficiently generates the set which the expression as a whole and in <B>parallel</B>  rather than evaluating subexpressions and then using those
51 Q0 2685 42 0.11347005 Lucene_47
the <B>parallel</B> execution of do loops methods are developed for the <B>parallel</B> execution of different iterations of a do loop  both asynchronous multiprocessor computers and array computers are considered  practical application to the design of compilers for such computers is discussed  cacm february  1974 lamport  l  <B>parallel</B> computing  multiprocessor computers  array computers  vector computers
51 Q0 1262 43 0.11230622 Lucene_47
procedure-oriented language statements to facilitate <B>parallel</B> processing two statements are suggested which allow a programmer writing in a procedure-oriented language to indicate sections of program which are to be executed in <B>parallel</B>  the statements are do together and hold  these serve partly as brackets in establishing a range of <B>parallel</B> operation and partly to define each <B>parallel</B> path
51 Q0 141 44 0.11230622 Lucene_47
some thoughts on <B>parallel</B> processing cacm october  1960 yarbrough  l  d  ca601007 jb march 20  1978 8 16 pm 141 5 141 141 5 141 141 5 141
51 Q0 2700 45 0.11230622 Lucene_47
reduction  a method of proving properties of <B>parallel</B> programs when proving that a <B>parallel</B> program has a given property it is often convenient to assume that a statement is indivisible  i e properties such as halting  thus correctness proofs of a <B>parallel</B> system can often be greatly simplified  cacm december  1975 lipton  r  j  deadlock free  reduction  interruptible  indivisible  <B>parallel</B>
51 Q0 392 46 0.11230622 Lucene_47
comment on a paper on <B>parallel</B> processing cacm february  1961 nekora  m  r  ca610206 jb march 17  1978 12 58 am 392 5 392 392 5 392 392 5 392
51 Q0 2277 47 0.10592634 Lucene_47
demand <B>paging</B> through utilization of working sets on the maniac ii a hardware implementation on the maniac ii computer of the working set model for demand <B>paging</B>  as introduced by denning  is discussed  characteristics of the maniac ii are given  along with a description of the basic demand <B>paging</B> working set model  demand <B>paging</B> system is given  cacm october  1972 morris  j  b  demand <B>paging</B>
51 Q0 1158 48 0.10588332 Lucene_47
program structures for <B>parallel</B> processing constructs for organizing and explicating <B>parallel</B> program segments are discussed as extensions to algol 60  the constructs serve as meta-commands and are motivated by equipment having multiprocessing capability  cacm december  1965 anderson  j  p  ca651211 jb march 6  1978 3 39 pm 1158 4 1158 1158 5 1158 1158 5 1158 1158 5 1158 1262 5 1158
51 Q0 1884 49 0.10009099 Lucene_47
an anomaly in space-time characteristics of certain programs running in a <B>paging</B> machine the running time of programs in a <B>paging</B> machine generally increases as the store in which programs treatment is presented  cacm june  1969 belady  l  a  nelson  r  a  shedler  g  s  <B>paging</B> machines  demand <B>paging</B>  replacement algorithm 4.30 ca690609 jb february 17  1978 9 59 am 1879 4 1884 1884 4 1884
51 Q0 1665 50 0.09787186 Lucene_47
automatic generation of efficient lexical <B>processors</B> using finite state techniques the practical application of the theory of finite-state automata to automatically generate lexical <B>processors</B> to a block of storage containing the characters and character count in the item  the <B>processors</B> on the particular character read  the system has been in operation since 1966  and <B>processors</B> generated have
51 Q0 2785 51 0.09726004 Lucene_47
 of the language  and discusses some of the problems associated with <B>parallel</B> computer architectures  cacm march  <B>parallel</B> computation  <B>parallel</B> architecture 4.2 4.21 4.22 ca750303jb january 9  1978 4 57 pm 2785 4 2785
51 Q0 1302 52 0.09358852 Lucene_47
<B>parallel</B> signaling speeds for data transmission  proposed american stand ard  cacm march  1965 ca650305 jb march 7  1978 6 08 pm 1302 5 1302 1302 5 1302 1302 5 1302
51 Q0 1795 53 0.09358852 Lucene_47
optimal code for serial and <B>parallel</B> computation cacm december  1969 fateman  r  j  code optimization  sequencing of operations  detection of common subexpressions 4.12 ca691217 jb february 15  1978 1 59 pm 1795 5 1795 1795 5 1795 1795 5 1795
51 Q0 1988 54 0.08719118 Lucene_47
a formalism for translator interactions a formalism is presented for describing the actions of <B>processors</B> for programming languages-compilers  interpreters  assemblers-and their interactions in complex systems such as compiler-compilers or extendible languages  the formalism here might be used can be produced from a given set of component <B>processors</B>  cacm october  1970 earley  j  translator
51 Q0 2085 55 0.086681336 Lucene_47
comment on a <B>paging</B> anomaly cacm march  1970 dempster  j  r  h  <B>paging</B> machines  demand <B>paging</B>  replacement algorithm 4.30 ca700313 jb february 13  1978 3 39 pm 1892 4 2085 1901 4 2085 2022 4 2085 2085 4 2085 2085 4 2085 2095 4 2085 2218 4 2085 2277 4 2085 2319 4 2085 2329 4 2085 2358 4 2085 2373 4 2085 2380 4 2085 2434 4 2085 2499 4 2085 2501 4 2085 2582 4 2085 2669 4 2085 2828 4 2085 2863 4
51 Q0 1923 56 0.08631487 Lucene_47
pseudofiles an approach to system interfaces for high level languages using basic input output support facilities is described  it is shown that this technique can provide potentially inexpensive methods for programs to communicate with deeply embedded facilities such as command language <B>processors</B>  cacm march  1969 rosin  r  f  operating systems  interfaces input-output  high level languages
51 Q0 2664 57 0.08631487 Lucene_47
parallelism in tape-sorting two methods for employing parallelism in tape-sorting are presented  method a is the natural way to use parallelism  method b is new  both approximately achieve the goal of reducing the processing time by a divisor which is the number of <B>processors</B>  cacm april  1974 even  s  tape sorting  parallelism  external sorting  queues  stacks 5.31 6.22 ca740406 jb january 18
51 Q0 2669 58 0.085810155 Lucene_47
a simple linear model of demand <B>paging</B> performance predicting the performance of a proposed references between <B>paging</B> exceptions increases linearly with the size of the <B>paging</B> memory size for a <B>paging</B> memory  arranging for reproducible memory usage charges  and estimating the amount of core memory sharing  cacm april  1974 saltzer  j  h  <B>paging</B>  demand <B>paging</B>  memory models
51 Q0 2914 59 0.08493002 Lucene_47
use of the lru stack depth distribution for simulation of <B>paging</B> behavior two families of probability distributions were needed for use by a virtual memory simulation model  headway between page fault distributions  and working set size distributions  all members of both families can be derived a published stack depth distribution  cacm november  1977 turner  r  strecker  b  virtual memory  <B>paging</B>
51 Q0 2851 60 0.08370812 Lucene_47
formal verification of <B>parallel</B> programs two formal models for <B>parallel</B> computation are presented  an abstract conceptual model and a <B>parallel</B>-program model  the former model does not distinguish principle  a special case of the assertions method  which is called <B>parallel</B> place assertions  is shown on the satisfiability of certain logical formulas  cacm july  1976 keller  r  m  <B>parallel</B> program  correctness
51 Q0 2195 61 0.08105003 Lucene_47
 is then discussed  the method described is suitable for <B>parallel</B> processing because the operations relative to each state can be computed in <B>parallel</B>  and the number of stages is equal to the length n optimal detection  heuristic methods  global recognition  <B>parallel</B> processing  dynamic programming
51 Q0 2401 62 0.08105003 Lucene_47
on shrinking binary picture patterns a <B>parallel</B> processing algorithm for shrinking binary patterns to obtain single isolated elements  one for each pattern  is presented  this procedure may be used employed  two-by-two elements   the <B>parallel</B> nature of the process  and the possibility of shrinking january  1972 levialdi  s  counting binary patterns  shrinking  <B>parallel</B> processing  multiple connected
51 Q0 3059 63 0.08105003 Lucene_47
models for <B>parallel</B> processing within programs  application to cpu i o and i o i o overlap approximate queueing models for internal <B>parallel</B> processing by individual programs in a multiprogrammed system are developed in this paper  the solution technique is developed by network decomposition  multiprogramming  <B>parallel</B> processing  queueing network models  multiprocessing of computation and i o 4.32
51 Q0 2068 64 0.08007279 Lucene_47
comment on multiprogramming under a page on demand strategy cacm april  1970 smith  j  l  multiprogramming  <B>paging</B>  modeling 4.32 ca700416 jb february 13  1978 2 34 pm 1892 4 2068 2068 4 2068 2741 4 2068 1526 5 2068 2068 5 2068 2068 5 2068 2068 5 2068
51 Q0 2069 65 0.08007279 Lucene_47
comments on a paper by wallace and mason cacm april  1970 heess jr   w  f  page-on-demand  demand <B>paging</B>  time-sharing multiprogramming  markovian computer models  scheduling strategies  operating systems  memory management 2.44 4.32 4.39 6.20 6.21 ca700415 jb february 13  1978 2 36 pm 2069 5 2069 2069 5 2069 2069 5 2069
51 Q0 2297 66 0.08007279 Lucene_47
a model of memory contention in a <B>paging</B> machine this paper is concerned with certain aspects of contention for main memory resources in a multiprogrammed computer system operating under demand <B>paging</B>  in the model presented  the number of page-frames of main memory allocated to a problem program  1972 oden  p  h  shedler  g  s  <B>paging</B> machines  demand <B>paging</B>  operating systems studies  queuing
51 Q0 2895 67 0.07941249 Lucene_47
a language for formal problem specification a language for specifying the in tended behavior of communicating <B>parallel</B> processes is described  the specifications are constrain ts on the order in which events of a computation can occur  the language is used to write specifications of the readers greif  i  formal specifications program correctness  <B>parallel</B> processing  synchronization  readers
51 Q0 371 68 0.07891467 Lucene_47
remarks on <B>algorithms</B> 2 and 3  algorithm 15 and <B>algorithms</B> 25 and 26 cacm march  1961 wilkinson  j  h  ca610311 jb march 17  1978 12 35 am 371 5 371 371 5 371 371 5 371
51 Q0 2226 69 0.078121535 Lucene_47
further evidence for the analysis of <B>algorithms</B> for the zero-one programming problem the purpose  with two <B>algorithms</B> for the zero-one linear programming problem  an error in gue s paper is corrected  the utility of one of the <B>algorithms</B> as a suboptimizer is indicated  cacm january  1971 proll  l  g  operations research  integer programming  zero-one variables  <B>algorithms</B> 5.39 5.41 ca710108 jb
51 Q0 1367 70 0.07487082 Lucene_47
character structure and character parity sense for <B>parallel</B>-by-bit data communication in ascii   proposed american standard  cacm september  1966 ca660912 jb march 2  1978 4 26 pm 1367 4 1367 2772 4 1367 2787 4 1367 1116 5 1367 1367 5 1367 1367 5 1367 1367 5 1367
51 Q0 1569 71 0.07487082 Lucene_47
implementing phrase-structure productions in pl i a method is described for implementing the productions of a context-free phrase structure grammar in a pl i procedure whose structure and statements <B>parallel</B> the structure and notation of the grammar  cacm july  1967 irwin  l  ca670704 jb february 28  1978 9 01 am 1569 5 1569 1569 5 1569 1569 5 1569
51 Q0 1828 72 0.07487082 Lucene_47
synchronization in a <B>parallel</B>-accessed data base the following problem is considered  given a data for synchronization which will maximize the amount of <B>parallel</B> activity allowed  it is assumed that the data is discussed and their performance compared  cacm november  1969 shoshani  a  bernstein  a  j  <B>parallel</B> accessing  <B>parallel</B> search  file search  data base  synchronization  locking  deadlock 3.73 3.74 4.32
51 Q0 2283 73 0.07486503 Lucene_47
thinning <B>algorithms</B> on rectangular  hexagonal  and triangular arrays in this report three thinning <B>algorithms</B> are developed  one each for use with rectangular  hexagonal  and triangular arrays of the <B>algorithms</B> are presented and the relative performances of the <B>algorithms</B> are compared  it is found <B>algorithms</B>  rectangular  hexagonal  triangular arrays  image processing  skeleton 3.64 ca720907 jb january
51 Q0 1025 74 0.073984176 Lucene_47
a method of syntax-checking algol 60 a syntax checker was designed based on the syntax of algol as described in the algol 60 report  communications of the acm  may  1960   since the definition of the elements of the language is recursive it seemed most desirable to design the syntax checker as a set of mutually recursive <B>processors</B> tied together by subroutines which perform certain bookkeeping
51 Q0 1742 75 0.073984176 Lucene_47
on the design of display <B>processors</B> the flexibility and power needed in the data channel for a computer display are considered  to work efficiently  such a channel must have a sufficient number of instructions that it is best understood as a small processor rather than a powerful channel  as it was found that successive improvements to the display processor design lie on a circular path
51 Q0 1825 76 0.073984176 Lucene_47
a practical method for constructing lr k  <B>processors</B> a practical method for constructing lr k  <B>processors</B> is developed  these <B>processors</B> are capable of recognizing and parsing an input during a single no-backup scan in a number of steps equal to the length of the input plus the number of steps relating these individual <B>processors</B> are satisfied  then an lr k  processor for the entire grammar can
51 Q0 2166 77 0.073984176 Lucene_47
automated algebraic manipulation in celestial mechanics in this paper we consider some of the applications of automated algebraic manipulation which have been made in celestial mechanics  particular attention is paid to the use of poisson series  and a typical problem in perturbation theory is described  the requirements of <B>processors</B> for use in celestial mechanics are considered and compared
51 Q0 303 78 0.073984176 Lucene_47
some basic terminology connected with mechanical languages and their <B>processors</B> the suggestions in this paper are part of the terminology used in work for the university of pennsylvania s office of computer research and education  the work is jointly supported by the national science foundation and the air force office of scientific research  cacm august  1961 gorn  s  ca610801 jb march 16  1978
51 Q0 3078 79 0.073984176 Lucene_47
analysis of the availability of computer systems using computer- aided algebra analytical results  related to the availability of a computer system constructed of unreliable <B>processors</B>  are presented in this paper  these results are obtained by using various computer-aided algebraic manipulation techniques  a major purpose of this paper is to demonstrate that the difficulties of obtaining
51 Q0 3088 80 0.073984176 Lucene_47
 <B>processors</B>  main storage partitions and user tasks  examples are provided to illustrate the use
51 Q0 2342 81 0.07324461 Lucene_47
interference between communicating <B>parallel</B> processes various kinds of interference between communicating <B>parallel</B> processes have been examined by dijkstra  knuth  and others  solutions have been given for the mutual exclusion problem and associated subproblems  in the form of <B>parallel</B> programs of <B>parallel</B> processes is regarded as a machine which proceeds from one state s  i e  a collection
51 Q0 2016 82 0.07077502 Lucene_47
  some particular measurements of interest in a system which combines demand <B>paging</B>  event tracing  demand <B>paging</B>  script driven measurement 2.44 4.32 4.39 4.42 ca700805 jb february 10
51 Q0 2137 83 0.07077502 Lucene_47
new lisp techniques for a <B>paging</B> environment the system described herein employs the block concept  and that of global and local variables  in addition to the methods applied in most lisp systems  also  a new means of list representation is used   local sequential  for lists created during rochfeld  a  lisp  list processing  <B>paging</B>  virtual memory  garbage collection  core fragmentation
51 Q0 2881 84 0.07077502 Lucene_47
a counterintuitive example of computer <B>paging</B> a counterexample is exhibited to a natural conjecture concerning the optimal way to group records into pages in the independent reference model of computer <B>paging</B>  an organization is said to be optimal if the  least recently used  miss ratio is minimized   cacm february  1976 fagin  r  least recently used  most likely together  independent reference
51 Q0 2262 85 0.070063695 Lucene_47
  cacm november  1972 baecker  h  d  garbage collection  virtual memory  list processing  <B>paging</B>
51 Q0 1684 86 0.06975295 Lucene_47
  preceded if necessary by a conversion from extended to limited entry form  <B>processors</B> which <B>processors</B> is emphasized  cacm october  1968 king  p  j  h  decision tables  detab-65  systems analysis 3.50
51 Q0 2667 87 0.06934507 Lucene_47
  exponential  hyperexponential  and geometric   other data show <B>paging</B> characteristics of tasks  virtual memory  <B>paging</B>  demand <B>paging</B>  software monitor  program execution characteristics
51 Q0 2950 88 0.068342105 Lucene_47
 <B>algorithms</B> based on an abstract model of a scheduling system which formalizes the notion of priority  various classes of scheduling <B>algorithms</B> are defined and related to existing <B>algorithms</B>  a criterion-invariant <B>algorithms</B>  which include most of the commonly implemented ones  for time-invariant <B>algorithms</B>  fabry  r  s  scheduling <B>algorithms</B>  scheduling models  priority  operating systems processor
51 Q0 2017 89 0.06714308 Lucene_47
sorting in a <B>paging</B> environment this sorting study was part of an extensive measurement project undertaken on the m44 44x  an experimental <B>paging</B> system which was conceived and implemented at ibm with the implementation of sorting procedures in the context of the dynamic <B>paging</B> environment characteristic of virtual is used to arrive at a set of broad guidelines for writing sort programs for a <B>paging</B> environment  cacm
51 Q0 1342 90 0.06696132 Lucene_47
transportation problem  <B>algorithms</B> 293  h   cacm december  1966 bayer  g  ca661207a jb march 2  1978 2 30 pm 1342 5 1342 1342 5 1342 1342 5 1342
51 Q0 1658 91 0.06696132 Lucene_47
analysis of <B>algorithms</B> for the zero-one programming problem this paper is concerned with a review and examination of several existing <B>algorithms</B> for the zero-one programming problem  computational experience is summarized  the machine time and storage requirements of several of the <B>algorithms</B>  integer programming  zero-one variables  <B>algorithms</B> 5.39 5.41 ca681208 jb february 21  1978 1 31 pm
51 Q0 1660 92 0.06696132 Lucene_47
index by subject to <B>algorithms</B>  1960-1968 cacm december  1968 ca681206 jb february 21  1978 1 39 pm 1660 5 1660 1660 5 1660 1660 5 1660
51 Q0 1952 93 0.06696132 Lucene_47
index by subject to <B>algorithms</B>  1970 cacm december  1970 ca701211 jb february 9  1978 2 50 pm 1952 5 1952 1952 5 1952 1952 5 1952
51 Q0 2007 94 0.06696132 Lucene_47
<B>algorithms</B> policy revised august 1970 cacm august  1970 ca700814 jb february 10  1978 3 12 pm 2007 5 2007 2007 5 2007 2007 5 2007
51 Q0 2819 95 0.06696132 Lucene_47
 <B>algorithms</B> for encoding a string differ slightly from earlier proposals  the analysis program attempts to find an optimal set of codes for representing substrings of the file  four new <B>algorithms</B> for this operation are described and compared  various parameters in the <B>algorithms</B> are optimized to obtain file compaction  huffman codes  n-gram encoding  comparison of <B>algorithms</B> 3.7 3.73 4.33 ca761104 jb
51 Q0 804 96 0.06696132 Lucene_47
exponentiation of series  <B>algorithms</B> 134  cacm july  1963 thacher jr   h  c  ca630720 jb march 14  1978 8 19 am 804 5 804 804 5 804 804 5 804
51 Q0 1008 97 0.065511964 Lucene_47
scheduling meetings with a computer computer scheduling of papers as it was developed for the 1960 meeting of the federation of american societies for experimental biology  faseb  is described  the faseb meeting is the largest scientific meeting held in the united states each year  the technique developed for faseb can be applied to schedule any meeting with <B>parallel</B> sessions  cacm september
51 Q0 1341 98 0.065511964 Lucene_47
levels of computer systems in building current computer systems  we tend to break them down into  levels  of control  command and communication  in using the system  we break our problems down correspondingly  the continued use of such a structure raises questions about its effects on the usefulness of future systems  particularly with regard to such trends as time sharing  <B>parallel</B> programming
51 Q0 2182 99 0.065511964 Lucene_47
interrupt driven programming cacm july  1971 zelkowitz  m  interrupts  supervisors  monitors  debugging  <B>parallel</B> processing  associative memories  microprogramming 3.51 4.32 4.42 ca710608 jb february 3  1978 9 49 am 2182 4 2182 2534 4 2182 1959 5 2182 2182 5 2182 2182 5 2182 2182 5 2182 2497 5 2182 2534 5 2182 830 6 2182 1471 6 2182 1787 6 2182 1959 6 2182 1973 6 2182 2111 6 2182 2182 6 2182
51 Q0 2514 100 0.065511964 Lucene_47
an array grammar programming system a package of fortran programs has been developed that permits a user to interactively design and test array grammars  the user can control the rule selection procedure in a derivation or parse  using weighted programming matrices  he also has a choice of instance selection schemes  raster random  <B>parallel</B>   examples are given involving array languages
*************Query 52*************************

52 Q0 2721 1 0.4291739 Lucene_47
  zooplankton  river <B>ecosystems</B>  ecological mechanisms  environmental <B>simulation</B>  modeling <B>ecosystems</B>the digital <B>simulation</B> of river plankton population dynamics this paper deals with the development of a mathematical model for and the digital <B>simulation</B> in fortran iv of phytoplankton the relationships between the ecological mechanisms involved  the <B>simulation</B> parameters were varied
52 Q0 1928 2 0.06547176 Lucene_47
exclusive <B>simulation</B> of activity in digital networks a technique for simulating the detailed logic into a structural model  the elimination of manual processes in achieving exclusive <B>simulation</B> of activity in length  and a <B>simulation</B> procedure which deals effectively with any mixture of serial and simultaneous described may be used for the <B>simulation</B> of network structures other than digital networks  cacm
52 Q0 2749 3 0.06547176 Lucene_47
significant event <B>simulation</B> this paper compares a new method of <B>simulation</B> organization  called aids in choosing between the two <B>simulation</B> methods for a particular experiment  it is concluded that the significant event method can be of value in the <B>simulation</B> of some systems when computational  <B>simulation</B> organization  event <B>simulation</B>  clock pulse <B>simulation</B>  significant event <B>simulation</B>  8.1
52 Q0 3070 4 0.056700215 Lucene_47
hybrid <B>simulation</B> models of computer systems this paper describes the structure and operation of a hybrid <B>simulation</B> model in which both discrete-event <B>simulation</B> and analytic techniques are combined computer system  discrete-event <B>simulation</B> is used to model the arrival and activation of jobs model of the example with those of an equivalent <B>simulation</B>-only model  cacm september  1978 schwetman
52 Q0 1870 5 0.056130342 Lucene_47
some techniques for using pseudorandom numbers in computer <B>simulation</B> an algorithm is described by which uniform pseudorandom integers may be used to construct binary  numbers  in which for making use of such  numbers  in <B>simulation</B> programming are described  cacm july  1969 donnelly  t  random numbers  <B>simulation</B>  boolean algebra  bit manipulation 5.19 5.39 ca690710 jb february 17  1978
52 Q0 1030 6 0.055554636 Lucene_47
techniques for the <B>simulation</B> of computer logic the <B>simulation</B> of a digital computer is an integral part of most computer design automation systems  the evaluation of the boolean functions which characterize the computer being simulated constitutes one major portion of a <B>simulation</B> system  four efficiency of a <B>simulation</B> system  methods are presented for simultaneously evaluating many functions
52 Q0 1890 7 0.051759973 Lucene_47
<B>simulation</B> of traffic flows in a network a computer <B>simulation</B> program which deals with traffic  this <B>simulation</B> scheme has its excellent point in that it makes it possible to trace the dynamic behavior of the city of kyoto  japan  june  1969 sakai  t  nagao  m  traffic <B>simulation</B>  traffic flow  traffic structure  computer <B>simulation</B> 3.57 3.23 ca690603 jb february 17  1978 1 26 pm 1890 4 1890 1890 5
52 Q0 3048 8 0.051759973 Lucene_47
performance evaluation of highly concurrent computers by deterministic <B>simulation</B> <B>simulation</B> concurrent computers  a technique is described for constructing a detailed deterministic <B>simulation</B> of the real system  <B>simulation</B> of the system model yields the timing and resource usage statistics needed <B>simulation</B>  control stream  concurrent computers 6.20 8.1 ca781103 dh january 26  1979 11 26 am 3048 5
52 Q0 2767 9 0.048994582 Lucene_47
a comparison of <B>simulation</B> event list algorithms four algorithms are considered which can be used to schedule events in a general purpose discrete <B>simulation</B> system  two of the algorithms are new to be an advantageous  immediate replacement for the algorithm in use with current <B>simulation</B> study would be fruitful  cacm april  1975 vaucher  j  g  duval  p  <B>simulation</B>  time flow mechanisms
52 Q0 1637 10 0.048111722 Lucene_47
problems in the statistical analysis of <B>simulation</B> experiments  the comparison of means and the length of sample records research is continued into statistical analysis of <B>simulation</B> experiments containing autocorrelated time series  it is shown how to estimate the lengths of sample records needed the possibilities of statistical spectral analysis as applied to <B>simulation</B> experiments  cacm february
52 Q0 2062 11 0.048111722 Lucene_47
the application of sequential sampling to <B>simulation</B>  an example inventory model four different sequential sampling procedures are applied to the analysis of data generated by a computer <B>simulation</B> experiment with a multi-item inventory model  for each procedure the cost of computer time required  graham  d  a  naylor  t  h  <B>simulation</B>  inventory models  sequential sampling  models  experimental
52 Q0 2914 12 0.048111722 Lucene_47
use of the lru stack depth distribution for <B>simulation</B> of paging behavior two families of probability distributions were needed for use by a virtual memory <B>simulation</B> model  headway between page fault distributions  and working set size distributions  all members of both families can be derived  lru stack  working set  headway between page faults  computer system <B>simulation</B> 4.35 4.6 8.1
52 Q0 678 13 0.048111722 Lucene_47
optimizing bit-time computer <B>simulation</B> a major component of a bit-time computer <B>simulation</B> program is the boolean compiler  the compiler accepts the boolean functions representing the simulated computer s digital circuits  and generates corresponding sets of machine instructions which of the boolean compiler so as to optimize bit-time computer <B>simulation</B>  the techniques are applicable
52 Q0 1207 14 0.046295527 Lucene_47
remarks on <B>simulation</B> of boolean functions cacm august  1965 dodd  g  g  ca650817 jb march 6  1978 7 52 pm 1207 4 1207 1208 4 1207 3053 4 1207 1207 5 1207 1207 5 1207 1207 5 1207 1329 5 1207
52 Q0 1812 15 0.046295527 Lucene_47
more on fortran random number generators cacm november  1969 grosenbaugh  l  r  random number generation  monte carlo  <B>simulation</B> 5.5 ca691118 jb february 15  1978 11 57 am 1812 5 1812 1812 5 1812 1812 5 1812
52 Q0 2725 16 0.046295527 Lucene_47
a comparison of <B>simulation</B> event list algorithms  corrigendum  cacm august  1975 vaucher  j  c  duval  p  ca750810 jb january 6  1978 3 43 pm 2725 5 2725 2725 5 2725 2725 5 2725
52 Q0 2742 17 0.046295527 Lucene_47
improved event-scanning mechanisms for discrete event <B>simulation</B> <B>simulation</B> models of large  complex  real-world  applications have occasionally earned the reputation of eating up hours of computer time  this problem may be attributed in part to difficulties such as slow stochastic convergence burdensome  cacm june  1975 wyman  f  p  discrete event <B>simulation</B>  <B>simulation</B>  event scanning mechanisms
52 Q0 2970 18 0.046295527 Lucene_47
achieving specific accuracy in <B>simulation</B> output analysis this paper extends the use of the regenerative property of queueing systems in the analysis of <B>simulation</B> output  in particular  it describes in a preliminary <B>simulation</B> run  the paper also described how a variance reduction method due to page  9  can estimator  regenerative property  sequential estimator  <B>simulation</B>  stopping rule  variance
52 Q0 757 19 0.046295527 Lucene_47
<B>simulation</B> of a traffic network cacm august  1963 katz  j  h  ca630841 jb march 13  1978 7 55 pm 1890 5 757 757 5 757 757 5 757 757 5 757 757 6 757
52 Q0 1912 20 0.045830235 Lucene_47
<B>simulation</B> of outpatient appointment systems an experimental computer program is described which simulates appointment systems employed by outpatient departments of hospitals  both major kinds of appointment systems-individual and block-can be simulated  the purpose of the simulator is to enable environment  cacm april  1969 katz  j  h  <B>simulation</B>  scheduling  appointment system  outpatient department
52 Q0 3051 21 0.045830235 Lucene_47
a comparison of heaps and the tl structure for the <B>simulation</B> event set none cacm october  1978 franta  w  maly  k  <B>simulation</B> event set  heaps  tl structure 3.34 4.22 5.5 8.1 ca781010 dh january 29  1979 11 51 am 2844 4 3051 2936 4 3051 3051 4 3051 3051 4 3051 3064 4 3051 3109 4 3051 3109 4 3051 2767 5 3051 2844 5 3051 3051 5 3051 3051 5 3051 3051 5 3051
52 Q0 1366 22 0.04166598 Lucene_47
computer <B>simulation</B>-discussion of the technique and comparison of languages the purpose of this paper is to present a comparison of some computer <B>simulation</B> languages and of some of the involved is chosenore and more computer <B>simulation</B> languages are being developed  comparisons and evaluations is devoted to computer <B>simulation</B> and <B>simulation</B> languages  the computational characteristics
52 Q0 1695 23 0.04140798 Lucene_47
 resulting from the <B>simulation</B> of a network may be analyzed by a variety of techniques ranging from analysis  discrete system <B>simulation</B>  library systems  modeling  network <B>simulation</B>  neural networks  neurophysiological models  on-line <B>simulation</B>  <B>simulation</B> 3.12 3.19 3.29 3.65 ca680906 jb february 22
52 Q0 2798 24 0.0400931 Lucene_47
analysis of interleaved memory systems using blockage buffers a model of interleaved memory systems is presented  and the analysis of the model by monte carlo <B>simulation</B> is discussed  the simulations investigate the performance of various system structures  i e  schemes for sending instruction analysis  blockage buffer  conflict buffer  <B>simulation</B>  monte carolo <B>simulation</B> 5.5 6.34 ca750201
52 Q0 2936 25 0.0400931 Lucene_47
an efficient data structure for the <B>simulation</B> event set recently algorithms have been presented for the realization of event scheduling routines suitable for general purpose discrete event <B>simulation</B> systems  several exhibited a performance superior to that of commonly used simple linked list it to be nearly independent of n  cacm august  1977 franta  w  r  maly  k  <B>simulation</B>  time flow
52 Q0 104 26 0.03928306 Lucene_47
digital <B>simulation</B> of discrete flow systems  the discrete flow systems discussed are characterized by the movement of randomly arriving items along interacting channels  programing a digital computer to simulate such systems utilizes some techniques not common in other approaches to physical problems  the principal portion of the paper is a discussion of two <B>simulation</B> studies that illustrate
52 Q0 1261 27 0.03928306 Lucene_47
modeling and <B>simulation</B> of digital networks the <B>simulation</B> of digital networks on a digital computer provides the engineer with an effective means of analyzing time-quantized logical behavior  the digital network is modeled as a set of time-dependent or time-independent boolean transformations  each transformation describing the input-output relationship of a model element comprising the network
52 Q0 1427 28 0.03928306 Lucene_47
<B>simulation</B> of radioisotope scans by computer in radioisotope scanning  a field which is assuming increasing importance in medical diagnosis  the scan is a two-dimensional pattern made up of dots  areas of increased source activity are represented on the scan by areas of increased dot density to be important  the structure of this program can be useful in the <B>simulation</B> of the output of any
52 Q0 1435 29 0.03928306 Lucene_47
design of computer <B>simulation</B> experiments for industrial systems the aim of this paper is to provide background information on the existing literature on experimental design techniques which may be applicable to the design of computer <B>simulation</B> experiments for industrial systems  although major emphasis is placed on analysis of variance techniques  three other techniques of data analysis
52 Q0 2261 30 0.03928306 Lucene_47
  the method should be useful to <B>simulation</B> practitioners  cacm november  1972 ramberg  j  s  schmeiser  b  w  <B>simulation</B>  monte carlo  probability  statistics  approximations  random variables
52 Q0 1208 31 0.037036423 Lucene_47
<B>simulation</B> of computer logic by fortran arithmetic cacm august  1965 weingarten  f  w  ca650816 jb march 6  1978 7 53 pm 1207 4 1208 1208 4 1208 3053 4 1208 1208 5 1208 1208 5 1208 1208 5 1208 1329 5 1208 1409 5 1208 1208 6 1208
52 Q0 1805 32 0.037036423 Lucene_47
 and <B>simulation</B> has been the best available method of predicting it  this paper presents the results of progress in developing an alternative to <B>simulation</B>  a <B>simulation</B>-tested iterative computation  1969 lasser  d  j  productivity  prediction  multiprogramming  <B>simulation</B>  equipment evaluation
52 Q0 2077 33 0.037036423 Lucene_47
the cyclical majority problem the problem of the cyclical majority is presented and some new  simulated results for 3  4  5       40 issues ad 3  5  7       37 judges are reported  cacm april  1970 pomeranz  j  e  weil jr   r  l  arrow s paradox  cyclical majority  <B>simulation</B>  voter s paradox  voting paradox 3.31 3.35 ca700407 jb february 13  1978 2 58 pm 2077 5 2077 2077 5 2077 2077 5 2077
52 Q0 2344 34 0.037036423 Lucene_47
on the optimization of performance of time-sharing systems by <B>simulation</B> a <B>simulation</B> model of a time-sharing system with a finite noncontiguous store and an infinite auxiliary store is used to study between the results of the <B>simulation</B> model and two analytical equations for quantum-oriented  clark  s  r  rourke  t  a  time-sharing  <B>simulation</B> studies  optimization  measure of performance
52 Q0 238 35 0.037036423 Lucene_47
<B>simulation</B> and analysis of biochemical systems cacm december  1961 garfinkel  d  rutledge  j  d  higgins  j  j  ca611212 jb march 15  1978 10 09 pm 238 4 238 238 4 238 633 4 238 643 4 238 238 5 238 238 5 238 238 5 238 633 5 238 643 5 238 238 6 238 238 6 238 633 6 238 643 6 238
52 Q0 2549 36 0.037036423 Lucene_47
random deviates from the dipole distribution  g5   algorithm a441  cacm january  1973 knop  r  e  random number  probability density  probability distribution  dipole distribution  cauchy distribution  <B>simulation</B>  monte carlo 3.17 5.5 ca730112 jb january 24  1978 3 42 pm 2549 5 2549 2549 5 2549 2549 5 2549
52 Q0 3061 37 0.037036423 Lucene_47
simulations of dynamic sequential search algorithms none cacm september  1978 tenenbaum  a  searching  list processing  sequential searching  dynamic reordering  <B>simulation</B> 3.74 8.1 ca780911 dh january 29  1979 6 30 pm 3061 4 3061 2885 5 3061 3061 5 3061 3061 5 3061 3061 5 3061
52 Q0 557 38 0.037036423 Lucene_47
<B>simulation</B> of computer timing device cacm july  1962 ca620704 jb march 17  1978 8 57 pm 1380 4 557 1552 4 557 1693 4 557 1781 4 557 1854 4 557 1860 4 557 2060 4 557 557 4 557 1421 5 557 557 5 557 557 5 557 557 5 557 3184 5 557 1198 6 557 1749 6 557 557 6 557
52 Q0 643 39 0.037036423 Lucene_47
<B>simulation</B> and analysis of biochemcial systems  ii  solution of differential equations  cacm january  1962 larson  r  sellers  p  meyer  r  ca620116 jb march 20  1978 3 58 pm 238 4 643 633 4 643 643 4 643 643 4 643 238 5 643 633 5 643 643 5 643 643 5 643 643 5 643 238 6 643 633 6 643 643 6 643 643 6 643
52 Q0 2902 40 0.036231983 Lucene_47
dynamic memory allocation in computer <B>simulation</B> this paper investigates the performance of 35 dynamic memory allocation algorithms when used to service <B>simulation</B> programs as represented by 18 test cases  algorithm performance was measured in terms of processing time  memory usage  and external  memory management  programming techniques  <B>simulation</B>  <B>simulation</B> memory management  <B>simulation</B>
52 Q0 2542 41 0.03273588 Lucene_47
 language description is used as direct input to performance analysis and <B>simulation</B> routines  using  supervisory systems  debugging  program maintenance  modeling  system integration  <B>simulation</B> 4.0
52 Q0 2829 42 0.03273588 Lucene_47
texture and reflection in computer generated images in 1974 catmull developed a new algorithm for rendering images of bivariate surface patches  this paper describes extensions of this algorithm in the areas of texture <B>simulation</B> and lighting models  the parameterization of a patch defines at each picture element  permitting the <B>simulation</B> of the mirror reflections  the amount of light
52 Q0 2951 43 0.03273588 Lucene_47
 in participating in the vast store of resources available on a network  analytical  <B>simulation</B> network  anlytic modeling  <B>simulation</B>  benchmark jobs  system measurement 4.6 6.20 8.1 ca770701 jb
52 Q0 1199 44 0.03240687 Lucene_47
a computer center <B>simulation</B> project today s computation centers are based on rapidly changing technologies of hardware and software systems  it is difficult  therefore  to base decisions on experience  in most instances  the benefits of comparable experience for a given problem situation are not available  in this paper  a mathematical model of the lockheed central computer center is formulated
52 Q0 1253 45 0.03240687 Lucene_47
quikscript-a simscript- like language for the g-20 quikscript is a <B>simulation</B> language based on simscript and programmed entirely in an algebraic language  20-gate  the quikscript language  its internal implementation  and major differences between quikscript and simscript are presented  this paper is not a programming guide to the language  but rather an attempt to present its flavor  a brief
52 Q0 1329 46 0.03240687 Lucene_47
<B>simulation</B> of boolean functions in a decimal computer cacm january  1965 mano  m  m  ca650108 jb march 8  1978 2 38 pm 1207 5 1329 1208 5 1329 1329 5 1329 1329 5 1329 1329 5 1329 3053 5 1329 1329 6 1329 1329 6 1329 1329 6 1329 1785 6 1329 1973 6 1329 1992 6 1329 2107 6 1329 2109 6 1329 2412 6 1329 2543 6 1329 2673 6 1329 2707 6 1329 2770 6 1329
52 Q0 2057 47 0.03240687 Lucene_47
random vectors uniform in solid angle  algorithm 381  g5   cacm may  1970 knop  r  e  random number  random vector  random number generator  probability distribution  frequency distribution  <B>simulation</B>  monte carlo 5.5 ca700509 jb february 13  1978 1 19 pm 2057 4 2057 2057 4 2057 2057 4 2057 2058 4 2057 2349 4 2057 2392 4 2057 2392 4 2057 2416 4 2057 1600 5 2057 1894 5 2057 2055 5 2057 2057 5
52 Q0 2218 48 0.03240687 Lucene_47
 for this investigation was a simula based <B>simulation</B> model reflecting an early framework for a planned burroughs b6500 and operational capabilities of the <B>simulation</B> model are also described  cacm february  1971 nielsen  n  r  <B>simulation</B>  swap volume minimization  system <B>simulation</B>  time-sharing 3.9 4.32 ca710203 jb february 8  1978
52 Q0 2262 49 0.03240687 Lucene_47
garbage collection for virtual memory computer systems in list processing there is typically a growing demand for space during program execution  this paper examines the practical implications of this growth within a virtual memory computer system  proposes two new garbage collection techniques for virtual memory systems  and compares them with traditional methods by discussion and by <B>simulation</B>
52 Q0 2272 50 0.03240687 Lucene_47
sorting by natural selection a family of sorting algorithms is proposed  the members of which make fuller use of the memory space and thus yield longer sorted strings  extensive <B>simulation</B> results are presented  and various implications and further applications are discussed  cacm october  1972 frazer  w  d  wong  c  k  algorithms  sorting by replacement selection  expected string length 5.31
52 Q0 2318 51 0.03240687 Lucene_47
  performance  analytic-models  <B>simulation</B>-models  system-models 2.43 2.44 6.2 8.3 ca720710 jb january
52 Q0 605 52 0.03240687 Lucene_47
computer <B>simulation</B> of city traffic in simulating traffic flow on city streets  the national bureau of standards has used data processing techniques to tabulate and make motion pictures of vehicle movements in the model  each vehicle is assigned a digital identification giving points of entry and exit  type of vehicle  desired speed  and actual speed  in proportions simulating field data  changes
52 Q0 633 53 0.03240687 Lucene_47
<B>simulation</B> and analysis of biochemical systems  iii  analysis and pattern recognition  cacm february  1962 garfinkel  d  polk  w  higgins  j  j  ochser  r  t  ca620210 jb march 20  1978 3 43 pm 238 4 633 633 4 633 633 4 633 643 4 633 238 5 633 633 5 633 633 5 633 633 5 633 643 5 633 238 6 633 633 6 633 633 6 633 643 6 633
52 Q0 1572 54 0.03207448 Lucene_47
the <B>simulation</B> of time sharing systems the development of new large scale time-sharing systems has raised a number of problems for computation center management  not only is it necessary to develop  the development of a comprehensive <B>simulation</B> model to assist in the investigation of these questions  the use of the <B>simulation</B> is demonstrated by a study of the ibm 360 67 time-sharing system  cacm july
52 Q0 1680 55 0.03207448 Lucene_47
 by employing a display unit to interleave tutoring with other computer operations such as <B>simulation</B>  of the operating system  language processors and compilers  <B>simulation</B> models  mathematical solution instruction  tutorial systems  programming  <B>simulation</B>  modeling  information retrieval operating
52 Q0 1752 56 0.03207448 Lucene_47
 algorithms that were implemented  and the results of comparative <B>simulation</B> are given by tracing the system resources  <B>simulation</B> results relative to alternate hardware characteristics and the effects  time-sharing  operating systems  resource management  task scheduling  paging  system <B>simulation</B>
52 Q0 3064 57 0.03207448 Lucene_47
  1978 ulrich  e  <B>simulation</B>  discrete systems <B>simulation</B>  discrete event <B>simulation</B>  time-flow
52 Q0 2911 58 0.028065171 Lucene_47
anomalous behavior of the fifty-percent rule in dynamic memory allocation this paper reports <B>simulation</B> data showing that  in dynamic memory allocation  the average free-to-allocated-block ratio can frequently  on the basis of the <B>simulation</B> data and the derivation  it is hypothesized  first-fit  <B>simulation</B> 3.73 4.32 4.34 4.35 ca771105 jb december 27  1977 7 37 am 2095 4 2911 2218 4
52 Q0 1165 59 0.027777318 Lucene_47
the spectra 70 45 emulator for the rca 301 the rca 301 emulator system is supplied with the spectra 70 45 as a reprogramming aid  it allows an rca 301 object program to be run on the spectra 70 45 without necessitating changes in the rca 301 object code  execution rates are considerably better than traditional <B>simulation</B>  the emulator provides an increase in throughput capacity for the 301 user
52 Q0 1288 60 0.027777318 Lucene_47
clp-the cornell list processor presented in this paper are the highlights of clp  a teaching language which has been employed at cornell university and was constructed to serve as a means of introducing <B>simulation</B> and other list-processing concepts  the various advantages of clp are discussed and examples are given  cacm april  1965 conway  r  w  delfausse  j  j  maxwell  w  l  walker  w  e
52 Q0 1426 61 0.027777318 Lucene_47
a <B>simulation</B> of hospital admission policy a study is described which simulates different admission policies of a large specialized hospital  the objective is to determine better policies for stabilization of admission and census rates while maintaining a reasonably full hospital  there types of policies were examined  admission based on percentages of discharge rates  discharge rates plus
52 Q0 1518 62 0.027777318 Lucene_47
an experimental model of system 360 the problem of predicting the performance of modern computer systems is formidable  one general technique which can ease this problem is macroscopic <B>simulation</B>  this paper reports on the applicability of that technique to system 360  the paper describes an experimental model of system 360-its hardware  software  and its environment  the measures of system
52 Q0 1541 63 0.027777318 Lucene_47
a language for modeling and simulating dynamic systems the general objective of this language is to facilitate both the modeling and experimental aspects of <B>simulation</B> studies  the ability to represent systems containing highly interactive processes is an essential feature  the nature of the language  and the role of the process concept  is presented by means of an extended example  cacm
52 Q0 1716 64 0.027777318 Lucene_47
normal random deviates  algorithm 334  g5   cacm july  1968 bell  j  r  normal deviates  normal distribution  random number  random number generator  <B>simulation</B>  probability distribution  frequency distribution  random 5.5 5.13 ca680713 jb february 22  1978 11 26 am 1716 4 1716 1189 5 1716 1716 5 1716 1716 5 1716 1716 5 1716 2349 5 1716 2565 5 1716 1648 6 1716 1716 6 1716 1716 6 1716 1794 6 1716
52 Q0 1894 65 0.027777318 Lucene_47
normal random deviates  algorithm 334  g5   cacm may  1969 knop  r  normal deviates  normal distribution  random number  random number generator  <B>simulation</B>  probability distribution  frequency distribution  random 5.13 5.5 ca690516 jb february 17  1978 2 31 pm 1894 5 1894 1894 5 1894 1894 5 1894 2057 5 1894 2349 5 1894 1600 6 1894 1648 6 1894 1716 6 1894 1794 6 1894 1894 6 1894 1894 6 1894 2043
52 Q0 2105 66 0.027777318 Lucene_47
  1970 robins  m  f  beyer  j  d  <B>simulation</B> program  graphical input-output sampled data systems 3.20
52 Q0 2349 67 0.027777318 Lucene_47
generation of random correlated normal variables  g5   algorithm a425  cacm may  1972 hurst  r  l  knop  r  e  random number  normal density  normal distribution  gaussian density  gaussian distribution  <B>simulation</B>  monte carlo 5.5 ca720511 jb january 31  1978 9 35 am 1663 4 2349 2057 4 2349 2349 4 2349 2349 4 2349 2349 4 2349 2349 4 2349 2349 4 2349 2349 4 2349 2349 4 2349 2349 4 2349 2565 4
52 Q0 2686 68 0.027777318 Lucene_47
 the parameter values to fit a distribution  cacm february  1974 ramberg  j  s  schmeiser b  w  <B>simulation</B>
52 Q0 3107 69 0.027777318 Lucene_47
 values  cacm april  1978 cheng  r  beta variates  random numbers  <B>simulation</B> 5.5 8.1 ca780409 dh
52 Q0 1811 70 0.026188705 Lucene_47
 of this program was simulated  the data gathered from <B>simulation</B> runs demonstrate the efficient solution  tasking  storage interference  electrical network  <B>simulation</B>  relaxation  jacobi  gauss-seidel
52 Q0 1846 71 0.026188705 Lucene_47
  l  <B>simulation</B>  parallel processes  simultaneous events  picture processing  computer system <B>simulation</B> 3.19 3.24 4.24 5.9 6.9 ca690910 jb february 15  1978 4 21 pm 1541 4 1846 1805 4 1846 1846 4 1846
52 Q0 2375 72 0.026188705 Lucene_47
a comparative analysis of disk scheduling policies five well-known scheduling policies for movable head disks are compared using the performance criteria of expected seek time  system oriented and expected waiting time  individual i o request oriented   both analytical and <B>simulation</B> results  seek time  <B>simulation</B>  storage units  time-sharing systems  waiting time 3.72 4.32 6.34 ca720306jb
52 Q0 2882 73 0.026188705 Lucene_47
a stochastic evaluation model for database organization in data retrieval systems experimental work in the valuation of large scale data retrieval systems has been scarce due to its difficulty and prohibitive cost  this paper discusses a <B>simulation</B> model of a data retrieval system which has  stochastic model  monte carlo <B>simulation</B> 3.70 3.71 3.72 3.73 3.74 3.79 ca760205 jb january 5  1978
52 Q0 1856 74 0.024055861 Lucene_47
the teachable language comprehender  a <B>simulation</B> program and theory of language the teachable language comprehender  tlc  is a program designed to be capable of being taught to  comprehend  english text  when text which the program has not seen before is input to it  it comprehends that text comprehension  teachable computer program  psychological <B>simulation</B>  human memory <B>simulation</B>  computer
52 Q0 1166 75 0.023147764 Lucene_47
 is handled by generating calls to i o <B>simulation</B> subroutines  cacm december  1965 dellert jr   g  t
52 Q0 1517 76 0.023147764 Lucene_47
methods for analyzing data from computer <B>simulation</B> experiments this paper addresses itself to the problem of analyzing data generated by computer simulations of economic systems  we first turn to a hypothetical firm  whose operation is represented by single-channel  multistation queueing model  the firm seeks to maximize total expected profit for the coming period by selecting one of five
52 Q0 1653 77 0.023147764 Lucene_47
 is discussed  as well as pitfalls which may be encountered when using them  analysis  <B>simulation</B>  and synthesis
52 Q0 1674 78 0.023147764 Lucene_47
  <B>simulation</B> 5.5 ca681105 jb february 21  1978 2 54 pm 1674 4 1674 1691 4 1674 1293 5 1674 1674 5
52 Q0 1711 79 0.023147764 Lucene_47
  liability  torts  negligence  contracts  warrantees  guarantees  accounting  regulations  <B>simulation</B>  income
52 Q0 1933 80 0.023147764 Lucene_47
 probability density  uniform frequency function  <B>simulation</B>  prime factorization  primitive roots ca690205 jb
52 Q0 2276 81 0.023147764 Lucene_47
  exponential distribution  exponential distribution  <B>simulation</B>  numerical analysis 3.29 3.57 5.11 5.5
52 Q0 2535 82 0.023147764 Lucene_47
  analytical and <B>simulation</B> results are based on the model of the computer-communications system being an m d
52 Q0 2682 83 0.023147764 Lucene_47
 sreenivasan  k  kleinman  a  j  benchmarks  calibration  drive workload  input to <B>simulation</B>
52 Q0 2844 84 0.023147764 Lucene_47
heaps applied to event driven mechanisms cacm july  1976 gonnet  g  h  discrete event <B>simulation</B>  event-scanning mechanisms  priority queues  heaps 4.34 8.1 ca760709 jb january 4  1978 11 05 am 2042 4 2844 2222 4 2844 2356 4 2844 2679 4 2844 2757 4 2844 2844 4 2844 2844 4 2844 2844 4 2844 2844 4 2844 2936 4 2844 2936 4 2844 2972 4 2844 3051 4 2844 3064 4 2844 3064 4 2844 3109 4 2844 970 5 2844
52 Q0 2862 85 0.023147764 Lucene_47
  opderbeck  h  pff replacement algorithm  semi-markov model  <B>simulation</B> of replacement algorithm 4.31 4.32
52 Q0 2890 86 0.023147764 Lucene_47
 maintained at each network node  <B>simulation</B> results are presented which confirm the theoretical
52 Q0 2918 87 0.023147764 Lucene_47
  multiprocessing  trace-driven <B>simulation</B>  queueing theory  shared memory 4.30 4.32 6.34 ca771008 jb
52 Q0 2967 88 0.023147764 Lucene_47
 with the software <B>simulation</B> illustrates the advantages of the hardware associative memory in three
52 Q0 3042 89 0.023147764 Lucene_47
 of such trees  studied by an extensive set of <B>simulation</B> runs  is close to that of avl trees  in particular
52 Q0 675 90 0.023147764 Lucene_47
coding clinical laboratory data for automatic storage and retrieval a series of clinical laboratory codes have been developed to accept and store urin analysis  blood chemistry  and hematology test results for automatic data processing  the codes  although constructed as part of a computerized hospital <B>simulation</B>  have been able to handle the results of every laboratory test that they have
52 Q0 2233 91 0.022915117 Lucene_47
signature <B>simulation</B> and certain cryptographic codes three cyphers allegedly authored by thomas jefferson beale in 1822 have been the subject of intensive study for over 100 years  generations of cryptanalysts have expended untold man-years  thus far without success  attempting tode code them  vast  cyphers  decoding  declaration of independence  encoding  magna carta  pseudotext  signature  <B>simulation</B>
52 Q0 2734 92 0.022915117 Lucene_47
on the external storage fragmentation produced by first-fit and best-fit allocation strategies published comparisons of the external fragmentation produced by first-fit and best-fit memory allocation have not been consistent  through <B>simulation</B>  a series of experiments were performed in order  results of <B>simulation</B> experiments supported this hypothesis and showed that the relative performance
52 Q0 1380 93 0.01964153 Lucene_47
simula-an algol-based <B>simulation</B> language this paper is an introduction to simula  a programming language designed to provide a systems analyst with unified concepts which facilitate the concise description of discrete event systems  a system description also serves as a source language <B>simulation</B> program  simula is an extension of algol 60 in which the most important new concepts
52 Q0 1728 94 0.01964153 Lucene_47
 storage  operating system <B>simulation</B>  operating systems  supervisor <B>simulation</B>  machine language
52 Q0 1484 95 0.018518211 Lucene_47
 synchronous systems is introduced  these descriptions can be used for <B>simulation</B> and automatic design
52 Q0 1591 96 0.018518211 Lucene_47
 problems which the student could solve without leaving the terminal  exercises in <B>simulation</B>
52 Q0 1845 97 0.018518211 Lucene_47
loader standardization for overlay programs the overlay capability is described for four of the third generation computer systems  cdc-6000  ge-635  ibm-360  and univac-1108  a critique of the first three systems is based on actual experience with a large overlaid trajectory <B>simulation</B> program  a short history and description of this program is presented  a standardization of minimum capabilities
52 Q0 2091 98 0.018518211 Lucene_47
  problem oriented or digital <B>simulation</B> language  partial differential equations  translator  pl 1
52 Q0 2106 99 0.018518211 Lucene_47
  <B>simulation</B>  machine language  management information systems  interpreters 1.52 3.51 4.13 4.21
52 Q0 2188 100 0.018518211 Lucene_47
 analysis or <B>simulation</B> to obtain an average response time prediction  by combining the model
*************Query 53*************************

53 Q0 1186 1 0.11878031 Lucene_47
recursive solution of a class of combinatorial problems  an example combinatorial problems requiring the selection of <B>n</B> elements from a set of <B>m</B> elements may be solved by a recursion process analogous to that for computing <B>binomial</B> <B>coefficients</B>  several specific problems are analyzed  the general technique is exposed  and an algol program is developed for one of the problems  cacm october  1965
53 Q0 139 2 0.09120376 Lucene_47
<B>binomial</B> <B>coefficients</B>  algorithm 19  cacm october  1960 kenyon  r  r  ca601009 jb march 20  1978 8 14 pm 139 5 139 139 5 139 139 5 139
53 Q0 514 3 0.09120376 Lucene_47
<B>binomial</B> <B>coefficients</B>  algorithm 19  cacm august  1962 george  r  ca620814 jb march 17  1978 9 40 pm 514 5 514 514 5 514 514 5 514
53 Q0 569 4 0.09120376 Lucene_47
<B>binomial</B> <B>coefficients</B>  algorithm 19  cacm june  1962 steck  b  ca620616 jb march 17  1978 9 22 pm 569 5 569 569 5 569 569 5 569
53 Q0 2986 5 0.070360176 Lucene_47
 to compute operator precedence or wirth-weber precedence <B>relations</B> in o <B>n</B> 2  steps is shown  as well as how complexity  sparse <B>relation</B>  boolean <B>matrix</B>  directed graph  wirth-weber precedence <B>relation</B>  linearoperations on sparse <B>relations</B> various computations on <B>relations</B>  boolean matrices  or directed graphs  such as the computation of precedence <B>relations</B> for a context-free grammar  can be done
53 Q0 2031 6 0.06635849 Lucene_47
algorithm and bound for the greatest common divisor of <B>n</B> <B>integers</B> a new version of the euclidean algorithm for finding the greatest common divisor of <B>n</B> <B>integers</B> a i  and multipliers x i of storage locations are linear in <B>n</B>  a <B>theorem</B> of lame that gives a bound for the number of iterations of the euclidean algorithm for two <B>integers</B> is extended to the case of <B>n</B> <B>integers</B>  an algorithm
53 Q0 2210 7 0.06619066 Lucene_47
 or with recursion  the principle of <B>mathematical</B> <B>induction</B> must be applied  the <B>relation</B> between the version program synthesis  <B>mathematical</B> <B>induction</B> principle  problem solving  <B>theorem</B> proving 3.64 5.23 5.24toward automatic program synthesis an elementary outline of the <B>theorem</B>-proving approach lists  and trees  in order to construct a program satisfying certain specifications a <B>theorem</B> induced
53 Q0 2391 8 0.060802504 Lucene_47
unitary symmetric polynomials  z   algorithm r391  cacm january  1972 schrack  g  f  symmetric polynomials  elementary symmetric polynomials  unitary symmetric polynomials  polynomial synthesis  reverse horner scheme  reverse synthetic division  <B>binomial</B> <B>coefficients</B> 5.11 5.30 5.5 ca720112 jb february 1  1978 8 55 am 2391 5 2391 2391 5 2391 2391 5 2391
53 Q0 2229 9 0.057651117 Lucene_47
  there are basically two approaches  the <B>binomial</B> <B>theorem</B> and the iteration methods  both methods brucke  r  a  series expansion  series inversion  root extraction  <B>binomial</B> <B>theorem</B>  newton
53 Q0 2420 10 0.046113674 Lucene_47
  1973 slagle  j  r  norton  l  <B>m</B>  <B>theorem</B>-proving  partial ordering  resolution  hyper-resolutionexperiments with an automatic <B>theorem</B>-prover havingpartial ordering inference rules automatic <B>theorem</B>-provers need to be made much more efficient  with this in mind  slagle has shown how the axioms for partial ordering can be replaced by built-in inference rules when using a particular <B>theorem</B>
53 Q0 679 11 0.04318531 Lucene_47
 improvements are a notation for integration and for the <B>binomial</B> <B>coefficients</B>  in the area of logical of subprogramming is focused on madcap s notation for and use of  procedures   cacm november  1963 wells  <B>m</B>  b
53 Q0 2981 12 0.037202157 Lucene_47
  the <B>relation</B> between subgoal <B>induction</B> and other commonly used <B>induction</B> rules is explored and  in particular  it is shown that subgoal <B>induction</B> can be viewed as a specialized form of computation <B>induction</B>  a set of sufficient conditions are presented which guarantee that an input-outputsubgoal <B>induction</B> a proof method  subgoal <B>induction</B>  is presented as an alternative or supplement
53 Q0 727 13 0.03709843 Lucene_47
 method  programming details  numerous examples and <B>mathematical</B> <B>theory</B> are suppliedxtension of the method in a natural way to <B>n</B>-dimensional problems is indicated by means of a 4-dimensional example  cacm september  1963 greenspan  d  yohe  <B>m</B>  ca630931 jb march 13  1978 6 57 pm 727 5 727 727 5 727 727 5
53 Q0 2769 14 0.03696869 Lucene_47
a modification of warshall s algorithm for the transitive closure of binary <B>relations</B> an algorithm is given for computing the transitive closure of a binary <B>relation</B> that is represented by a boolean <B>matrix</B>  the algorithm is similar to warshall s although it executes faster for sparse matrices algorithm  transitive closure  reachability <B>matrix</B>  directed graph  digraph  boolean <B>matrix</B>  binary
53 Q0 203 15 0.035709586 Lucene_47
decoding combinations of the first <B>n</B> <B>integers</B> taken k at a time cacm april  1960 brown  r  <B>m</B>  ca600408 jb march 22  1978 1 46 pm 203 5 203 203 5 203 203 5 203 2690 5 203 203 6 203 579 6 203
53 Q0 1567 16 0.03555879 Lucene_47
on the representation of symmetric polynomials <B>relations</B> are given between certain symmetric polynomials in the light of the <B>theory</B> of the symmetric <B>group</B>  such an approach unifies earlier work and lends insight to previously published work by aaron booker  a generalization of graeffe s root-squaring technique for the determination of the roots of a polynomial is suggested  cacm july  1967 mckay
53 Q0 2648 17 0.035496324 Lucene_47
 to determine the unique factorization of large <B>integers</B>  cacm may  1974 wunderlich  <B>m</B>  c  selfridge  j  l  number <B>theory</B> package  trial division  multiprecise arithmetic  factorization  doubly linkeda design for a number <B>theory</B> package with an optimized trial division routine a number <B>theory</B> package is described which uses doubly linked list structures for storing multiprecise <B>integers</B>
53 Q0 717 18 0.035494793 Lucene_47
partitioning algorithms for finite sets the partitions of a set with <B>n</B> elements are represented by certain <B>n</B>-tuples of positive <B>integers</B>  algorithm are described which generate without repetitions set into <B>m</B> or fewer sets  1  lt   <B>m</B>  lt   <B>n</B>   and  3  all partitions of the given set into exactly <B>m</B> sets  1  lt   <B>m</B>  lt   <B>n</B>   cacm october  1963 hutchinson  g  ca631008 jb march 13  1978 5 57 pm 717 5
53 Q0 2327 19 0.035144534 Lucene_47
toward an automata <B>theory</B> of brains a source of ideas for automata <B>theory</B>-the study of the brain-has been pushed aside in <B>mathematical</B> development of the <B>theory</B>  this paper suggests the ways in which automata <B>theory</B> might evolve over the next 25 years if it is to contribute to an understanding of how the brain processes information  cacm july  1972 arbib  <B>m</B>  a  automata <B>theory</B>  brain <B>theory</B>
53 Q0 1817 20 0.034461763 Lucene_47
computation of fourier <B>coefficients</B>  algorithm 255  c6   cacm november  1969 <B>hall</B>  g  ray  v  a  numerical integration  fourier <B>coefficients</B>  filon s method 5.16 ca691113 jb february 15  1978 12 08 pm 1817 5 1817 1817 5 1817 1817 5 1817
53 Q0 495 21 0.033865187 Lucene_47
 adjustment of several parameters  the <B>coefficients</B> of the normal equations are the elements of a symmetric positive-definite <B>matrix</B>  in order to solve the normal equations and evaluate the precision measures of the resulting parameters  inversion of this <B>matrix</B> of <B>coefficients</B> is required  many available procedures for <B>matrix</B> inversion do not take advantage of the symmetry  thus  when programmed
53 Q0 1609 22 0.032692607 Lucene_47
scheduling <B>university</B> course examinations by computer a new approach to the problem of scheduling course examinations is presented  in principle  an examination schedule which requires a minimum occurrences of courses and then scheduling each <B>group</B> at a different period a minimal schedule can  these are encouraging and indicate that further experimentation would be worthwhile  cacm april  1967 <B>hall</B> jr
53 Q0 2028 23 0.030486615 Lucene_47
greatest common divisor of <B>n</B> <B>integers</B> and multipliers  a1   algorithm 386  cacm july  1970 bradley  g  h  greatest common divisor  euclidean algorithm  number <B>theory</B>  diophantine equations 3.15 5.10 ca700709 jb february 10  1978 4 31 pm 2028 4 2028 2521 4 2028 3099 4 2028 2028 5 2028 2028 5 2028 2028 5 2028 2031 5 2028 2521 5 2028 2028 6 2028 2031 6 2028 3135 6 2028
53 Q0 1403 24 0.028284337 Lucene_47
 method for finding the <B>m</B> smallest functional values of monotonic functions defined on ordered pairs of positive <B>integers</B>  the method is easily extended to include monotonic functions defined on ordered <B>n</B>a method for finding the <B>m</B> smallest values of a monotonic function defined on ordered sets of positive <B>integers</B> the minimum value of a monotonic increasing function defined on a partially ordered set
53 Q0 2416 25 0.0279932 Lucene_47
<B>matrix</B> transposition in place  f1   algorithm a467  cacm november  1973 brenner  <B>n</B>  transposition  <B>matrix</B> operations  permutations  primitive roots  number <B>theory</B> 3.15 5.14 5.39 ca731110jb january 20  1978 9 58 am 2057 4 2416 2058 4 2416 2392 4 2416 2416 4 2416 2416 4 2416 1600 5 2416 2058 5 2416 2416 5 2416 2416 5 2416 2416 5 2416
53 Q0 2476 26 0.02785152 Lucene_47
equivalence between and or graphs and context-free grammars cacm july  1973 <B>hall</B>  p  a  v  artificial intelligence  and or graphs  language <B>theory</B>  context-free grammars 3.60 3.64 5.23 ca730710 jb january 23  1978 11 21 am 2476 5 2476 2476 5 2476 2476 5 2476
53 Q0 1887 27 0.026918856 Lucene_47
a recursive <B>relation</B> for the determinant of a pentadiagonal <B>matrix</B> a recursive <B>relation</B>  relating leading principal minors  is developed for the determinant of a pentadiagonal <B>matrix</B>  a numerical example is included to indicate its use in calculating eigenvalues  cacm june  1969 sweet  r  a  pentadiagonal <B>matrix</B>  quindiagonal <B>matrix</B>  quindiagonal <B>matrix</B>  band <B>matrix</B>  determinant  characteristic
53 Q0 2739 28 0.024729706 Lucene_47
 a <B>group</B> of restrictions to which a tree must conform in order to be a valid sentence analysis  experience parsing text sentences with the comprehensive english grammar of the <B>n</B>  linguistic string project  and embodies in its syntax and routines the <B>relations</B> which were found to be useful and adequate of the linguistic string parser  cacm july 1975 sager  <B>n</B>  grishman  r  natural language  parsing  grammar
53 Q0 248 29 0.024715304 Lucene_47
what is proprietary in <B>mathematical</B> programming -impressions of a panel discussion a panel discussion on  what is proprietary in <B>mathematical</B> programming   was sponsored by the special interest committee on <B>mathematical</B> programming of the acm during a <B>hall</B> of discussion on september 7th at the 16th national acm meeting in los angeles  this note consists solely of the impressions garnered
53 Q0 2953 30 0.024699796 Lucene_47
notes on recursion elimination various methods of recursion elimination are applied to the schematic recursive procedure  proc s x   px then <B>n</B> x   s fx   s gx   <B>m</B> x  fi  procedures with this general form arise in connection with tree traversal and sorting algorithms  each method of recursion  sorting algorithms  computational <B>induction</B> 4.0 4.2 5.20 5.24 5.25 5.31 ca770610 jb december 28
53 Q0 1423 31 0.022362981 Lucene_47
 storage requirements  the algorithm gives the generalized inverse for any <B>m</B> by <B>n</B> <B>matrix</B> a  including the special case when <B>m</B> <B>n</B> and a is non-singular and the case when <B>m</B> gt <B>n</B> and rank a    <B>n</B>a simple algorithm for computing the generalized inverse of a <B>matrix</B> the generalized inverse of a <B>matrix</B> is important in analysis because it provides an extension of the concept of an inverse which
53 Q0 1948 32 0.021680353 Lucene_47
computers in <B>group</B> <B>theory</B>  a survey computers are being applied to an increasingly diverse range of problems in <B>group</B> <B>theory</B>  the most important areas of application at present are coset enumeration  <B>group</B> <B>theory</B> programs range from simple combinatorial or numerical programs to large symbol is included  cacm january  1969 cannon  j  j  <B>group</B> <B>theory</B>  coset enumeration  subgroup lattices
53 Q0 241 33 0.02107966 Lucene_47
machine calculation of moments of a <B>probability</B> distribution a method is presented for the calculation on a machine of the moments of a <B>probability</B> distribution  necessitating little more than <B>n</B> additions and <B>n</B> references to memory for each moment  instead of the minimum of <B>n</B> multiplication  2n additions  and 2n references to memory required by the most straightforward method  where <B>n</B>
53 Q0 536 34 0.020942468 Lucene_47
     zm  which are bound in a <B>relation</B> with certain parameters  a1     an  by an equation s z1  say zm  if the solution of the above equation for zm  zm <B>n</B> z1     a1      gives rise to a function <B>n</B> which is nonlinear in the ai  then one may rely on a version of gaussian regression  1,2  cacm july  1962 baer  r  <B>m</B>  ca620725 jb march 17  1978 8 09 pm 536 5 536 536 5 536 536 5 536
53 Q0 373 35 0.020813882 Lucene_47
correlation <B>coefficients</B> with <B>matrix</B> multiplication  algorithm 39  cacm march  1961 sassouni  p  ca610309 jb march 17  1978 12 37 am 373 5 373 373 5 373 373 5 373
53 Q0 1099 36 0.020694653 Lucene_47
 should result in fewer debugging problems and make the blind a valuable addition to any systems <B>group</B> which were designed by the staff of the medical computing center of the <B>university</B> of cincinnati college of medicine  cacm april  1964 sterling  t  d  lichstein  <B>m</B>  scarpino  f  stuebing  d  ca640409
53 Q0 1066 37 0.019935764 Lucene_47
 in terms of basic data to linear programming <B>matrix</B> <B>coefficients</B>  data transmission for direct computergrowing applications of linear programming use of linear programming models has grown so extensively in recent years that the whole concept for organizing a computer code has undergone a radical change  it no longer is adequate merely to reduce a <B>mathematical</B> algorithm  i e  the simplex method
53 Q0 269 38 0.019859415 Lucene_47
core allocation based on <B>probability</B> cacm october  1961 riskin  b  <B>n</B>  ca611012 jb march 16  1978 12 49 pm 269 5 269 269 5 269 269 5 269
53 Q0 382 39 0.019859415 Lucene_47
statistical programs at the <B>university</B> of north carolina cacm february  1961 bush  <B>n</B>  ca610216 jb march 17  1978 12 48 am 382 5 382 382 5 382 382 5 382
53 Q0 453 40 0.019742247 Lucene_47
enlargement of a <B>group</B>  algorithm 136  cacm november  1962 wells  <B>m</B>  ca621108 jb march 17  1978 6 17 pm 453 5 453 453 5 453 453 5 453
53 Q0 725 41 0.019742247 Lucene_47
<B>group</B> participation computer demonstration cacm october  1963 mccormick  e  <B>m</B>  ca630933 jb march 13  1978 6 50 pm 725 5 725 725 5 725 725 5 725
53 Q0 1707 42 0.019543413 Lucene_47
generation of positive test matrices with known positive spectra sufficient conditions are given for a real <B>matrix</B> to be similar to a positive <B>matrix</B>  this result is used to construct a similarity transformation which  when applied to a particular upper triangular <B>matrix</B>  yields a positive <B>matrix</B> with a preassigned positive spectrum  cacm august  1968 <B>hall</B>  c  a  porsching  t  a  test matrices
53 Q0 2834 43 0.019535001 Lucene_47
 are presented to generate the <B>n</B>-bit binary reflected gray code and codewords of fixed weight in that code  both is constant  applications to the generation of the combinations of <B>n</B> things taken k at a time  the compositions of <B>integers</B>  and the permutations of a multiset are discussed  cacm september  1976 bitner  j  r  ehrlich  g  reingold  e  <B>m</B>  gray code  combinations  subsets  compositions  combinatorial
53 Q0 1694 44 0.018861897 Lucene_47
an algorithm for the <B>probability</B> of the union of a large number of events an algorithm is presented which efficiently evaluates the <B>probability</B> for the union of <B>n</B> independent and not mutually of <B>n</B> variables in minimum time and storage space  cacm september  1968 miller  g  d  algorithm  <B>probability</B>  optimum  storage vs  time compromise  set union  mutually exclusive events 5.12 5.5 5.6
53 Q0 2289 45 0.018700352 Lucene_47
 algorithms for these problems require about <B>n</B> steps  and noncellular implementations require from <B>n</B> 2 to <B>n</B> 3 steps  cacm september  1972 levitt  k  <B>n</B>  kautz  w  h  graph <B>theory</B>  cellular logic  the adjacency <B>matrix</B> of a graph is easily mapped onto an array  each <B>matrix</B> element is stored in one  these algorithms exhibit a computation time that in many cases grows at a rate not exceeding log2 <B>n</B>  where <B>n</B>
53 Q0 1933 46 0.018557888 Lucene_47
coding the lehmer pseudo-random number generator an algorithm and coding technique is presented for quick evaluation of the lehmer pseudo-random number generator <B>modulo</B> 2  31 - 1  a prime mersenne number with produces 2  31 - 2 numbers  on a p-bit  greater than 31  computer  the computation method <B>probability</B> density  uniform frequency function  simulation  prime factorization  primitive roots ca690205 jb
53 Q0 3156 47 0.018405212 Lucene_47
 processors to find the connected components of an undirected graph with <B>n</B> vertices in time o log2n   an o log2n  time bound also can be achieved using only <B>n</B> <B>n</B>  log2n   processors  the algorithm can be used to find the transitive closure of a symmetric boolean <B>matrix</B>  we assume that the processors  graph <B>theory</B>  parallel processing  algorithms  transitive closure  connected component 5.25 5.32 6.22
53 Q0 2613 48 0.018366938 Lucene_47
<B>transitivity</B> sets  g7   algorithm a482  cacm august  1974 mckay  j  regener  e  <B>transitivity</B>  sets 5.39 ca740811 jb january 17  1978 9 35 am 2613 5 2613 2613 5 2613 2613 5 2613
53 Q0 1870 49 0.018358195 Lucene_47
some techniques for using pseudorandom numbers in computer simulation an algorithm is described by which uniform pseudorandom <B>integers</B> may be used to construct binary  numbers  in which the <B>probability</B> that each bit in the word is a 1-bit and can assume any desired parameter value  techniques for making use of such  numbers  in simulation programming are described  cacm july  1969 donnelly  t
53 Q0 2169 50 0.018014375 Lucene_47
the altran system for rational function manipulation-a survey altran is a complete system for symbolic computation with rational functions in several variables with integer <B>coefficients</B>  it has been designed and implemented to handle large problems with ease and efficiency  considerable effort has  1971 <B>hall</B> jr   a  d  symbolic algebra  rational function manipulation  polynomial manipulation
53 Q0 2096 51 0.017942602 Lucene_47
experiments with the <B>m</B>  amp  <B>n</B> tree-searching program the <B>m</B>  amp  <B>n</B> procedure is an improvement  lowest  valued successor to that node  the <B>m</B>  amp  <B>n</B> procedure assigns to a max  min  node some function of the <B>m</B>  <B>n</B>  highest  lowest  valued successors  an <B>m</B>  amp  <B>n</B> procedure was written in lisp to play the game of kalah  and it was demonstrated that the <B>m</B>  amp  <B>n</B> procedure is significantly
53 Q0 2957 52 0.017896026 Lucene_47
 of aggregates are structured as a hierarchy on <B>n</B>-ary <B>relations</B>  to main tain well-definedness  update operations on such databases must preserve two invariants  well-defined <B>relations</B> are distinct from <B>relations</B> in third normal form  it is shown that these notions are complementary and both implementation detail  should be incorporated into programming languages  cacm june  1977 smith  j  <B>m</B>
53 Q0 2554 53 0.017739262 Lucene_47
 are symmetric band matrices with b positive definite  if <B>n</B> is the order of the <B>matrix</B> and <B>m</B> the bandwidth  the matrices a and b are partitioned into <B>m</B>-by-<B>m</B> blocks  and the algorithm is described in terms as the sum of the errors at each of the <B>n</B> <B>m</B> steps of the algorithm  the latter errors being largely for a symmetric band <B>matrix</B> c whose bandwidth is the same as a and b  the algorithm is similar to those
53 Q0 537 54 0.017711926 Lucene_47
a machine program for <B>theorem</B>-proving the program of a proof procedure is discussed in connection with trial runs and possible improvements  cacm july  1962 davis  <B>m</B>  logemann  g  loveland  d  ca620724 jb march 17  1978 8 11 pm 537 5 537 537 5 537 537 5 537
53 Q0 2446 55 0.017515376 Lucene_47
analysis of skew representations of the symmetric <B>group</B>  algorithm a455  cacm september  1973 hunter  d  b  williams  j  <B>m</B>  symmetric <B>group</B>  skew representation  partition  young diagram  lattice permutation  binary model  outer product 5.30 ca730909 jb january 23  1978 8 49 am 2446 5 2446 2446 5 2446 2446 5 2446
53 Q0 3037 56 0.016713604 Lucene_47
 primes between 2 and <B>n</B>  the algorithm executes in time proportional to <B>n</B>  assuming that multiplication of <B>integers</B> not larger than <B>n</B> can be performed in unit time   the method has the same arithmetic elegant  it is also easily extended to find the prime factorization of all <B>integers</B> between 2 and <B>n</B> in time proportional to <B>n</B>  cacm december  1978 gries  d  misra  j  primes  algorithms  data
53 Q0 1914 57 0.016577214 Lucene_47
<B>matrix</B> scaling by integer programming  algorithm 348  f1   cacm april  1969 klimpel  r  r  integer programming  linear algebra  <B>mathematical</B> programming  <B>matrix</B> condition  <B>matrix</B> scaling 5.14 5.41 ca690403 jb february 17  1978 4 38 pm 1914 5 1914 1914 5 1914 1914 5 1914
53 Q0 2199 58 0.016575081 Lucene_47
a sparse <B>matrix</B> package  part i   f4   algorithm 408  cacm april  1971 mcnamee  j  <B>m</B>  <B>matrix</B>  sparse <B>matrix</B>  <B>matrix</B> manipulation 5.14 ca710406 jb february 3  1978 3 20 pm 2199 5 2199 2199 5 2199 2199 5 2199
53 Q0 2149 59 0.016448095 Lucene_47
entcaf and entcre  evaluation of normalized taylor <B>coefficients</B> of an analytic function  c5   algorithm 413  cacm october  1971 lyness  j  <B>n</B>  taylor <B>coefficients</B>  taylor series  cauchy integral  numerical integration  numerical differentiation  interpolation  complex variable  complex arithmetic  fast fourier transform 5.12 5.13 5.16 ca711007 jb february 2  1978 11 53 am 2119 4 2149 2149 4 2149
53 Q0 2520 60 0.016394805 Lucene_47
greatest common divisor of <B>n</B> <B>integers</B> and multipliers  algorithm c386  cacm april  1973 ragland  l  c  good  d  i  proof of algorithms  greatest common divisor  euclidean algorithm  inductive assertion method 3.15 4.42 5.10 5.24 ca730408 jb january 24  1978 9 27 am 2520 5 2520 2520 5 2520 2520 5 2520
53 Q0 3124 61 0.015817773 Lucene_47
recursive data structures in apl a <B>mathematical</B> study of three approaches for defining nested arrays in apl is presented  theorems exhibiting the relationships between the definitional systems in the construction of data-driven algorithms  cacm february  1979 gull w  jenkins  <B>m</B>  nested arrays  apl arrays  recursive data structures  trees  data-driven algorithms  <B>theory</B> of arrays 4.22 5.29
53 Q0 1308 62 0.01580561 Lucene_47
 the part and specify the output desired  one approach to the <B>mathematical</B> model consists of a <B>group</B>a <B>mathematical</B> model for mechanical part description the flexibility of a <B>mathematical</B> model takes advantage of the common information requirements of computer-aided engineering drawing  numerical subprograms will convert the <B>mathematical</B> model into instructions for driving automatic drafting machines
53 Q0 1922 63 0.014981966 Lucene_47
 selection procedures  <B>link</B>  <B>link</B> control procedures  <B>link</B> establishment termination procedures  <B>link</B> message transfer procedures  <B>link</B> error control procedures  <B>link</B> polling selection procedures  data <B>link</B>  data <B>link</B> control procedures  data <B>link</B> establishment termination procedures  data <B>link</B> message transfer procedures  data <B>link</B> error control procedures  data <B>link</B> polling selection procedures
53 Q0 48 64 0.014896797 Lucene_47
shift-register code for indexing applications in this communication the use of a shift-register code with <B>n</B>   10 is described for calling 64 wireless telemetering stations in a fixed cyclical order for tuitous error combinations of very low <B>probability</B>  it has been called  the communication describes by the united nations technical aid administration  untaa   cacm october  1959 nadler  <B>m</B>  sengupta
53 Q0 2484 65 0.01482334 Lucene_47
 of binary <B>relations</B>  an algorithm for constructing subsets of a set  and an algorithm for selecting an element from the given set of objects  the use of different <B>relations</B> and algorithms results organization and storage is reduced to that of defining <B>relations</B> and formulating algorithms under a given  and may serve as a basis for developing a formal <B>theory</B> on the subject  cacm july  1973 huang  j  c
53 Q0 2405 66 0.014798284 Lucene_47
linear systems with almost tridiagonal <B>matrix</B>  f4   algorithm a470  cacm december  1973 kubicek  <B>m</B>  system of linear equations  almost tridiagonal <B>matrix</B>  sparse <B>matrix</B> 5.14 ca731203 jb january 19  1978 2 50 pm 2405 5 2405 2405 5 2405 2405 5 2405
53 Q0 2806 67 0.014721101 Lucene_47
two hadamard numbers for matrices a discussion is given of two functions of the entries of a square <B>matrix</B>  both related to hadamard s determinant <B>theorem</B>  which have some merits as alternatives to norm-bound  condition numbers   one  for linear systems  is known  the other  for eigen systems  seems to be new  cacm january  1975 birkhoff  g  matrices  eigenvalues  norms  condition numbers  error
53 Q0 3108 68 0.014718302 Lucene_47
economical encoding of commas between strings a method for insertion of delimiters between strings without using new symbols is presented  as the lengths of the strings increase  the extra cost  in terms of prolongation  becomes vanishingly small compared to the lengths of the strings  cacm april  1978 even  s  rodeh  <B>m</B>  string transmission  delimiters  commas  encoding of the <B>integers</B> 3.57 3.81
53 Q0 2851 69 0.014296705 Lucene_47
  or processes  executing the program  an <B>induction</B> principle is presented which treats the control and data  examples are presented in which the <B>induction</B> principle is used to demonstrate proofs of mutual exclusion  it is shown that assertions-oriented proof methods are special cases of the <B>induction</B> on the satisfiability of certain logical formulas  cacm july  1976 keller  r  <B>m</B>  parallel program  correctness
53 Q0 2177 70 0.014046016 Lucene_47
  as an ordered list of edges or  ii  as a packed adjacency <B>matrix</B>  if w denotes the word length of the machine employed  the storage  in machine words  required for a graph with <B>n</B> nodes and <B>m</B> edges increases essentially as 2 <B>m</B> <B>n</B>  in case  i   or  <B>n</B> 2  win case  ii   a spanning tree with labeled edges  for both representations the time required to analyze a graph on <B>n</B> nodes increases as <B>n</B> g where g depends
53 Q0 503 71 0.014026687 Lucene_47
rational roots of polynomials with integer <B>coefficients</B>  algorithm 78  cacm august  1962 collison  d  <B>m</B>  ca620825 jb march 17  1978 9 27 pm 503 5 503 503 5 503 503 5 503
53 Q0 2515 72 0.013841601 Lucene_47
minimal event-node network of project precedence <B>relations</B> a procedure for constructing a minimal event-node network to represent a set of precedence <B>relations</B> without parallel activities and the number of arcs are the minima to preserve the given precedence <B>relations</B> counterexamples are given corneil  d  g  gotlieb  c  c  lee  y  <B>m</B>  network  project  event-node network  activity-node network
53 Q0 2697 73 0.01357439 Lucene_47
 <B>n</B>  the order of the <B>matrix</B>  if the elements of the subdiagonals and superdiagonals are 1  then only of the ratio of the coefficient <B>matrix</B> diagonal constants and parameters of the floating-point number system  various generalizations of these results are discussed  cacm january  1974 malcolm  <B>m</B>
53 Q0 852 74 0.0135738235 Lucene_47
a method of comparing the time requirements of sorting methods cacm may  1963 <B>hall</B>  <B>m</B>  h  ca630515 jb march 14  1978 10 58 am 1919 4 852 852 4 852 852 4 852 864 4 852 864 4 852 865 4 852 232 5 852 2017 5 852 74 5 852 852 5 852 852 5 852 852 5 852 849 6 852 850 6 852 851 6 852 852 6 852 853 6 852 854 6 852 855 6 852 856 6 852 857 6 852 858 6 852 859 6 852 860 6 852 861 6 852 862 6 852 863 6 852
53 Q0 1501 75 0.013515132 Lucene_47
eigenvectors of a 2n x 2n <B>matrix</B> it has been known that the eigenvalues of a certain 2n x 2n <B>matrix</B> can be obtained by use of two smaller matrices of order <B>n</B> which can be easily constructed  an algorithm is given to obtain the eigenvectors of the 2n x 2n <B>matrix</B> by use of the eigenvectors of the smaller matrices  cacm december  1967 charmonman  s  ca671207 jb february 26  1978 2 22 pm 1501 5 1501
53 Q0 1725 76 0.012844387 Lucene_47
a simple proof of lewin s ordered-retrieval <B>theorem</B> for associative memories an efficient method the memory  lewin proves that  for the readout by the described method of <B>m</B> distinct binary words  2m simple proof of this <B>theorem</B> derived from some elementary aspects of the structure of sets of binary  ordered lists  ordered information retrieval  ordered retrieval <B>theorem</B>  column digit values  digit
53 Q0 2695 77 0.012822308 Lucene_47
tridiagonalization by permutations tridiagonalizing a <B>matrix</B> by similarity transformations compared with standard transformations  a graph theoretic algorithm which examines an arbitrary <B>n</B> x <B>n</B> <B>matrix</B> and determines whether or not it can be permuted into tridiagonal form is given of increments are linear in <B>n</B>  this compares very favorably with standard transformation methods
53 Q0 2081 78 0.012739463 Lucene_47
some complete calculi for matrices a <B>matrix</B> calculus is introduced with the intention of developing data structures suitable for a high level algorithmic language for <B>mathematical</B> programming of sequences of matrices  are considered  and <B>matrix</B> operators areext ended to sequence operators and cumulative operators  algorithms are given which use symbol manipulation of <B>matrix</B> expressions so
53 Q0 2234 79 0.012690674 Lucene_47
roots of <B>matrix</B> pencils  algorithm r405  cacm december  1972 heiberger  r  <B>m</B>  eigenvalues  <B>matrix</B> roots  pencil roots 5.1 5.3 ca721221 jb january 27  1978 8 51 am 2234 5 2234 2234 5 2234 2234 5 2234
53 Q0 2758 80 0.012690674 Lucene_47
a note on the lu factorization of a symmetric <B>matrix</B> cacm may  1975 evans  d  j  hatzopoulos  <B>m</B>  symmetric matrices  factorization  test matrices  <B>matrix</B> inversion  separable systems 5.14 ca750509 jb january 9  1978 2 26 pm 2758 5 2758 2758 5 2758 2758 5 2758
53 Q0 1867 81 0.012509458 Lucene_47
 <B>theory</B>  it is shown that l j  - gt  2 and that  asymptotically  the average interval between sign lengths  asymptotic expected length  recursion <B>relation</B>  generating function  meromorphic function
53 Q0 2134 82 0.012509458 Lucene_47
 are discussed  and a <B>relation</B> between solution time and problem size is given  cacm december  1971 bourgeois  f  lassalle  j  operations research  optimization <B>theory</B>  assignment problem  rectangular
53 Q0 2217 83 0.0124308495 Lucene_47
  heuristic tree-searching program  which is presently being applied to resolution <B>theorem</B>-proving for pp  a multiple regression program was used to produce optimal <B>coefficients</B> for linear polynomial  cacm february  1971 slagle  j  r  farrell  c  d  learning  <B>theorem</B>-providing  heuristic  automatic
53 Q0 2326 84 0.012320854 Lucene_47
fix point approach to the <B>theory</B> of computation following the fix point <B>theory</B> of scott  the semantics of computer programs are defined in terms of the least fix points of recursive programs  this allows not only the justification of all existing verification techniques  but also their extension  semantics of programming languages  least fix points  recursive programs  computational <B>induction</B> 5.23
53 Q0 2346 85 0.012313757 Lucene_47
hu-tucker minimum redundancy alphabetic coding method  z   algorithm a428  cacm may  1972 yohe  j  <B>m</B>  information <B>theory</B>  coding <B>theory</B>  hu-tucker method  minimum redundancy coding 5.6 ca720514 jb january 31  1978 9 30 am 2346 4 2346 2459 4 2346 1114 5 2346 2346 5 2346 2346 5 2346 2346 5 2346
53 Q0 1533 86 0.012226269 Lucene_47
a marovian model of the <B>university</B> of michigan executive system a <B>mathematical</B> model of a computer s executive system is postulated and its parameters estimated with the aid of extensive data on the system s operation  although simplifying assumptions are made  the results predicted by the model agree reasonable well with actual results  the model is used to study the effects of changes
53 Q0 2298 87 0.012139994 Lucene_47
an environment for research in microprogramming and emulation the development of the research project in microprogramming and emulation at state <B>university</B> of new york at buffalo consisted of three phases  the evaluation of various possible machines to support this research  the decision and definition of goals for each <B>group</B> in the project  each of these phases is reported  with emphasis
53 Q0 1124 88 0.011932778 Lucene_47
<B>matrix</B> division  algorithm 197  cacm march  1964 wells  <B>m</B>  ca640307 jb march 10  1978 3 35 am 1124 5 1124 1124 5 1124 1124 5 1124
53 Q0 1283 89 0.011932778 Lucene_47
<B>matrix</B> inversion  algorithm 231  f1   cacm april  1965 ferring  <B>m</B>  ca650408 jb march 7  1978 3 53 pm 1283 5 1283 1283 5 1283 1283 5 1283
53 Q0 3 90 0.011932778 Lucene_47
techniques department on <B>matrix</B> program schemes cacm december  1958 friedman  <B>m</B>  d  ca581201 jb march 22  1978 8 30 pm 3 5 3 3 5 3 3 5 3
53 Q0 787 91 0.011932778 Lucene_47
<B>matrix</B> division  algorithm 197  cacm august  1963 wells  <B>m</B>  ca630811 jb march 13  1978 8 37 pm 787 5 787 787 5 787 787 5 787
53 Q0 1170 92 0.011724366 Lucene_47
 features for each of its immediate neighbors  syntactic rules of combination show the <B>relation</B> of a word a <B>probability</B> of  9 for accurately parsing each new sentence it encountered  it was concluded that the system
53 Q0 2032 93 0.011724366 Lucene_47
file structures using hashing functions a general method of file structuring is proposed which uses a hashing function to define tree structure  two types of such trees are examined  and their <B>relation</B> to trees studied in the past is explainedesults for the <B>probability</B> distributions of path lengths are derived and illustrated  cacm july  1970 coffman jr   e  g  eve  j  data structures  tree
53 Q0 2714 94 0.011622514 Lucene_47
merging with parallel processors consider two linearly ordered sets a  b   a  <B>m</B>   b  <B>n</B>  <B>m</B> lt  <B>n</B>  <B>n</B> <B>m</B>   steps  if <B>n</B>    2 b <B>m</B>  b an integer   the algorithm requires at most 2 log2  <B>m</B> 1      <B>m</B> p  2 b  steps  in the case where <B>m</B> and <B>n</B> are of the same order of magnitude  i e  <B>n</B> km with k being favorably with the previous best parallel merging algorithm  batcher s algorithm  which requires <B>n</B> p     <B>m</B>
53 Q0 2720 95 0.011610156 Lucene_47
 analytical techniques  using standard queueing <B>theory</B>  each disk drive is characterized by a queueing model with service time of a disk drive represented by the <B>probability</B> density function of the sum of two drive hierarchies  system evaluation  input output  modeling  queueing <B>theory</B>  balancing  scheduling
53 Q0 1761 96 0.0115631055 Lucene_47
chi-squared integral  algorithm 299  s15   cacm april  1968 o brien  w  <B>m</B>  wood  j  chi-squared integral  <B>probability</B>  special functions 5.5 5.12 ca680409 jb february 23  1978 10 24 am 1761 5 1761 1761 5 1761 1761 5 1761 2668 5 1761 1604 6 1761 1728 6 1761 1761 6 1761 1827 6 1761 2677 6 1761
53 Q0 1649 97 0.0113633 Lucene_47
  methods of using this information are illustrated in <B>relation</B> to general purpose data directed input and output routines  some other uses such as <B>matrix</B> manipulation are discussed  cacm january  1967
53 Q0 2052 98 0.0113633 Lucene_47
scheduling to reduce conflict in meetings conflicts in scheduling can be treated as defining an undirected linear graph independently of the <B>relation</B> of the activities in conflict to additional constraints of time and space  each connected component of such a graph  which can be found at different times  cacm june  1970 grimes  j  e  allocation  conflict <B>matrix</B>  connected component
53 Q0 1857 99 0.011221349 Lucene_47
filon quadrature  algorithm  d1   cacm august  1969 chase  s  <B>m</B>  fosdick  l  d  quadrature  filon quadrature  integration  filon integration  fourier <B>coefficients</B>  fourier series 5.16 ca690806 jb february 15  1978 5 52 pm 1857 4 1857 2393 4 1857 1858 5 1857 1857 5 1857 1857 5 1857 1857 5 1857 1268 6 1857 1857 6 1857
53 Q0 616 100 0.011197729 Lucene_47
an information algebra - phase i report-language structure <B>group</B> of the codasyl development committee this report represents the results of the first phase of the work of the language structure <B>group</B>  on a <B>mathematical</B> model called  an information algebra  developed primarily by r  bosak  it is hoped  and can be addressed to any of the members of the language structure <B>group</B>  robert bosak  system
*************Query 54*************************

54 Q0 2931 1 0.26300365 Lucene_47
 <B>languages</B>  automata  <B>denotational</B> <B>semantics</B>  a-calculus models  computability  partial functionslogic and <B>programming</B> <B>languages</B> logic has been long in terested in whether answers to certain parts of computability theory  <B>programming</B> <B>languages</B> offer an obvious opportunity as their syntactic with the method of <B>data</B> <B>types</B> as lattices  or partial orderings  under an information content ordering
54 Q0 2940 2 0.26083368 Lucene_47
  program <B>specifications</B>  <B>programming</B> <B>languages</B>  <B>programming</B> methodology  <B>proofs</B> of <B>correctness</B>  <B>types</B>  1977 shaw  m  wulf  w  a  abstraction and representation  <B>abstract</B> <B>data</B> <B>types</B>  assertions  control the alphard  form  provides the programmer with a great deal of control over the implementation of <B>abstract</B> <B>data</B> <B>types</B>  in this paper the abstraction techniques are extended from simple <B>data</B> representation
54 Q0 3031 3 0.18984435 Lucene_47
<B>abstract</B> <B>data</B> <B>types</B> and software validation a <B>data</B> abstraction can be naturally specified using implementation is accomplished  cacm december  1978 guttag  j  horowitz  <B>e</B>  musser  d  <B>abstract</B> <B>data</B> type of an implementation of an <B>abstract</B> <B>data</B> type  second  semi-automatic tools are described which can be used both to automate such <B>proofs</B> of <B>correctness</B> and to derive an immediate implementation from the axioms
54 Q0 2265 4 0.16959232 Lucene_47
  f  type checking  <B>types</B>  lambda calculus  models for <B>programming</B> <B>languages</B>  syntax  <B>semantics</B>a model for type checking most current <B>programming</B> <B>languages</B> treat computation over different classes of objects  <B>e</B> g  numbers  strings  labels and functions   for correct compilation and execution of the type-wise <B>correctness</B> or incorrectness of the program is resolved by reducing its
54 Q0 2295 5 0.16389187 Lucene_47
comment on the composition of <B>semantics</B> in algol 68 cacm august  1972 van der poel  w  l  <B>programming</B> primitives  <B>programming</B> <B>languages</B>  algol  <B>semantics</B>  recursive composition  design of <B>programming</B> <B>languages</B>  <B>data</B> structures 1.3 4.2 4.22 5.23 5.24 ca720807 jb january 30  1978 9 29 am 2295 5 2295 2295 5 2295 2295 5 2295
54 Q0 2470 6 0.15851523 Lucene_47
  formal systems  lambda-calculus  extensible <B>languages</B>  <B>data</B> <B>types</B>  modes  axioms  <B>correctness</B>  formal language definition  formal description  <B>data</B> structures  description <B>languages</B>  models of computation be introduced into <B>languages</B> through the mechanism of singleton <B>data</B> <B>types</B>  both deterministic how the system can be used to build composite <B>data</B> <B>types</B> out of simper ones with the operations
54 Q0 2732 7 0.14736252 Lucene_47
 expressed in terms of these constructs  a calculus will be shown  cacm august  1975 <B>dijkstra</B>  <B>e</B>  w  <B>programming</B> <B>languages</B>  sequencing primitives  program <B>semantics</B>  <B>programming</B> language <B>semantics</B>  nondeterminacy  case-construction  repetition  termination  <B>correctness</B> proof  derivation of programs  <B>programming</B> methodology 4.20 4.22 ca750803 jb january 6  1978 4 46 pm 249 4 2732 254 4 2732 272 4 2732
54 Q0 2148 8 0.13215104 Lucene_47
  lewi  j  sintzoff  m  wodon  p  l  <B>programming</B> primitives  <B>programming</B> <B>languages</B>  algol  <B>semantics</B>  recursive composition  design of <B>programming</B> <B>languages</B>  <B>data</B> structures 1.3 4.2 4.22 5.23 5.24the composition of <B>semantics</B> in algol 68 the main features of algol 68 are explained from a semantic point of view  it is shown how the language permits the composition of values and actions  i <B>e</B>
54 Q0 2958 9 0.12892161 Lucene_47
<B>abstract</B> <B>data</B> <B>types</B> and the development of <B>data</B> structures <B>abstract</B> <B>data</B> <B>types</B> can play and complete  cacm june  1977 guttag  j  <B>abstract</B> <B>data</B> type  <B>correctness</B> proof  <B>data</B> type  <B>data</B> presents and discusses the application of an algebraic technique for the specification of <B>abstract</B> <B>data</B> <B>types</B>  among the examples presented is a top-down development of a symbol table for a block structured
54 Q0 1747 10 0.123960234 Lucene_47
 design  virtual computers  <B>programming</B> <B>languages</B>  <B>programming</B> language design  program <B>semantics</B>  <B>programming</B> language <B>semantics</B>  determinism  reproducibility  repeatability  deterministic computers of the criteria  the notion of an <B>abstract</B> machine of a <B>programming</B> language and the notion of a virtual  and the assignment of capability indexes  cacm may  1968 van horn  <B>e</B>  c  computer design  computer design
54 Q0 2264 11 0.12229221 Lucene_47
 description  program <B>correctness</B>  <B>programming</B> <B>languages</B>  <B>semantics</B> 4.22 5.23 5.24 ca721105 jb january 27derived <B>semantics</B> for some <B>programming</B> language constructs the constructs of a simple <B>programming</B> language are introduced and described informally in terms of values and side-effects  a translator-effect are derived in order to make the proof rigorous  <B>correctness</B> of the implementation involves
54 Q0 2326 12 0.12216694 Lucene_47
  <B>semantics</B> of <B>programming</B> <B>languages</B>  least fix points  recursive programs  computational induction 5.23 to the handling  in a uniform manner of various properties of computer programs  <B>including</B> <B>correctness</B>fix point approach to the theory of computation following the fix point theory of scott  the <B>semantics</B> of computer programs are defined in terms of the least fix points of recursive programs
54 Q0 3133 13 0.10626415 Lucene_47
  the extended semantic network is provided with a precise <B>semantics</B>  inference rules  and a procedural interpretation  on the other hand  by regarding semantic networks as an <B>abstract</B> <B>data</B> structure  a  kowalski  r  logic  semantic networks  theorem-proving  indexing  resolution  deduction  logic <B>programming</B>
54 Q0 3077 14 0.10509984 Lucene_47
 of programs conventional <B>programming</B> <B>languages</B> are growing ever more enormous  but not stronger  inherent coupling off <B>semantics</B> to state transitions  their division of <B>programming</B> into a world of expressions and in its state transition rules  unlike von neumann <B>languages</B>  these systems have <B>semantics</B> loosely  functional <B>programming</B>  algebra of programs  combining forms  functional forms  <B>programming</B> <B>languages</B>
54 Q0 2314 15 0.103695005 Lucene_47
 facilitate use of complex <B>data</B> stores  cacm july  1972 bobrow  d  g  list processing  <B>programming</B> <B>languages</B>  design of <B>programming</B> <B>languages</B>  interactive systems  control structures  <B>data</B> structures  <B>programming</B> primitives  <B>semantics</B>  advanced <B>programming</B> systems 1.3 4.2 4.22 4.3 4.32 5.23 5.24 <B>programming</B> of various control regimes <B>including</B> multiprocesses  coroutines and backtracking
54 Q0 3103 16 0.0975566 Lucene_47
 are also reviewed  cacm may  1978 low  j  <B>abstract</B> <B>data</B> <B>types</B>  automatic <B>programming</B>  <B>data</B> with <B>abstract</B> <B>data</B> <B>types</B> such as sets and lists  programmer time can be saved by automating <B>abstract</B> <B>types</B> were then inefficient in space or time  in this paper a system for automatically choosing efficient implementations for <B>abstract</B> <B>types</B> from a library of implementations is discussed
54 Q0 2705 17 0.09552567 Lucene_47
<B>programming</B> <B>languages</B>  natural <B>languages</B>  and mathematics some social aspects of <B>programming</B> are illuminated through analogies with similar aspects of mathematics and natural <B>languages</B>  the split between pure and applied mathematics is found similarly in <B>programming</B>  the development of natural <B>languages</B> toward flexion less  word-order based language <B>types</B> speaks for <B>programming</B> language design
54 Q0 2411 18 0.09444439 Lucene_47
tree-structured programs cacm november  1973 wegner  <B>e</B>  control structures  flowcharts  goto statements  inductive assertion  least fix points  optimization in compilers  program documentation  program flow graphs  <B>programming</B> language design  proof of programs  <B>semantics</B> of <B>programming</B> <B>languages</B>  structured <B>programming</B>  4.12 4.22 5.24 ca731115 jb january 19  1978 4 19 pm 2411 4 2411 2411 4 2411
54 Q0 2842 19 0.094003335 Lucene_47
the <B>denotational</B> <B>semantics</B> of <B>programming</B> <B>languages</B> this paper is a tutorial introduction to the theory of <B>programming</B> language <B>semantics</B> developed by d  scott and c  strachey  the application definition of the language gedanken  cacm august  1976 tennent  r  d  <B>semantics</B>  <B>programming</B> language  and continuations are introduced to model classes of <B>programming</B> language features and the underlying mathematical
54 Q0 2342 20 0.093571484 Lucene_47
  and informal <B>proofs</B> of <B>correctness</B> have been given for these solutions  in this paper a system of parallel processes is regarded as a machine which proceeds from one state s  i <B>e</B>  a collection of pertinent <B>data</B> values and process configurations  to a next state s  in accordance with a transition rule communicating parallel processes have been examined by <B>dijkstra</B>  knuth  and others  solutions have been
54 Q0 3105 21 0.09335698 Lucene_47
  but is particularly suitable for extending <B>languages</B> that support the notion of <B>abstract</B> <B>data</B> <B>types</B>  cacm may  1978 jones  a  liskov b  <B>programming</B> <B>languages</B>  access control  <B>data</B> <B>types</B>  <B>abstract</B> <B>data</B> mechanisms  this paper shows how to extend <B>programming</B> <B>languages</B> to provide controlled sharinga language extension for expressing constraints on <B>data</B> access controlled sharing of information
54 Q0 1902 22 0.089986764 Lucene_47
an automatic grading scheme for simple <B>programming</B> exercises a discussion is given of alterations that were made to a typical <B>university</B> operating system to record the results of <B>programming</B> exercises in three different <B>languages</B>  <B>including</B> assembly language  in this computer-controlled grading scheme provision is made for testing with programmer-supplied <B>data</B> and for final runs with system
54 Q0 2192 23 0.0865328 Lucene_47
another recursion induction principle an inductive method for proving things about recursively defined functions is described  it is shown to be useful for proving partial functions equivalent and thus applicable in <B>proofs</B> about interpreters for <B>programming</B> <B>languages</B>  cacm may  1971 morris jr   j  h  recursion  induction  <B>correctness</B>  <B>proofs</B>  compiler <B>correctness</B> 4.13 4.2 5.24 ca710507 jb
54 Q0 2943 24 0.08502288 Lucene_47
 structured <B>programming</B> language using assignment and conditional statements and loops  cacm july  1977 ashcrof  <B>e</B>  a  wadge  w  w  program proving  formal systems  <B>semantics</B>  iteration  structured be written and <B>proofs</B> of programs carried out  the <B>proofs</B> are particularly easy to follow of inference for the special lucid functions  as a <B>programming</B> language  lucid is unconventional because
54 Q0 2886 25 0.07623568 Lucene_47
 the attribute grammar of a given <B>programming</B> language to the left-to-right evaluation scheme are discussed  cacm february  1976 bochmann  g  v  attribute grammars  <B>semantics</B> of <B>programming</B> <B>languages</B> for the definition of <B>programming</B> <B>languages</B> and compilers  a formal definition of attribute grammars  a condition for an attribute grammar is given which assures that the <B>semantics</B> of any program can
54 Q0 2254 26 0.07613099 Lucene_47
 of partitioning for array <B>languages</B>  of general interest is the <B>data</B> structure for partitioning  dynamic partitioning  array partitioning array language  <B>data</B> structure  tree structure  <B>programming</B>dynamic partitioning for array <B>languages</B> the classical process of partitioning an array for different <B>types</B> of arrays  so that subarrays may vary over the original array in a nearly
54 Q0 3198 27 0.07366996 Lucene_47
microprogramming  emulators and <B>programming</B> <B>languages</B> the problem we have been concerned with is that of converting language to action - or intellectual energy to mechanical energy  the medium that we use for this purpose is language and therefore we are preoccupied with the subject of language and then on <B>semantics</B>  cacm march  1966 greem  j  ca660318 es march 17  1982 10 10 am 1542 5 3198 3198 5 3198 3198
54 Q0 2112 28 0.07130116 Lucene_47
translation equations input limited transduction expressions  or translation equations  are used to describe the syntax and left-context sensitive <B>semantics</B> for context-free <B>languages</B>  a formal procedure is given for deriving from a set of translation equations the <B>specifications</B> for a pushdown expression  transduction expression  context-free <B>languages</B>  translation  recognizers  parsing  meta
54 Q0 2178 29 0.07125944 Lucene_47
a language extension for graph processing and its formal <B>semantics</B> a simple <B>programming</B> language   the definition of graspe here is solely in terms of its <B>semantics</B>  that is  the <B>data</B> structures  friedman  d  p  graph processing  <B>programming</B> language  formal <B>semantics</B>  directed graph  lisp  network graph <B>data</B> structure and a set of primitive operations for manipulating these structures  graspe may
54 Q0 2851 30 0.0667916 Lucene_47
  an <B>abstract</B> conceptual model and a parallel-program model  the former model does not distinguish between control and <B>data</B> states  the latter model includes the capability for the representation  or processes  executing the program  an induction principle is presented which treats the control and <B>data</B> <B>correctness</B> conditions can be expressed without enumeration of the set of all possible control states
54 Q0 2227 31 0.06550333 Lucene_47
  finally  some conclusions relating to general <B>programming</B> methodology are drawn  cacm january  1971 <B>hoare</B>  c  a  r  <B>proofs</B> of programs  <B>programming</B> methodology  program documentation  program <B>correctness</B>  theory of <B>programming</B> 4.0 4.22 5.21 5.23 5.24 ca710107 jb february 8  1978 10 40 am 2021 4proof of a program  find a proof is given of the <B>correctness</B> of the algorithm  find   first
54 Q0 2703 32 0.06041568 Lucene_47
 attribute grammars are an extension of context-free grammars devised by knuth as a mechanism for <B>including</B> the <B>semantics</B> of a context-free language with the syntax of the language  the circularity problem for a grammar is to determine whether the <B>semantics</B> for all possible sentences  programs  in fact  computational complexity  exponential time  <B>semantics</B> 4.12 5.25 ca751204 jb january 5  1978 4 38 pm
54 Q0 1457 33 0.06032462 Lucene_47
<B>data</B> manipulation and <B>programming</B> problems in automatic information retrieval automatic information retrieval programs require the manipulation of a variety of different <B>data</B> structures  <B>including</B> linear text  sparse matrices  and tree or list structures  the main <B>data</B> manipulations to be performed  advantages of these <B>programming</B> <B>languages</B> for the retrieval application are examined  and suggestions
54 Q0 949 34 0.058776166 Lucene_47
integer and signed constants in algol a few remarks are given on the relations between syntax and <B>semantics</B> in the <B>programming</B> <B>languages</B>  the aim is to point out that  if it is true that the grammar of a context-free language should be conceived not only as a strings-generating device but also  1964 petrone  l  vandoni  c  <B>e</B>  ca641222 jb march 9  1978 2 35 pm 1086 4 949 1102 4 949 1132 4 949
54 Q0 1213 35 0.058773864 Lucene_47
dynamic format <B>specifications</B> the use and implementation of two new fortran format conversions are discussed  these format <B>types</B> give the fortran programmer control of input output <B>specifications</B> at execution time  cacm august  1965 ranelletti  j  <B>e</B>  ca650811 jb march 6  1978 8 07 pm 1213 5 1213 1213 5 1213 1213 5 1213
54 Q0 3073 36 0.057846837 Lucene_47
 of familiar <B>programming</B> exercises  cacm august  1978 <B>hoare</B>  c  <B>programming</B>  <B>programming</B> <B>languages</B>  <B>programming</B> primitives  program structures  parallel <B>programming</B>  concurrency  input  output  guarded of <B>programming</B> and that parallel composition of communicating sequential processes is a fundamental program structuring method  when combined with a development of <B>dijkstra</B> s guarded command
54 Q0 2941 37 0.05701761 Lucene_47
 safe  cacm august  1977 geschke  c  m  morris  j  h  jr  satterthwaite  <B>e</B>  h  <B>programming</B> <B>languages</B>  <B>types</B>  modules  <B>data</B> structures  systems <B>programming</B> 4.22 ca770802 jb december 28  1977 8 07 am-are discussed  and some implications for mesa and similar <B>programming</B> <B>languages</B> are suggested  the specific topics addressed are  module structure and its use in defining abstractions  <B>data</B>-structuring
54 Q0 3185 38 0.056922235 Lucene_47
the humble programmer we shall do a much better <B>programming</B> job  provided that we approach the task with a full appreciation if its tremendous difficulty  provided that we stick to modest and elegant <B>programming</B> <B>languages</B>  provided that we respect the intrinsic limitations of the human mind and approach the task as very humble programmers  cacm october  1972 <B>dijkstra</B>  <B>e</B>  w  ca721010 es march 18
54 Q0 1323 39 0.05689792 Lucene_47
  the second part of the paper gives a formal description  i <B>e</B>  an  <B>abstract</B> compiler  into the  <B>abstract</B> some of the <B>semantics</B> of algol 60 can be formalized by establishing a correspondence between <B>languages</B> and compute behavior is described  based on the notions of functional application is used as an  <B>abstract</B> object language  into which algol 60 is mapped  many of algol 60 s features
54 Q0 3039 40 0.056220327 Lucene_47
 november  1978 <B>dijkstra</B>  <B>e</B>  lamport  l  martin  a  scholten  c  steffens  <B>e</B>  multiprocessing  fine shared <B>data</B> space  a technique is developed which allows nearly all of the activity needed for garbage  program <B>correctness</B> for multiprogramming tasks  garbage collection 4.32 4.34 4.35 4.39 5.24 ca781112 dh
54 Q0 2956 41 0.054418076 Lucene_47
 june  1977 gries  d  gehani  n  <B>data</B> <B>types</B>  generic procedures  <B>programming</B> <B>languages</B> 4.12 4.20 4.22some ideas on <B>data</B> <B>types</B> in high-level <B>languages</B> a number of issues are explored concerning the notion that a <B>data</B> type is a set of values together with a set of primitive operations on those values of the more narrow for i   1 to n notation   the use of the domain of an array as a <B>data</B> type
54 Q0 1135 42 0.054026783 Lucene_47
 set by codasyl for such <B>languages</B>  <B>including</B> machine-independence  cacm february  1964 lombardi  l compute <B>programming</B> language which covers a wide class of business and file processing applications characteristic of the particular application  furthermore local changes of a process  <B>e</B> g  changes affecting only one of the output files involved  can be effected by local modifications in the program  <B>e</B>
54 Q0 2651 43 0.05366375 Lucene_47
the treatment of <B>data</B> <B>types</B> in el1 in constructing a general purpose <B>programming</B> language  a key issue is providing a sufficient set of <B>data</B> <B>types</B> and associated operations in a manner that permits <B>types</B>  modes  mode unions  type conversion  coercion  generic functions  extensible <B>languages</B>  <B>data</B> treatment of <B>data</B> <B>types</B> includes provision for programmer-defined <B>data</B> <B>types</B> <B>data</B> <B>types</B> and generic
54 Q0 3104 44 0.05298706 Lucene_47
test <B>data</B> as an aid in proving program <B>correctness</B> <B>proofs</B> of program <B>correctness</B> tend to be long and tedious  whereas testing  though useful in detecting errors  usually does not guarantee <B>correctness</B>  this paper introduces a techniques whereby test <B>data</B> can be used in proving program <B>correctness</B>  in addition to simplifying the process of proving <B>correctness</B>  this method simplifies the process
54 Q0 2718 45 0.051990423 Lucene_47
 to design <B>data</B> structures conforming to the <B>data</B> base task group <B>specifications</B>  the automatic base task group  database design  <B>data</B> structure  automatic <B>programming</B>  translation  nonprocedurala preliminary system for the design of dbtg <B>data</B> structures the functional approach to database design is introduced  in this approach the goal of design is to derive a <B>data</B> structure which
54 Q0 1835 46 0.051320747 Lucene_47
the iitran <B>programming</B> language the iitran language  developed to be used by students  and its important important features are described  iitran is a procedure-oriented language with a one-level block structure and a variety of <B>data</B> <B>types</B>  several novel and powerful features are included  b  k  hochsprung  r  r  <B>languages</B> <B>programming</B> <B>languages</B>  student <B>programming</B> systems  language
54 Q0 2155 47 0.05076503 Lucene_47
toward an understanding of <B>data</B> structures this paper presents a notation and formalism for describing the <B>semantics</B> of <B>data</B> structures  this is based on directed graphs with named edges of a <B>programming</B> language  which allows a programmer who has expressed the <B>semantics</B> of an algorithm in terms of the graphs to then specify the implementation of some of his <B>data</B> structures in order
54 Q0 2341 48 0.04974934 Lucene_47
  nonnumerical <B>programming</B>  snobol4  <B>data</B> <B>types</B>  two-dimensional mathematics  test processing of specialized syntax and could readily be absorbed into the external structure of most <B>programming</B> <B>languages</B>blocks-a new <B>data</B> type for snobol4 a new <B>data</B> type  called a block  has been implemented  <B>including</B> flowcharting  bargraphs  logic diagrams  mathematical-equation formation  and text
54 Q0 2865 49 0.04952101 Lucene_47
  gries  d  structured multiprogramming <B>correctness</B> <B>proofs</B>  program verification  concurrent a number of properties of parallel programs is presented  <B>hoare</B> has given a set of axioms for partial <B>correctness</B>  but they are not strong enough in most cases  this paper defines a more powerful deductive system which is in some sense complete for partial <B>correctness</B>  a crucial axiom provides
54 Q0 2945 50 0.049350712 Lucene_47
 easily be included in the analysis phase of most existing compilers  appropriate <B>semantics</B> are presented that a program cannot cause supposedly nonconfidential results to depend on confidential input <B>data</B>  cacm july  1977 denning  d  <B>e</B>  denning  p  j  protection  security  information flow  program
54 Q0 1470 51 0.04881225 Lucene_47
the structure of <B>programming</B> <B>languages</B> the following are identified as major components of every <B>programming</B> language   1  the elementary program statement   2  mechanisms for linking elementary statements together   3  the means by which a program can obtain <B>data</B> inputs  several alternative forms concludes by suggesting the evolution of <B>programming</B> <B>languages</B> toward one which will permit all
54 Q0 2701 52 0.048035573 Lucene_47
  the algorithm is shown to treat a very general class of function spaces  for a graph of <B>e</B> edges  the algorithm has a worst case time bound of o <B>e</B> log <B>e</B>  function operations  it is also shown that in <B>programming</B> terms  the number of operations is proportional to <B>e</B> plus the number of exits from program loopsa fast and usually linear algorithm for global flow analysis  <B>abstract</B> only--complete paper jacm
54 Q0 2887 53 0.046469893 Lucene_47
  and changes in <B>programming</B> language  cobol was studied because of economic importance  widespread usage  possible error-<B>including</B> design  and lack of research  the <B>types</B> of errors were identified in a pilot study  then  using the 132 error <B>types</B> found  1,777 errors were classified in 1,4000 runs of 73a study of errors  error-proneness  and error diagnosis in cobol this paper provides <B>data</B> on cobol
54 Q0 1098 54 0.045428347 Lucene_47
a comparison of list-processing computer <B>languages</B>  <B>including</B> a detailed comparison of comit  ipl-v well-known computer <B>programming</B> <B>languages</B> which  among them  exhibit all the principal characteristics of existing list-processing <B>languages</B>  important common features of list-processing <B>languages</B> <B>languages</B> under consideration are detailed  representations of <B>data</B>  both by the programmer
54 Q0 1471 55 0.045420736 Lucene_47
<B>programming</B> <B>semantics</B> for multiprogrammed computations the <B>semantics</B> are defined for a number of meta-instructions which perform operation essential to the writing of programs in multiprogrammed computer systems  these meta-instructions relate to parallel processing  protection of separate  vanhorn  <B>e</B>  c  ca660301 jb march 3  1978 2 25 pm 1471 4 1471 1471 4 1471 1774 4 1471 972 4 1471 276 5
54 Q0 2316 56 0.044947326 Lucene_47
 specific <B>languages</B> are discussed  cacm july  1972 sammet  j  <B>e</B>  <B>programming</B> <B>languages</B>  higher level <B>languages</B>  <B>languages</B>  history  future directions  language interrelationships  <B>programming</B> language tree<B>programming</B> <B>languages</B>  history and future this paper discusses both the history and future of <B>programming</B> <B>languages</B>    higher level <B>languages</B>   some of the difficulties in writing such a history
54 Q0 2972 57 0.042379666 Lucene_47
 programs that simplifies <B>proofs</B> of their <B>correctness</B> is presented  the method formally represents nonprocedural specification  the <B>proofs</B>  like the programs  are structured by levels  although only manual <B>proofs</B> are described in the paper  the method is also applicable to semi-automatic and automatic <B>proofs</B>  preliminary results are encouraging  indicating that the method can be applied to large
54 Q0 2939 58 0.04206458 Lucene_47
 liskov  b  snyder  a  atkinson  r  schaffert  c  <B>programming</B> <B>languages</B>  <B>data</B> <B>types</B>  <B>data</B>abstraction mechanisms in clu clu is a new <B>programming</B> language designed to support the use of abstractions in program construction  work in <B>programming</B> methodology has led to the realization that three kinds of abstractions-procedural  control  and especially <B>data</B> abstractions-are useful
54 Q0 2700 59 0.04179793 Lucene_47
 properties such as halting  thus <B>correctness</B> <B>proofs</B> of a parallel system can often be greatlyreduction  a method of proving properties of parallel programs when proving that a parallel program has a given property it is often convenient to assume that a statement is indivisible  i <B>e</B>  that the statement cannot be interleaved with the rest of the program  here sufficient conditions
54 Q0 409 60 0.039253157 Lucene_47
cl-1  an environment for a compiler a flexible  large-scale <B>programming</B> system to facilitate and instances of large and complex <B>data</B> sets  as well as algorithms defined on these <B>data</B> sets  both <B>data</B> and algorithms may be expressed in a family of command and descriptive <B>languages</B>  the concept of distinct <B>data</B> descriptions and the content and use of such descriptions are discussed in some detail
54 Q0 2814 61 0.03832284 Lucene_47
roster of <B>programming</B> <B>languages</B> for 1974-75 cacm december  1976 sammet  j  <B>e</B>  ca761201 jb january 3  1978 2 38 pm 2814 5 2814 2814 5 2814 2814 5 2814
54 Q0 2957 62 0.037974913 Lucene_47
 that aggregate <B>types</B>  and other <B>types</B> which support real-world abstractions without in troducing implementation detail  should be incorporated into <B>programming</B> <B>languages</B>  cacm june  1977 smith  j  m  smith  d  c  p  <B>data</B> abstraction  relational database  <B>data</B> type  aggregation  database design into a higher-level object  a new <B>data</B> type  called aggregation  is developed which  under certain criteria
54 Q0 3188 63 0.03683498 Lucene_47
semiotics and <B>programming</B> <B>languages</B> i have based my paper on semiotics and its three dimension  i should insert at this point that language has many aspects and that pragmatics  <B>semantics</B> and syntactics do not necessary cover all of them  one can  however  project most aspects into the three semiotic dimension and there seems to be a strong tendency to do so today  cacm march  1966 zemanek  h
54 Q0 3081 64 0.03675687 Lucene_47
 are shallow or deep  and which affects only the speed of execution of a program  not its <B>semantics</B> binding in lisp with <B>dijkstra</B> s display for algol and hence is a general model for shallow binding
54 Q0 1834 65 0.03595329 Lucene_47
 of <B>programming</B>  <B>proofs</B> of programs  formal language definition  <B>programming</B> language design  machinean axiomatic basis for computer <B>programming</B> in this paper an attempt is made to explore the logical foundations of computer <B>programming</B> by use of techniques which were first applied in the study of sets of axioms and rules of inference which can be used in <B>proofs</B> of the properties of computer
54 Q0 1769 66 0.033266414 Lucene_47
  <B>programming</B>  time-sharing  education  <B>data</B> communication  and displays are judged by how effectively  and in analyzing possible solutions  cacm april  1968 harder  <B>e</B>  l  barriers  philosophy  developments  computer-aided design  problem-oriented <B>languages</B>  <B>data</B> communication  education  computer science  problem-oriented <B>languages</B> are particularly effective over the entire front  online computers and time
54 Q0 2634 67 0.03285943 Lucene_47
an evaluation of statistical software in the social sciences several hundred college and <B>university</B> computer installations now offer various <B>types</B> of statistical packages for general use  among those most widely available are osiris  spss  bmd  <B>data</B>-text  and tsar  in order to provide users with a basis for selection and use  tests were made for each of these systems  and the results
54 Q0 2616 68 0.032403685 Lucene_47
  <B>semantics</B>  theory of <B>programming</B>  systems analysis 4.19 4.42 4.43 5.21 5.29 ca740808 jb january 17  1978 9
54 Q0 2895 69 0.032120816 Lucene_47
 greif  i  formal <B>specifications</B> program <B>correctness</B>  parallel processing  synchronization  readersa language for formal problem specification a language for specifying the in tended behavior of communicating parallel processes is described  the <B>specifications</B> are constrain ts on the order in which events of a computation can occur  the language is used to write <B>specifications</B> of the readers
54 Q0 920 70 0.031935696 Lucene_47
toward better documentation of <B>programming</B> <B>languages</B> cacm march  1963 yngve  v  h  sammet  j  <B>e</B>  ca630301 jb march 14  1978 1 51 pm 920 5 920 920 5 920 920 5 920 728 5 920 920 6 920 45 6 920
54 Q0 1099 71 0.030511046 Lucene_47
 into various occupations through computer use <B>including</B> that of programmer  is important for future suited for <B>programming</B> work  because of intense training in and constant experience with locating to the work of <B>programming</B> skills which the sighted has had little need to acquire  these qualifications which were designed by the staff of the medical computing center of the <B>university</B> of cincinnati
54 Q0 3091 72 0.030496849 Lucene_47
some basic determinants of computer <B>programming</B> productivity the propose of this research characteristics hypothesized as being associated with an increase in <B>programming</B> time required are objectively measurable from preprogramming <B>specifications</B>  the five programmer characteristics are experience-related and are also measurable before a <B>programming</B> task is begun  nine program characteristics
54 Q0 3014 73 0.030256473 Lucene_47
 with a number of examples of <B>correctness</B> and termination <B>proofs</B>  some of these <B>proofs</B> are markedly simpler than their conventional counterparts  on the other hand  it is shown that a proof of <B>correctness</B> <B>correctness</B>  this paper explores a technique for proving the <B>correctness</B> and termination of programs the validity of program transformations and the <B>correctness</B> of continuously operating programs  cacm
54 Q0 1977 74 0.03024774 Lucene_47
  rosen  j  b  approximation  <B>data</B> fitting  functional approximation  linear <B>programming</B>  interactivean interactive display for approximation by linear <B>programming</B> an interactive program with a graphical display has been developed for the approximation of <B>data</B> by means of a linear combination of functions  <B>including</B> splines  selected by the user  the coefficients of the approximation
54 Q0 65 75 0.029930513 Lucene_47
algol sub-committee report - extensions cacm september  1959 <B>dijkstra</B>  <B>e</B>  w  heise  w  perlis  j  a  samelson  k  ca590904 jb march 22  1978 4 49 pm 65 5 65 65 5 65 65 5 65
54 Q0 822 76 0.02966201 Lucene_47
real-time <B>programming</B> <B>specifications</B> problems in the implementation of large real-time applications are treated  and suggested guidelines for both program and file <B>specifications</B> are developed  the problems delineated also occur in systems <B>programming</B>  cacm july  1963 head  r  v  ca630702 jb march 14  1978 8 50 am 822 5 822 822 5 822 822 5 822
54 Q0 1677 77 0.029281106 Lucene_47
storage organization in <B>programming</B> systems the system of program and <B>data</B> representation that has been in use on the rice <B>university</B> computer for five years is described  each logical entity contain a program  a <B>data</B> vector  or codewords which in turn label blocks to form arrays  this storage arrangement is discussed with its realized advantages or <B>programming</B> systems  simplicity
54 Q0 2406 78 0.028697237 Lucene_47
 of these  generalized  <B>data</B> definition <B>languages</B> are also discussed  cacm december  1973 sibley  <B>e</B>  h language for specifying <B>data</B> structures  most <B>data</B> definition <B>languages</B> concentrate on the declaration on a computer system  however  the need for <B>data</B> definition <B>languages</B> which describe both the logical and physical aspects of <B>data</B> is increasingly apparent  such <B>languages</B> will be a key systems  as well
54 Q0 2787 79 0.028511925 Lucene_47
  to use a more compact <B>data</B> representation and more efficient processing techniques  to take fuller as a structured program  which can readily be coded by the reader in the high level or low level <B>programming</B> timetabling algorithm  cacm march  1975 johnston  h  c  <B>hoare</B>  c  a  r  binary matrices  matrix reduction  tight set  school timetable construction  structured <B>programming</B> 3.51 4.9 5.39 ca750301 jb
54 Q0 2092 80 0.028425682 Lucene_47
  the system is written in lisp 1.5 and operates on the q-32 time-sharing system  the system s <B>data</B> useful system to work with large <B>data</B> bases is possible but will require changes in both the <B>data</B>  f  simmons  r  f  question answering  natural language  protosynthex iii  lisp  <B>semantics</B>
54 Q0 2710 81 0.028226908 Lucene_47
  f chamberlin  d  d  king  w  f  iii database  <B>data</B> sublanguages  relations  query <B>languages</B>  casual user  relational <B>data</B> model  tabular <B>data</B>  interactive problem solving  nonprocedural <B>languages</B>specifying queries as relational expressions  the square <B>data</B> sublanguage this paper presents a <B>data</B> sublanguage called square  intended for use in ad hoc  interactive problem solving by non-computer
54 Q0 3055 82 0.028140018 Lucene_47
an analysis of algorithms for the dutch national flag problem solutions to the dutch national flag problem have been given by <B>dijkstra</B>  1  and meyer  3   <B>dijkstra</B> starts with a simple program and arrives at an improved program by refinement  both of the algorithms given by <B>dijkstra</B> are shown  refinement  structured <B>programming</B> 4.0 5.24 5.25 5.3 ca781006 dh january 29  1979 5 47 pm 3055 5 3055
54 Q0 1195 83 0.028076723 Lucene_47
uplifts-<B>university</B> of pittsburgh linear file tandem system a series of computer programs has been linear file system on an ibm 1401-7090 combined <B>data</B> processing system  the program are note-worthy <B>data</B>  and format the output for optimization of processing on the ibm 7090 system  the programs  <B>e</B>  ca650911 jb march 6  1978 7 10 pm 1195 5 1195 1195 5 1195 1195 5 1195
54 Q0 1247 84 0.027884543 Lucene_47
 and output for a hierarchy of <B>data</B> <B>types</B>  a public pushdown list for automatic recursive <B>programming</B>an operating environment for dynamic-recursive computer <B>programming</B> systems presented in this paper is a brief nontechnical introduction to oedipus  a computer <B>programming</B> system which can serve as an operating environment for dynamic and or recursive programs and <B>programming</B> systems  the available
54 Q0 1937 85 0.027611233 Lucene_47
 system design are described  cacm february  1969 day  r  h  mansfield  m  k  ellis  m  <B>e</B>  <B>data</B> display  information retrieval  graphic display  command <B>languages</B>  report program generation  managementcodas  a <B>data</B> display system codas  a customer oriented <B>data</B> system  is a user-oriented <B>data</B> for specifying <B>data</B> retrieval and display requests  <B>data</B> is displayed as tables and graphs produced
54 Q0 68 86 0.027607698 Lucene_47
the role of the <B>university</B> in computers  <B>data</B> processing and related fields a study was made of <B>university</B> programs in the united states in the fields of computers  <B>data</B> processing  operations research  and other closely related fields  <B>university</B> policies  organization  administration  faculties <B>university</B> program is recommended reflecting the conviction that many present activities related to computers
54 Q0 2949 87 0.026743192 Lucene_47
   a <B>correctness</B> proof of this topology information protocol is also presented  cacm july  1977 tajibnapis  w  d  distributed computer network  <B>correctness</B> <B>proofs</B>  computer networks  distributed controla <B>correctness</B> proof of a topology information main tenance protocol for a distributed computer network in order for the nodes of a distributed computer network to communicate  each node must have
54 Q0 2870 88 0.026184276 Lucene_47
 by the <B>semantics</B> of information flow  the lattice properties permit concise formulations the secure flow of information through a program  cacm may  1976 denning  d  <B>e</B>  protection  security
54 Q0 2051 89 0.026003344 Lucene_47
 related <B>languages</B>  the investigator must arrange <B>data</B> for input by aligning pairs of suspected cognates in the <B>data</B> of each correspondence found in that pair of words  the output is a list of all correspondence <B>types</B> with their frequency of occurrence in the <B>data</B>  and a separate listing of each  of the programs  and illustrates its use with a small portion of hypothetical <B>data</B>  cacm june  1970 frantz
54 Q0 2111 90 0.025922948 Lucene_47
spelling correction in systems programs several specialized techniques are shown for efficiently incorporating spelling correction algorithms in to compilers and operating systems  these include the use of syntax and <B>semantics</B> information  the organization of restricted keyword and symbol tables  diagnostics  error detection  misspelling  lexical analysis systems <B>programming</B> 4.42 4.12 3.0 3.79
54 Q0 1485 91 0.025718488 Lucene_47
the structure of <B>programming</B> <B>languages</B> in this paper the major components of every <B>programming</B> concludes with the suggestion that <B>programming</B> <B>languages</B> evolve toward one which will permit all statements together   3  the means by which a program can obtain <B>data</B> inputs  several alternative  frequently from list processing <B>languages</B>  illustrate the forms described  the advantages  disadvantages
54 Q0 2937 92 0.025222918 Lucene_47
  cacm august  1977 gannon  j  d  <B>data</B> <B>types</B>  experimentation  language design  redundancy  reliablean experimental evaluation of <B>data</B> type conventions the language in which programs are written can an experiment that compares the <B>programming</B> reliability of subjects using a statically typed language shows that  at least in one environment  the use of a statically typed language can increase <B>programming</B>
54 Q0 3171 93 0.025075274 Lucene_47
line numbers made cheap a technique is described for run-time line number administration to be used for implementations of high level <B>languages</B>  under suitable circumstances  this method requires absolutely no overhead  in either time or space  during execution of the program  cacm october  1979 klint  p  line number administration  diagnostic messages  <B>abstract</B> machine code 4.12 4.13 4.20 4.42
54 Q0 2300 94 0.024742916 Lucene_47
  <B>including</B> population equality  compactness  contiguity  and preservation of natural and or political boundaries  only nonpartisan criteria are considered  using 1970 bureau of census population <B>data</B> of political redistricting with the aid of a computer  cacm august  1972 helbig  r  <B>e</B>  orr  p  k
54 Q0 1469 95 0.024578245 Lucene_47
the next 700 <B>programming</B> <B>languages</B> a family of unimplemented computing <B>languages</B> is described that is intended to span differences of application area by a unified framework  this framework dictates the rules about the uses of user-coined names  and the conventions about characterizing functional representation   the other is the choice of the <B>abstract</B> entities  such as numbers  character-strings
54 Q0 2204 96 0.024007492 Lucene_47
 and of <B>data</B> into <B>data</B> structures  the process of successive refinement of <B>specifications</B> is illustratedprogram development by stepwise refinement the creative activity of <B>programming</B>-to be distinguished from coding-is usually taught by examples serving to exhibit certain techniques  it is here and the instruction of <B>programming</B>  cacm april  1971 wirth  n  education in <B>programming</B>  <B>programming</B>
54 Q0 3147 97 0.023946006 Lucene_47
 <B>specifications</B> have been determined in advance  the model views file and program design as a problem  organization  and key order for each <B>data</B> set  key order for each computation  and access method  1979 alter  s  system design  automatic <B>programming</B>  search methods  system configurations  design
54 Q0 2578 98 0.023944411 Lucene_47
self-stabilizing systems in spite of distributed control cacm november  1974 <B>dijkstra</B>  <B>e</B>  w  multiprocessing  networks  self-stabilization  synchronization  mutual exclusion  robustness  sharing  error recovery  distributed control  harmonious cooperation  self-repair 4.32 ca741106 jb january 16,1978 10 18 am 2578 5 2578 2578 5 2578 2578 5 2578
54 Q0 3002 99 0.023859583 Lucene_47
 in the primary record  the model that is presented in this paper  both as a nonlinear <B>programming</B> model and a mixed integer <B>programming</B> model  is a very general one  several <B>types</B> of file systems may is the reduction of storage and <B>data</B> transfer costs  this paper presents a model in which several <B>data</B>-items  the probabilities of access and the distribution of each <B>data</B>-item s length are assumed
54 Q0 1678 100 0.023660073 Lucene_47
automata  formal <B>languages</B>  <B>abstract</B> switching  and computability in a ph  computer science program a number of courses are listed in the area describe as automata  formal <B>languages</B>  <B>abstract</B> switching  and computability  that might be available to a ph  student in computer science  a brief catalog science program  automata  formal <B>languages</B>  switching theory  theory of computability 1.5 5.2 6.1
*************Query 55*************************

55 Q0 2650 1 0.45591885 Lucene_47
  a  error correction  <B>regular</B> <B>languages</B>  <B>regular</B> <B>events</B>  finite state automata  compiler error recoveryorder-n correction for <B>regular</B> <B>languages</B> a method is presented for calculating a string b  belonging to a given <B>regular</B> language l  which is  nearest   in number of edit operations  to a given input string a  b is viewed as a reasonable  correction  for the possibly erroneous string a  where
55 Q0 2921 2 0.45303094 Lucene_47
   and  as a special case  <B>regular</B> <B>expressions</B>  since these can be converted to fsms  rrp grammars of the handle  cacm october  1977 lalonde  w  r  finite state machines  automata   <B>regular</B> <B>expressions</B><B>regular</B> right part grammars and their parsers this paper in troduces an alternative to context-free grammars called <B>regular</B> right part  rrp  grammars  which resemble pascal syntax diagrams  formally
55 Q0 1896 3 0.3950205 Lucene_47
<B>regular</B> coulomb wave functions  algorithm 292 s22   cacm may  1969 gautschi  w  coulomb wave functions  wave functions  <B>regular</B> coulomb wave functions 5.12 ca690513 jb february 17  1978 3 15 pm 1896 5 1896 1896 5 1896 1896 5 1896
55 Q0 1898 4 0.3950205 Lucene_47
<B>regular</B> coulomb wave functions  algorithm 292  s22   cacm may  1969 kolbig  k  s  coulomb wave functions  wave functions  <B>regular</B> coulomb wave functions 5.12 ca690511 jb february 17  1978 3 19 pm 1898 5 1898 1898 5 1898 1898 5 1898
55 Q0 1665 5 0.34095243 Lucene_47
 allowable in a language given in terms of a subset of <B>regular</B> <B>expressions</B>  the output of the system by the <B>regular</B> <B>expressions</B>  each output item is identified by a code number together with a pointer machine  parsing  plex structure  <B>regular</B> <B>expressions</B> sequential machine  syntactic analysis 3.63 are independent of the nature of the items being evaluated  if the word  <B>events</B>  is substituted
55 Q0 1739 6 0.33518606 Lucene_47
<B>regular</B> expression search algorithm a method for locating specific character strings embedded is discussed  the compiler accepts a <B>regular</B> expression as source language and produces an ibm 7094 program a signal every time an embedded string in the text matches the given <B>regular</B> expression  examples  problems  and solution are also presented  cacm june  1968 thompson  k  search  match  <B>regular</B> expression
55 Q0 1993 7 0.31601644 Lucene_47
<B>regular</B> coulomb wave functions  algorithm 292  s22   cacm september  1970 cody  w  j  paciorek  k  a  coulomb wave functions  wave functions  <B>regular</B> coulomb wave functions 5.12 ca700912 jb february 10  1978 10 03 am 1993 5 1993 1993 5 1993 1993 5 1993
55 Q0 2112 8 0.31576443 Lucene_47
translation equations input limited transduction <B>expressions</B>  or translation equations  are used to describe the syntax and left-context sensitive semantics for context-free <B>languages</B>  a formal cases of the translation problem  cacm february  1970 vere  s  automata  turing machines  <B>regular</B> expression  transduction expression  context-free <B>languages</B>  translation  recognizers  parsing  meta
55 Q0 2051 9 0.28604743 Lucene_47
a pl i program to assist the comparative linguist a practical pl i program is described which can assist comparative linguists to determine the <B>regular</B> sound correspondences between genetically related <B>languages</B>  the investigator must arrange data for input by aligning pairs of suspected cognates linguistics  diachronic linguistics  genetic relationship  sound change  sound correspondence  <B>regular</B>
55 Q0 1355 10 0.27932173 Lucene_47
<B>regular</B> coulomb wave functions  algorithm 292   cacm november  1966 gautschi  w  ca661103a jb march 2  1978 3 43 pm 1355 4 1355 2619 4 1355 1355 5 1355 1355 5 1355 1355 5 1355 1419 5 1355
55 Q0 1453 11 0.14624043 Lucene_47
a nonrecursive method of syntax specification the use of the kleene <B>regular</B> expression notation for describing algebraic language syntax  in particular of algol  is described in this paper  a fortran ii computer program for carrying out the elimination algorithm of gorn similar to gaussian <B>languages</B>  including some sublanguage of algol  a hand calculation result of the application
55 Q0 1906 12 0.13966087 Lucene_47
automated printed circuit routing with a stepping aperture a computer program for routing interconnections on a two-sided printed circuit board with a <B>regular</B> pattern of lines  pins  terminals   and vias  feed-through holes  is described  in this program  each interconnection is given a planned routing-typically  down from the upper pin  through a via  and horizontally to the lower pin  from
55 Q0 2838 13 0.09776259 Lucene_47
 at most twice as much processing power as <B>regular</B> garbage collectors  if they are used efficiently
55 Q0 1846 14 0.07268665 Lucene_47
 simultaneous <B>events</B> do not occur  can be ignored  or can be handled by simple priority rules  following this  the problem of <B>dealing</B> with simultaneous <B>events</B> in separate processes is introducedon simulating networks of parallel processes in which simultaneous <B>events</B> may occur some problems  the technique will either find a method of simulating the parallel <B>events</B> or report
55 Q0 1612 15 0.07077446 Lucene_47
 of the productions defining the grammar  the essential weakness of the method is in <B>dealing</B> with complicated syntactic structures which are in practice only sparsely occupied  e g   arithmetic <B>expressions</B>
55 Q0 1470 16 0.05387029 Lucene_47
the structure of programming <B>languages</B> the following are identified as major components of every list processing <B>languages</B>  illustrate the forms described  elementary program statements usually take saying <B>anything</B> about the actions to be taken  an implicit specification is similar to a requirement concludes by suggesting the evolution of programming <B>languages</B> toward one which will permit all
55 Q0 2253 17 0.045644026 Lucene_47
  index domain  index map  index range  matrix <B>expressions</B>  normal form  programming <B>languages</B>  program optimization  range operations  symbolic manipulation  syntactic analysis  well-formed <B>expressions</B>index ranges for matrix calculi the paper describes a scheme for symbolic manipulation of index <B>expressions</B> which arise as a by-product of the symbolic manipulation of <B>expressions</B> in the matrix
55 Q0 1324 18 0.035805196 Lucene_47
 of general-purpose language processors are seen to be concerned with measuring  <B>dealing</B> with ambiguities  translating into formal <B>languages</B> and searching large tree structures  cacm january  1965 simmons
55 Q0 2704 19 0.035805196 Lucene_47
exception handling  issues and a proposed notation this paper defines exception conditions  discusses the requirements exception handling language features must satisfy  and proposes some new language features for <B>dealing</B> with exceptions in an orderly and reliable way  the proposed language conditions  structured programming  on conditions  programming <B>languages</B> 4.22 ca751203 jb january 5  1978 4
55 Q0 3043 20 0.0355996 Lucene_47
  buffers  path <B>expressions</B>  and input output as special cases  cacm november  1978 hansen  p  programming <B>languages</B>  process communication and scheduling  sorting arrays  coroutines  classes  monitors  processes  semaphores  buffers  path <B>expressions</B>  input output 3.8 4.2 4.22 4.32 5.24
55 Q0 1135 21 0.03512683 Lucene_47
a general business-oriented language based on decision <B>expressions</B>  the structure of a digital complex applications  in terms of tables of control <B>expressions</B> which express only information  it stresses the structural analysis of the class of processes to be represented in the <B>languages</B>  as opposed to overcome well-known deficiencies of other business-oriented <B>languages</B> and fully meets the requirements
55 Q0 1469 22 0.03224081 Lucene_47
the next 700 programming <B>languages</B> a family of unimplemented computing <B>languages</B> is described that is intended to span differences of application area by a unified framework  this framework dictates is biased towards  <B>expressions</B>  rather than  statements   it includes a nonprocedural purely functional-instruction  without sacrificing the important properties that make conventional right-hand-side <B>expressions</B>
55 Q0 1694 23 0.031151507 Lucene_47
an algorithm for the probability of the union of a large number of <B>events</B> an algorithm is presented which efficiently evaluates the probability for the union of n independent and not mutually exclusive <B>events</B>  the problem is that of evaluating the sums of the products of all possible combinations  probability  optimum  storage vs  time compromise  set union  mutually exclusive <B>events</B> 5.12 5.5 5.6
55 Q0 2320 24 0.029634833 Lucene_47
 multiprogramming  programming <B>languages</B>  operating systems  concurrent processes  shared data  mutual exclusion  critical regions  process communication  synchronizing <B>events</B>  4.2 4.3 ca720708 jb january 30  1978 2
55 Q0 2767 25 0.029634833 Lucene_47
a comparison of simulation event list algorithms four algorithms are considered which can be used to schedule <B>events</B> in a general purpose discrete simulation system  two of the algorithms are new  one is based on an end-order tree structure for event notices  and another uses an indexed linear list <B>languages</B>  the most promising algorithm uses the indexed list concept  it will require an adaptive routine
55 Q0 2710 26 0.029444844 Lucene_47
specifying queries as relational <B>expressions</B>  the square data sublanguage this paper presents complete  however  it avoids the quantifiers and bound variables required by <B>languages</B> based  f chamberlin  d  d  king  w  f  iii database  data sublanguages  relations  query <B>languages</B>  casual user  relational data model  tabular data  interactive problem solving  nonprocedural <B>languages</B>
55 Q0 2081 27 0.02849712 Lucene_47
 and cumulative operators  algorithms are given which use symbol manipulation of matrix <B>expressions</B> so  programming <B>languages</B>  sequence operations  symbol manipulation 4.12 4.22 5.14 5.41 ca700403 jb february 13
55 Q0 3096 28 0.028356234 Lucene_47
an optimal method for deletion in one-sided <B>height</B>-balanced trees a one-sided <B>height</B>-balanced tree is a binary tree in which every node s right subtree has a <B>height</B> which is equal to or exactly one greater than the <B>height</B> of its left subtree  it has an advantage over the more general avl tree in that only one bit of balancing information is required  two bits are required for the acl tree
55 Q0 3163 29 0.028356234 Lucene_47
an optimal insertion algorithm for one-sided <B>height</B>-balanced binary search trees an algorithm for inserting an element into a one-sided <B>height</B>-balanced  oshb  binary search tree is presented algorithms for avl trees  cacm september  1979 raiha k  zweben  s  insertion  one-sided <B>height</B>-balanced trees  <B>height</B>-balanced trees  binary trees  search trees  3.73  3.74 4.34 5.25 5.31 ca790904 db
55 Q0 3064 30 0.027191265 Lucene_47
event manipulation for discrete simulations requiring large numbers of <B>events</B> the event of event scheduling efficiency when the number of scheduled <B>events</B> grows large  the second part deals with the less apparent problem of providing efficiency and flexibility as scheduled <B>events</B> of simultaneous <B>events</B>  that certain <B>events</B> must be created  scheduled  and executed at the same points
55 Q0 3056 31 0.02670129 Lucene_47
counting large numbers of <B>events</B> in small registers it is possible to use a small counter to keep approximate counts of large numbers  the resulting expected error can be rather precisely controlled  an example is given in which 8-bit counters  bytes  are used to keep track of as many as 130,000 <B>events</B> with a relative error which is substantially independent of the number n of <B>events</B>
55 Q0 3077 32 0.025516054 Lucene_47
 of programs conventional programming <B>languages</B> are growing ever more enormous  but not stronger  inherent coupling off semantics to state transitions  their division of programming into a world of <B>expressions</B> level programs to build still higher level ones in a style not possible in conventional <B>languages</B> and in its state transition rules  unlike von neumann <B>languages</B>  these systems have semantics loosely
55 Q0 2839 33 0.025063608 Lucene_47
an insertion technique for one-sided <B>height</B>-balanced trees a restriction on <B>height</B>-balanced binary trees is presented  it is seen that this restriction reduces the extra memory requirements by half  from two extra bits per node to one  and maintains fast search capabilities at a cost of increased time requirements for inserting new nodes  cacm august  1976 hirschberg  d  s  balanced  binary
55 Q0 3009 34 0.025063608 Lucene_47
insertions and deletions in one-sided <B>height</B>-balanced trees recently hirschberg has established that insertions into one-sided <B>height</B>-balanced trees can be done in 0 log 2n  steps  it is proved here that deletions can also be performed in 0 log 2n  steps  which answers the open problem posed by hirschberg  cacm march  1978 kosaraju  s  avl trees  balanced trees  binary search  dynamic balancing
55 Q0 3042 35 0.025063608 Lucene_47
power trees the new class of pk trees is presented  where <B>height</B> balance is maintained for the nodes iying on particular paths  the number of nodes of a pk tree asymptotically grows as a power of the <B>height</B>  in the worst case  a procedure for node insertion is given  and the class of trees considered is restricted to ipk trees  which are buildable by such a procedure  the average behavior
55 Q0 2719 36 0.02491972 Lucene_47
mechanical program analysis one means of analyzing program performance is by deriving closed-form <B>expressions</B> for their execution behavior  this paper discusses the mechanization of such analysis  closed-form <B>expressions</B> for their running time expressed in terms of size of input  this paper functions  list processing  lisp  algebraic manipulation  programming <B>languages</B>  analysis of algorithms
55 Q0 1962 37 0.023839358 Lucene_47
 of machine tools or sound synthesizers or <B>anything</B> a person normally controls  the program operates
55 Q0 1696 38 0.023384396 Lucene_47
an algorithm for identifying the ergodic subchains and transient states of a stochastic matrix an algorithm for identifying the ergodic subchains and transient states of a stochastic matrix is presented  applications in markov renewal programming and in the construction of variable length codes are reviewed  and an updating procedure for <B>dealing</B> with certain sequences of stochastic matrices
55 Q0 1886 39 0.022683224 Lucene_47
generation of optimal code for <B>expressions</B> via factorization given a set of <B>expressions</B> which by first factoring the <B>expressions</B>  i e  finding a set of subexpressions each of which occurs in two or more other <B>expressions</B> or subexpressions  once all the factors have been ascertained  a sequencing procedure is applied which orders the factors and <B>expressions</B> such that all information is computed
55 Q0 3082 40 0.022251075 Lucene_47
time  clocks  and the ordering of <B>events</B> in a distributed system the concept of one event happening before another in a distributed system is examined  and is shown to define a partial ordering of the <B>events</B>  a distributed algorithm is given for synchronizing a system of logical clocks which can be used to totally order the <B>events</B>  the use of the total ordering is illustrated with a method
55 Q0 2316 41 0.02153552 Lucene_47
programming <B>languages</B>  history and future this paper discusses both the history and future of programming <B>languages</B>    higher level <B>languages</B>   some of the difficulties in writing such a history are indicated  a key part of the paper is a tree showing the chronological development of <B>languages</B> and their interrelationships  reasons for the proliferation of <B>languages</B> are given  the major <B>languages</B>
55 Q0 154 42 0.020576287 Lucene_47
rapidly convergent <B>expressions</B> for evaluating e x cacm september  1960 berin  a  ca600903 jb march 20  1978 8 49 pm 154 5 154 154 5 154 154 5 154
55 Q0 2495 43 0.019399509 Lucene_47
adapting optimal code generation for arithmetic <B>expressions</B> to the instruction sets available on present-day computers cacm june  1973 stockhausen  p  f  arithmetic <B>expressions</B>  code generation  compilers  object-code optimization  register assignment  trees 4.12 5.24 5.32 ca730605 jb january 23  1978 2 24 pm 2495 5 2495 2495 5 2495 2495 5 2495
55 Q0 2742 44 0.018167926 Lucene_47
 is required to keep future <B>events</B> in their proper sequence  this paper presents a method for significantly are presented  all of which improve in effectiveness as the <B>events</B>-list scan problem becomes more
55 Q0 2304 45 0.01798533 Lucene_47
a western view of computer history many u  histories of the digital computer field have tended to be impersonal  with heavy emphasis on eastern universities and commercial developments  this article records the <B>events</B> of the early years in a personal way  the people  organizations  technologies  and computers of the 1945-55 period in the western part of the united statesare described
55 Q0 2930 46 0.01798533 Lucene_47
the gre advanced test in computer science this report describes the advanced test in computer science which was recently in troduced in the graduate record examination program  the gre program is described in general  and  the <B>events</B> leading to the establishment of the advanced computer science test are discussed  content specifications and their rationale are given  a set of sample questions
55 Q0 3194 47 0.01798533 Lucene_47
a non-heuristic program for proving elementary logical theorems the paper discusses problems involved in designing a device capable of distinguishing among speech <B>events</B> that are normally recognized as different by native speakers of a particular language  parallels between these problems and those of chemical analysis are pointed out  cacm january  1959 dunham  b  fridshal  r  sward  g  l
55 Q0 1551 48 0.017819589 Lucene_47
on compiling algorithms for arithmetic <B>expressions</B> this paper deals with algorithms concerning arithmetic <B>expressions</B> used in a fortran iv compiler for a hitac-5020 computer having n accumulators  the algorithms generate an object code which minimizes the frequency of storing and recovering the partial results of the arithmetic <B>expressions</B> in cases where there are several accumulators  cacm
55 Q0 3128 49 0.01780086 Lucene_47
synchronization with eventcounts and sequencers synchronization of concurrent processes requires controlling the relative ordering of <B>events</B> in the processes  a new synchronization mechanism the ordering of <B>events</B> directly  rather than using mutual exclusion to protect manipulations of shared variables that control ordering of <B>events</B>  direct control of ordering seems to simplify correctness
55 Q0 1223 50 0.0177998 Lucene_47
 direction  performed by the first two passes  allows the compiler to remove locally constant <B>expressions</B> and recursively calculable <B>expressions</B> from loops and to do the important part of common subexpression algebraic <B>languages</B>  cacm august  1965 gear  c  w  ca650801 jb march 6  1978 8 45 pm 267 4 1223 1139 4 1223
55 Q0 1323 51 0.0177998 Lucene_47
a correspondence between algol 60 and church s lambda-notation  part i  this paper describes how some of the semantics of algol 60 can be formalized by establishing a correspondence between <B>expressions</B> of algol 60 and <B>expressions</B> in a modified form of church s l-notation  first a model for computer <B>languages</B> and compute behavior is described  based on the notions of functional application
55 Q0 3065 52 0.017722646 Lucene_47
  dictionary problem  search trees  avl trees  brother trees  right-balanced trees one-sided <B>height</B>-balanced
55 Q0 2889 53 0.017544525 Lucene_47
performance of <B>height</B>-balanced trees this paper presents the results of simulations that investigate the performance of <B>height</B>-balanced  hb k   trees  it is shown that the only statistic of hb 1  trees  avl trees  that is a function of the size of the tree is the time to search for an item in the tree  for sufficiently large trees  the execution times of all procedures for maintaining hb 1  trees
55 Q0 2586 54 0.017146906 Lucene_47
adapting optimal code generation for arithmetic <B>expressions</B> to the instruction sets available on present-day computers  errata  cacm october  1974 stockhausen  p  f  ca741012 jb january 16  1978 11 05 am 2586 5 2586 2586 5 2586 2586 5 2586
55 Q0 2617 55 0.017146906 Lucene_47
a note on subexpression ordering in the evaluation of arithmetic <B>expressions</B> cacm august  1974 denning  p  j  graham  g  s  ca740807 jb january 17  1978 9 44 am 2617 5 2617 2617 5 2617 2617 5 2617
55 Q0 413 56 0.017146906 Lucene_47
a basic compiler for arithmetic <B>expressions</B> cacm january  1961 huskey  h  d  wattenburg  w  h  ca610101 jb march 17  1978 1 30 am 413 5 413 413 5 413 413 5 413
55 Q0 1379 57 0.017098272 Lucene_47
a final solution to the dangling else of algol 60 and related <B>languages</B> the dangling else problem consists of a class of potential ambiguities in algol-like conditional statements whose basic form is  if b1 then if b2 then s1 else s2  where b1 and b2 are boolean <B>expressions</B> and s1 and s2 are basic statements  the difficulty lies in whether to attach the else to the first if or to the second one
55 Q0 2450 58 0.016703142 Lucene_47
empirical working set behavior the working set model for program behavior has been proposed in recent years as a basis for the design of scheduling and paging algorithms  although the words  working set  are now commonly encountered in the literature <B>dealing</B> with resource allocation  there is a dearth of published data on program measurements  in the hope that workers in the field might find
55 Q0 2567 59 0.016703142 Lucene_47
an exponential method for the solution of systems of ordinary differential equations an explicit  coupled  single-step method for the numerical solution of initial value problems for systems of ordinary differential equations is presented  the method was designed to be general purpose in nature but to be especially efficient when <B>dealing</B> with stiff systems of differential equations
55 Q0 2799 60 0.016703142 Lucene_47
  methods for <B>dealing</B> with weighted data and data removal are presented  when updating the mean and square
55 Q0 2052 61 0.015415998 Lucene_47
scheduling to reduce conflict in meetings conflicts in scheduling can be treated as defining an undirected linear graph independently of the relation of the activities in conflict to additional constraints of time and space  each connected component of such a graph  which can be found by an algorithm described by gotlieb and corneil  corresponds to a set of <B>events</B> that must be scheduled
55 Q0 2895 62 0.015415998 Lucene_47
a language for formal problem specification a language for specifying the in tended behavior of communicating parallel processes is described  the specifications are constrain ts on the order in which <B>events</B> of a computation can occur  the language is used to write specifications of the readers writers problem and the writer priority of the second readers writers problem  cacm december  1977
55 Q0 1827 63 0.014534341 Lucene_47
 of mts is outlined in order to explain the implementation of the dcf  <B>events</B> in the system are identified for off-line processing  <B>events</B> in user programs which are unrelated to system actions are recorded
55 Q0 2968 64 0.014178117 Lucene_47
a comparison of tree-balancing algorithms several algorithms-<B>height</B>-balance  i e  avl and extensions   weight-balance  i e  bb and wb   and total restructuring-for building balanced binary search trees are compared  the criteria for comparison encompass theoretical aspects  e g  path lengths  and implementation independent and machine algorithm-dependent measures  e g  run time   a detailed
55 Q0 1703 65 0.013901117 Lucene_47
accommodating standards and identification of programming <B>languages</B> the user public wants standardization and reliable identification of programming <B>languages</B> and related services  one way related family of <B>languages</B>  oppressive rigidity usually associated with standardization is avoided <B>languages</B> and computer services  cacm august  1968 mooers  c  n  standardization  programming
55 Q0 2603 66 0.013901117 Lucene_47
the equivalence of reducing transition <B>languages</B> and deterministic <B>languages</B> the class of reducing transition <B>languages</B> introduced by eickel  paul  bauer  and samelson was shown by morris to be a proper superclass of the simple precedence <B>languages</B>  in this paper this result is extended  showing that  in fact  the first class is equivalent to the class of deterministic context free <B>languages</B>
55 Q0 2705 67 0.013901117 Lucene_47
programming <B>languages</B>  natural <B>languages</B>  and mathematics some social aspects of programming are illuminated through analogies with similar aspects of mathematics and natural <B>languages</B>  the split <B>languages</B> toward flexion less  word-order based language types speaks for programming language design  auxiliary <B>languages</B> it is suggested that fortran and cobol will remain dominant for a long time to come
55 Q0 1459 68 0.013761404 Lucene_47
requirements for real-time <B>languages</B> real-time <B>languages</B> have different requirements from other programming <B>languages</B> because of the special nature of their applications  the environment in which their object programs are executed and the environment in which they may be compiled  it may not be the language extensions that ultimately advance developments in the field  progress may be made
55 Q0 1254 69 0.013717525 Lucene_47
the iteration element a recent addition to the mad language has made the iteration structure of the mad through statement  corresponding to the algol for statement and the fortran do statement  available within <B>expressions</B>  cacm june  1965 galler  b  a  fischer  m  j  ca650601 jb march 7  1978 12 49 pm 1254 5 1254 1254 5 1254 1254 5 1254
55 Q0 2090 70 0.013717525 Lucene_47
symbolic expansion of algebraic <B>expressions</B>  algorithm 377  r2   cacm march  1970 levine  m  j  algebra  symbolic algebra  symbolic multiplication  algebraic distribution  algebraic multiplication  distribution algorithm  multiplication algorithm  product algorithm  polynomial distribution  polynomial expansion 3.10 3.17 3.20 4.13 4.90 ca700308 jb february 13  1978 3 49 pm 2090 5 2090 2090 5 2090
55 Q0 3168 71 0.013717525 Lucene_47
comment on  an optimal evaluation of boolean <B>expressions</B> in an online query system   cacm october  1979 laird  p  query  boolean expression  information retrieval  file organization 3.53.70 3.73 3.74 ca791001 db january 16  1980 4 50 pm 3168 4 3168 3168 4 3168 3169 4 3168 2965 5 3168 3002 5 3168 3168 5 3168 3168 5 3168 3168 5 3168
55 Q0 3169 72 0.013717525 Lucene_47
note on  an optimal evaluation of boolean <B>expressions</B> in an online query system   cacm october  1979 gudes  e  hoffman  a  query  boolean expression  optimal evaluation  information retrieval 3.50 3.70 3.74 ca791002 db january 16  1980 4 52 pm 3168 4 3169 3169 4 3169 2965 5 3169 3169 5 3169 3169 5 3169 3169 5 3169
55 Q0 556 73 0.013717525 Lucene_47
on translation of boolean <B>expressions</B> cacm july  1972 bottenbirruch  h  h grau  a  a  ca620705 jb march 17  1978 8 52 pm 1139 4 556 1947 4 556 556 4 556 799 4 556 399 5 556 556 5 556 556 5 556 556 5 556
55 Q0 2814 74 0.013620257 Lucene_47
roster of programming <B>languages</B> for 1974-75 cacm december  1976 sammet  j  e  ca761201 jb january 3  1978 2 38 pm 2814 5 2814 2814 5 2814 2814 5 2814
55 Q0 628 75 0.013620257 Lucene_47
on a floating-point number representation for use with algorithmic <B>languages</B> cacm march  1962 grau  a  a  ca620304 jb march 20  1978 3 09 pm 628 5 628 628 5 628 628 5 628
55 Q0 651 76 0.013620257 Lucene_47
a survey of <B>languages</B> and systems for information retrieval cacm january  1962 grems  m  ca620108 jb march 20  1978 4 36 pm 651 5 651 651 5 651 651 5 651
55 Q0 1235 77 0.012846665 Lucene_47
a stochastic approach to the grammatical coding of english a computer program is described which will assign each word in an english text to its form class or part of speech  the program operates at relatively high speed in only a limited storage space  about half of the word-<B>events</B> in a corpus are identified through the use of a small dictionary of function words and frequently occurring lexical
55 Q0 1503 78 0.012846665 Lucene_47
  model changing <B>events</B>  and model testing  in the fortran program  basic design problems relate
55 Q0 1928 79 0.012846665 Lucene_47
 simulation  network structures  scheduling  queuing  simultaneous activities  parallel <B>events</B> 4.22 4.29 6.9
55 Q0 2862 80 0.012846665 Lucene_47
 the page fault <B>events</B> rather than every page reference event  this significantly reduces the required
55 Q0 2936 81 0.012846665 Lucene_47
 is the number of <B>events</B> in the set  furthermore  tests conducted to estimate the average complexity showed
55 Q0 3120 82 0.012846665 Lucene_47
 instead control structures  namely <B>events</B> and processes  the work of the compiler-writer becomes easier
55 Q0 2295 83 0.012841302 Lucene_47
comment on the composition of semantics in algol 68 cacm august  1972 van der poel  w  l  programming primitives  programming <B>languages</B>  algol  semantics  recursive composition  design of programming <B>languages</B>  data structures 1.3 4.2 4.22 5.23 5.24 ca720807 jb january 30  1978 9 29 am 2295 5 2295 2295 5 2295 2295 5 2295
55 Q0 2175 84 0.012124694 Lucene_47
subexpression ordering in the execution of arithmetic <B>expressions</B> an arithmetic expression can often be broken down into its component subexpressions  depending on the hardware environment in which the expression is to be executed  these subexpressions can be evaluated in serials  in parallel  parallel processing  cache  arithmetic <B>expressions</B>  subexpression ordering  computational trees  compilers
55 Q0 2712 85 0.012124694 Lucene_47
horner s rule for the evaluation of general closed queueing networks the solution of separable closed queueing networks requires the evaluation of homogeneous multinomial <B>expressions</B>  the number of terms in those <B>expressions</B> grows combinatorially with the size of  the network such that a direct summation may become impractical  an algorithm is given which does not show a combinatorial operation
55 Q0 2802 86 0.012124694 Lucene_47
the new math of computer programming structured programming has proved to be an important methodology for systematic program design and development  structured programs are identified as compound function <B>expressions</B> in the algebra of functions  the algebraic properties of these function <B>expressions</B> permit the reformulation  expansion as well as reduction  of a nested subexpression independently
55 Q0 1259 87 0.012002834 Lucene_47
applications of binary numbers in computer routines a binary number can be thought of as an alternate form of expression for either a set of letters or a decimal number  there are then three equivalent <B>expressions</B>  easily translatable to one another  each having different characteristics  four examples are given in which the form of an expression is changed to an equivalent expression to save
55 Q0 1305 88 0.012002834 Lucene_47
the internal structure of the fortran cep translator the fortran cep translator converts a source program written in the fortran cep language into an object program written in the language of the cep computer  in this paper  after an outline of the cep computer  the internal structure of the translator is described  emphasis is on the compilation of <B>expressions</B>  of input output lists
55 Q0 2413 89 0.012002834 Lucene_47
a note on subexpression ordering in the execution of arithmetic <B>expressions</B> a counterexample to the supposed optimality of an algorithm for generating schedules for trees of tasks with unequal execution times is presented  a comparison with the  critical path  heuristic is discussed  cacm november  1973 denning  p  j  graham  g  s  scheduling  tree scheduling  task scheduling  multiprocessor
55 Q0 3189 90 0.012002834 Lucene_47
an algebraic compiler for the fortran assembly program an algebraic compiler has been written which may be added to the fortran assembly program  this compiler will expand all algebraic statements with the following operations  addition  subtraction  multiplication and division  it will compile multi-level <B>expressions</B> in floating-point arithmetic  this is easily be revised to fixed-point   cacm
55 Q0 1807 91 0.011879725 Lucene_47
optimization of <B>expressions</B> in fortran a method of optimizing the computation of arithmetic and indexing <B>expressions</B> of a fortran program is presented  the method is based on a linear analysis of the definition points of the variables and the branching and do loop structure of the program  v  a  england  d  e  fortran  optimization  <B>expressions</B>  compilers  compilation  subscripts
55 Q0 2305 92 0.01179549 Lucene_47
the  plankalkul  of konrad zuse  a forerunner of today s programming <B>languages</B> plankalkul was an attempt by korrad zuse in the 1940 s to devise a notational and conceptual system for writing what programming <B>languages</B>  the investigation is of historical interest  also  it may provide insights july  1972 bauer  f  l  wossner  h  higher programming <B>languages</B>  programming  theory of programming
55 Q0 1466 93 0.0113502145 Lucene_47
discussion summary on graphical <B>languages</B> cacm march  1966 ca660306 jb march 3  1978 1 46 pm 1466 5 1466 1466 5 1466 1466 5 1466 2341 5 1466 990 6 1466 1468 6 1466 1466 6 1466 3184 6 1466
55 Q0 2661 94 0.0113502145 Lucene_47
ideal teaching machines-a solution to the pedagogic language problem cacm april  1974 sterling  t  d  pollack  s  v  education  programming <B>languages</B>  simulators 1.52 4.2 ca740409 jb february 1  1978 10 38 am 2661 5 2661 2661 5 2661 2661 5 2661
55 Q0 2782 95 0.0113502145 Lucene_47
a reply to gentleman and marovich cacm march  1975 karp  r  a  high-level <B>languages</B>  philosophy of language design 4.22 5.19 ca750306 jb january 9  1978 4 38 pm 2782 5 2782 2782 5 2782 2782 5 2782
55 Q0 920 96 0.0113502145 Lucene_47
toward better documentation of programming <B>languages</B> cacm march  1963 yngve  v  h  sammet  j  e  ca630301 jb march 14  1978 1 51 pm 920 5 920 920 5 920 920 5 920 728 5 920 920 6 920 45 6 920
55 Q0 1098 97 0.01123614 Lucene_47
a comparison of list-processing computer <B>languages</B>  including a detailed comparison of comit  ipl-v well-known computer programming <B>languages</B> which  among them  exhibit all the principal characteristics of existing list-processing <B>languages</B>  important common features of list-processing <B>languages</B> <B>languages</B> under consideration are detailed  representations of data  both by the programmer
55 Q0 1923 98 0.01123614 Lucene_47
pseudofiles an approach to system interfaces for high level <B>languages</B> using basic input output support facilities is described  it is shown that this technique can provide potentially inexpensive methods for programs to communicate with deeply embedded facilities such as command language processors  cacm march  1969 rosin  r  f  operating systems  interfaces input-output  high level <B>languages</B>
55 Q0 1934 99 0.0102881435 Lucene_47
on arithmetic <B>expressions</B> and trees a description is given of how a tree representing the evaluation of an arithmetic expression can be drawn in such a way that the number of accumulators needed for the computation can be represented in a straightforward manner  this representation reduces the choice of the best order of computation to a specific problem under the theory of graphs  an algorithm
55 Q0 2286 100 0.0102881435 Lucene_47
 generalize easily to the evaluation of many nonrational <B>expressions</B>  cacm september  1972 richman  p  l
*************Query 56*************************

56 Q0 2327 1 0.2501125 Lucene_47
toward an <B>automata</B> <B>theory</B> of brains a source of ideas for <B>automata</B> <B>theory</B>-the <B>study</B> of the brain-has been pushed aside in mathematical development of the <B>theory</B>  this paper suggests the ways in which <B>automata</B> <B>theory</B> might evolve over the next 25 years if it is to contribute to an understanding of how the brain processes information  cacm july  1972 arbib  m  a  <B>automata</B> <B>theory</B>  brain <B>theory</B>
56 Q0 2931 2 0.1632608 Lucene_47
 parts of computability <B>theory</B>  programming <B>languages</B> offer an obvious opportunity as their syntactic <B>languages</B>  <B>automata</B>  denotational semantics  a-calculus models  computability  partial functionslogic and programming <B>languages</B> logic has been long in terested in whether answers to certain through the developments in complexity <B>theory</B>  these  however  are applications to logic  and a big
56 Q0 2112 3 0.1546858 Lucene_47
 cases of the translation problem  cacm february  1970 vere  s  <B>automata</B>  turing machines  <B>regular</B> expression  transduction expression  context-free <B>languages</B>  translation  recognizers  parsing  meta to describe the syntax and left-context sensitive semantics for context-free <B>languages</B>  a formal translator  the translator consists of mealy form finite-state <B>automata</B> interacting by means
56 Q0 2650 4 0.14913492 Lucene_47
  a  error correction  <B>regular</B> <B>languages</B>  <B>regular</B> events  finite state <B>automata</B>  compiler error recoveryorder-n correction for <B>regular</B> <B>languages</B> a method is presented for calculating a string b  belonging to a given <B>regular</B> language l  which is  nearest   in number of edit operations  to a given input finite-state <B>automata</B> 4.12 4.20 5.22 5.23 5.42 ca740503 jb january 17  1978 4 26 pm 1179 4 2650 1225 4
56 Q0 1678 5 0.14672227 Lucene_47
 science program  <B>automata</B>  formal <B>languages</B>  switching <B>theory</B>  <B>theory</B> of computability 1.5 5.2 6.1<B>automata</B>  formal <B>languages</B>  abstract switching  and computability in a ph  computer science program a number of courses are listed in the area describe as <B>automata</B>  formal <B>languages</B>  abstract switching  and computability  that might be available to a ph  student in computer science  a brief catalog
56 Q0 2921 6 0.13319087 Lucene_47
 of the handle  cacm october  1977 lalonde  w  r  finite state machines  <B>automata</B>   <B>regular</B> expressions<B>regular</B> right part grammars and their parsers this paper in troduces an alternative to context-free grammars called <B>regular</B> right part  rrp  grammars  which resemble pascal syntax diagrams  formally   and  as a special case  <B>regular</B> expressions  since these can be converted to fsms  rrp grammars
56 Q0 1665 7 0.10395152 Lucene_47
 application of the <B>theory</B> of finite-state <B>automata</B> to automatically generate lexical processors allowable in a language given in terms of a subset of <B>regular</B> expressions  the output of the system by the <B>regular</B> expressions  each output item is identified by a code number together with a pointer string  compiler  finite-state <B>automata</B>  finite-state machine  lexical processor  nondeterministic
56 Q0 2061 8 0.08733702 Lucene_47
 <B>languages</B>  pushdown <B>automata</B> 4.12 5.22 5.23 ca700505 jb february 13  1978 1 58 pm 1379 4 2061 1491 4  next  pushdown <B>automata</B> which generate the different reduction classes of a context-free grammar are defined  finally  the algorithm is described  it essentially carries out an exhaustive <B>study</B> of all possible runs of the pushdown <B>automata</B> generating the reduction classes  in the second part
56 Q0 1453 9 0.07423629 Lucene_47
a nonrecursive method of syntax specification the use of the kleene <B>regular</B> expression notation for describing <B>algebraic</B> language syntax  in particular of algol  is described in this paper  a fortran elimination for linear systems of <B>algebraic</B> equations  is described  this was applied to numerous smaller <B>languages</B>  including some sublanguage of algol  a hand calculation result of the application
56 Q0 2645 10 0.07158493 Lucene_47
two <B>languages</B> for estimating program efficiency two <B>languages</B> enabling their users to estimate estimating its efficiency  processors for the two <B>languages</B> are also described  the first processor processor is a set of procedures for <B>algebraic</B> manipulation which can be called by the user to operate on the formula produced by the first processor  examples of the usage of the two <B>languages</B>
56 Q0 2323 11 0.071521774 Lucene_47
toward a general <B>theory</B> of special functions a list of a number of natural developments for the field of <B>algebraic</B> manipulation is given  then the prospects for a general <B>theory</B> of functions defined to differential equations  such a <B>theory</B> is preferable to a less general effort to make <B>algebraic</B>  hypergeometric   cacm july  1972 moses  j  <B>algebraic</B> manipulation  special functions  <B>algebraic</B> simplification
56 Q0 2470 12 0.068330675 Lucene_47
 the notions of data item  function  and <B>relation</B>  it is argued that the system is more suitable than set <B>theory</B>  or its derivatives  for the concise and accurate description of program semantics  it is shown be introduced into <B>languages</B> through the mechanism of singleton data types  both deterministic of function calling and parameter passing are touched upon  the <B>theory</B> is applied to the proof of several
56 Q0 2449 13 0.067080036 Lucene_47
a simple technique for structured variable lookup a simple technique for the symbol-table lookup of structured variables based on simple <B>automata</B> <B>theory</B> is presented  the technique offers a deterministic solution to a problem which is currently handled in a nondeterministic manner in pl i and cobol compilers  cacm september  1973 gates  g  w  poplawski  d  a  symbol table organization  pl i
56 Q0 2932 14 0.056888472 Lucene_47
complexity of computations the framework for research in the <B>theory</B> of complexity of computations is described  emphasizing the in terrelation between seemingly diverse problems and methods  illustrative examples of practical and theoretical significance are given  directions for new research are discussed  cacm september  1977 rabin  m  o  complexity of computations  <B>algebraic</B> complexity
56 Q0 2051 15 0.05580163 Lucene_47
a pl i program to assist the comparative linguist a practical pl i program is described which can assist comparative linguists to determine the <B>regular</B> sound correspondences between genetically related <B>languages</B>  the investigator must arrange data for input by aligning pairs of suspected cognates linguistics  diachronic linguistics  genetic relationship  sound change  sound correspondence  <B>regular</B>
56 Q0 1253 16 0.055091012 Lucene_47
 this material understandable to the reader familiar with <B>algebraic</B> <B>languages</B>  cacm june  1965 tonge  f  mquikscript-a simscript- like language for the g-20 quikscript is a simulation language based on simscript and programmed entirely in an <B>algebraic</B> language  20-gate  the quikscript language  its internal implementation  and major differences between quikscript and simscript are presented  this paper
56 Q0 1048 17 0.05397172 Lucene_47
approximate solution of axially symmetric problems a variety of physical problems in such diverse fields as electrostatic field <B>theory</B>  heat and ideal fluid flow  and stress concentration <B>theory</B> reduce  under the assumption of axial symmetry  to the <B>study</B> of an elliptic partial differential equation  dirichlet-type problems associated with this equation are studied on regions whose boundaries
56 Q0 2166 18 0.052467287 Lucene_47
automated <B>algebraic</B> manipulation in celestial mechanics in this paper we consider some of the applications of automated <B>algebraic</B> manipulation which have been made in celestial mechanics  particular attention is paid to the use of poisson series  and a typical problem in perturbation <B>theory</B> is described  the requirements of processors for use in celestial mechanics are considered and compared
56 Q0 1867 19 0.04638992 Lucene_47
 <B>theory</B>  it is shown that l j  - gt  2 and that  asymptotically  the average interval between sign lengths  asymptotic expected length  recursion <B>relation</B>  generating function  meromorphic function
56 Q0 2134 20 0.04638992 Lucene_47
 are discussed  and a <B>relation</B> between solution time and problem size is given  cacm december  1971 bourgeois  f  lassalle  j  operations research  optimization <B>theory</B>  assignment problem  rectangular
56 Q0 1911 21 0.046334166 Lucene_47
on coordination reduction and sentence analysis a class of coordination phenomena in natural <B>languages</B> is considered within the frame work of transformational <B>theory</B>  to account for these phenomena definitions  cacm april  1969 petrick  s  r  postal  p  m  rosenbaum  p  s  natural <B>languages</B>  generative grammar  transformational <B>theory</B>  syntax  coordination  sentence coordination  sentence
56 Q0 1991 22 0.04444715 Lucene_47
on the number of automorphisms of a singly generated automaton cacm september  1970 bavel  z  <B>automata</B>  finite <B>automata</B>  singly generated <B>automata</B>  automorphisms  generators  length of state  minimal-length generators  orbit 5.22 ca700914 jb february 10  1978 9 54 am 1991 5 1991 1991 5 1991 1991 5 1991
56 Q0 1896 23 0.044336304 Lucene_47
<B>regular</B> coulomb wave functions  algorithm 292 s22   cacm may  1969 gautschi  w  coulomb wave functions  wave functions  <B>regular</B> coulomb wave functions 5.12 ca690513 jb february 17  1978 3 15 pm 1896 5 1896 1896 5 1896 1896 5 1896
56 Q0 1898 24 0.044336304 Lucene_47
<B>regular</B> coulomb wave functions  algorithm 292  s22   cacm may  1969 kolbig  k  s  coulomb wave functions  wave functions  <B>regular</B> coulomb wave functions 5.12 ca690511 jb february 17  1978 3 19 pm 1898 5 1898 1898 5 1898 1898 5 1898
56 Q0 2305 25 0.042835046 Lucene_47
 july  1972 bauer  f  l  wossner  h  higher programming <B>languages</B>  programming  <B>theory</B> of programmingthe  plankalkul  of konrad zuse  a forerunner of today s programming <B>languages</B> plankalkul was an attempt by korrad zuse in the 1940 s to devise a notational and conceptual system for writing what programming <B>languages</B>  the investigation is of historical interest  also  it may provide insights
56 Q0 1258 26 0.042666357 Lucene_47
an extended arithmetic package in many fields  for example <B>algebraic</B> number <B>theory</B>  arithmetic must be carried out to a degree of precision which exceeds the normal hardware capacity of most machines  in such cases  an extended arithmetic package provides a comprehensive and easy-to-use way of performing such arithmetic  such a package was coded for the ibm 7090  in discussing the general
56 Q0 2809 27 0.042666357 Lucene_47
positivity and norms following some lines of joint work with a  s  householder  the character and use of <B>algebraic</B> methods in the <B>theory</B> of norms is demonstrated  new results concerning norms with values in an archimedian vector lattice  not necessarily being totally ordered  are given  in particular for the generalization of order unit norms  l-norms and m-norms  an example of application
56 Q0 1397 28 0.040720988 Lucene_47
proceedings of the acm symposium on symbolic and <B>algebraic</B> manipulation the acm symposium on symbolic and <B>algebraic</B> manipulation brought together over four hundred people interested in programming <B>languages</B> designed for manipulation of <B>algebraic</B> formulas and symbol strings  in their applications  the conference was sponsored by the acm special interest committee on symbolic and <B>algebraic</B>
56 Q0 2302 29 0.038974762 Lucene_47
computers and employment the relationship of computers and automation to employment is part of the more general <B>relation</B> of technological change to employment  the most obvious effect is that increase in productivity due to technology can eliminate jobs  technology affects the individual worker of these effects  the impact of technology has been the subject of extensive <B>study</B> by economists
56 Q0 2580 30 0.038896408 Lucene_47
 of cognitive processes  computer music  computer composition  music <B>theory</B>  formal <B>languages</B>  probabilistica method for composing simple traditional music by computer a method is described for composing musical rounds by computer  this method uses some music <B>theory</B> plus additional heuristics  fundamental that full-blown music <B>theory</B> is not needed for rounds--all the hardware required for structural levels
56 Q0 1961 31 0.03865826 Lucene_47
 in the graph to give a <B>relation</B> between speed and complexity  extensions to undirected and s-graphs are discussed  cacm december  1970 tiernan  j  c  algorithm  graph <B>theory</B>  circuit search algorithm  path
56 Q0 1739 32 0.0376206 Lucene_47
<B>regular</B> expression search algorithm a method for locating specific character strings embedded is discussed  the compiler accepts a <B>regular</B> expression as source language and produces an ibm 7094 program a signal every time an embedded string in the text matches the given <B>regular</B> expression  examples  problems  and solution are also presented  cacm june  1968 thompson  k  search  match  <B>regular</B> expression
56 Q0 1806 33 0.0355553 Lucene_47
 in <B>theory</B> the method always converges  it is shown that a fundamental dilemma exists which may cause  transcendental complex equation  <B>algebraic</B> complex equation 5.15 ca691206 jb february 15  1978 2 54 pm
56 Q0 1993 34 0.035469044 Lucene_47
<B>regular</B> coulomb wave functions  algorithm 292  s22   cacm september  1970 cody  w  j  paciorek  k  a  coulomb wave functions  wave functions  <B>regular</B> coulomb wave functions 5.12 ca700912 jb february 10  1978 10 03 am 1993 5 1993 1993 5 1993 1993 5 1993
56 Q0 1334 35 0.03369227 Lucene_47
mechanization of tedious algebra  the newcomb operators of planetary <B>theory</B> a computer program has been written to generate tables of formulas for the newcomb operators of planetary <B>theory</B>  the newcomb operators are expressed as polynomials in two variables  one of which stands for a simple the <B>algebraic</B> operations  formulas for over 100 newcomb operators have been produced by the program
56 Q0 1154 36 0.03333536 Lucene_47
multi-tape and infinite-state <B>automata</B> -- a survey a survey of machines which are more powerful than finite <B>automata</B> and less powerful than general turing machines is presented  it is felt that the machines in this category are as closely related to digital computers as either the finite <B>automata</B> or the unrestricted turing machines  intermediate machines can be created by adjoining on infinite
56 Q0 3077 37 0.03211359 Lucene_47
 of programs conventional programming <B>languages</B> are growing ever more enormous  but not stronger  inherent level programs to build still higher level ones in a style not possible in conventional <B>languages</B> in high school algebra  these transformations are given by <B>algebraic</B> laws and are carried out for their programming power but also for the power of their associated <B>algebraic</B> laws  general theorems
56 Q0 3124 38 0.031991187 Lucene_47
recursive data structures in apl a mathematical <B>study</B> of three approaches for defining nested arrays in apl is presented  theorems exhibiting the relationships between the definitional systems are given and illustrated through graph representations  one of the approaches is used to define an apl  apl arrays  recursive data structures  trees  data-driven algorithms  <B>theory</B> of arrays 4.22 5.29
56 Q0 1355 39 0.0313505 Lucene_47
<B>regular</B> coulomb wave functions  algorithm 292   cacm november  1966 gautschi  w  ca661103a jb march 2  1978 3 43 pm 1355 4 1355 2619 4 1355 1355 5 1355 1355 5 1355 1355 5 1355 1419 5 1355
56 Q0 1216 40 0.031183278 Lucene_47
symbolic derivatives without list processing  subroutines  or recursion a routine has been developed which computes and prints out the symbolic derivative of an absolutely continuous elementary function of one or several variables  no use is made of list-processing <B>languages</B>  the chain rule into an  <B>algebraic</B>  programming language  cacm august  1965 smith  p  j  ca650808 jb march 6  1978 8
56 Q0 724 41 0.027619172 Lucene_47
a profile of the programmer synopsis  549 members of the acm participated in a <B>study</B> concerned primarily with the attitudes of programmers toward their careers and jobs  a very high percentage of programmers have apparently entered their careers by accident  it has proven a happy choice for most problems for programming in the immediate future are listed by participants  <B>languages</B>  personnel  various
56 Q0 2090 42 0.027321998 Lucene_47
symbolic expansion of <B>algebraic</B> expressions  algorithm 377  r2   cacm march  1970 levine  m  j  algebra  symbolic algebra  symbolic multiplication  <B>algebraic</B> distribution  <B>algebraic</B> multiplication  distribution algorithm  multiplication algorithm  product algorithm  polynomial distribution  polynomial expansion 3.10 3.17 3.20 4.13 4.90 ca700308 jb february 13  1978 3 49 pm 2090 5 2090 2090 5 2090
56 Q0 2326 43 0.027090168 Lucene_47
fix point approach to the <B>theory</B> of computation following the fix point <B>theory</B> of scott  the semantics of computer programs are defined in terms of the least fix points of recursive programs  this allows not only the justification of all existing verification techniques  but also their extension  semantics of programming <B>languages</B>  least fix points  recursive programs  computational induction 5.23
56 Q0 2842 44 0.025884008 Lucene_47
the denotational semantics of programming <B>languages</B> this paper is a tutorial introduction to the <B>theory</B> of programming language semantics developed by d  scott and c  strachey  the application of the <B>theory</B> to formal language specification is demonstrated and other applications are surveyed <B>theory</B> of computation due to scott is motivated and outlined  finally  the paper presents a formal
56 Q0 1887 45 0.025818923 Lucene_47
a recursive <B>relation</B> for the determinant of a pentadiagonal matrix a recursive <B>relation</B>  relating leading principal minors  is developed for the determinant of a pentadiagonal matrix  a numerical example is included to indicate its use in calculating eigenvalues  cacm june  1969 sweet  r  a  pentadiagonal matrix  quindiagonal matrix  quindiagonal matrix  band matrix  determinant  characteristic
56 Q0 397 46 0.024081131 Lucene_47
 is sufficient to identify the material normally associated with reference files for books  <B>articles</B>  programming
56 Q0 3189 47 0.023906749 Lucene_47
an <B>algebraic</B> compiler for the fortran assembly program an <B>algebraic</B> compiler has been written which may be added to the fortran assembly program  this compiler will expand all <B>algebraic</B> statements with the following operations  addition  subtraction  multiplication and division  it will compile multi-level expressions in floating-point arithmetic  this is easily be revised to fixed-point   cacm
56 Q0 99 48 0.023661545 Lucene_47
possible modifications to the international <B>algebraic</B> language cacm february  1959 green  j  ca590202 jb march 22  1978 8 22 pm 99 5 99 99 5 99 99 5 99
56 Q0 2813 49 0.022615382 Lucene_47
the computer science and engineering research <B>study</B>  cosers  the computer science and engineering research <B>study</B>  cosers  is briefly described  the motivation  organization  and schedule for this nsf supported <B>study</B> are given  for possible further reference  the subject area panel chairmen research  computer engineering research  national research <B>study</B> 1.0 1.52 ca761202 jb january 3  1978 2
56 Q0 2779 50 0.02259156 Lucene_47
discrete least squares polynomial fits the recurrence <B>relation</B> between orthogonal polynomials is widely used for discrete least squares data fitting  a variant of the classical algorithm which has better numerical properties is presented and the reason for its improved performance is explained <B>relation</B> between orthogonal polynomials  residual 5.11 5.13 ca750309 jb january 9  1978 4 29 pm 2779 5
56 Q0 1834 51 0.022393832 Lucene_47
an axiomatic basis for computer programming in this paper an attempt is made to explore the logical foundations of computer programming by use of techniques which were first applied in the <B>study</B> of geometry and have later been extended to other branches of mathematics  this involves the elucidation from a pursuance of these topics  cacm october  1969 hoare  c  a  r  axiomatic method  <B>theory</B>
56 Q0 2767 52 0.022095336 Lucene_47
 <B>languages</B>  the most promising algorithm uses the indexed list concept  it will require an adaptive routine <B>study</B> would be fruitful  cacm april  1975 vaucher  j  g  duval  p  simulation  time flow mechanisms
56 Q0 2998 53 0.022095336 Lucene_47
an empirical <B>study</B> of list structure in lisp static measurements of the list structure of five large lisp programs are reported and analyzed in this paper  these measurements reveal substantial regularity  or predictability  among poin ters to atoms and especially among poin ters to lists  pointers <B>languages</B>  poin ters to lists usually poin t to a location physically nearby in memory  the use
56 Q0 1425 54 0.021842135 Lucene_47
flow diagrams  turing machines and <B>languages</B> with only two formation rules in the first part of the paper  flow diagrams are introduced to represent inter al  mappings of a set into itself  although not every diagram is decomposable into a finite number of given base diagrams  this becomes true  the second  only two  in the second part of the paper  the second method is applied to the <B>theory</B>
56 Q0 1824 55 0.021828296 Lucene_47
aparel-a parse-request language aparel is described  this language is an extension to an algorithmic language  pl i  that provides the pattern-matching capabilities normally found only in special purpose <B>languages</B> such as snobol4 and tmg  this capability is provided through parse-requests stated  aparel has proven convenient in building a powerful syntax and function macro system  an <B>algebraic</B>
56 Q0 2719 56 0.021828296 Lucene_47
 functions  list processing  lisp  <B>algebraic</B> manipulation  programming <B>languages</B>  analysis of algorithms
56 Q0 2316 57 0.021753928 Lucene_47
programming <B>languages</B>  history and future this paper discusses both the history and future of programming <B>languages</B>    higher level <B>languages</B>   some of the difficulties in writing such a history are indicated  a key part of the paper is a tree showing the chronological development of <B>languages</B> and their interrelationships  reasons for the proliferation of <B>languages</B> are given  the major <B>languages</B>
56 Q0 464 58 0.020571748 Lucene_47
 described previously in unpublished reports and also some additional discussion of the work in <B>relation</B> to the more general questions of problem-oriented <B>languages</B> and string transformations  cacm october
56 Q0 2165 59 0.0204915 Lucene_47
general relativity and the application of <B>algebraic</B> manipulative systems the paper describes some applications of symbolic algebra systems to problems of general relativity including the derivation equations in the presence of matter in a simple case  attention is drawn to the strictly <B>algebraic</B> nonnumerical mathematics  general relativity  <B>algebraic</B> manipulation  equation manipulation 1.3 3.11 5.10
56 Q0 21 60 0.019717954 Lucene_47
<B>algebraic</B> formulation of flow diagrams cacm june  1958 voorhees  e  a  ca580601 jb march 22  1978 9 10 pm 21 5 21 21 5 21 21 5 21 679 5 21 21 6 21 407 6 21 3184 6 21
56 Q0 55 61 0.019717954 Lucene_47
an <B>algebraic</B> translator cacm october  1959 kaner  h  ca591004 jb march 22  1978 4 15 pm 405 5 55 55 5 55 55 5 55 55 5 55 224 6 55 55 6 55 77 6 55 93 6 55
56 Q0 2769 62 0.019364193 Lucene_47
a modification of warshall s algorithm for the transitive closure of binary relations an algorithm is given for computing the transitive closure of a binary <B>relation</B> that is represented by a boolean matrix  the algorithm is similar to warshall s although it executes faster for sparse matrices <B>relation</B> 5.30 5.32 ca750408 jb january 9  1978 3 49 pm 1151 4 2769 1265 4 2769 2769 4 2769 2769 5 2769
56 Q0 2167 63 0.019319572 Lucene_47
<B>algebraic</B> simplification  a guide for the perplexed <B>algebraic</B> simplification is examined first from of automatic simplification capabilities in an <B>algebraic</B> manipulation system  systems are divided of expressions  finally we discuss some of the theoretical results related to <B>algebraic</B> simplification for certain classes of expressions are included  cacm august  1971 moses  j  <B>algebraic</B> manipulation
56 Q0 2346 64 0.017917909 Lucene_47
hu-tucker minimum redundancy alphabetic coding method  z   algorithm a428  cacm may  1972 yohe  j  m  information <B>theory</B>  coding <B>theory</B>  hu-tucker method  minimum redundancy coding 5.6 ca720514 jb january 31  1978 9 30 am 2346 4 2346 2459 4 2346 1114 5 2346 2346 5 2346 2346 5 2346 2346 5 2346
56 Q0 3031 65 0.017076248 Lucene_47
abstract data types and software validation a data abstraction can be naturally specified using <B>algebraic</B> axioms  the virtue of these axioms is that they permit a representation-independent formal specification of a data type  an example is given which shows how to employ <B>algebraic</B> axioms the use of <B>algebraic</B> axiomatizations can simplify the process of proving the correctness
56 Q0 3012 66 0.016787568 Lucene_47
the use of an interactive information storage and retrieval system in medical research this paper presents the results of a <B>study</B> of the use of an interactive computerized storage and retrieval system  a monitor built into the computer system provided usage data for the <B>study</B>  additional data of the <B>study</B> for the design of similar systems are discussed  cacm march  1978 lucas  hr
56 Q0 2648 67 0.016458651 Lucene_47
a design for a number <B>theory</B> package with an optimized trial division routine a number <B>theory</B> package is described which uses doubly linked list structures for storing multiprecise integers  the package has been coded in ibm s basic assembly language and makes heavy use of the macro language  l  number <B>theory</B> package  trial division  multiprecise arithmetic  factorization  doubly linked
56 Q0 2129 68 0.01599149 Lucene_47
recursive computation of certain derivatives-a <B>study</B> of error propagation a brief <B>study</B> is made of the propagation of errors in linear first-order difference equations  the recursive computation of successive derivatives of  e x  x and  cos x  x is considered as an illustration  cacm january  1970 gautschi  w  recursive computation  successive derivatives  error propagation 5.11 5.12 ca700102 jb
56 Q0 124 69 0.015974645 Lucene_47
an algorithm for the assignment problem the assignment problem is formulated and briefly discussed  an efficient algorithm for its solution is presented in algol code  an empirical <B>relation</B> between solution time and the size of the problem is given  based on extensive experiments carried out on a digital computer  cacm november  1960 silver  r  ca601111 jb march 20  1978 7 05 pm 124 5 124 124 5
56 Q0 2974 70 0.015974645 Lucene_47
comment on weighted increment linear search for scatter tables cacm april  1977 bandyopadhyay  s  k  hash address  primary clustering  index  sequence  complementary <B>relation</B>  search 3.73 3.74 4.9 4.11 4.12 ca770408 jb december 29  1977 5 02 am 1973 4 2974 2018 4 2974 2203 4 2974 2251 4 2974 2543 4 2974 2770 4 2974 2974 4 2974 2974 4 2974 3053 4 2974 2109 5 2974 2251 5 2974 2974 5 2974 2974 5
56 Q0 1101 71 0.015837343 Lucene_47
the place of logical design and switching <B>theory</B> in the computer curriculum cacm april  1964 muller  d  e  ca640407 jb march 10  1978 1 49 am 1101 5 1101 1101 5 1101 1101 5 1101
56 Q0 1948 72 0.015837343 Lucene_47
computers in group <B>theory</B>  a survey computers are being applied to an increasingly diverse range of problems in group <B>theory</B>  the most important areas of application at present are coset enumeration  group <B>theory</B> programs range from simple combinatorial or numerical programs to large symbol is included  cacm january  1969 cannon  j  j  group <B>theory</B>  coset enumeration  subgroup lattices
56 Q0 2121 73 0.015837343 Lucene_47
partitions in natural order  algorithm 371  a1   cacm january  1970 mckay  j  k  s  partitions number <B>theory</B> 5.39 ca700110 jb february 14  1978 1 48 pm 2121 5 2121 2121 5 2121 2121 5 2121
56 Q0 2291 74 0.015837343 Lucene_47
localization of the roots of a polynomial  c2   algorithm a429  cacm august  1972 squire  w  polynomials  roots of polynomials <B>theory</B> of equations  routh-hurwitz criterion 5.15 ca720811 jb january 30  1978 9 21 am 2291 5 2291 2291 5 2291 2291 5 2291
56 Q0 2476 75 0.015837343 Lucene_47
equivalence between and or graphs and context-free grammars cacm july  1973 hall  p  a  v  artificial intelligence  and or graphs  language <B>theory</B>  context-free grammars 3.60 3.64 5.23 ca730710 jb january 23  1978 11 21 am 2476 5 2476 2476 5 2476 2476 5 2476
56 Q0 1803 76 0.015774364 Lucene_47
complex root finding  algorithm 365  c5   cacm december  1969 bach  h  downhill method  complex relaxation method  complex iteration  complex equation  transcendental complex equation  <B>algebraic</B> complex equation 5.15 ca691209 jb february 15  1978 2 25 pm 1803 4 1803 1806 5 1803 1803 5 1803 1803 5 1803 1803 5 1803
56 Q0 393 77 0.015774364 Lucene_47
two subroutines for symbol manipulation with an <B>algebraic</B> compiler cacm february  1961 carr iii  j  w  hanson  j  w  ca610205 jb march 17  1978 12 59 am 393 5 393 393 5 393 393 5 393 561 5 393 393 6 393 77 6 393
56 Q0 54 78 0.015774364 Lucene_47
sale  a simple <B>algebraic</B> language for engineers cacm october  1959 brittenham  w  r  clark  k  kuss  g  thompson  h  smith  a  o  ca591005 jb march 22  1978 4 14 pm 405 4 54 54 4 54 54 5 54 54 5 54 54 5 54 93 5 54
56 Q0 93 79 0.015774364 Lucene_47
from formulas to computer oriented language a technique is shown for enabling a computer to translate simple <B>algebraic</B> formulas into a three address computer code  cacm march  1959 wegstein  j  h  ca590303 jb march 22  1978 8 03 pm 405 5 93 54 5 93 93 5 93 93 5 93 93 5 93 224 6 93 55 6 93 77 6 93 93 6 93 93 6 93
56 Q0 1906 80 0.01567525 Lucene_47
automated printed circuit routing with a stepping aperture a computer program for routing interconnections on a two-sided printed circuit board with a <B>regular</B> pattern of lines  pins  terminals   and vias  feed-through holes  is described  in this program  each interconnection is given a planned routing-typically  down from the upper pin  through a via  and horizontally to the lower pin  from
56 Q0 1223 81 0.015591639 Lucene_47
 <B>algebraic</B> <B>languages</B>  cacm august  1965 gear  c  w  ca650801 jb march 6  1978 8 45 pm 267 4 1223 1139 4 1223
56 Q0 1046 82 0.014448679 Lucene_47
a compiler-building system developed by brooker and morris in a number of <B>articles</B> published during the past two years  r  a  brooker and d  morris  joined by j  rohl in their most recent paper have presented a very interesting programming system that they have developed for the ferranti atlas computer  the present paper describes some of the major features of their system  it expands on some
56 Q0 1703 83 0.014042101 Lucene_47
accommodating standards and identification of programming <B>languages</B> the user public wants standardization and reliable identification of programming <B>languages</B> and related services  one way related family of <B>languages</B>  oppressive rigidity usually associated with standardization is avoided <B>languages</B> and computer services  cacm august  1968 mooers  c  n  standardization  programming
56 Q0 2603 84 0.014042101 Lucene_47
the equivalence of reducing transition <B>languages</B> and deterministic <B>languages</B> the class of reducing transition <B>languages</B> introduced by eickel  paul  bauer  and samelson was shown by morris to be a proper superclass of the simple precedence <B>languages</B>  in this paper this result is extended  showing that  in fact  the first class is equivalent to the class of deterministic context free <B>languages</B>
56 Q0 2705 85 0.014042101 Lucene_47
programming <B>languages</B>  natural <B>languages</B>  and mathematics some social aspects of programming are illuminated through analogies with similar aspects of mathematics and natural <B>languages</B>  the split <B>languages</B> toward flexion less  word-order based language types speaks for programming language design  auxiliary <B>languages</B> it is suggested that fortran and cobol will remain dominant for a long time to come
56 Q0 1459 86 0.013900968 Lucene_47
requirements for real-time <B>languages</B> real-time <B>languages</B> have different requirements from other programming <B>languages</B> because of the special nature of their applications  the environment in which their object programs are executed and the environment in which they may be compiled  it may not be the language extensions that ultimately advance developments in the field  progress may be made
56 Q0 2986 87 0.013834447 Lucene_47
 complexity  sparse <B>relation</B>  boolean matrix  directed graph  wirth-weber precedence <B>relation</B>  linear precedence function  slr grammar  t-canonical precedence <B>relation</B> 4.12 5.23 5.25 ca770306 jb december 29
56 Q0 44 88 0.0138025675 Lucene_47
runcible-<B>algebraic</B> translation on a limited computer cacm november  1959 knuth  d  e  ca591104 jb march 22  1978 3 52 pm 1134 4 44 1141 4 44 364 4 44 405 4 44 438 4 44 561 4 44 44 4 44 222 5 44 364 5 44 44 5 44 44 5 44 44 5 44 77 5 44 100 6 44 224 6 44 44 6 44 44 6 44 77 6 44 82 6 44 98 6 44
56 Q0 2814 89 0.013758391 Lucene_47
roster of programming <B>languages</B> for 1974-75 cacm december  1976 sammet  j  e  ca761201 jb january 3  1978 2 38 pm 2814 5 2814 2814 5 2814 2814 5 2814
56 Q0 628 90 0.013758391 Lucene_47
on a floating-point number representation for use with algorithmic <B>languages</B> cacm march  1962 grau  a  a  ca620304 jb march 20  1978 3 09 pm 628 5 628 628 5 628 628 5 628
56 Q0 651 91 0.013758391 Lucene_47
a survey of <B>languages</B> and systems for information retrieval cacm january  1962 grems  m  ca620108 jb march 20  1978 4 36 pm 651 5 651 651 5 651 651 5 651
56 Q0 2268 92 0.013706991 Lucene_47
a comparative <B>study</B> of computer programs for integrating differential equations a <B>study</B> comparing the performance of several computer programs for integrating systems of ordinary differential equations is reported  the integration methods represented include multistep methods  predictor-correctors   single-step methods  runge-kutta  and extrapolation methods  both polynomial and rational
56 Q0 1072 93 0.013692552 Lucene_47
 the equivalence <B>relation</B>  cacm may  1964 galler  b  a  fisher  m  j  ca640517 jb march 9  1978 11 48 pm
56 Q0 1211 94 0.013692552 Lucene_47
a note on storage of strings a method for storing strings is described which uses blocks of indefinite size  and is therefore completely dynamic  its <B>relation</B> to similar schemes is discussed  cacm august  1965 berztiss  a  t  ca650813 jb march 6  1978 8 02 pm 1211 4 1211 1211 4 1211 1549 4 1211 1906 4 1211 2902 4 1211 2902 4 1211 1051 5 1211 1062 5 1211 1211 5 1211 1211 5 1211 1211 5 1211 2902 5
56 Q0 1649 95 0.013692552 Lucene_47
  methods of using this information are illustrated in <B>relation</B> to general purpose data directed input
56 Q0 2052 96 0.013692552 Lucene_47
scheduling to reduce conflict in meetings conflicts in scheduling can be treated as defining an undirected linear graph independently of the <B>relation</B> of the activities in conflict to additional constraints of time and space  each connected component of such a graph  which can be found by an algorithm described by gotlieb and corneil  corresponds to a set of events that must be scheduled
56 Q0 2288 97 0.013692552 Lucene_47
file organization  the consecutive retrieval property the consecutive retrieval property is an important <B>relation</B> between a query set and record set  its existence enables the design of an information retrieval system with a minimal search time and no redundant storage  some important theorems on the consecutive retrieval property are proved in this paper  conditions under which the consecutive
56 Q0 536 98 0.013692552 Lucene_47
nonlinear regression and the solution of simultaneous equations if one has a set of observables  z1     zm  which are bound in a <B>relation</B> with certain parameters  a1     an  by an equation s z1     a1      0  one frequently has the problem of determining a set of values of the ai which minimizes the sum of squares of differences between observed and calculated values of a distinguished observable
56 Q0 3199 99 0.013660999 Lucene_47
algem - an <B>algebraic</B> manipulator algem is a package of subprograms written in slip  fortran iv and map 7094 ii to manipulate <B>algebraic</B> expressions  algem s basic <B>algebraic</B> operations are additions  subtractions  multiplications  division and exponentiation  it is capable of handling any number of single letter variables  variable exponents  and of finding the highest common factor of two
56 Q0 1934 100 0.0134384325 Lucene_47
 the choice of the best order of computation to a specific problem under the <B>theory</B> of graphs  an algorithm  compiler design  graph <B>theory</B>  programming  storage minimization  topological ordering tree 4.12 5.32
*************Query 57*************************

57 Q0 3077 1 0.7238832 Lucene_47
<B>can</B> <B>programming</B> be <B>liberated</B> <B>from</B> the <B>von</B> <B>neumann</B> <B>style</B>  a <B>functional</B> <B>style</B> and <B>its</B> <B>algebra</B> <B>style</B> of <B>programming</B> inherited <B>from</B> their common ancestor-the <B>von</B> <B>neumann</B> computer  their close  associated with the <B>functional</B> <B>style</B> of <B>programming</B> is an <B>algebra</B> of <B>programs</B> whose variables range <B>programs</B>  an alternative <B>functional</B> <B>style</B> of <B>programming</B> is founded on the use of combining forms
57 Q0 3140 2 0.44122824 Lucene_47
 verification should not dominate program language design  <B>cacm</B> may  1979 <B>de</B> <B>millo</B>  <B>r</B>  <B>lipton</B>  <B>r</B>  <B>perlis</B>social processes and proofs of theorems and <B>programs</B> it is argued that formal verifications of <B>programs</B>  no matter how obtained  will not play the same key role in the development of computer science  the inevitability of change  and the complexity of specification of significantly many real <B>programs</B> make
57 Q0 1705 3 0.14977634 Lucene_47
 procedures is furnished in tabular form  <B>cacm</B> august  1968 <B>de</B> vogelaere  <B>r</B>  input output  transput  outsymbol and length  as requested by this journal s algorithms policy  comm  <B>acm</B> 10  nov  67   729 representation  and rounds properly  variants <B>can</B> easily be written because of the explicit call  otb  ota  the berkeley <B>style</B> of providing information on the form of output using prior calls
57 Q0 2700 4 0.14711387 Lucene_47
 are obtained to show that the assumption that a statement is indivisible <B>can</B> be relaxed and still preserve properties such as halting  thus correctness proofs of a parallel system <B>can</B> often be greatly simplified  <B>cacm</B> december  1975 <B>lipton</B>  <B>r</B>  <B>j</B>  deadlock free  reduction  interruptible  indivisible  parallelreduction  a method of proving properties of parallel <B>programs</B> when proving that a parallel program
57 Q0 1106 5 0.113660626 Lucene_47
<B>programming</B> of digital computers <B>cacm</B> april  1964 <B>perlis</B>  a  <B>j</B>  ca640402 jb march 10  1978 1 54 am 1106 5 1106 1106 5 1106 1106 5 1106
57 Q0 1764 6 0.08425903 Lucene_47
panel discussion on computer appreciation session 19 of the <B>acm</B> 20 th anniversary conference on august 31  1967  was entitled education  design experiments  and computer appreciation  <B>its</B> second half  organick  the four panelists were charles h  davidson  bernard a  galler  richard  w  hamming  and alan <B>j</B>  <B>perlis</B>  after making prepared statements  the panelists were joined in discussion by andries van
57 Q0 3008 7 0.07983059 Lucene_47
 proximity  but <B>can</B> be so stored in binary trees  the former result implies  for instance  that row major order is an asymptotically optimal storage strategy for arrays  <B>cacm</B> march  1978 demillo  <B>r</B>  eisenstat  s  <B>lipton</B>  <B>r</B>  arrays  graph embedding  linear lists  proximity  average proximity  trees 4.34
57 Q0 176 8 0.07421292 Lucene_47
symbol manipulation by threaded lists  corrigendum  <B>cacm</B> june  1960 <B>perlis</B>  a  <B>j</B>  thornton  c  ca600614 jb march 20  1978 9 26 pm 176 5 176 176 5 176 176 5 176
57 Q0 65 9 0.07421292 Lucene_47
algol sub-committee report - extensions <B>cacm</B> september  1959 dijkstra  e  w  heise  w  <B>perlis</B>  <B>j</B>  a  samelson  k  ca590904 jb march 22  1978 4 49 pm 65 5 65 65 5 65 65 5 65
57 Q0 2850 10 0.07341009 Lucene_47
 <B>programs</B> written in a simple pl i <B>style</B> <B>programming</B> language  it includes many standard debugging features and program proving is also included  <B>cacm</B> july  1976 king  <B>j</B>  c  symbolic execution  program testingsymbolic execution and program testing this paper describes the symbolic execution of <B>programs</B>  instead of supplying the normal inputs to a program  e g  numbers  one supplies symbols representing
57 Q0 2705 11 0.06910451 Lucene_47
 literature  i e  <B>programs</B>  of general utility and studies of questions related to program <B>style</B>  <B>cacm</B><B>programming</B> languages  natural languages  and mathematics some social aspects of <B>programming</B> between pure and applied mathematics is found similarly in <B>programming</B>  the development of natural languages toward flexion less  word-order based language types speaks for <B>programming</B> language design
57 Q0 1260 12 0.060973626 Lucene_47
 bcd core memory  <B>cacm</B> may  1965 marshall  s  w  nelson  <B>j</B>  a  wilenzick  <B>r</B>  m  ca650511 jb march 7least-squares analysis of resonance spectra on small computers the problem of analyzing data <B>from</B> a mossbauer effect experiment is discussed  by using the cut step procedure for convergence and by imposing physical constraints on the <B>functional</B> form of the calculation it is possible to make
57 Q0 1137 13 0.059370335 Lucene_47
a format language  <B>cacm</B> february  1964 <B>perlis</B>  a  <B>j</B>  ca640206 jb march 10  1978 4 15 am 1086 5 1137 1137 5 1137 1137 5 1137 1137 5 1137 1496 5 1137 1137 6 1137 1137 6 1137 1141 6 1137 404 6 1137 3184 6 1137
57 Q0 1715 14 0.05705257 Lucene_47
direct search  algorithm 178  e4   <B>cacm</B> july  1968 <B>de</B> vogelaere  <B>r</B>  function minimization  search  direct search 5.19 ca680714 jb february 22  1978 11 24 am 1715 5 1715 1715 5 1715 1715 5 1715 1815 5 1715 1715 6 1715
57 Q0 875 15 0.05705257 Lucene_47
incomplete elliptic integrals  algorithm 73  <B>cacm</B> april  1963 van <B>de</B> riet  <B>r</B>  p  ca630416 jb march 14  1978 12 06 pm 875 5 875 875 5 875 875 5 875
57 Q0 3078 16 0.055813625 Lucene_47
 analyzed here  <B>cacm</B> july  1978 chattergy  <B>r</B>  pooch  u  computer-aided <B>algebra</B>  symbol manipulation analytical solutions to markov processes <B>can</B> be considerably reduced by the application of symbol manipulation <B>programs</B>  since many physical systems <B>can</B> be modeled by markov and semi-markov processesanalysis of the availability of computer systems using computer- aided <B>algebra</B> analytical results
57 Q0 1914 17 0.055426683 Lucene_47
matrix scaling by integer <B>programming</B>  algorithm 348  f1   <B>cacm</B> april  1969 klimpel  <B>r</B>  <B>r</B>  integer <B>programming</B>  linear <B>algebra</B>  mathematical <B>programming</B>  matrix condition  matrix scaling 5.14 5.41 ca690403 jb february 17  1978 4 38 pm 1914 5 1914 1914 5 1914 1914 5 1914
57 Q0 3197 18 0.051853288 Lucene_47
structures of standards-processing organizations in the computer area in line with the <B>acm</B> s policy statement  comm  <B>acm</B> 5  nov  1962   547-549   the following organizational descriptions have been provided in order to describe standardization activities pertinent to computers and information processing  <B>cacm</B> june  1966 gorn  s  bemer  <B>r</B>  w  green  <B>j</B>  ca630626 es march 17  1982 10 10 am 3197 5
57 Q0 1977 19 0.051506367 Lucene_47
  this interactive system is described and several examples of <B>its</B> use are given  <B>cacm</B> november  1970 lafata  p  rosen  <B>j</B>  b  approximation  data fitting  <B>functional</B> approximation  linear <B>programming</B>  interactivean interactive display for approximation by linear <B>programming</B> an interactive program are determined by linear <B>programming</B> so as to minimize the error in either the l1 or l-infinity norm  auxiliary
57 Q0 2542 20 0.05141833 Lucene_47
 the performance information obtained <B>from</B> these routines as feedback  the problems which adversely affect performance are detected early enough so that they <B>can</B> be corrected without costly major reimplementation of the proposed system  <B>cacm</B> february  1973 graham  <B>r</B>  m  clancy  g  <B>j</B>  jr  devaney  d  b language which is used to describe the evolving system at all stages of <B>its</B> development  the source
57 Q0 2802 21 0.050562616 Lucene_47
 in creating correct structured <B>programs</B>  <B>cacm</B> january  1975 mills  h  d  structured <B>programming</B>  <B>algebra</B> of certain elementary equations defined in the <B>algebra</B> of functions  these solutions <B>can</B> be giventhe new math of computer <B>programming</B> structured <B>programming</B> has proved to be an important methodology for systematic program design and development  structured <B>programs</B> are identified as compound
57 Q0 1835 22 0.047139443 Lucene_47
the iitran <B>programming</B> language the iitran language  developed to be used by students  and <B>its</B>  a discussion of design principles to be followed in a student language is given  <B>cacm</B> october  1969 dewar  <B>r</B>  b  k  hochsprung  <B>r</B>  <B>r</B>  languages <B>programming</B> languages  student <B>programming</B> systems  language design  high school <B>programs</B>  college courses 1.51 1.52 4.12 4.22 ca691011 jb february 15  1978 1 54 pm
57 Q0 1132 23 0.04700855 Lucene_47
an extension to algol for manipulating formulae  <B>cacm</B> february  1964 <B>perlis</B>  a  <B>j</B>  iturriaga  <B>r</B>  ca640211 jb march 10  1978 3 45 am 1024 4 1132 1051 4 1132 1086 4 1132 1102 4 1132 1132 4 1132 1132 4 1132 1234 4 1132 1263 4 1132 1265 4 1132 1270 4 1132 1323 4 1132 1358 4 1132 1379 4 1132 1380 4 1132 1390 4 1132 1453 4 1132 1464 4 1132 1484 4 1132 1486 4 1132 1491 4 1132 1498 4 1132 1549 4 1132
57 Q0 3138 24 0.046117518 Lucene_47
 are mentioned  a simple means of constructing test cases and some sample computing times are presented  <B>cacm</B> april  1979 hanson  <B>r</B>  wisniewski  <B>j</B>  linear <B>programming</B>  numerical linear <B>algebra</B>  modified givens transformations  linear <B>programming</B> test cases 5 5.4 5.41 5.1 5.14 ca790404 dh may 21  1979 2 06 pma mathematical <B>programming</B> updating method using modified givens transformations and applied to lp
57 Q0 2219 25 0.044663884 Lucene_47
a policy-driven scheduler for a time-sharing system the service received by a process <B>from</B> a time-sharing operating system <B>can</B> be characterized by a resource count sum w i <B>r</B> ij   where <B>r</B> ij  is the number of units of service received by process i <B>from</B> resource i and w i  is the cost per unit of the service  each class of users <B>can</B> be characterized by a policy function which specifies the amount
57 Q0 209 26 0.044527754 Lucene_47
symbol manipulation by threaded lists <B>cacm</B> april  1960 <B>perlis</B>  a  <B>j</B>  thornton  c  ca600402 jb march 22  1978 1 56 pm 1050 5 209 1102 5 209 209 5 209 209 5 209 209 5 209 378 5 209 3008 5 209 731 5 209 798 5 209 849 6 209 106 6 209 196 6 209 208 6 209 209 6 209 209 6 209 209 6 209 209 6 209 209 6 209 209 6 209 210 6 209 210 6 209 367 6 209 406 6 209 483 6 209 627 6 209 627 6 209
57 Q0 406 27 0.044527754 Lucene_47
the use of threaded lists in constructing a combined algol and machine-like assembly processor <B>cacm</B> january  1961 evans jr   a  <B>perlis</B>  a  <B>j</B>  van zoeren  h  ca610108 jb march 17  1978 1 20 am 1051 5 406 1102 5 406 1549 5 406 406 5 406 406 5 406 406 5 406 106 6 406 196 6 406 1051 6 406 209 6 406 210 6 406 210 6 406 210 6 406 378 6 406 406 6 406 406 6 406 406 6 406 483 6 406 627 6 406 731 6 406 731
57 Q0 2113 28 0.044450782 Lucene_47
 grammar  provided it <B>can</B> be expressed by the <B>functional</B> classification of the items composing the input hierarchical structures  <B>cacm</B> february  1970 <B>von</B> glasersfeld  e  parsing  syntactic analysis times for large-scale matching procedures <B>can</B> be substantially reduced  the description makes frequent use of examples taken <B>from</B> the fully operational implementation of the parser in an experimental
57 Q0 1046 29 0.043814793 Lucene_47
a compiler-building system developed by brooker and morris in a number of <B>articles</B> published during the past two years  <B>r</B>  a  brooker and d  morris  joined by <B>j</B>  rohl in their most recent paper have presented a very interesting <B>programming</B> system that they have developed for the ferranti atlas details  and in some comments  it does not intentionally depart <B>from</B> or add to the material
57 Q0 2922 30 0.043611955 Lucene_47
two-level control structure for nondeterministic <B>programming</B> the basic ideas of nondeterministic <B>programming</B> are critically reconsidered to single out a proper attitude and <B>programming</B> <B>style</B> to the proposed <B>programming</B> <B>style</B>  a generative function is associated with each choice poin t  which and implemented according to these guidelines  <B>cacm</B> october  1977 montangero  c  pacini  g  turini  f
57 Q0 1469 31 0.042761225 Lucene_47
  lists of them  <B>functional</B> relations among them  that <B>can</B> be referred to in the language  the system easy to construct and understand  <B>cacm</B> march  1966 landin  p  <B>j</B>  ca660303 jb march 3  1978 2 05 pmthe next 700 <B>programming</B> languages a family of unimplemented computing languages is described the rules about the uses of user-coined names  and the conventions about characterizing <B>functional</B>
57 Q0 2097 32 0.042183585 Lucene_47
 of his research are beginning to become clear  <B>cacm</B> march  1970 fenichel  <B>r</B>  <B>r</B>  weizenbaum  <B>j</B>  yochelson  <B>j</B>  c  elementary <B>programming</B>  computer-assisted learning  uncl  teach 1.52 ca700301 jba program to teach <B>programming</B> the teach system was developed at mit to ease the cost and improve the results of elementary instruction in <B>programming</B>  to the student  teach offers loosely guided
57 Q0 1482 33 0.04116033 Lucene_47
 pointers  which are visualized as a family of  bugs   <B>cacm</B> february  1966 ledley  <B>r</B>  s  jacobsen  <B>j</B>  belsonbugsys  a <B>programming</B> system for picture processing-not for debugging bugsys is a picture processing and measuring system that depends upon a pictorial input to the computer s memory  bugsys <B>can</B> be used for many types of applications  in particular  the authors have used the system for the analysis
57 Q0 1029 34 0.04091906 Lucene_47
 in this process produces the desired function s derivative  the main feature of this approach is <B>its</B> simplicity  it <B>can</B> be used as a quick-reaction tool where the derivation of analytical derivatives is laborious and also as a debugging tool for <B>programs</B> which contain derivatives  <B>cacm</B> august  1964 variables  into a series of elementary <B>functional</B> steps  a library of elementary function subroutines
57 Q0 2707 35 0.04080222 Lucene_47
 combinatorial problem  <B>cacm</B> november  1975 bitner  <B>j</B>  <B>r</B>  reingold  e  m  backtrack  depth-first searchbacktrack <B>programming</B> techniques the purpose of this paper is twofold  first  a brief exposition of the general backtrack technique and <B>its</B> history is given  second  it is shown how the use of macros <B>can</B> considerably shorten the computation time in many cases  in particular  this technique has
57 Q0 2311 36 0.040520635 Lucene_47
 developer are examined  <B>cacm</B> july  1972 benjamin  <B>r</B>  i  computing milieu  management data processing  hardware systems  software systems  systems development process  <B>functional</B> systems  managementa generational perspective of information system development system development is categorized <B>from</B> a generational point of view that parallels the commonly described computing system generations
57 Q0 2181 37 0.040422097 Lucene_47
 committee is daniel teichroew  the university of michigan   <B>cacm</B> july  1971 mckenney  <B>j</B>  l  tonge  fthe state of computer oriented curricula in business schools 1970 the <B>acm</B> committee on computer for management  to provide the committee with material for <B>its</B> study of curricular needs  five regional were covered  curricula for the general manager  computer-related material in required and <B>functional</B>
57 Q0 1155 38 0.03883969 Lucene_47
 redundant facts have to be given to deducom  <B>cacm</B> december  1965 slagle  <B>j</B>  <B>r</B>  ca651214 jb march 6  1978 facts   3  deducom <B>can</B> write very simple <B>programs</B>  it is hoped that this ability is the forerunner answerable <B>from</B> the facts  a fact tells deducom either some specific information or a method of answering a general kind of question  some conclusions drawn in the article are   1  deducom <B>can</B> answer a wide
57 Q0 231 39 0.03824121 Lucene_47
a proposal for a set of publication standards for use by the <B>acm</B> <B>cacm</B> february  1960 kent  e  <B>r</B>  ca600201 jb march 22  1978 2 26 pm 231 5 231 231 5 231 231 5 231
57 Q0 689 40 0.038008712 Lucene_47
report of a visit to discuss common <B>programming</B> languages in czechoslovakia and poland  1963 <B>cacm</B> november  1963 gosden  <B>j</B>  a  merner  <B>j</B>  n  gay  <B>r</B>  e  jones  <B>j</B>  l  christopher  <B>j</B>  s  ca631103 jb march 13  1978 3 51 pm 1349 4 689 323 4 689 689 4 689 689 4 689 689 4 689 217 5 689 323 5 689 3197 5 689 689 5 689 689 5 689 689 5 689
57 Q0 2981 41 0.03755221 Lucene_47
 to the commonly used inductive assertion method  <B>its</B> major virtue is that it <B>can</B> often be used to prove a loop s correctness directly <B>from</B> <B>its</B> input-output specification without the use of an invariant april  1977 morris  <B>j</B>  h  jr  wegbreit  b  program verification  proving <B>programs</B> correct  induction and  in particular  it is shown that subgoal induction <B>can</B> be viewed as a specialized form of computation
57 Q0 1353 42 0.037502952 Lucene_47
techniques for automatic tolerance control in linear <B>programming</B> in this technical note  the numerical steps for the simplex method of linear <B>programming</B> are reviewed and the tolerances needed in the numerical procedure are defined  objective criteria are given for accomplishing the numerical steps of the method and the calculation of necessary tolerances  <B>cacm</B> november  1966 clasen  <B>r</B>  <B>j</B>
57 Q0 1002 43 0.037302073 Lucene_47
 and band-pass designs  <B>programs</B> are available for implementing both the synthesis of these filters  and their application on computers whose assemblers allow the definition of recursive macros  <B>cacm</B> september  1964 whittlesey  <B>j</B>  <B>r</B>  b  ca640909 jb march 9  1978 5 03 pm 1002 5 1002 1002 5 1002 1002 5 1002  the filters are constructed <B>from</B> a succession of readily analyzable components in a manner
57 Q0 1 44 0.03710646 Lucene_47
preliminary report-international algebraic language <B>cacm</B> december  1958 <B>perlis</B>  a  <B>j</B>  samelson k  ca581203 jb march 22  1978 8 28 pm 100 5 1 123 5 1 164 5 1 1 5 1 1 5 1 1 5 1 205 5 1 210 5 1 214 5 1 1982 5 1 398 5 1 642 5 1 669 5 1 1 6 1 1 6 1 1 6 1 1 6 1 1 6 1 1 6 1 1 6 1 1 6 1 1 6 1 1 6 1 165 6 1 196 6 1 196 6 1 1273 6 1 1883 6 1 324 6 1 43 6 1 53 6 1 91 6 1 410 6 1 3184 6 1
57 Q0 3099 45 0.03698097 Lucene_47
  integer <B>programming</B> codes  <B>cacm</B> may  1978 fleisher  <B>j</B>  meyer  <B>r</B>  integer <B>programming</B>  optimality <B>programming</B> problems  some of the sets of sufficient conditions presented <B>can</B> be thought of as generalizations of optimality conditions based on primal-dual complementarity in linear <B>programming</B>new sufficient optimality conditions for integer <B>programming</B> and their application the purpose
57 Q0 259 46 0.036920432 Lucene_47
permutation  algorithm 71  <B>cacm</B> november  1961 coveyou  <B>r</B>  <B>r</B>  sullivan  <B>j</B>  g  ca611109 jb march 15  1978 10 52 pm 259 5 259 259 5 259 259 5 259
57 Q0 1852 47 0.036782954 Lucene_47
 with <B>programming</B> languages whose implementation is based on this algorithm indicates that such a language <B>can</B> september  1969 orgass  <B>r</B>  <B>j</B>  waite  w  m  bootstrapping  macro processing  machine independencea base for a mobile <B>programming</B> system an algorithm for a macro processor which has been used as the base of an implementation  by bootstrapping  of processors for <B>programming</B> languages is described
57 Q0 2718 48 0.036732648 Lucene_47
 <B>programming</B> technology utilized by this program  although typically used to generate procedure  is here used to generate declaratives  <B>cacm</B> october  1975 gerritsen  <B>r</B>  network model of databases  dataa preliminary system for the design of dbtg data structures the <B>functional</B> approach to database  in some other way  an operational computer program is described which utilizers the <B>functional</B> approach
57 Q0 1443 49 0.036289997 Lucene_47
 the reconstructed tracks in a least squares manner so that they do intersect  <B>cacm</B> april  1966 royston  <B>r</B>  <B>j</B>  gregory  <B>j</B>  ca660406 jb march 3  1978 10 42 am 1443 5 1443 1443 5 1443 1443 5 1443 when the helical trajectories of two charged particles moving away <B>from</B> a common point in a magnetic field are reconstructed <B>from</B> measurements on the tracks  the reconstructed tracks are perturbed
57 Q0 1259 50 0.036004074 Lucene_47
 space or gain power  <B>cacm</B> may  1965 weldon  <B>r</B>  <B>j</B>  baker  <B>r</B>  l  ca650512 jb march 7  1978 1 05 pm 1259 5applications of binary numbers in computer routines a binary number <B>can</B> be thought of as an alternate form of expression for either a set of letters or a decimal number  there are then three equivalent expressions  easily translatable to one another  each having different characteristics  four
57 Q0 527 51 0.03576813 Lucene_47
 by the author in a previous publication  <B>cacm</B> august  1962 banerji  <B>r</B>  b  ca620801 jb march 17  1978 7 39the description list of concepts a concept is defined as a class of objects whose members <B>can</B> be distinguished by processing <B>its</B> properties  property is defined to mean a partition of the set of all definition of a concept and <B>its</B> description list structure  like the definition  the description list
57 Q0 228 52 0.035416305 Lucene_47
quadi  algorithm 1  <B>cacm</B> february  1960 herbold  <B>r</B>  <B>j</B>  ca600204 jb march 22  1978 2 21 pm 228 5 228 228 5 228 228 5 228
57 Q0 344 53 0.035416305 Lucene_47
ber or bei function  algorithm 57  <B>cacm</B> april  1961 herndon  <B>j</B>  <B>r</B>  ca610424 jb march 16  1978 11 42 pm 344 5 344 344 5 344 344 5 344
57 Q0 349 54 0.035416305 Lucene_47
a set of test matrices <B>cacm</B> april  1961 herndon  <B>j</B>  <B>r</B>  ca610419 jb march 16  1978 11 47 pm 349 5 349 349 5 349 349 5 349
57 Q0 352 55 0.035416305 Lucene_47
spherical neumant function  algorithm 49  <B>cacm</B> april  1961 herndon  <B>j</B>  <B>r</B>  ca610416 jb march 16  1978 11 51 pm 352 5 352 352 5 352 352 5 352
57 Q0 353 56 0.035416305 Lucene_47
logarithm of a complex number  algorithm 48  <B>cacm</B> april  1961 herndon  <B>j</B>  <B>r</B>  ca610415 jb march 16  1978 11 53 pm 353 5 353 353 5 353 353 5 353
57 Q0 355 57 0.035416305 Lucene_47
exponential of a complex number  algorithm 46  <B>cacm</B> april  1961 herndon  <B>j</B>  <B>r</B>  ca610413 jb march 16  1978 11 59 pm 355 5 355 355 5 355 355 5 355
57 Q0 525 58 0.035416305 Lucene_47
a computer technique for handling analysis of variance <B>cacm</B> august  1962 howell  <B>j</B>  <B>r</B>  ca620803 jb march 17  1978 7 32 pm 525 5 525 525 5 525 525 5 525
57 Q0 611 59 0.035416305 Lucene_47
permutation generator  algorithm 87  <B>cacm</B> april  1962 howell  <B>j</B>  <B>r</B>  ca620406 jb march 20  1978 2 20 pm 611 5 611 611 5 611 611 5 611
57 Q0 910 60 0.035416305 Lucene_47
selective instruction trap for the 7090 <B>cacm</B> march  1963 mayer  <B>r</B>  <B>j</B>  ca630311 jb march 14  1978 1 41 pm 910 5 910 910 5 910 910 5 910
57 Q0 1196 61 0.0353522 Lucene_47
 for processing many problems  this is true <B>from</B> the point of view of ease of <B>programming</B>  ease of debugging  and minimization of computer time  a number of examples are discussed in detail  <B>cacm</B> september  1965 klopfenstein  <B>r</B>  w  ca650910 jb march 6  1978 7 16 pm 1196 5 1196 1196 5 1196 1196 5 1196 to digital computer processing <B>can</B> be formulated in terms of the numerical solution of systems
57 Q0 980 62 0.035046592 Lucene_47
multiple-precision arithmetic and the exact calculation of the 3-<B>j</B>  6-<B>j</B> and 9-<B>j</B> symbols described in this paper is a system of general-purpose multiple-precision fixed-point routines and their use in subroutines which calculate exactly the quantum-mechanical 3-<B>j</B>  6-<B>j</B> and 9-<B>j</B> symbols of large arguments  <B>cacm</B> november  1964 maer  <B>r</B>  m  redlich  m  g  ca641103 jb march 9  1978 4 13 pm 980 5 980 980
57 Q0 2279 63 0.034421977 Lucene_47
a controller for a braille terminal <B>cacm</B> september  1972 rubinstein  <B>r</B>  feldman  <B>j</B>  blind <B>programming</B> aid  braille  braille character set  braille character translation  braille computer communication  braille computer terminal  braille terminal  tactile computer communication  tactile terminal 1.59 4.41 6.35 ca720911 jb january 27  1978 4 14 pm 2279 4 2279 1740 5 2279 2279 5 2279 2279 5 2279
57 Q0 2312 64 0.03437554 Lucene_47
on the present and future of scientific computation a pessimistic forecast is given of what <B>can</B> be expected to happen in the application of computers to the physical sciences  <B>cacm</B> july  1972 rice  <B>j</B>  <B>r</B>  scientific computation 3.1 5.0 ca720716 jb january 30  1978 11 24 am 2312 5 2312 2312 5 2312 2312 5 2312
57 Q0 1458 65 0.03431638 Lucene_47
 and <B>its</B> effect on <B>programming</B> are discussed  <B>cacm</B> march  1966 schwartz  <B>j</B>  i  ca660314 jb march 3online <B>programming</B> when the transition has been made <B>from</B> off line to online <B>programming</B> necessary corresponding changes in the processes related to producing and checking out <B>programs</B>  in the main  it it not the <B>programming</B> language itself which must be changed to provide a facility
57 Q0 905 66 0.034084838 Lucene_47
<B>algebra</B> of sets  algorithm 156  <B>cacm</B> march  1963 mifsud  c  <B>j</B>  ca630315 jb march 14  1978 1 32 pm 905 5 905 905 5 905 905 5 905
57 Q0 3199 67 0.034037825 Lucene_47
 to all expressions and the use of a standard ordering procedure  <B>cacm</B> august  1966 gotlieb  c  c  novak  <B>r</B>  <B>j</B>  ca660813 es march 17  1982 10 10 am 1396 5 3199 3199 5 3199 3199 5 3199 3199 5 3199 964 6 of single <B>letter</B> variables  variable exponents  and of finding the highest common factor of two
57 Q0 1402 68 0.033989634 Lucene_47
partial step integration a partial step integration equation is derived for use with the adams or adams-bashforth method of integration of differential equations  this method of obtaining <B>functional</B> to the integration and does not require storing of additional information as in interpolation methods  <B>cacm</B> july  1966 glauz  <B>r</B>  d  ca660710 jb march 2  1978 9 08 pm 1402 5 1402 1402 5 1402 1402 5 1402
57 Q0 2148 69 0.0339422 Lucene_47
  ultimately <B>programs</B>  <B>from</B> a minimum set of primitives with a few fundamental recursive rules and simple introduction to both algol 68 and <B>its</B> orthogonal design  <B>cacm</B> november  1971 branquart  p  lewi  <B>j</B>  sintzoff  m  wodon  p  l  <B>programming</B> primitives  <B>programming</B> languages  algol  semanticsthe composition of semantics in algol 68 the main features of algol 68 are explained <B>from</B>
57 Q0 1278 70 0.03390122 Lucene_47
 in a recent article in the communications of the <B>acm</B>  <B>r</B>  wengert suggested a technique for machine and then evaluated numerically  wengert s method appears very attractive <B>from</B> the <B>programming</B> viewpoint equations which might not otherwise be undertaken  <B>cacm</B> april  1965 bellman  <B>r</B>  e  kagiwada  h  kalaba  <B>r</B>  e  ca650413 jb march 7  1978 3 39 pm 1028 4 1278 1216 4 1278 1216 4 1278 1278 4 1278 1278 4
57 Q0 1170 71 0.03361921 Lucene_47
 before conclusions about <B>its</B> application to ordinary english <B>can</B> be stored  the system combination <B>from</B> experience with text which had been analyzed  the characteristics used to form word classes are the depth in the dependency tree of each word  the direction of <B>its</B> governor and the same features for each of <B>its</B> immediate neighbors  syntactic rules of combination show the relation of a word
57 Q0 2971 72 0.03339401 Lucene_47
 and <B>can</B> be learned or implemented without the following subsets  <B>cacm</B> may  1977 holt  <B>r</B>  c  wortman  d  b  barnard  d  t  cordy  <B>j</B>  <B>r</B>  programmer education  universities  community colleges  highsp k  a system for teaching computer <B>programming</B> sp k is a compatible subset of the pl i language that has been designed for teaching <B>programming</B>  the features of the sp k language were chosen
57 Q0 3154 73 0.033172663 Lucene_47
 july  1979 kowalski  <B>r</B>  control language  logic <B>programming</B>  nonprocedural language  <B>programming</B>algorithm   logic   control an algorithm <B>can</B> be regarded as consisting of a logic component  which determines the meaning of the algorithm whereas the control component only affects <B>its</B> efficiency  the efficiency of an algorithm <B>can</B> often by improving the control component without changing the logic
57 Q0 1280 74 0.03315694 Lucene_47
 on the solution itself are present  <B>cacm</B> april  1965 bellman  <B>r</B>  e  buell  <B>j</B>  d  kalaba  <B>r</B>  e  ca650411 jb march the effects which these variable lags <B>can</B> cause  shown here is a method of reducing some differential-difference equations to ordinary differential equations which <B>can</B> then be studied numerically
57 Q0 3103 75 0.033009026 Lucene_47
 are also reviewed  <B>cacm</B> may  1978 low  <B>j</B>  abstract data types  automatic <B>programming</B>  data of abstraction has proved to be very helpful in constructing and maintaining <B>programs</B>  when <B>programs</B> are designed with abstract data types such as sets and lists  programmer time <B>can</B> be saved by automating the process of filling in low-level implementation details  in the past  <B>programming</B> systems have provided
57 Q0 1677 76 0.032986335 Lucene_47
 arrangement is discussed with <B>its</B> realized advantages or <B>programming</B> systems  simplicity of system composition during execution  means of linkage between <B>programs</B> and <B>from</B> <B>programs</B> to data on such extensions are presented  <B>cacm</B> november  1968 jodeit  <B>j</B>  g  storage allocation  storage organization  storagestorage organization in <B>programming</B> systems the system of program and data representation that has
57 Q0 2284 77 0.032767195 Lucene_47
solution of the matrix equation ax xb c  f4   algorithm a432  <B>cacm</B> september  1972 bartels  <B>r</B>  h  stewart  g  w  linear <B>algebra</B>  matrices  linear equations 5.14 ca720906 jb january 27  1978 4 31 pm 2284 5 2284 2284 5 2284 2284 5 2284
57 Q0 2470 78 0.03268275 Lucene_47
  the abstractions used informally in the body of the paper  <B>cacm</B> august  1973 maclennan  b  <B>j</B>  semanticsfen-an axiomatic basis for program semantics a formal system is presented which <B>abstracts</B> theory  or <B>its</B> derivatives  for the concise and accurate description of program semantics  it is shown how the system <B>can</B> be used to build composite data types out of simper ones with the operations
57 Q0 3133 79 0.03240772 Lucene_47
 and path-following strategy for guiding the search for a proof  <B>cacm</B> march  1979 deliyanni  a  kowalski  <B>r</B>  logic  semantic networks  theorem-proving  indexing  resolution  deduction  logic <B>programming</B>logic and semantic networks an extended form of semantic network is defined  which <B>can</B> be regarded as a syntactic variant of the clausal form of logic  by virtue of <B>its</B> relationship with logic
57 Q0 1891 80 0.032143865 Lucene_47
 and <B>can</B> be viewed by a large group of people at the same time  <B>cacm</B> june  1969 ophir  d  shepherd  b  <B>j</B>  spinrad  <B>r</B>  <B>j</B>  computer graphics  three-dimensional display  swept raster display  interactive the projected video images of an object  viewed <B>from</B> two separate points  the resulting video maps
57 Q0 2834 81 0.03164233 Lucene_47
  the compositions of integers  and the permutations of a multiset are discussed  <B>cacm</B> september  1976 bitner  <B>j</B>  <B>r</B>  ehrlich  g  reingold  e  m  gray code  combinations  subsets  compositions  combinatorialefficient generation of the binary reflected gray code and <B>its</B> applications algorithms algorithms are efficient in that the time required to generate the next element <B>from</B> the current one
57 Q0 2574 82 0.031640947 Lucene_47
multiple exists <B>from</B> a loop using neither go to nor labels <B>cacm</B> november  1974 evans  <B>r</B>  v  goto free <B>programming</B>  control structures  multiple exists <B>from</B> loops  exit statement 4.20 4.22 ca741110 jb january 16  1978 10 07 am 2574 4 2574 2709 4 2574 2477 5 2574 2574 5 2574 2574 5 2574 2574 5 2574
57 Q0 1766 83 0.03146992 Lucene_47
 are given  <B>cacm</B> april  1968 bellman  <B>r</B>  e  kagiwada  h  h  kalaba  <B>r</B>  e  vasudenvan  <B>r</B>  quasilinearizationquasilinearization and the estimation of differential operators <B>from</B> eigenvalues given a linear ordinary differential operator containing several unknown constants and a number of <B>its</B> eigenvalues  the values of the unknown constants are estimated  a precise formulation is provided  and an effective
57 Q0 2324 84 0.031425893 Lucene_47
 techniques are best for specific problems  <B>cacm</B> july  1972 shanno  d  f  weil  <B>r</B>  l  integer <B>programming</B>management science  a view <B>from</B> nonlinear <B>programming</B> a brief history of integer and continuous nonlinear <B>programming</B> is presented as well as the current obstacles to practical use of these mathematical <B>programming</B> techniques  it is forecast that the useful contributions to nonlinear <B>programming</B>
57 Q0 3024 85 0.031199852 Lucene_47
 months of effort to develop fortran <B>programs</B> for other contemporary computers is protected  <B>cacm</B> januarythe cray-1 computer system this paper describes the cray-1  discusses the evolution of <B>its</B> architecture  and gives an account of some of the problems that were overcome during <B>its</B> manufacture  a computer capable of processing <B>from</B> 20 to 60 million floating point operations per second   1
57 Q0 1834 86 0.031107308 Lucene_47
 <B>from</B> a pursuance of these topics  <B>cacm</B> october  1969 hoare  c  a  <B>r</B>  axiomatic method  theory of <B>programming</B>  proofs of <B>programs</B>  formal language definition  <B>programming</B> language design  machinean axiomatic basis for computer <B>programming</B> in this paper an attempt is made to explore the logical foundations of computer <B>programming</B> by use of techniques which were first applied in the study
57 Q0 942 87 0.03108506 Lucene_47
 of this note is to describe these subroutines  but since the question of general statistical <B>programs</B> is topical  1   we include some general remarks  <B>cacm</B> january  1963 healy  m  <B>j</B>  <B>r</B>  bogert  b  p numerical processes that were required could be built up almost completely <B>from</B> a small number of basic
57 Q0 2903 88 0.031017367 Lucene_47
 <B>programs</B> with a very efficient running time  in particular  it is shown how the fast linear pattern matching algorithm of knuth  morris  and pratt <B>can</B> be derived in a few steps <B>from</B> a simple nonlinear stack algorithm  <B>cacm</B> november  1977 bird  <B>r</B>  s  program transformation  optimization of <B>programs</B>improving <B>programs</B> by the introduction of recursion a new technique of program transformation
57 Q0 2517 89 0.03096745 Lucene_47
 and the single-rule  or action set  convention in decision tale usage  <B>cacm</B> may  1973 king  p  <B>j</B>  h  johnson  <B>r</B>  g  decision tables  systems analysis  <B>programming</B> 3.50 3.59 4.19 4.29 4.49 ca730503 jbsome comments on the use of ambiguous decision tables and their conversion to computer <B>programs</B> this paper comments upon recently published work on decision table translation using methods similar
57 Q0 2538 90 0.030917179 Lucene_47
a computer science course program for small colleges the <B>acm</B> subcommittee on small college <B>programs</B> advanced work  and an extensive library list is included  <B>cacm</B> march  1973 austing  <B>r</B>  h  engel  g  l  computer science education  course proposals  small colleges  <B>programming</B> course  social science <B>programs</B> at such schools  this report  authorized by both the subcommittee and  cccs   supplies
57 Q0 1942 91 0.030822959 Lucene_47
finding a solution of n <B>functional</B> equations in n unknowns  algorithm 314  c5   <B>cacm</B> january  1969 vandergraft  <B>j</B>  mesztenyi  c  <B>functional</B> equations  interpolation  nonlinear equations  secant method 5.13 5.15 ca690107 jb february 20  1978 11 50 am 1942 5 1942 1942 5 1942 1942 5 1942
57 Q0 3027 92 0.030472966 Lucene_47
  which includes a number of features conducive to the production of efficient compiled code <B>from</B> high-level language source <B>programs</B>  the design of the processor is then traced <B>from</B> the initial ideas  an overall view of the complete mu5 complex is presented together with a brief indication of <B>its</B> performance  <B>cacm</B> january  1978 ibbett  <B>r</B>  capon  p  architecture  naming  virtual storage  instruction
57 Q0 616 93 0.030263595 Lucene_47
  on a mathematical model called  an information <B>algebra</B>  developed primarily by <B>r</B>  bosak  it is hoped that this report will be read  a  with avid interest by <B>programming</B> language designers and implementorsan information <B>algebra</B> - phase i report-language structure group of the codasyl development  and <B>can</B> be addressed to any of the members of the language structure group  robert bosak  system
57 Q0 1183 94 0.030240213 Lucene_47
a note on the use of a digital computer for doing tedious <B>algebra</B> and <B>programming</B> a special purpose compiler was written with fortran ii language and made possible the writing of very long <B>programs</B> by the computer  the procedure is based on a straight-forward use of format statements for generating machine-written <B>programs</B>  <B>cacm</B> october  1965 veronis  g  ca651012 jb march 6  1978 6 31 pm 1183 5
57 Q0 1931 95 0.030178143 Lucene_47
interval arithmetic determinant evaluation and <B>its</B> use in testing for a chebyshev system two recent papers  one by hansen and one by hansen and <B>r</B>  <B>r</B>  smith  have shown how interval arithmetic  i   <B>can</B> be used effectively to bound errors in matrix computations  in the present paper a method proposed by hasen and <B>r</B>  <B>r</B>  smith is compared with straightforward use of i  in determinant evaluation
57 Q0 1658 96 0.0299003 Lucene_47
  <B>cacm</B> december  1968 gue  <B>r</B>  l  liggett  <B>j</B>  c  cain  k  c  operations research  optimization theory  integer <B>programming</B>  zero-one variables  algorithms 5.39 5.41 ca681208 jb february 21  1978 1 31 pmanalysis of algorithms for the zero-one <B>programming</B> problem this paper is concerned with a review and examination of several existing algorithms for the zero-one <B>programming</B> problem  computational
57 Q0 3130 97 0.029747937 Lucene_47
  and articulation are presented  <B>cacm</B> march  1979 austing  <B>r</B>  barnes  b  bonnette  d  engel  g  stokes  g  computer of the curriculum committee on computer science  c3s  of the association for computing machinery  <B>acm</B>   the core curriculum common to all computer science undergraduate <B>programs</B> is presented in terms undergraduate degree <B>programs</B>  service courses  continuing education 1.52 ca790301 dh april 12  1979 11 02
57 Q0 437 98 0.029685168 Lucene_47
compiling matrix operations <B>cacm</B> december  1962 galler  b  a  <B>perlis</B>  a  <B>j</B>  ca621202 jb march 17  1978 5 17 pm 249 4 437 254 4 437 272 4 437 1102 4 437 1109 4 437 1140 4 437 1188 4 437 1306 4 437 1464 4 437 1491 4 437 1767 4 437 1781 4 437 1787 4 437 1949 4 437 321 4 437 2059 4 437 2126 4 437 435 4 437 437 4 437 463 4 437 483 4 437 491 4 437 2732 4 437 560 4 437 583 4 437 3073 4 437 627 4 437 631
57 Q0 2624 99 0.02951785 Lucene_47
 conditions to test whether such an architecture <B>can</B> support virtual machines  <B>cacm</B> july  1974 popek  g  <B>j</B>  goldberg  <B>r</B>  p  operating system  third generation architecture  sensitive instruction  formal 67  <B>from</B> previous empirical studies  it is known that certain third generation computer systems  e g
57 Q0 1017 100 0.029513586 Lucene_47
comments on bit-sequencing of the ascii in serial-by-bit data transmission <B>cacm</B> august  1964 bemer  <B>r</B>  w  booth  <B>j</B>  ca640813 jb march 9  1978 6 45 pm 1017 5 1017 1017 5 1017 1017 5 1017
*************Query 58*************************

58 Q0 1709 1 0.14505415 Lucene_47
 precision  cacm august  1968 breaux  h  j  multiple <B>linear</B> <B>regression</B>  <B>statistical</B> recurrence formulas  correlation  <B>linear</B> <B>statistical</B> <B>models</B>  <B>statistical</B> computer programs  curve fitting 4.0 4.40 5.0a modification of efroymson <B>s</B> technique for stepwise <B>regression</B> analysis the computational technique conventionally used for stepwise multiple <B>linear</B> <B>regression</B> requires the storage of an n x n
58 Q0 1816 2 0.13913096 Lucene_47
<B>generalized</B> <B>least</B> <B>squares</B> fit by orthogonal polynomials  algorithm 296  e2   cacm november  1969 watson  w  <B>t</B>  <B>least</B> <B>squares</B>  curve fitting  orthogonal polynomials  three-term recurrence  polynomial <B>regression</B>  approximation  forsythe <B>s</B> method 5.13 5.5 ca691114 jb february 15  1978 12 06 pm 1816 4 1816 125 5 1816 1816 5 1816 1816 5 1816 1816 5 1816
58 Q0 1474 3 0.13549936 Lucene_47
<B>tests</B> of probabilistic <B>models</B> for propagation of roundoff errors in any prolonged computation it is generally assumed that the accumulated effect of roundoff errors is in some sense <B>statistical</B>  the purpose of this paper is to give precise descriptions of certain probabilistic <B>models</B> for roundoff  it is concluded that the <B>models</B> are in general very good  discrepancies are both rare and mild  the <B>test</B>
58 Q0 2634 4 0.12518016 Lucene_47
an evaluation of <B>statistical</B> software in the social sciences several hundred college and university computer installations now offer various types of <B>statistical</B> <B>packages</B> for general use  among those with a basis for selection and use  <B>tests</B> were made for each of these systems  and the results are summarized as to cost and performance  cacm june  1974 slysz  w  d  <B>statistical</B> computation  <B>statistical</B>
58 Q0 1344 5 0.12086255 Lucene_47
<B>statistical</B> computations based upon algebraically specified <B>models</B> based upon a machine-readable <B>statistical</B> model and related symbolic specifications  an efficient method of performing calculations for <B>statistical</B> <B>models</B> of a balanced complete nature is presented  fixes  mixed  and random analysis of variance <B>models</B> are considered  a procedure for obtaining variance <B>components</B> and calculated f
58 Q0 2062 6 0.102643654 Lucene_47
 to achieve given levels of <B>statistical</B> precision is calculated  also the cost of computer time <B>using</B> procedures versus sequential sampling procedures are compared  cacm may  1970 sasser  w  e  burdick  d  <B>s</B>  graham  d  a  naylor  <B>t</B>  h  simulation  inventory <B>models</B>  sequential sampling  <B>models</B>  experimental <B>design</B> 3.31 3.50 3.54 5.5 ca700504 jb february 13  1978 2 11 pm 2062 5 2062 2062 5 2062 2062 5 2062
58 Q0 3138 7 0.09629764 Lucene_47
  or row  analogous to adding an additional row of data in a <B>linear</B> <B>least</B> <B>squares</B> problem  a column  or row  is dropped by a formal scaling with the imaginary unit  -1  followed by <B>least</B> <B>squares</B> transformations  <B>linear</B> programming <B>test</B> cases 5 5.4 5.41 5.1 5.14 ca790404 dh may 21  1979 2 06 pma mathematical programming updating method <B>using</B> modified givens transformations and applied to lp
58 Q0 2849 8 0.09069716 Lucene_47
 stations <B>using</B> controlled <B>statistical</B> arbitration  switching of packets to their destinations on the ether is distributed among the receiving stations <B>using</B> packet address recognition  <B>design</B> principles broadcast communication <B>system</B> for carrying digital data packets among locally distributed computing stations  the packet transport mechanism provided by ethernet has been used to build systems which <B>can</B>
58 Q0 1698 9 0.08766523 Lucene_47
  answers to these and similar questions are needed in certain aspects of operating <B>system</B> <B>design</B>  cacm september  1968 denning  p  j  <B>statistical</B> <B>models</B> for input-output  operating <B>system</B> <B>design</B>a <B>statistical</B> model for console behavior in multiuser computers the ability of a computer <B>system</B>  but the entire collection of virtual consoles <B>models</B> the collection of actual consoles  <B>using</B>
58 Q0 1695 10 0.08758639 Lucene_47
 neurophysiological research so that the systematic development of neural <B>models</B> <B>can</B> be coordinatedplexus-an on-line <B>system</B> for modeling neural networks a description is presented of plexus  a <B>system</B> which enables a user to construct and specify a neural network  to analyze the output data produced by the network  and to store and retrieve networks and data from a library  the <B>system</B>  operated
58 Q0 2395 11 0.08423042 Lucene_47
quadratic programming for nonlinear <B>regression</B> a quadratic programming algorithm is described for use with the magnified diagonal method of nonlinear <B>regression</B> with <B>linear</B> constraints  the <B>regression</B> method is published in jacm  july 1970  cacm january  1972 shrager  r  i  nonlinear equations  nonlinear <B>regression</B>  nonlinear programming  quadratic programming  <B>least</B> <B>squares</B>  inequality
58 Q0 1637 12 0.08274871 Lucene_47
problems in the <B>statistical</B> analysis of simulation experiments  the comparison of means and the length of sample records research is continued into <B>statistical</B> analysis of simulation experiments and independent observations are described  a way to <B>test</B> the difference of the mean of two of the generating process  and estimation of the quantities of <B>interest</B> is described  the results expand
58 Q0 2604 13 0.0825444 Lucene_47
an interactive graphic display for region partitioning by <B>linear</B> programming <B>using</B> <B>linear</B> programming  an interactive graphic display <B>system</B> has been implemented to solve the region <B>design</B> problem september  1974 cheung  <B>t</B>  interactive graphic display  region partitioning  area specification  <B>linear</B>  a user <B>can</B> easily obtain different partitionings by specifying and modifying the boundary
58 Q0 2145 14 0.08195256 Lucene_47
 <B>design</B> of printed circuit boards  help helps automate a <B>design</B> stage one step closer to production than logical <B>design</B>  it <B>can</B> be used to <B>design</B> wiring patterns of two-layer circuit boards on which ics in dual-in-line <B>packages</B> as well as discrete <B>components</B> such as transistors and resistors have been <B>design</B> of printed circuit board  maze-running  lee <B>s</B> algorithm 3.24 3.66 4.9 6.9 ca711104 jb february
58 Q0 1398 15 0.07916313 Lucene_47
 are derived from information theory  cacm july  1966 sterling  <B>t</B>  gleser  m  haberman  <B>s</B>  pollackrobot data screening  a solution to <B>multivariate</B> type problems in the biological and social sciences a new approach is outlined toward the solution of the type of <B>multivariate</B> problem that is found  rather than a  <B>statistical</B>  criterion by which variables are grouped into a deterministic model
58 Q0 1609 16 0.077746905 Lucene_47
 of these groups  such that each course is <B>included</B> at <B>least</B> once  are selected  by removing multiple occurrences of courses and then scheduling each group at a different period a minimal schedule <B>can</B> number of examination periods and satisfies the constraint that no <B>student</B> be required to take two examinations simultaneously <B>can</B> be found in two steps  first  course which may have their examinations
58 Q0 1691 17 0.07709101 Lucene_47
 is then discussed  since computer word size <B>can</B> affect a generator <B>s</B> <B>statistical</B> behavior the older to d  h  lehmer  has passed the usual <B>statistical</B> <B>tests</B> for random number generators  it is here empirically shown that generators of this type <B>can</B> produce sequences whose autocorrelation functions up trinomials modulo two  congruential generators  prime numbers  <B>statistical</B> <B>tests</B> for randomness  ibm 360  32
58 Q0 1206 18 0.07670832 Lucene_47
 to discard wrong information and to compute mean values of the parameters and their mpe <B>s</B> in terms of the irf  data compatibility <B>tests</B> with any number of different equations <B>can</B> be made quickly  otherwise intractable problems are easily solved  and the <B>design</B> of many experiments is greatly  inadequacies in the <B>statistical</B> and graphical methods of curve fitting are noted  cacm august  1965
58 Q0 2993 19 0.075548895 Lucene_47
 of <B>linear</B> programming problems which are ill-conditioned in some cases  in attempting to solve these <B>linear</B> programming <B>models</B>  <B>using</B> ibm <B>s</B> mps package  instances of cycling were encountered  smalloccurrences of cycling and other phenomena arising in a class of <B>linear</B> programming <B>models</B>  <B>linear</B> programming  cycling  queueing <B>models</B> 5.41 5.9 ca770208 jb december 30  1977 2 11 am 2993 5
58 Q0 1171 20 0.07419651 Lucene_47
a comparison of the primal-simplex and primal-dual <B>algorithms</B> for <B>linear</B> programming a <B>statistical</B> comparison of the primal-dual and the more commonly used primal-simplex algorithm for solving <B>linear</B> on randomly generated problems  it has also been found  via a <B>regression</B> analysis  that the relevant parameters in determining the difference in the number of iterations between the <B>algorithms</B> is not only
58 Q0 1631 21 0.0683482 Lucene_47
 generator used in the general purpose systems simulator  gpss  were subjected to <B>statistical</B> <B>tests</B>  the <B>tests</B> are described and the results of the <B>tests</B> are presented  these particular <B>tests</B> indicate that the numbers are satisfactory  it is recommended that suitable <B>tests</B> be applied to all random numbers used in computer simulations  cacm february  1967 gorenstein  <B>s</B>  ca670211 jb february 28  1978 2 10
58 Q0 2670 22 0.06828023 Lucene_47
efficient implementation of a variable projection algorithm for nonlinear <B>least</B> <B>squares</B> problems nonlinear <B>least</B> <B>squares</B> frequently arise for which the variables to be solved for <B>can</B> be separated into a <B>linear</B> and a nonlinear part  a variable projection algorithm has been developed recently which appeared earlier  cacm march  1974 krogh  f  <B>t</B>  nonlinear <B>least</B> <B>squares</B>  parameter estimation
58 Q0 3166 23 0.066004924 Lucene_47
 are the other two  cacm september  1979 chan  <B>t</B>  lewis  j  mean  standard deviation  <B>least</B> <B>squares</B>computing standard deviations  accuracy four <B>algorithms</B> for the numerical computation of the standard deviation of  unweighted  sampled data are analyzed  two of the <B>algorithms</B> are well-known in the <B>statistical</B> and computational literature  the other two are new <B>algorithms</B> specifically intended
58 Q0 2098 24 0.06389234 Lucene_47
<B>t</B>-<B>test</B> probabilities  algorithm 321   <B>student</B> <B>s</B> <B>t</B>-distribution  algorithm 344  cacm february  1970 hill  g  w  loughhead  m  <B>t</B>-<B>test</B>  <B>student</B> <B>s</B> <B>t</B>-statistic  distribution function  approximation 5.12 5.5 ca700217 jb february 14  1978 8 45 am 2098 5 2098 2098 5 2098 2098 5 2098
58 Q0 1946 25 0.061300434 Lucene_47
computing polynomial resultants  bezout <B>s</B> determinant vs  collins  reduced p  algorithm <B>algorithms</B> to bezout <B>s</B> determinant and collins  reduced polynomial remainder sequence  p r <B>s</B>   algorithm  detailed <B>tests</B> performed on sample problems conclusively show that bezout <B>s</B> determinant is superior in all respects except for <B>univariate</B> polynomials  in which case collins  reduced p r <B>s</B>  algorithm is somewhat
58 Q0 3049 26 0.061020296 Lucene_47
 batch environment graphical <B>system</B> containing <B>components</B> for handling graphical data files the conceptual view of graphics leading to the <B>design</B> of sembegs and outlines the major <B>components</B> of the <B>system</B>  the <B>design</B> of sembegs is founded upon the basic assumption that the true aim of computer graphics and output functional <B>capabilities</B>  sembegs is built around a basic graphical data management <B>system</B>
58 Q0 2970 27 0.059322312 Lucene_47
 to be obtained with specified <B>statistical</B> accuracy  this method includes a <B>test</B> to check the normality assumption on which the sequential procedure relies  the paper illustrates the method <B>using</B> the empty and idle state as the regenerative state  a second example then describes how <B>using</B> the most in a preliminary simulation run  the paper also described how a variance reduction method due to page  9  <B>can</B>
58 Q0 2999 28 0.056369055 Lucene_47
 on the development of general-purpose computer-based <B>statistical</B> and data processing <B>capabilities</B> for handling developments in array processing <B>capabilities</B> at the world bank  in particular  the <B>system</B> identified as wraps world bank retrieval and array processing <B>system</B>   cacm february  1977 muller  m  e  array processing  table processing  <B>statistical</B> analysis  data retrieval  data processing  syntax for data
58 Q0 2216 29 0.055966374 Lucene_47
 of sorting <B>algorithms</B> discussed by hoare  singleton  and van emden  the solution to the integral equation indicates that <B>using</B> more advanced <B>algorithms</B> in the family makes only minor reductions in the expected sorting effort  but substantially reduces the variance in sorting effort  <B>statistical</B> <B>tests</B> from the generating function  the empirical <B>tests</B>  as well as the analytical results  are in agreement
58 Q0 1420 30 0.055811834 Lucene_47
a new uniform pseudorandom number generator a new multiplicative congruential pseudorandom number generator is discussed  in which the modulus is the largest prime within accumulator capacity and the multiplier is a primitive root of that prime  this generator passes the usual <B>statistical</B> <B>tests</B> and in addition the <B>least</B> significant bits appear to be as random as the most significant bits
58 Q0 2225 31 0.055129424 Lucene_47
circular integer partitioning  a1   algorithm 403  cacm january  1971 coleman  m  w  taylor  m  <B>s</B>  partitions  combinatorics  <B>statistical</B> <B>design</B> of experiments 5.39 5.5 ca710109 jb february 8  1978 10 27 am 2225 5 2225 2225 5 2225 2225 5 2225
58 Q0 1252 32 0.054795597 Lucene_47
symbolic notations for <B>statistical</B> tables and an approach towards automatic <B>system</B> <B>design</B> the preparation of <B>statistical</B> tables is an important function of the data processing systems of some organizations  and a symbolic notation for the description of tables has been shown to be a useful aid and time-consuming part of <B>system</B> <B>design</B> and programming in many computer applications  one notation
58 Q0 1433 33 0.05374912 Lucene_47
a note on <B>linear</B> programming algorithm <B>design</B>  a combinatorial problem as <B>linear</B> programming <B>models</B> grow bigger and bigger in size  much actual data that must be memorized is often put on magnetic timeo cut down this expense  an ever increasing effort is made to <B>design</B> more efficient <B>algorithms</B> of repetitions is found  asymptotic formulas are given for the moments <B>using</B> a result from a paper of <B>s</B>
58 Q0 3150 34 0.053729407 Lucene_47
 of a machine <B>s</B> order code  higher level programming systems <B>can</B> provide the means to understand and manipulate complex systems and <B>components</B>  in order to develop such systems  we need to shift our attention away from the detailed specification of <B>algorithms</B>  towards the description of the properties of the <B>packages</B> and objects with which we build  this paper analyzes some of the shortcomings
58 Q0 1978 35 0.05022986 Lucene_47
 solving <B>capabilities</B>  rather than simply use the new power to achieve fast turnaround  we <B>can</B> develop  furthermore  an implementation of an on-line <B>least</B> <B>squares</B> data-fitting program  peg  is presented  cacm october  1970 smith  l  b  interactive graphics  computer graphics  graphics  <B>least</B> <B>squares</B> <B>capabilities</B> of the human problem solver  several on-line systems for general purpose mathematical problem
58 Q0 2343 36 0.050060004 Lucene_47
 executable storage size problems for large programs by <B>using</B> overlays  however  it appears that no one overlay scheme contains a well-balanced combination of the most useful <B>capabilities</B> which <B>capabilities</B> from existing schemes and is complemented by several additional features  e g  writable still be required to <B>design</B> the overlay configuration  since overlay structuring is a complex task
58 Q0 2373 37 0.04914307 Lucene_47
properties of the working-set model a program <B>s</B> working set w <B>t</B> <B>t</B>  at time <B>t</B> is the set of distinct pages among the <B>t</B> most recently referenced pages  relations between the average working-set size  schwartz  <B>s</B>  c  working-set model  paging  paging <B>algorithms</B>  program behavior  program modeling 4.3-average definitions and from ensemble-average  <B>statistical</B>  definitions  an efficient algorithm
58 Q0 1066 38 0.047658842 Lucene_47
growing applications of <B>linear</B> programming use of <B>linear</B> programming <B>models</B> has grown so on such systems  some of the <B>components</B> of such a <B>system</B> are  translation of problem statement computer subprograms must be organized into an integrated <B>system</B>  emphasis in this paper is devoted to the underlying principles upon which future <B>linear</B> programming systems must be based
58 Q0 536 39 0.046412908 Lucene_47
nonlinear <B>regression</B> and the solution of simultaneous equations if one has a set of observables  z1     zm  which are bound in a relation with certain parameters  a1     an  by an equation <B>s</B> z1 the sum of <B>squares</B> of differences between observed and calculated values of a distinguished observable n which is nonlinear in the ai  then one may rely on a version of gaussian <B>regression</B>  1,2
58 Q0 2167 40 0.04622209 Lucene_47
 of view of a designer who wants to construct a useful and efficient <B>system</B>  first we describe various techniques akin to substitution  these techniques <B>can</B> be used to decrease thesize of an expression and make it more intelligible to a user  then we delineate the spectrum of approaches to the <B>design</B> of automatic simplification <B>capabilities</B> in an algebraic manipulation <B>system</B>  systems are divided
58 Q0 2951 41 0.04454992 Lucene_47
 reveals that sufficient <B>system</B> data are currently obtainable  at <B>least</B> for the five diverse arpa systems as it depends on some measure of <B>system</B> activity or load level  cacm july  1977 mamrak  <B>s</B>  and <B>statistical</B> performance evaluation tools are employed to investigate the feasibility of a dynamic network  anlytic modeling  simulation  benchmark jobs  <B>system</B> measurement 4.6 6.20 8.1 ca770701 jb
58 Q0 1629 42 0.04410354 Lucene_47
stat-pack  a biostatistical programming package a package of fortran <B>statistical</B> programs for use on almost any small to medium size  40k characters or 8k words  for which a fortran ii compiler exists is described and its availability is announced  the major <B>design</B> criteria of ease of use  ease  <B>s</B>  henschke  c  ca670213 jb february 28,1978 1 57 pm 1629 5 1629 1629 5 1629 1629 5 1629
58 Q0 1423 43 0.043764323 Lucene_47
 the ordinary <B>least</B> <B>squares</B> transformation matrix inv a a a  and has the advantage of avoiding the lossa simple algorithm for computing the <B>generalized</B> inverse of a matrix the <B>generalized</B> inverse used because the existing <B>algorithms</B> are fairly complicated and require considerable storage space-singular matrices  which gives the <B>generalized</B> inverse with little extra effort and with no additional
58 Q0 2645 44 0.042925324 Lucene_47
 processor is a set of procedures for algebraic manipulation which <B>can</B> be called by the user to operate on the <B>formula</B> produced by the first processor  examples of the usage of the two languages are <B>included</B>  the limitations of the present <B>system</B>  its relation to knuth <B>s</B> work on the analysis of <B>algorithms</B> is a syntax-directed translator which compiles a program into a symbolic <B>formula</B> representing the execution
58 Q0 1578 45 0.04270882 Lucene_47
<B>generalized</B> <B>least</B> <B>squares</B> fit by orthogonal polynomials  algorithm 296  e2   cacm june  1967 makinson  g  j  ca670607f jb march 23  1978 3 33 pm 1578 5 1578 1578 5 1578 1578 5 1578
58 Q0 1944 46 0.04252687 Lucene_47
<B>student</B> <B>s</B> <B>t</B>-distribution  algorithm 344  s14   cacm january  1969 levine  d  a  <B>student</B> <B>s</B> <B>t</B>-distribution  <B>t</B>-<B>test</B>  small-sample statistics  distribution function 5.12 5.5 ca690105 jb february 20  1978 11 56 am 1157 4 1944 1779 4 1944 1920 4 1944 1944 4 1944 1944 4 1944 1987 4 1944 1987 4 1944 2548 4 1944 1779 5 1944 1944 5 1944 1944 5 1944 1944 5 1944 1987 5 1944 714 5 1944 1561 6 1944 1581 6 1944
58 Q0 2994 47 0.04204107 Lucene_47
a <B>linear</B> algorithm for incremental digital display of circular arcs circular arcs <B>can</B> be drawn on an incremental display device such as a cathode ray tube  digital plotter  or matrix prin ter <B>using</B> only <B>sign</B> testing and elementary addition and subtraction  this paper describes methodology for producing dot or step patterns closet to the true circle  cacm february  1977 bresenham  j  graphics
58 Q0 3087 48 0.041826382 Lucene_47
 of aircraft flight and maintenance data <B>using</B> a <B>system</B> called planes  the <B>design</B> and implementation of this <B>system</B> is described and illustrated with detailed examples of the operation of <B>system</B> <B>components</B>  and resolving ellipsis and pronoun reference problems  other <B>system</B> <B>components</B> construct a formal queryan english language question answering <B>system</B> for a large relational database by typing requests
58 Q0 2825 49 0.04102445 Lucene_47
the bmd and bmdp series of <B>statistical</B> computer programs cacm october  1976 frane  j  w  analysis of variance  cluster analysis  contingency tables  data analysis  discriminant analysis  factor analysis  graphics  outliers  <B>regression</B>  time series  transformations 1.3 3.3 4.0 5.5 ca761006 jb january 3  1978 4 18 pm 2825 4 2825 2419 5 2825 2825 5 2825 2825 5 2825 2825 5 2825
58 Q0 3136 50 0.04092705 Lucene_47
price performance patterns of u  computer systems econometric <B>models</B> of the u  computer market have been developed to study the relationships between <B>system</B> price and hardware performance  single measures of price performance such as  grosch <B>s</B> law  are shown to be so over simplified as to be meaningless  multiple-<B>regression</B> <B>models</B> predicting <B>system</B> cost as a function of several hardware
58 Q0 2514 51 0.040327184 Lucene_47
an array grammar programming <B>system</B> a package of fortran programs has been developed that permits a user to interactively <B>design</B> and <B>test</B> array grammars  the user <B>can</B> control the rule selection procedure in a derivation or parse  <B>using</B> weighted programming matrices  he also has a choice of instance selection schemes  raster random  parallel   examples are given involving array languages
58 Q0 1779 52 0.039574865 Lucene_47
<B>t</B>-<B>test</B> probabilities  algorithm  s14   cacm february  1968 morris  j  <B>t</B>-<B>test</B>  <B>student</B> <B>s</B> <B>t</B>-statistic  distribution function 5.5 ca680203 jb february 23  1978 1 33 pm 1157 4 1779 1779 4 1779 1920 4 1779 1944 4 1779 1987 4 1779 2548 4 1779 1779 5 1779 1779 5 1779 1779 5 1779 1944 5 1779 1987 5 1779 714 5 1779 1561 6 1779 1581 6 1779 1779 6 1779 1779 6 1779 1944 6 1779 714 6 1779 714 6 1779
58 Q0 2418 53 0.03934619 Lucene_47
<B>student</B> <B>s</B> <B>t</B> frequency  s14   algorithm a465  cacm november  1973 hill  g  w  <B>student</B> <B>s</B> <B>t</B> statistic  density function  series approximation 5.12 5.5 ca731108 jb january 20  1978 10 01 am 2418 5 2418 2418 5 2418 2418 5 2418
58 Q0 2488 54 0.03777866 Lucene_47
<B>least</B> <B>squares</B> piecewise cubic curve fitting the matrices involved in a <B>linear</B> <B>least</B> <B>squares</B> formulation are determined for the problem of fitting piecewise cubic functions  those possessing a continuous derivative  to arrays of planar data  cacm june  1973 ferguson  j  staley  p  a  curve fitting  data reduction  function approximation  approximation splines 5.13 ca730612 jb january 23  1978 1 47
58 Q0 1146 55 0.037438948 Lucene_47
an efficient composite <B>formula</B> for multidimensional quadrature a  2s 1 -point second-degree quadrature <B>formula</B> for integration over an <B>s</B>-dimensional hyper-rectangle is presented  all but one of the points lie on the surface with weights of opposite <B>sign</B> attached to points on opposite faces  when a large volume is subdivided into congruent rectangular subdivisions  only one point is required
58 Q0 266 56 0.03741849 Lucene_47
fitting spheres by the method of <B>least</B> <B>squares</B> cacm november  1961 robinson  <B>s</B>  m  ca611102 jb march 15  1978 11 00 pm 266 5 266 266 5 266 266 5 266
58 Q0 2188 57 0.03730479 Lucene_47
an approach to the optimum <B>design</B> of computer graphics systems display <B>system</B> designers are faced and of the computational requirements of the graphics application  the model <B>can</B> be analyzed <B>using</B> numerical queueing applications  the optimum configurations are in turn used to find general display <B>system</B> <B>design</B>  optimum <B>system</B> <B>design</B>  queueing model 3.8 6.22 6.35 ca710602 jb february 3  1978 10 26 am 1805 4
58 Q0 2398 58 0.03714497 Lucene_47
teacher <B>student</B> authored cai <B>using</B> the newbasic <B>system</B> the pedagogical advantages of a general purpose interactive <B>system</B> called newbasic catalyst are discussed  newbasic catalystincorporates an advanced implementation of basic  <B>system</B>-level interactive features  and a general capability a flexible cai scan capability is illustrated  an example of interaction at the <B>system</B> level shows how
58 Q0 1534 59 0.03700161 Lucene_47
dad  the c  operating <B>system</B> the <B>design</B> and implementation of the c  operating <B>system</B>  dad  is described in detail  this <B>system</B> is designed for the control data 3600 <B>using</B> a large drum backing store based on several months of operation are tabulated  cacm september  1967 austin  b  j  holden  <B>t</B>  <B>s</B> as it integrates into the rest of the <B>system</B>  the techniques found useful in the development of dad
58 Q0 69 60 0.03691934 Lucene_47
<B>statistical</B> programs for the ibm 650-part i a collection is given of brief descriptions of <B>statistical</B> programs now in use in university computing centers which have ibm 650 <B>s</B>  cacm august  1959 hamblen  j  w  ca590804 jb march 22  1978 6 07 pm 69 5 69 69 5 69 69 5 69
58 Q0 2820 61 0.03606673 Lucene_47
the <B>design</B> and implementation of a table driven  interactive diagnostic programming <B>system</B> caps corrected  instead  caps interacts with the <B>student</B> to help him find the cause of his error  most <B>components</B> of caps are table driven  both to reduce the space needed for implementation and to increase the flexibility of the multilingual <B>system</B>  over 500 students have used caps to learn fortran  pl i
58 Q0 2771 62 0.035966877 Lucene_47
 of solid objects to be synthesized and stored <B>using</B> a computer  synthesis begins with primitive solids like a cube  wedge  or cylinder  any solid <B>can</B> be moved  scaled  or rotated  solids may also be added together or subtracted  two <B>algorithms</B> to perform addition are described  for practical designers bounded by many faces  cacm april  1975 braid  i  c  computational geometry  computer-aided <B>design</B>
58 Q0 981 63 0.035806783 Lucene_47
 this  the particular procedure that is appropriate depends upon whether the numbers being accumulated <B>can</B> vary in <B>sign</B>  whether their sum <B>can</B> vary in <B>sign</B>  and whether the last number being summed <B>can</B> be recognized as such prior to its rounding  cacm november  1964 kelley  <B>t</B>  b  ca641102 jb march 9  1978 4 25
58 Q0 1802 64 0.03551045 Lucene_47
<B>regression</B> <B>using</B> certain direct product matrices  algorithm 366  g2   cacm december  1969 claringbold  p  j  analysis of variance  analysis of covariance  <B>regression</B> analysis  experimental <B>design</B>  matrix direct product  protection operator  orthogonal matrix 5.14 5.5 ca691210 jb february 15  1978 2 23 pm 1801 5 1802 1802 5 1802 1802 5 1802 1802 5 1802 1802 6 1802
58 Q0 1260 65 0.03512666 Lucene_47
<B>least</B>-<B>squares</B> analysis of resonance spectra on small computers the problem of analyzing data from a mossbauer effect experiment is discussed  by <B>using</B> the cut step procedure for convergence and by imposing physical constraints on the functional form of the calculation it is possible to make bcd core memory  cacm may  1965 marshall  <B>s</B>  w  nelson  j  a  wilenzick  r  m  ca650511 jb march 7
58 Q0 1605 66 0.034809068 Lucene_47
 in these variables after differences due to the <B>design</B> factors had been eliminated  <B>statistical</B> analysis development of the mit compatible time-sharing <B>system</B>  ctss  was compared with that of the ibm ibsys batch-processing <B>system</B> by means of a statistically designed experiment  an identical set of four  were specified as <B>design</B> factors in the experiment  data was obtained for six variables  e g
58 Q0 2344 67 0.034747954 Lucene_47
 in the measure of <B>system</B> performance <B>can</B> be obtained by <B>using</B> variable time-slice techniques  clark  <B>s</B>  r  rourke  <B>t</B>  a  time-sharing  simulation studies  optimization  measure of performance of a time-sharing <B>system</B> with a finite noncontiguous store and an infinite auxiliary store is used to study the variation of <B>system</B> parameters such as store size  number of jobs allowed to execute
58 Q0 2585 68 0.03463327 Lucene_47
efficient implementation of a variable projection algorithm for nonlinear <B>least</B> <B>squares</B> problems  errata  cacm october 1974 krogh  f  <B>t</B>  ca741013 jb january 16  1978 11 02 am 2585 5 2585 2585 5 2585 2585 5 2585
58 Q0 840 69 0.03463327 Lucene_47
<B>least</B> <B>squares</B> surface fit  algorithm 176  cacm june  1963 arthurs  <B>t</B>  d  ca630609 jb march 14  1978 10 18 am 840 5 840 840 5 840 840 5 840
58 Q0 3142 70 0.034535784 Lucene_47
 to errors-to a failure to correct them  what <B>can</B> be learned by designers of large management <B>packages</B> to be difficult and not always successful  there appears to be some conflict between computer-<B>using</B> organizations and their public  also the role of poor man agement <B>packages</B> including poor software about the timeliness and the number of designs of very large linked program <B>packages</B>  as eft
58 Q0 1956 71 0.034523744 Lucene_47
  and thus it <B>can</B> be applied to any conventional cpu mass storage combination  an explicit <B>formula</B> for total time calculated <B>using</B> the optimum merge orders yielded by the algorithm  the <B>formula</B> involves the roots of a simple transcendental equation  a short table of these roots is <B>included</B>  numerical results for a sort <B>using</B> mass storage  the analysis is parameterized in terms of the ratio of seek time
58 Q0 2665 72 0.0344525 Lucene_47
copying list structures <B>using</B> bounded workspace two new <B>algorithms</B> are presented for list structure copying <B>using</B> bounded workspace  the first  of primarily theoretical <B>interest</B>  shows that without cell tag bits the task <B>can</B> be performed in time n 2  the second algorithm  assuming one tag bit in each cell  delivers attractive practical speed  any noncyclic structure is copied in <B>linear</B> speed
58 Q0 2135 73 0.03437709 Lucene_47
 rules as special cases  cacm december  1971 gustafson  <B>s</B>  <B>linear</B> functionals  divided differences  newton <B>s</B> interpolation <B>formula</B> 5.13 5.16 ca711208 jb february 2  1978 9 49 am 2135 4 2135 2135 4 2135 continuous on a closed interval  a b  and let l be a <B>linear</B> functional  the attempt is made to approximate l  f  with l  q  where q is a polynomial  approximating f  <B>algorithms</B> are developed for rapid
58 Q0 2812 74 0.034344446 Lucene_47
computer-aided analysis and <B>design</B> of information systems this paper describes the use of computer-aided analysis for the <B>design</B> and development of an integrated financial management <B>system</B>  information systems  logical <B>system</B> <B>design</B>  problem statement language  problem statement analyzer  physical <B>system</B> <B>design</B>  accurately defined systems  systems optimization and <B>design</B> algorithm 2.44
58 Q0 2903 75 0.033966526 Lucene_47
  called  recursion in troduction   is described and applied to two <B>algorithms</B> which solve pattern matching problems  by <B>using</B> recursion in troduction  <B>algorithms</B> which manipulate a stack are first translated into recursive <B>algorithms</B> in which no stack operations occur  these <B>algorithms</B> are then subjected programs with a very efficient running time  in particular  it is shown how the fast <B>linear</B> pattern
58 Q0 2025 76 0.032859165 Lucene_47
<B>student</B> <B>s</B> <B>t</B>-distribution  jacobi polynomials  modified romberg quadrature  factorial analysis of variance   <B>algorithms</B> 332,344,351,359  cacm july  1970 sale  a  h  j  fortran standards 4.0 4.22 ca700712 jb february 10  1978 4 26 pm 1613 4 2025 1646 4 2025 1900 4 2025 1955 4 2025 2025 4 2025 2154 4 2025 2365 4 2025 2506 4 2025 3060 4 2025 987 5 2025 2025 5 2025 2025 5 2025 2025 5 2025
58 Q0 2217 77 0.032807037 Lucene_47
 for pp  a multiple <B>regression</B> program was used to produce optimal coefficients for <B>linear</B> polynomial in predicate calculus  multiple <B>s</B> proving program  pp  uses two evaluation functions to guide its results  data was generally collected for learning  <B>regression</B> analysis  from the experience of pp  a number of experiments were performed to <B>test</B> the effectiveness and generality of the learning program
58 Q0 322 78 0.03260491 Lucene_47
 coded to utilize a fixed set of hardware <B>components</B> without recognizing the fact that others may by manually setting up the computer for each <B>system</B> as required  the following set of conventions is being considered to minimize computer set-up time  they are of sufficiently broad <B>interest</B> that we feel  <B>s</B>  ca610603 jb march 16  1978 10 55 pm 322 5 322 322 5 322 322 5 322
58 Q0 1986 79 0.031476952 Lucene_47
<B>student</B> <B>s</B> <B>t</B>-quantiles  s14   algorithm 396  cacm october  1970 hill  g  w  <B>student</B> <B>s</B> <B>t</B>-statistic  quantile  asymptotic approximation 5.12 5.5 ca701004 jb february 10  1978 9 29 am 1986 4 1986 2315 4 1986 1986 5 1986 1986 5 1986 1986 5 1986 1987 5 1986
58 Q0 184 80 0.031182075 Lucene_47
a short method for measuring error in a <B>least</B>-<B>squares</B> power series cacm june  1960 robinson  <B>s</B>  m  struble  g  w  ca600606 jb march 20  1978 9 41 pm 184 5 184 184 5 184 184 5 184
58 Q0 533 81 0.031175828 Lucene_47
 and produces strict-sense stationary noise which agrees approximately with r <B>t</B>   the prescribed auto-covariance function  acf   over an interval  -<B>t</B> 0   <B>t</B> 0    the method consists of approximating with random phases and appropriate amplitudes  in order to simplify discussion of the <B>statistical</B>  1962 peabody  p  r  adorno  d  <B>s</B>  ca620728 jb march 17  1978 7 59 pm 533 5 533 533 5 533 533 5 533
58 Q0 1848 82 0.03117453 Lucene_47
the damped taylor <B>s</B> series method for minimizing a sum of <B>squares</B> and for solving systems of nonlinear equations  algorithm 315  e4  c5   cacm september  1969 silverman  g  solution of equations  <B>least</B> <B>squares</B> approximation  newton <B>s</B> method 5.13 5.14 5.15 ca690907 jb february 15  1978 4 32 pm 1848 5 1848 1848 5 1848 1848 5 1848
58 Q0 867 83 0.03090942 Lucene_47
<B>least</B> <B>squares</B> fitting of planes to surfaces <B>using</B> dynamic programming dynamic programming has recently been used by stone  by bellman and by gluss to determine the closet fit of broken line segments to a curve in an interval under the constraint that the number of segments is fixed  in the present paper successive <B>models</B> are developed to extend the method to the fitting of broken plane segments
58 Q0 3092 84 0.030908946 Lucene_47
characteristics of application software maintenance maintenance and enhancement of application software consume a major portion of the total life cycle cost of a <B>system</B>  rough estimates of the total totaled 69  responses were analyzed with the spss <B>statistical</B> package  the results of the analysis and programming groups   2  maintenance and enhancement tend to be viewed by management as at <B>least</B>
58 Q0 1586 85 0.030634684 Lucene_47
a <B>generalized</B> bairstow algorithm the bairstow algorithm is <B>generalized</B> to the case of a polynomial which is itself a <B>linear</B> combination of polynomials satisfying a three-term recursion  convergence properties of the method are derived  cacm june  1967 golub  g  h  robertson  <B>t</B>  n  ca670606 jb february 28  1978 9 21 am 1586 5 1586 1586 5 1586 1586 5 1586
58 Q0 1445 86 0.030585349 Lucene_47
  physics  engineering and other courses  not so obvious are the many pedagogic aids the computer <B>can</B> offer in teaching the subject matter  the possibilities of giving the <B>student</B> a better technical as well of medicine of the university of cincinnati and are reported here  cacm april  1966 sterling  <B>t</B>  d  pollack  <B>s</B>  v  ca660404 jb march 3  1978 10 48 am 1445 5 1445 1445 5 1445 1445 5 1445
58 Q0 1264 87 0.030473499 Lucene_47
blnsys-a 1401 operating <B>system</B> with braille <B>capabilities</B> blnsys is an operating <B>system</B> designed for a 4k 1401 with common optional features and two attached tape drives  printed output of this <B>system</B> or of executing programs may be in either english or braille  even though this <B>system</B> was written or duplicate the <B>system</B> tape itself  input-ouput subroutines are also <B>included</B> in the <B>system</B>  cacm may  1965
58 Q0 2106 88 0.030344615 Lucene_47
 to the belief that the creative <B>design</B> and evaluation of management information systems requires a thorough systems <B>can</B> best be explained at the machine language level  any machine used for exposition should to the equipment provided by any manufacturer   6  be able to provide the <B>student</B> with diagnostic aids to a great depth   7  allow the <B>student</B> ready access to the machine   8  be capable of extension
58 Q0 2561 89 0.030126793 Lucene_47
  the procedures make use of a similarity structure which is imposed on the data base <B>using</B> nonnumerical clustering <B>algorithms</B>  they are implemented in a model fact retrieval <B>system</B> which uses a formal the procedures are used with <B>test</B> data bases which are altered by deleting part of the data and by purposely introducing false data  it is found that the <B>system</B> <B>can</B> infer the correct response under
58 Q0 1454 90 0.030113976 Lucene_47
 <B>capabilities</B>  the language described in this paper is used to write computer programs which <B>test</B>a simple user-oriented compiler source language for programming automatic <B>test</B> equipment for the nonprogrammer  difficulty in <B>using</B> a language increases rapidly with the number of nonproblem-oriented conventions  a simple language  even if inelegant  which considers the user <B>s</B> background as part
58 Q0 2525 91 0.029875506 Lucene_47
a <B>statistical</B> study of the accuracy of floating point number systems this paper presents the <B>statistical</B> results of <B>tests</B> of the accuracy of certain arithmetic systems in evaluating sums  products and inner products  and analytic error estimates for some of the computations  the arithmetic systems studied are 6-digit hexadecimal and 22-digit binary floating point number representations combined
58 Q0 2786 92 0.029829042 Lucene_47
a <B>system</B> for typesetting mathematics this paper describes the <B>design</B> and implementation of a <B>system</B> was typeset by the authors <B>using</B> the <B>system</B> described cacm march  1975 kernighan  b  w  cherry  l  l  experience indicates that the language <B>can</B> be learned in an hour or so  for it has few rules  for example  the input sum from i o to infinity x sub i pi over 2 produces  <B>formula</B>   the syntax
58 Q0 2318 93 0.029773347 Lucene_47
the role of computer <B>system</B> <B>models</B> in performance evaluation <B>models</B> constitute a useful means of investigating computer <B>system</B> performance  this paper examines the interrelationships between <B>models</B> under which the use of a model is appropriate  cacm july 1972 kimbleton  <B>s</B>  r  modeling  evaluation  performance  analytic-<B>models</B>  simulation-<B>models</B>  <B>system</B>-<B>models</B> 2.43 2.44 6.2 8.3 ca720710 jb january
58 Q0 3156 94 0.029766286 Lucene_47
computing connected <B>components</B> on parallel computers we present a parallel algorithm which uses n2 processors to find the connected <B>components</B> of an undirected graph with n vertices in time o log2n   an o log2n  time bound also <B>can</B> be achieved <B>using</B> only n n  log2n   processors  the algorithm <B>can</B>  graph theory  parallel processing  <B>algorithms</B>  transitive closure  connected component 5.25 5.32 6.22
58 Q0 2212 95 0.029489843 Lucene_47
f-distribution cacm february  1971 tolman  h  fisher <B>s</B> f-distribution  <B>student</B> <B>s</B> <B>t</B>-distribution 5.5 ca710209 jb february 8  1978 8 35 am 2212 5 2212 2212 5 2212 2212 5 2212
58 Q0 1750 96 0.029314663 Lucene_47
considerations in the <B>design</B> of a multiple computer <B>system</B> with extended core storage the use the multiprogramming performance of a multicomputer <B>system</B> is discussed  the general <B>design</B> of the hardware arrangement and the software <B>components</B> and functions of such a <B>system</B> are based on a planned configuration of dual cdc 6600 <B>s</B> that share one million words of extended core storage  in the generalization
58 Q0 1874 97 0.029281847 Lucene_47
generating pseudorandom numbers on a two <B>s</B> complement machine such as the ibm 360 the familiar multiplicative congruential generator is examined in the context of the type of two <B>s</B> complement of the latter without loss of desirable <B>statistical</B> properties  another easily generated sequence involving absolute values is also shown to have twice the period but with less attractive <B>statistical</B>
58 Q0 1674 98 0.029144399 Lucene_47
  anyone wishing to experiment with generators  either <B>using</B> congruential generators by themselves or mixing several generators to provide a composite with potentially better <B>statistical</B> properties than discussed here  cacm november  1968 marsaglia  g  bray  <B>t</B>  a  random number generation  monte carlo
58 Q0 1671 99 0.028802002 Lucene_47
a phonological rule tester the <B>design</B> and implementation of a <B>system</B> to alleviate the problem list processor embedded in lisp  this made the <B>system</B> construction easy while providing sophisticated <B>capabilities</B> for the linguist  the <B>system</B> is written in bbn lisp on the scientific data <B>system</B> 940 data as strings of phonemes with associated grammatical structure  to <B>test</B> the effect of applying
58 Q0 1835 100 0.02808522 Lucene_47
 block structure and a variety of data types  several novel and powerful features are <B>included</B>  a discussion of <B>design</B> principles to be followed in a <B>student</B> language is given  cacm october  1969 dewar  r  b  k  hochsprung  r  r  languages programming languages  <B>student</B> programming systems  language <B>design</B>  high school programs  college courses 1.51 1.52 4.12 4.22 ca691011 jb february 15  1978 1 54 pm
*************Query 59*************************

59 Q0 1456 1 0.22483763 Lucene_47
storage and <B>retrieval</B> of aspects of meaning in directed graph structures an experimental system that uses lisp to make a conceptual <B>dictionary</B> is described  the <B>dictionary</B> associates with each <B>english</B> word the syntactic <B>information</B>  definitional material  and references to the contexts in which vehicle for research on the logic of question answering  examples of <B>methods</B> of inputting <B>information</B>
59 Q0 1700 2 0.16326699 Lucene_47
peekabit  computer offspring of punched card peekaboo  for <B>natural</B> <B>language</B> searching the  peekaboo  idea from punched card <B>information</B> <B>retrieval</B> <B>methods</B> has been mated with the idea of superimposed coding  <B>natural</B> <B>language</B> searching text searching  <B>information</B> compaction  computer search technique 1963  as an item is entered in the store  an 18-byte mask is created from the item s meaningful <B>words</B>
59 Q0 3087 3 0.1618115 Lucene_47
 <B>language</B>  database front end  artificial intelligence  dialogue  query generation  <B>information</B> <B>retrieval</B>  <B>natural</B> <B>language</B> programming 3.42 3.60 3.69 3.74 3.79 ca780701 dh february 8  1979 4 26 pm 2155an <B>english</B> <B>language</B> question answering system for a large relational database by typing requests of important issues in programming <B>natural</B> <B>language</B> systems for limited domains  and the relationship
59 Q0 144 4 0.15866387 Lucene_47
 in groups of coded pulses between simple terminal equipments  since <B>english</B> <B>words</B> form only a sparse set of all possible alphabetic combinations  present <B>methods</B> are inefficient when computer systems are substituted for these terminals  using numeric representations of entire <B>words</B> or common phrases  and for single character-transmission of non-<B>dictionary</B> <B>words</B> such as the names of people or places
59 Q0 3041 5 0.14021547 Lucene_47
 of the application of mst s to <B>dictionary</B> lookup for <B>english</B> is presented  and the performance obtained is contrasted search  heaps  balanced trees  zipf s law  <B>information</B> <B>retrieval</B> 3.74 5.25 5.39 ca781110 dh januarymedian split trees  a <B>fast</B> lookup technique for frequently occuring keys split trees are a new to their <B>lexical</B> ordering  between the left and right subtrees  a median split tree  mst  uses the <B>lexical</B>
59 Q0 1855 6 0.12977834 Lucene_47
a program for the syntactic analysis of <B>english</B> sentences a program is described which produces syntactic analyses of <B>english</B> sentences with respect to a transformational grammar  the main features of the analyzer are that it uses only a limited <B>dictionary</B> of <B>english</B> <B>words</B> and that it pursues all <B>information</B>  cacm august  1969 dewar  h  bratley  p  syntactic analysis  <B>language</B> processing  <B>language</B>
59 Q0 2437 7 0.12961839 Lucene_47
 access  scatter storage  <B>information</B> <B>retrieval</B>  <B>hashing</B> analysis  randomization performance analysis 3.7 analytically  the approach is <B>applied</B> to a group of transformation <B>methods</B> using files whose keys are selected randomly  cacm october  1973 lum  v  y  <B>hashing</B>  <B>hashing</B> techniques  <B>hashing</B> <B>methods</B>  hashgeneral performance analysis of key-to-address transformation <B>methods</B> using an abstract file
59 Q0 1703 8 0.1272473 Lucene_47
 standardization and reliable identification of programming languages and <B>related</B> services  one way of achieving these goals illustrated by the <B>methods</B> adopted for trac t-64 interactive <B>language</B>  and its <B>related</B> family of languages  oppressive rigidity <B>usually</B> associated with standardization is avoided  provides a reliable public identification  these <B>methods</B> can be usefully <B>applied</B> to other programming
59 Q0 2307 9 0.11694072 Lucene_47
 for <B>information</B> <B>retrieval</B> and for the control of dynamic library collections in which new <B>items</B> is then outlined in which clustered files are searched and <B>information</B> is retrieved following an interactive user-controlled search process  <B>methods</B> are described for an automatic query modification based on user needs  and for a continuous reorganization of the stored <B>information</B> as a function
59 Q0 1681 10 0.10668239 Lucene_47
easy <B>english</B> a <B>language</B> for <B>information</B> <B>retrieval</B> through a remote typewriter console easy <B>english</B> is a <B>natural</B> command <B>language</B> designed to simplify communication between man and machine through into an equivalent query expressed in the <B>retrieval</B> system s original symbolic command <B>language</B>  which is briefly flowchart of easy <B>english</B> is included  and an appendix provides the printout of a <B>retrieval</B>
59 Q0 1665 11 0.10573991 Lucene_47
 of the aed-1 system  this system accepts as input description of the multicharacter <B>items</B> or of <B>words</B> is a <B>lexical</B> processor which reads a string of characters and combines them into the <B>items</B> as definedautomatic generation of efficient <B>lexical</B> processors using finite state techniques the practical application of the theory of finite-state automata to automatically generate <B>lexical</B> processors
59 Q0 2753 12 0.10440996 Lucene_47
 to be easily updated  dps has been <B>applied</B> to 50 <B>problems</B>  while it is slow and limited in scope  the ideas  and characteristic of many design tasks in architecture  engineering  urban planning  and <B>natural</B> resource management  these space planning tasks <B>usually</B> involve manipulating two-dimensional representations of objects to create feasible or optimal solutions for <B>problems</B> involving topological and metric
59 Q0 1235 13 0.104185455 Lucene_47
 are identified through the use of a small <B>dictionary</B> of function <B>words</B> and frequently occurring <B>lexical</B> <B>words</B>  some suffix tests and logical-decision rules are employed to code additional <B>words</B>  finallya stochastic approach to the grammatical coding of <B>english</B> a computer program is described which will assign each word in an <B>english</B> text to its form class or part of speech  the program operates
59 Q0 2050 14 0.103530705 Lucene_47
 <B>language</B> processing  <B>information</B> <B>retrieval</B>  <B>language</B> analysis  text processing 3.42 3.71 ca700605 jb is not yet possible for all of an unrestricted <B>natural</B> <B>language</B> text  some applications  of which content of coverage for content analysis variables which compares favorably to manual <B>methods</B>  in variables which compares favorably to manual <B>methods</B>  in which only a sample of the total available text
59 Q0 2795 15 0.09949448 Lucene_47
sentence paraphrasing from a conceptual base a model of <B>natural</B> <B>language</B> based on an underlying operates in conjunction with a <B>natural</B> <B>language</B> analyzer and a combined memory and inference model  in generating sentences from meaning structures  the program employs both the <B>information</B> <B>retrieval</B>  m  artificial intelligence  <B>natural</B> <B>language</B> processing  <B>language</B> generation  models of cognitive
59 Q0 2258 16 0.09825986 Lucene_47
additional results on key-to-address transform techniques  a fundamental performance study on large existing formatted files cacm november  1972 lum  v  y  yuen  p  s  t  <B>hashing</B>  <B>hashing</B> techniques  <B>hashing</B> <B>methods</B>  hash coding  keys  key transformation  key-to-address transformation  direct storage  <B>information</B> <B>retrieval</B> 3.7 3.72 3.73 3.74 3.79 4.9 ca721111 jb january 27  1978 1 31 pm 2258 4
59 Q0 2127 17 0.097245 Lucene_47
<B>natural</B> <B>language</B> question-answering systems  1969 recent experiments in programming <B>natural</B> <B>language</B> question-answering systems are reviewed to summarize the <B>methods</B> that have been developed effective techniques have been devised for answering questions from <B>natural</B> <B>language</B> subsets in small or to applications over large subsets of <B>english</B>  generalizing from current small-scale experiments to <B>language</B>
59 Q0 1926 18 0.08859655 Lucene_47
 <B>construction</B>  and a minimum of nontext <B>items</B>  it is written entirely in fortran iv  cacm march  1969 berns  g  m  text processing  <B>indexing</B>  printing  documentation  text editing  formatting  frequency <B>dictionary</B>  right justification  vocabulary 3.74 3.75 3.9 ca690301 jb february 20  1978 9 45 am 1926 5 1926
59 Q0 2203 19 0.07879843 Lucene_47
 files the results of a study of eight different key-to-address transformation <B>methods</B> <B>applied</B> to a set of existing files are presented  as each method is <B>applied</B> to a particular file  load factor  1971 lum  v  y  yuen  p  s  t  dodd  m  <B>hashing</B>  <B>hashing</B> techniques  <B>hashing</B> <B>methods</B>  hash coding  search  collisions  clusters  <B>information</B> <B>retrieval</B> 3.7 3.72 3.73 3.74 3.79 4.9 ca710402 jb february 3
59 Q0 2113 20 0.07525925 Lucene_47
  <B>natural</B>-<B>language</B> analysis  linguistic data processing  computational linguistics  correlational grammar <B>english</B> sentence analyzer  by structuring an area of the computer s central core storage in such a way procedure  the shifting of <B>information</B> is reduced to a minimum  and the searching of lists grammar  provided it can be expressed by the functional classification of the <B>items</B> composing
59 Q0 2990 21 0.07503062 Lucene_47
  1977 yu  c  t  salton  g  <B>information</B> <B>retrieval</B>  automatic <B>indexing</B>  content analysis  term accuracyeffective <B>information</B> <B>retrieval</B> using term accuracy the performance of <B>information</B> <B>retrieval</B> on measuring the <B>retrieval</B> performance of an average user query  unfortunately  formal proofs are difficult to construct for the average case  in the present study  <B>retrieval</B> evaluation is based
59 Q0 2905 22 0.07364847 Lucene_47
perfect <B>hashing</B> functions  a single probe retrieving method for static sets a refinement of <B>hashing</B> which allows <B>retrieval</B> of an item in a static table with a single probe is considered  given a set i of identifiers  two <B>methods</B> are presented for building  in a mechanical way  perfect <B>hashing</B>  1977 sprugnoli  r  <B>hashing</B>  <B>hashing</B> <B>methods</B>  hash coding  direct addressing  identifier-to-address
59 Q0 2705 23 0.07345537 Lucene_47
 december  1975 naur  p  analogies <B>related</B> to social aspects pure and <B>applied</B> mathematics  <B>language</B>programming languages  <B>natural</B> languages  and mathematics some social aspects of programming are illuminated through analogies with similar aspects of mathematics and <B>natural</B> languages  the split between pure and <B>applied</B> mathematics is found similarly in programming  the development of <B>natural</B>
59 Q0 1725 24 0.072089255 Lucene_47
a simple proof of lewin s ordered-<B>retrieval</B> theorem for associative memories an efficient method of ordered <B>retrieval</B> of binary <B>words</B> from an associative memory  as described by lewin  is based  ordered lists  ordered <B>information</B> <B>retrieval</B>  ordered <B>retrieval</B> theorem  column digit values  digit considerably the number of memory accesses necessary to retrieve in order a number of distinct <B>words</B> from
59 Q0 1359 25 0.06822402 Lucene_47
data filtering <B>applied</B> to <B>information</B> storage and <B>retrieval</B> applications manipulation of data strings is the most complex processing function in <B>information</B> storage and <B>retrieval</B> applications  data assumed to be expressed in a user-oriented source <B>language</B>  each data string with the structured data environment  data bank  is explicitly or implicitly <B>related</B> to a format declaration residing
59 Q0 661 26 0.067743696 Lucene_47
<B>indexing</B> and the lambda-notation some <B>methods</B> of <B>indexing</B> sequentially stored elements of sparse multi-dimensional arrays are described in the scheme a notation  cacm december  1963 barnett  m  p  ca631213 jb march 13  1978 2 51 pm 661 5 661 661 5 661 661 5 661
59 Q0 2268 27 0.06388364 Lucene_47
 equations is reported  the integration <B>methods</B> represented include multistep <B>methods</B>  predictor-correctors   single-step <B>methods</B>  runge-kutta  and extrapolation <B>methods</B>  both polynomial and rational   the testing procedure is described together with the evaluation criteria <B>applied</B>  a set of test <B>problems</B> on which the programs were tested is included in an appendix  for the particular <B>problems</B>
59 Q0 1625 28 0.06351335 Lucene_47
on the automatic simplification of source-<B>language</B> programs <B>methods</B> of simplification that can be <B>applied</B> automatically to programs written in an algol-like <B>language</B> are discussed understanding of what the program is supposed to do  these <B>methods</B> have been implemented in a processor be shorter and may be executed faster than the original  sure is described  some of the <B>problems</B>
59 Q0 2111 29 0.06257109 Lucene_47
<B>spelling</B> correction in systems programs several specialized techniques are shown for efficiently incorporating <B>spelling</B> correction algorithms in to compilers and operating systems  these include the use of syntax and semantics <B>information</B>  the organization of restricted keyword and symbol tables  and the consideration of a limited class of <B>spelling</B> errors  sample 360 coding for performing
59 Q0 2711 30 0.062121756 Lucene_47
  s  automatic <B>information</B> <B>retrieval</B>  automatic <B>indexing</B>  content analysis  document space 3.71 3.73a vector space model for automatic <B>indexing</B> in a document <B>retrieval</B>  or other pattern matching  search requests   it appears that the best <B>indexing</B>  property  space is one where each entity lies as far away from the others as possible  in these circumstances the value of an <B>indexing</B> system may
59 Q0 1112 31 0.057673793 Lucene_47
a technique for computer detection and correction of <B>spelling</B> errors  the method described assumes that a word which cannot be found in a <B>dictionary</B> has at most one error  which might be a wrong  missing or extra letter or a single transposition  the unidentified input word is compared to the <B>dictionary</B> again  testing each time to see if the <B>words</B> match-assuming one of these errors occurred
59 Q0 3126 32 0.057420325 Lucene_47
comments on perfect <B>hashing</B> functions  a single probe retrieving method for static sets cacm february  1979 anderson  m  <B>hashing</B>  <B>hashing</B> <B>methods</B>  hash coding  direct addressing  identifier- to-address transformations  perfect <B>hashing</B> functions  perfect hash coding  reduction  retrieving  scatter storage  searching 3.7 3.74 4.34 ca790205 dh april 10  1979 4 25 pm 3041 4 3126 3126 4 3126 3176 4
59 Q0 2991 33 0.05731825 Lucene_47
 studies  cacm march  1977 clapson  p  <B>hashing</B>  <B>hashing</B> techniques  <B>hashing</B> <B>methods</B>  hash coding  keys storage  search method  collisions  synonyms  clustering  <B>information</B> <B>retrieval</B>  open addressing
59 Q0 2519 34 0.057304844 Lucene_47
on the problem of communicating complex <B>information</B> the nature of the difficulty involved in communicating mathematical results between scientists using a computer based <B>information</B> <B>retrieval</B> system is examined  the problem is analyzed in terms of psychological and <B>information</B>-processing processes written <B>natural</B> <B>language</B> by various notational and linguistic devices  the exhibition
59 Q0 2051 35 0.05674337 Lucene_47
  d  g  comparative linguistics  <B>natural</B> <B>language</B> processing  comparative method  historical <B>related</B> languages  the investigator must arrange data for input by aligning pairs of suspected cognates them  each pair of <B>words</B> is then assigned a relative value that is a function of the total frequency in the data of each correspondence found in that pair of <B>words</B>  the output is a list of all
59 Q0 1527 36 0.05552415 Lucene_47
 for the automatic <B>retrieval</B> of certain segments of stored <B>information</B>  either explicitly or implicitly represented  through questions posed in <B>natural</B> <B>language</B> sentences  this procedure makes use of a sentence and ungrammatical sentences of a <B>natural</B> <B>language</B>  it is possible to make use of a recognition device of this sort for the following reason  much data is fully expressible as a set of sentences in a <B>natural</B>
59 Q0 1331 37 0.055237472 Lucene_47
code structures for protection and manipulation of variable-length <B>items</B> when <B>items</B> are made up of a variable number of characters  each containing the same number of bits  certain control <B>information</B>  partition symbols  is inserted to mark their separations  since errors in identification of these control characters can lead to serious trouble  <B>methods</B> of protecting these symbols are indicated
59 Q0 1525 38 0.053740494 Lucene_47
 to n log2 n  a major improvement over other <B>methods</B> with computing time proportional to n 2  in this paper  the <B>fast</B> fourier transform algorithm is briefly reviewed and <B>fast</B> difference equation <B>methods</B>on computing the <B>fast</B> fourier transform cooley and tukey have proposed a <B>fast</B> algorithm with 2 15 <B>words</B> of core storage  this exceeds by a factor of eight the maximum radix two transform
59 Q0 2631 39 0.053195056 Lucene_47
an <B>information</B>-theoretic approach to text searching in direct access systems using direct access computer files of bibliographic <B>information</B>  an attempt is made to overcome one of the <B>problems</B> often associated with <B>information</B> <B>retrieval</B>  namely  the maintenance and use of large dictionaries  file organization  direct access  <B>information</B> <B>retrieval</B>  character string  bit vector 3.42 3.70 3.73
59 Q0 1939 40 0.053062387 Lucene_47
 for transformational grammar  it is currently being used with several partial grammars of <B>english</B>  cacm january  1969 friedman  j  transformational grammar  <B>natural</B> <B>language</B> syntax  <B>language</B> processing  sentencedirected random generation of sentences the problem of producing sentences of a transformational grammar by using a random generator to create phrase structure trees for input to the <B>lexical</B>
59 Q0 944 41 0.052037578 Lucene_47
  may be used to construct numeric  alphabetic or alphanumeric trees  such trees have <B>information</B> storage and <B>retrieval</B> properties applicable to <B>problems</B> involving large quantities of data or to <B>problems</B> where the quantity  word length and distribution of stored <B>information</B> is not known a priori properties is available  of prime interest is the application where a symbol table  <B>dictionary</B> or similar
59 Q0 1809 42 0.05202715 Lucene_47
numerical analysis in a ph  computer science program numerical analysis is the study of <B>methods</B> and procedures used to obtain  approximate solutions  to mathematical <B>problems</B>  much of the emphasis should emphasize an awareness of the <B>problems</B> of computer implementation and experimental procedures  nevertheless  there is a need for a solid background in <B>applied</B> mathematics  cacm december  1969
59 Q0 2484 43 0.051639102 Lucene_47
  data base  data-base management  <B>information</B> <B>retrieval</B>  <B>information</B> structure  file organizationa note on <B>information</B> organization and storage since the logical structure of a data base can be represented by a tree or graph  it is quite <B>natural</B> for us to view the process of designing a data or a graph is provided  there are three important elements in this general <B>construction</B> method  namely  a set
59 Q0 2396 44 0.05147093 Lucene_47
muse  a model to understand simple <B>english</B> muse is a computer model for <B>natural</B> <B>language</B> processing simple <B>english</B>  processes <B>english</B> sentences of unrestricted content but somewhat restricted format to demonstrate how the model interprets text  resolves ambiguities  adds <B>information</B> to memory  generalizes from examples and performs various actions  cacm january  1972 mccalla  g  i  sampson  j  r  <B>natural</B>
59 Q0 2046 45 0.051175352 Lucene_47
 traffic and <B>natural</B> growth in the types of stored <B>information</B>  existing noninferential  formatted data on relations  other than logical inference  are discussed and <B>applied</B> to the <B>problems</B> of redundancy  composition  join  <B>retrieval</B> <B>language</B>  predicate calculus  security  data integrity 3.70 3.73 3.75   a prompting service which supplies such <B>information</B> is not a satisfactory solution  activities
59 Q0 2688 46 0.05076323 Lucene_47
  <B>retrieval</B> algorithm  inverted file  multiple key <B>hashing</B> 3.70 3.73 3.74 3.79 ca740201 jb january 18  1978 1attribute based file organization in a paged memory environment the high cost of page <B>accessing</B> file and similar approaches to multi-key <B>retrieval</B>  this article analyses that cost and proposes a method called multiple key <B>hashing</B> which attempts to minimize it  since this approach is not always
59 Q0 1415 47 0.05075211 Lucene_47
automatic derivation of microsentences the decomposition of long complex <B>english</B> sentences into shorter kernel-like constituent sentences  microsentences has often been suggested as an avenue toward conducting automatic <B>retrieval</B> of <B>natural</B> <B>language</B> messages  to explore the prospects of such a step immediate prospects for improving the performance of automatic message <B>retrieval</B> systems  they may
59 Q0 2650 48 0.050253253 Lucene_47
 in <B>information</B> <B>retrieval</B>  artificial intelligence  and <B>spelling</B> correction systems  cacm may  1974 wagner  rorder-n correction for regular languages a method is presented for calculating a string b  belonging to a given regular <B>language</B> l  which is  nearest   in number of edit operations  to a given input  <B>spelling</B> correction  string best match problem  correction  corrector  errors  nondeterministic
59 Q0 2739 49 0.04908518 Lucene_47
the restriction <B>language</B> for computer grammars of <B>natural</B> <B>language</B> over the past few years  a number of systems for the computer analysis of <B>natural</B> <B>language</B> sentences have been based on augmented and perspicuous statement of restrictions of a <B>natural</B> <B>language</B> grammar  it is based on ten years for computerized <B>natural</B> <B>language</B> analysis  the <B>language</B> is used in the current implementation
59 Q0 329 50 0.0489201 Lucene_47
 to measuring the significance of <B>words</B>  word groups  and sentences  the relative-frequency approach is discussed in detail  as is its application to <B>problems</B> of automatic <B>indexing</B> and automaticautomatic abstracting and <B>indexing</B> survey and recommendations in preparation for the widespread use for the solution of <B>problems</B> of automatic analysis  cacm may  1961 edmundson  h  p  wyllys  r  e
59 Q0 1194 51 0.048507113 Lucene_47
establishment of the acm repository and principles of the ir system <B>applied</B> to its operation  is reviewed briefly  two principles are presented as paramount in the provision of <B>information</B> services   1  easy accessibility to the <B>information</B> files by users unfamiliar with file organization repository  the main features of the <B>information</B> system are direct user access via on-line
59 Q0 2987 52 0.04785045 Lucene_47
 representation  geographic <B>information</B> processing  graphic data <B>retrieval</B>  in tersection of curves  line-drawing processing  poin ts in polygons  regional boundary representation  spatial <B>information</B> examined  the set of sides are arranged in a binary tree hierarchy by inclusion  a <B>fast</B> algorithm with the various fixed-grid <B>methods</B> for representing curves and regions cacm march  1977 burton w
59 Q0 1885 53 0.047826536 Lucene_47
 of the system in detail  cacm june  1969 friedman  j  transformational grammar  <B>natural</B> <B>language</B> syntax  <B>language</B> processing  <B>language</B> analysis  sentence generation  <B>lexical</B> insertion  computational random phrase structure generator  a <B>lexical</B> insertion algorithm  an extended definition of analysis  and a simple problem-oriented programming <B>language</B> in which the algorithm for application
59 Q0 1726 54 0.04738504 Lucene_47
 nagy  g  pattern recognition  character recognition  text reading  <B>information</B> <B>retrieval</B>preliminary investigation of techniques for automated reading of unformatted text <B>methods</B> for converting unstructured printed material into computer code are experimentally investigated  an operator of telephone company meter boards  other matters <B>related</B> to the design of a general purpose page reader
59 Q0 2142 55 0.047110766 Lucene_47
reconstruction of pictures from their projections there are situations in the <B>natural</B> sciences and medicine  e g  in electron microscopy and x-ray photography  in which it is desirable to estimate straight lines  projections  at a few angles  <B>usually</B>  in such situations  the picture is far from are described  all using monte carlo <B>methods</B>  which were designed to solve this problem  the algorithms
59 Q0 2923 56 0.046760876 Lucene_47
 the control flow <B>information</B> implicit in the parse tree  the need for high-level flow analysis arises from several aspects of recent work on advanced <B>methods</B> of program certification and optimization flow <B>information</B> to reflect program changes  and derives new global <B>information</B> helpful in solving many familiar global flow analysis <B>problems</B>  an illustrative application to live variable analysis
59 Q0 2274 57 0.046536848 Lucene_47
generating <B>english</B> discourse from semantic networks a system is described for generating <B>english</B> sentences from a form of semantic nets in which the nodes are word-sense meanings and the paths  the generation algorithm uses the <B>information</B> in the semantic network to select appropriate generation paths to develop and study <B>methods</B> for generating surface strings from an underlying semantic structure
59 Q0 2141 58 0.046470948 Lucene_47
  cacm december  1971 amidon  e  l  akin  g  s  data compression  map storage  <B>information</B> <B>retrieval</B>algorithmic selection of the best method for compressing map data strings the best of a dozen different <B>methods</B> for compressing map data is illustrated  the choices are generated by encoding data strings-sequence of like codes-by three <B>methods</B> and in four directions  relationships are developed
59 Q0 1441 59 0.04619873 Lucene_47
<B>methods</B> of numerical integration <B>applied</B> to a system having trivial function evaluations a study has been made to determine which <B>methods</B> of numerical integration require the least computation time for a given amount of truncation error when <B>applied</B> to a particular system of ordinary differential equations where function evaluations are relatively trivial  recent <B>methods</B> due to butcher and gear
59 Q0 440 60 0.046189647 Lucene_47
 and other personal particulars  the underlying problem is that of making nearly maximum use of <B>items</B> of identifying <B>information</B> that are individually unreliable but that may collectively be of considerable discriminating power  rules that can be <B>applied</B> generally to name <B>retrieval</B> systems have been for demographic research purposes  these rules are described  and the ways in which <B>information</B>
59 Q0 1236 61 0.04576367 Lucene_47
the smart automatic document <B>retrieval</B> system-an illustration a fully automatic document <B>retrieval</B> hundred different <B>methods</B> are available to analyze documents and search requests  this feature is used in the <B>retrieval</B> process by leaving the exact sequence of operations initially unspecified processing <B>methods</B>  results obtained so far seem to indicate that some combination of analysis procedures
59 Q0 2883 62 0.04574487 Lucene_47
an application of heuristic search <B>methods</B> to edge and contour detection this paper presents lead to substantial improvements in computing time  moreover  if heuristic search <B>methods</B> are used are given  these show how various <B>information</B> about the shape of the contour of an object can be embedded  edge detection  contour detection  contour following  optimization <B>problems</B>  dynamic programming
59 Q0 1051 63 0.04543866 Lucene_47
multiword list <B>items</B> the list concept as originally proposed by newell  simon and shaw specified single computer <B>words</B> as elements of a list  this report describes the use of two or more consecutive <B>words</B> as one element  such use results in a considerable saving in both the space required to hold  following a brief description of standard list structures with single-word <B>items</B>  the multiword <B>items</B>
59 Q0 3053 64 0.045090307 Lucene_47
 <B>methods</B>  the new techniques provide substantially improved tables that resemble exact-solution optimal  op-code tables <B>spelling</B> dictionaries  access arrays  introduction of frequency weights further problem  backtrack programming  <B>hashing</B>  open addressing  recursion  scatter table rearrangements 3.74
59 Q0 1675 65 0.043874566 Lucene_47
a note on a relevance estimate and its improvement in this paper the effect of iterating the improvement procedure is examined  it is shown that applications of the improvement factor beyond the first time are ineffectual  and that the factor is but a scale factor  cacm november  1968 korfhage  r  r  <B>information</B> <B>retrieval</B>  relevance  <B>indexing</B>  classification 3.70 3.71 3.74 ca681104 jb february 21
59 Q0 2033 66 0.043752715 Lucene_47
  reject time   and an allowable error frequency  the new <B>methods</B> are intended to reduce the amount of space required to contain the hash-coded <B>information</B> from that associated with conventional <B>methods</B> computational factors a given set of messages  two new hash-coding <B>methods</B> are examined and compared conventional <B>methods</B>  in such applications  it is envisaged that overall performance could be improved
59 Q0 2701 67 0.04340868 Lucene_47
a <B>fast</B> and <B>usually</B> linear algorithm for global flow analysis  abstract only--complete paper jacm 23,1 january  1976  a new algorithm for global flow analysis on reducible graphs is presented are given of code improvement <B>problems</B> which can be solved using the algorithm  cacm december  1975 elimination  live-dead analysis  <B>information</B> propagation  flow graph  reducibility  go-to-less
59 Q0 1324 68 0.042974528 Lucene_47
answering <B>english</B> questions by computer  a survey fifteen experimental <B>english</B> <B>language</B> question from <B>english</B> into logical calculi  systems are classified as list-structured data-based  graphic data-based  text-based and inferential  principles and <B>methods</B> of operations are detailed of general-purpose <B>language</B> processors are seen to be concerned with measuring  dealing with ambiguities
59 Q0 2532 69 0.04235943 Lucene_47
on harrison s substring testing technique cacm march  1973 bookstein  a  string  substring  <B>hashing</B>  <B>information</B> storage and <B>retrieval</B> 3.74 5.30 5.5 ca730307 jb january 24  1978 10 30 am 2532 4 2532 2631 4 2532 2746 4 2532 3001 4 2532 2139 5 2532 2532 5 2532 2532 5 2532 2532 5 2532 2631 5 2532 2139 6 2532 2532 6 2532
59 Q0 2846 70 0.041681603 Lucene_47
  to be used in <B>information</B> <B>retrieval</B> systems  it has the same underlying m-ary tree structure as a trie  in the analysis part of the paper it will be shown that for a collection of n keys the <B>retrieval</B> time  measured of the order n  m log2 n  bits  this improvement in storage requirements and <B>retrieval</B> time is achieved  first the c-trie is analyzed as a data structure  and then several <B>methods</B> of its use
59 Q0 1619 71 0.04137422 Lucene_47
error-free <B>methods</B> for statistical computations neely has discussed computational error generated by some algorithms used to compute various statistics  in the present paper <B>methods</B> are described which are error-free  simple in concept  and <B>usually</B> less costly in machine time than those mentioned by neely  cacm march  1967 rodden  b  e  ca670310 jb february 28  1978 1 02 pm 1619 4 1619 3166 4
59 Q0 2139 72 0.04134496 Lucene_47
  substring  <B>hashing</B>  subset  signature  <B>information</B> compression  <B>information</B> <B>retrieval</B>  searching 3.74implementation of the substring test by <B>hashing</B> a technique is described for implementing the test which determines if one string is a substring of another  when there is low probability that the test will be satisfied  it is shown how the operation can be speeded up considerably if it is preceded
59 Q0 2808 73 0.04133349 Lucene_47
the lemniscate constants the lemniscate constants  and indeed some of the <B>methods</B> used for actually here of some of the <B>methods</B> used-most of the derivations can be made by elementary <B>methods</B> material  the acceleration <B>methods</B> developed for the purpose of evaluating these constants are useful in other <B>problems</B>  cacm january  1975 todd  j  lemniscate  acceleration  elliptic functions  euler
59 Q0 2764 74 0.04094342 Lucene_47
an intelligent analyzer and understander of <B>english</B> the paper describes a working analysis and generation program for <B>natural</B> <B>language</B>  which handles paragraph length input  its core is a system of preferential choice between deep semantic patterns  based on what we call  semantic density linguistics  template  paraplate  stereotype  machine translation  understanding  <B>natural</B> <B>language</B>
59 Q0 2092 75 0.040379714 Lucene_47
a deductive question-answer for <B>natural</B> <B>language</B> inference the question-answering aspects of the protosynthex iii pro totype <B>language</B> processing system are described and exemplified in detail  f  simmons  r  f  question answering  <B>natural</B> <B>language</B>  protosynthex iii  lisp  semantics  artificial intelligence  computational linguistics  <B>language</B> processing  fact <B>retrieval</B> 3.42 3.61 ca700306
59 Q0 727 76 0.039597064 Lucene_47
on the approximate solution of delta u  f u  three-dimensional dirichlet <B>problems</B> for delta u  f u   fu  gt   0  are treated numerically by an exceptionally <B>fast</B>  exceptionally accurate numerical method  programming details  numerous examples and mathematical theory are suppliedxtension of the method in a <B>natural</B> way to n-dimensional <B>problems</B> is indicated by means of a 4-dimensional example  cacm
59 Q0 1487 77 0.039071582 Lucene_47
 of <B>natural</B> <B>language</B> conversation between man and computer possible  input sentences are analyzed on the basis of decomposition rules which are triggered by key <B>words</B> appearing in the input text  responses technical <B>problems</B> with which eliza is concerned are   1 the identification of key <B>words</B>   2eliza-a computer program for the study ofnatural <B>language</B> communication between man and machine
59 Q0 2916 78 0.03904453 Lucene_47
 complexity  <B>information</B> <B>retrieval</B>  linear time bound  pattern matching  text editing 3.74 4.40 5.25 ca771010a <B>fast</B> string searching algorithm an algorithm is presented that searches for the location   i operation  the characters of pat are matched starting with the last character of pat  the <B>information</B> inspected  on the average  decreases as a function of the length of pat  for a random <B>english</B>
59 Q0 2233 79 0.038888786 Lucene_47
 as to yield new clues and deeper insights into their <B>construction</B>  for the benefit of the uninitiated  the encoding method used in the second cypher employs a specified document whose <B>words</B> are simply numbered consecutively  and first letters of these <B>words</B> are sought out at random to match the letters of these <B>words</B> are sought out at random to match the letters of the clear text or message
59 Q0 1206 80 0.03877595 Lucene_47
 the limits of reliability of each measured item of <B>information</B>  are used to compute the maximum permitted to discard wrong <B>information</B> and to compute mean values of the parameters and their mpe s in terms  otherwise intractable <B>problems</B> are easily solved  and the design of many experiments is greatly  inadequacies in the statistical and graphical <B>methods</B> of curve fitting are noted  cacm august  1965
59 Q0 3120 81 0.03787341 Lucene_47
 both conceptually and in practice because he can forget these <B>problems</B> at the outset and he avoids special processing for each problem  this technique has been <B>applied</B> to the <B>construction</B> of an algol because of a forward reference to <B>information</B> only obtainable from subsequent entities  classic
59 Q0 1886 82 0.03784287 Lucene_47
 procedure is <B>applied</B> which orders the factors and expressions such that all <B>information</B> is computedgeneration of optimal code for expressions via factorization given a set of expressions which are to be compiled  <B>methods</B> are presented for increasing the efficiency of the object code produced feasible  heuristic procedures are <B>applied</B>  and hence global optimal results are not necessarily
59 Q0 2968 83 0.03782946 Lucene_47
 of algorithms  <B>information</B> storage and <B>retrieval</B> 3.7 3.72 3.74 5.31 ca770504 jb december 29  1977 2 16 am analysis of code is also presented at a level believed to be <B>language</B>-and compiler-independent are given for an efficient use of the <B>methods</B>  if insertion and subsequent queries are the only
59 Q0 2906 84 0.037404545 Lucene_47
a very high level programming <B>language</B> for data processing applications application development explored as a solution to this problem  the business definition <B>language</B>  bdl  is such a <B>language</B>  one aimed at business data processing <B>problems</B>  the concepts in bdl mimic those which have evolved through the years in businesses using manual <B>methods</B>  this results in three different sublanguages
59 Q0 891 85 0.037326314 Lucene_47
everyman s <B>information</B> <B>retrieval</B> system the <B>information</B> <B>retrieval</B> problem whose solution  is quite general and is applicable to many different types of <B>retrieval</B> <B>problems</B>  further the method of solution makes it possible for many groups who have previously dismissed an <B>information</B> <B>retrieval</B>  for the present solution makes it possible to install an <B>information</B> <B>retrieval</B> program in less than
59 Q0 2032 86 0.037074346 Lucene_47
 structures  file structures  scatter tables  <B>hashing</B> functions  <B>information</B> <B>retrieval</B> 3.70 3.74 ca700705file structures using <B>hashing</B> functions a general method of file structuring is proposed which uses a <B>hashing</B> function to define tree structure  two types of such trees are examined  and their relation to trees studied in the past is explainedesults for the probability distributions of path lengths
59 Q0 2523 87 0.036853705 Lucene_47
 according to criteria based on topology and size  the method has been <B>applied</B> to the <B>construction</B>a region coloring technique for scene analysis a method of converting a picture into a  cartoon  or  map  whose regions correspond to differently textured regions is described  texture edges in the picture are detected  and solid regions surrounded by these  <B>usually</B> broken  edges are  colored
59 Q0 2516 88 0.036757715 Lucene_47
hierarchical storage in <B>information</B> <B>retrieval</B> a probabilistic analysis is employed to determine the effect of hierarchical storage organizations on <B>information</B> <B>retrieval</B> operations  the data storage  1973 salasin  j  <B>information</B> <B>retrieval</B>  hierarchical storage 3.70 3.72 3.73 3.74 3.79 3.90 6.20 of <B>fast</B> semiconductor memory  computer core memory  extended core storage  disk memory  and data cells
59 Q0 1457 89 0.036639154 Lucene_47
data manipulation and programming <B>problems</B> in automatic <B>information</B> <B>retrieval</B> automatic <B>information</B> <B>retrieval</B> programs require the manipulation of a variety of different data structures  including are made for the design of programming facilities to aid in <B>information</B> <B>retrieval</B>  cacm march  1966 in automatic <B>information</B> systems are first briefly reviewed  a variety of data representations
59 Q0 2140 90 0.036334205 Lucene_47
  <B>information</B> <B>retrieval</B>  query  multi-attribute <B>retrieval</B>  file update 3.73 3.74 3.79 ca711203 jb<B>retrieval</B>-update speed tradeoffs using combined indices in a paper in the november 1970 communications of the acm  v  y  lum introduced a technique of file <B>indexing</B> named combined indices  this technique permitted decreased <B>retrieval</B> time at the cost of increased storage space  this paper examines
59 Q0 2000 91 0.036143743 Lucene_47
 that the variation is nearly twice as <B>fast</B> on some <B>problems</B> in the latter context  cacm septembera variation of the goodman-lance method for the solution of two-point boundary value <B>problems</B>  and <B>applied</B> to give a significant variation of the goodman-lance method for the solution of two-point boundary value <B>problems</B>  the resulting method applies in particular to the numerical solution of optimal
59 Q0 3134 92 0.036091316 Lucene_47
the use of normal multiplication tables for <B>information</B> storage and <B>retrieval</B> this paper describes a method for the organization and <B>retrieval</B> of attribute based <B>information</B> systems  using the normal an d <B>retrieval</B> of <B>information</B> are described  this method is particularly suitable for queries requesting a group of <B>information</B> <B>items</B>  all of which possess a particular set of attributes  and possibly
59 Q0 2265 93 0.03603023 Lucene_47
 and operands are compatible  the activity of answering this question is <B>usually</B> called type checking characterizes the type relations within the program and eliminates all other <B>information</B>  the determination  and the attendant <B>problems</B> faced for any notion of type checking are discussed  cacm november  1972 ledgard  h  compiler writing  <B>language</B> implementation  formal definition 4.12 4.22 5.2 5.21 5.23 ca721104 jb
59 Q0 1856 94 0.03538091 Lucene_47
the teachable <B>language</B> comprehender  a simulation program and theory of <B>language</B> the teachable <B>language</B> comprehender  tlc  is a program designed to be capable of being taught to  comprehend  <B>english</B> of <B>language</B> comprehension  cacm august 1969 quillian  m  r  <B>natural</B> <B>language</B> processing  <B>natural</B> <B>language</B> now corresponds to a general process for comprehending <B>language</B>  and it provides a methodology
59 Q0 2623 95 0.034710206 Lucene_47
 <B>information</B> coding techniques  cacm august  1974 hahn  b  file maintenance  <B>information</B> <B>retrieval</B>a new technique for compression and storage of data the widespread tendency toward storage of large programs and blocks off text has produced a need for efficient <B>methods</B> of compressing and storing data  this paper describes techniques that can  in most cases  decrease storage size by a factor
59 Q0 2733 96 0.03428709 Lucene_47
deterministic parsing of ambiguous grammars <B>methods</B> of describing the syntax of programming languages in ways that are more flexible and <B>natural</B> than conventional bnf descriptions are considered  these <B>methods</B> involve the use of ambiguous context-free grammars together with rules to resolve  programming <B>language</B> specification  parser generation  translator writing systems  syntax analysis  lr
59 Q0 1808 97 0.033342116 Lucene_47
 to maintain the confidentiality of <B>information</B> processed by computers are dealt with  special emphasis is paid to the unique characteristics of computer files that make many cryptographic <B>methods</B> of little use  relative security  costs  and preferred <B>methods</B> are included in this paper  cacm december  1969 <B>information</B> processing 1.3 2.12 2.19 3.73 3.81 4.41 ca691204 jb february 15  1978 4 20 pm 1808 5
59 Q0 2985 98 0.033335503 Lucene_47
 is prerequisite to any change taking place  the research <B>methods</B> of behavioral science are <B>applied</B>effects of chargeout on user manager attitudes the relationship of in ternal pricing systems for computer services  chargeout systems  and user management attitudes about their computer-based <B>information</B> systems is investigated  evidence is provided that the relationship conforms to a general
59 Q0 2715 99 0.03320298 Lucene_47
implementation of a structured <B>english</B> query <B>language</B> the relational model of data  the xrm relational memory system  and the sequel <B>language</B> have been covered in previous papers and are reviewed is described  the interpreter is designed to minimize the data <B>accessing</B> operations required to respond october  1975 astrahan  m  m  chamberlin d  d  relational model  query <B>language</B>  nonprocedural <B>language</B>
59 Q0 292 100 0.03263302 Lucene_47
an <B>information</B> <B>retrieval</B> <B>language</B> for legal studies cacm september  1961 kehl  w  b  horty  j  f  bacon  c  r  t  mitchell  d  s  ca610902 jb march 16  1978 9 51 pm 292 5 292 292 5 292 292 5 292
*************Query 60*************************

60 Q0 2967 1 0.18360819 Lucene_47
a comparison of <B>hardware</B> and <B>software</B> <B>associative</B> memories in the context of computer graphics the <B>associative</B> processing of line drawings  apld  <B>system</B> utilizes a <B>hardware</B> <B>associative</B> memory with the <B>software</B> simulation illustrates the advantages of the <B>hardware</B> <B>associative</B> memory in three of <B>hardware</B> <B>associative</B> memory technology  namely input output and cost effectiveness  are also
60 Q0 2311 2 0.118834205 Lucene_47
 developer are examined  cacm july  1972 benjamin  <B>r</B>  i  computing milieu  <B>management</B> data processing  <B>hardware</B> <B>systems</B>  <B>software</B> <B>systems</B>  <B>systems</B> development process  functional <B>systems</B>  <B>management</B>a generational perspective of information <B>system</B> development <B>system</B> development is categorized from a generational point of view that parallels the commonly described computing <B>system</B> generations
60 Q0 3026 3 0.114385195 Lucene_47
 computer series  computer architecture  multiprocessing languages  data <B>management</B> <B>systems</B>  <B>end</B> series <B>systems</B> are sperry univac s large-scale main frame computer <B>systems</B>  beginning with the 1107 in 1962  the 1100 series has progressed through a succession of eight compatible computer <B>models</B> to the latest <B>system</B>  the 1100 80  introduced in 1977  the 1100 series <B>hardware</B> architecture is based
60 Q0 3087 4 0.11279236 Lucene_47
an english language question answering <B>system</B> for a large <B>relational</B> <B>database</B> by typing requests in english  casual users will be able to obtain explicit answers from a large <B>relational</B> <B>database</B> of this <B>system</B> to others  cacm july  1978 waltz  d  question answering  <B>relational</B> <B>database</B>  natural for the <B>relational</B> <B>database</B>  and optimize the order of searching relations  methods are discussed
60 Q0 2593 5 0.10998797 Lucene_47
a <B>back</B>-<B>end</B> computer for data base <B>management</B> it is proposed that the data base <B>management</B> function be placed on a dedicated <B>back</B>-<B>end</B> computer which accepts commands  in a relatively high level are discussed  an experimental implementation  called the experimental data <B>management</B> <B>system</B>  xdms  is described and certain conclusions about the <B>back</B>-<B>end</B> approach are drawn from this implementation  cacm
60 Q0 1518 6 0.092140906 Lucene_47
 an experimental model of <B>system</B> 360-its <B>hardware</B>  <B>software</B>  and its environment  the measures of <B>system</B> performance produced by the model consist of statistics <B>relating</B> to turnaround time  throughput  <B>hardware</B>an experimental model of <B>system</B> 360 the problem of predicting the performance of modern computer <B>systems</B> is formidable  one general technique which can ease this problem is macroscopic simulation
60 Q0 2812 7 0.09120625 Lucene_47
computer-aided analysis and design of information <B>systems</B> this paper describes the use of computer-aided analysis for the design and development of an integrated financial <B>management</B> <B>system</B>  information <B>systems</B>  logical <B>system</B> design  problem statement language  problem statement analyzer  physical <B>system</B> design  accurately defined <B>systems</B>  <B>systems</B> optimization and design algorithm 2.44
60 Q0 1750 8 0.081174225 Lucene_47
 the multiprogramming performance of a multicomputer <B>system</B> is discussed  the general design of the <B>hardware</B> arrangement and the <B>software</B> components and functions of such a <B>system</B> are based on a plannedconsiderations in the design of a multiple computer <B>system</B> with extended core storage the use of such a design  <B>special</B> emphasis is placed on estimating expected gains when compared
60 Q0 3137 9 0.0754685 Lucene_47
 processing  <B>system</B> design  cost minimization  distributed <B>database</B>  interactive computing  economica methodology for the design of distributed information <B>systems</B> a macro model of a distributed information <B>system</B> in presented  the model describes the major costs of using an information <B>system</B> from the perspective of the <B>end</B>-user  the making evident the effect of various design and operating
60 Q0 695 10 0.07544211 Lucene_47
  physical characteristics of the two-<B>disk</B> <B>system</B>  4,194,304 72-bit words  8 usec-per-word transmission rate  <B>etc</B>   are noted  timing limitations due to arm motion and <B>disk</B> rotation are discussed  applications of <B>disk</B> usage are discussed separately for problem programs and for <B>systems</B> programs and weaknesses or limitations of the <B>disk</B> <B>system</B>  several possible future applications are noted which
60 Q0 1844 11 0.073148996 Lucene_47
 <B>system</B> if compatible <B>computers</B> are used  cacm october  1969 baskin  h  b  horowitz  e  b  tennison  <B>r</B>  d terminal  a crosspoint switching <B>network</B> allows any such <B>disk</B> drive to be connected to any computer-sharing <B>computers</B> and has the potential of a highly available <B>system</B> at relatively low cost response <B>system</B>  modular constructed <B>systems</B>  modular computer-sharing <B>systems</B>  graphics  file switch
60 Q0 3049 12 0.072201364 Lucene_47
 and output functional capabilities  sembegs is built around a basic graphical data <B>management</B> <B>system</B>a simply extended and modified batch environment graphical <B>system</B>  sembegs  sembegs is a complete batch environment graphical <B>system</B> containing components for handling graphical data files  for displaying the contents of these files on a variety of graphical <B>hardware</B>  and for performing graphical
60 Q0 3025 13 0.0721947 Lucene_47
 a price range of five to one  the origin and evolution of the <B>hardware</B>  operating <B>system</B>  and languages to time sharing computing <B>systems</B>  transferring <B>hardware</B> technology within dec  and elsewhere  to minicomputer design and manufacturing  supporting minicomputer <B>hardware</B> and <B>software</B> developmentthe evolution of the dec <B>system</B> 10 the dec <B>system</B> 10  also known as the pdp-10  evolved from
60 Q0 2516 14 0.07217938 Lucene_47
<B>hierarchical</B> storage in information retrieval a probabilistic analysis is employed to determine the effect of <B>hierarchical</B> storage organizations on information retrieval operations  the data storage <B>hardware</B> is assumed to consist on n-levels of linearly connected memory <B>hardware</B> with increasing data access times and increasing data storage capabilities  a <B>system</B> might  for example  consist
60 Q0 2151 15 0.07160667 Lucene_47
 of <B>software</B> <B>systems</B> is followed by a description of a <B>hardware</B> and <B>software</B> scheme for measuring user for the implementation of such a <B>system</B> and the characteristics of this implementation are reported  a scenario showing the <B>system</B> in use is presented  finally  it is shown how other time-sharing <B>systems</B> may  multiprogramming <B>systems</B>  time-sharing <B>systems</B>  <B>software</B> measurement  user program measurement
60 Q0 2424 16 0.070065744 Lucene_47
 independent <B>hardware</B> and <B>software</B>  the dynamic verification of operating <B>system</B> decisions is used <B>system</B> which does not make certain decisions improperly even in the presence of a single <B>hardware</B> or <B>software</B> fault the amount of additional <B>hardware</B> and <B>software</B> required for dynamic verification can be modest  cacm november  1973 fabry  <B>r</B>  s  operating <B>systems</B>  data security  fault tolerance
60 Q0 3136 17 0.06723648 Lucene_47
 as to be meaningless  multiple-regression <B>models</B> predicting <B>system</B> cost as a function of several <B>hardware</B>price performance patterns of u  computer <B>systems</B> econometric <B>models</B> of the u  computer market have been developed to study the relationships between <B>system</B> price and <B>hardware</B> performance  single market for larger  general purpose computer <B>systems</B>  the other market is the developing one
60 Q0 3142 18 0.06681365 Lucene_47
 to errors-to a failure to correct them  what can be learned by designers of large <B>management</B> <B>packages</B> organizations and their public  also the role of poor man agement <B>packages</B> including poor <B>software</B> is indicated  while most <B>management</B> <B>systems</B> may be adequate  results of the survey raise concerns for instance   cacm may  1979 sterling  t  errors  <B>systems</B> errors  billing errors  <B>management</B> <B>systems</B>
60 Q0 2988 19 0.06677874 Lucene_47
 use nonpaged memories  cacm march  1977 brown  <B>r</B>  m  browne  j  c  chandy  k  m  memory <B>management</B>  <B>system</B> performance  queueing <B>network</B> <B>models</B>  in teractive computer <B>systems</B> 4.32 ca770304 jb december <B>network</B> <B>models</B> of computer <B>systems</B>  empirical analyses and analytic studies based on applyingmemory <B>management</B> and response time this paper presents a computationally tractable methodology
60 Q0 3092 20 0.06557074 Lucene_47
characteristics of application <B>software</B> maintenance maintenance and enhancement of application <B>software</B> consume a major portion of the <B>total</B> life cycle cost of a <B>system</B>  rough estimates of the <B>total</B> <B>systems</B> and programming resources consumed range as high as 75-80 percent in each category  however indicate that   1  maintenance and enhancement do consume much of the <B>total</B> resources of <B>systems</B>
60 Q0 1325 21 0.06513027 Lucene_47
remote  on-line  real-time computer diagnosis of the clinical electrocardiogram presented in this paper is a brief report on the <B>hardware</B>  <B>software</B>  <B>system</B> configuration and function of a <B>system</B> capabilities of the present <B>system</B> are particularly concerned with increasing the fidelity of the adaptive  tree-<B>like</B> branching decisions early in the diagnostic process  cacm january  1965 whipple  g  h
60 Q0 2817 22 0.064000465 Lucene_47
the notions of consistency and predicate locks in a <B>database</B> <B>system</B> in <B>database</B> <B>systems</B>  users that a transaction needs to lock a logical rather than a physical subset of the <B>database</B>  these subsets may condition is suggested  cacm november  1976 eswarran  k   gray  j   lorie  <B>r</B>   traiger  i  l  consistency  lock  <B>database</B>  concurrency  transaction 4.32 4.33 ca761106 jb january 3  1978 3 14 pm 2155 4 2817
60 Q0 1572 23 0.0611633 Lucene_47
the simulation of time sharing <B>systems</B> the development of new large scale time-sharing <B>systems</B> has raised a number of problems for computation center <B>management</B>  not only is it necessary to develop an appropriate <B>hardware</B> configuration for these <B>systems</B>  but appropriate <B>software</B> adjustments must be made  unfortunately  these <B>systems</B> often do not respond to changes in the manner that intuition
60 Q0 2718 24 0.059945654 Lucene_47
a preliminary <B>system</B> for the design of dbtg data structures the functional approach to <B>database</B> used to generate declaratives  cacm october  1975 gerritsen  <B>r</B>  <B>network</B> model of databases  data base task group  <B>database</B> design  data structure  automatic programming  translation  nonprocedural is capable of supporting a set of anticipated queries rather than a structure which  <B>models</B> the business
60 Q0 1409 25 0.056930397 Lucene_47
 easily modifiable <B>hardware</B> for basic research in computer <B>systems</B> design  an unusual arrangement mc as memory  the design objectives as originally conceived in a <B>special</B> seminar were   1 results in an effective zero latency time and provides possibilities for an <B>associative</B> memory arithmetic and control registers throughout  all <B>hardware</B> development has been aimed toward the concept
60 Q0 1774 26 0.056707285 Lucene_47
 techniques are explained as a function of machine <B>hardware</B> and other <B>system</B> features  the implementation of semiautomatic overlay facility in a multiprogrammed <B>system</B> on the cdc 6600 is described in detail  with <B>special</B> reference to real time applications  cacm february  1968 pankhurst  <B>r</B>  j  loadersprogram overlay techniques the general features of program overlay <B>systems</B> are described  three
60 Q0 2882 27 0.055825416 Lucene_47
a stochastic evaluation model for <B>database</B> organization in data retrieval <B>systems</B> experimental work in the valuation of large scale data retrieval <B>systems</B> has been scarce due to its difficulty and prohibitive cost  this paper discusses a simulation model of a data retrieval <B>system</B> which has  these data retrieval <B>systems</B> can be organized under several <B>database</B> organizations  including
60 Q0 2536 28 0.050775073 Lucene_47
 telecommunications i o within an operating <B>system</B> are discussed  and it is shown how the decentralization of intelligence acquired by front-<B>end</B> processing vastly simplifies the problem  a specific implementation is discussed with emphasis on the main processor-minicomputer link  the <B>hardware</B>-<B>software</B>telecommunications using a front-<B>end</B> minicomputer the use of a front-<B>end</B> minicomputer to provide
60 Q0 2358 29 0.050613035 Lucene_47
  c  t  daley  <B>r</B>  c  operating <B>system</B>  multics  virtual memory  segmentation  information sharingthe multics virtual memory  concepts and design as experience with use of on-line operating <B>systems</B> has grown  the need to share information among <B>system</B> users has become increasingly apparent  many contemporary <B>systems</B> permit some degree of sharing  usually  sharing is accomplished by allowing
60 Q0 2002 30 0.049508974 Lucene_47
amesplot-a higher level data plotting <B>software</B> <B>system</B> amesplot is an extensible <B>software</B> <B>system</B> designed to make the display of data as simple  painless  and neat as possible  the <B>system</B> described automatically by the <B>software</B> <B>system</B> unless the user specifies otherwise  the structuring of plots syntax  <B>hardware</B> independent <B>software</B>  display device independent <B>software</B>  plot elements  self-scaled
60 Q0 2396 31 0.0467521 Lucene_47
muse  a model to understand simple english muse is a computer model for natural language processing  based on a semantic memory <B>network</B> <B>like</B> that of quillian s tlc  muse  from a model to understand and <B>special</B> purpose rules  the  <B>relational</B> triple  notation used during interpretation of input from examples and performs various actions  cacm january  1972 mccalla  g  i  sampson  j  <B>r</B>  natural
60 Q0 2138 32 0.045675527 Lucene_47
bliss  a language for <B>systems</B> programming a language  bliss  is described  this language is designed so as to be especially suitable for use in writing production <B>software</B> <B>systems</B> for a specific machine  the pdp-10   compilers  operating <B>systems</B>  <B>etc</B>  prime design goals of the design are the ability to produce highly efficient object code  to allow access to all relevant <B>hardware</B> features
60 Q0 2375 33 0.04508551 Lucene_47
 to measure <B>total</B> performance including <B>system</B> oriented and individual request oriented measuresa comparative analysis of <B>disk</B> scheduling policies five well-known scheduling policies for movable head disks are compared using the performance criteria of expected seek time  <B>system</B> oriented algorithm are discussed  cacm march  1972 teorey  t  j  pinkerton  t  b  access time  analytical <B>models</B>
60 Q0 2318 34 0.044242084 Lucene_47
the role of computer <B>system</B> <B>models</B> in performance evaluation <B>models</B> constitute a useful means of investigating computer <B>system</B> performance  this paper examines the interrelationships between <B>models</B> and other methods for evaluating the performance of computer <B>systems</B> and establishes circumstances  performance  analytic-<B>models</B>  simulation-<B>models</B>  <B>system</B>-<B>models</B> 2.43 2.44 6.2 8.3 ca720710 jb january
60 Q0 2876 35 0.044011436 Lucene_47
intentional resolution of privacy protection in <B>database</B> <B>systems</B> traditionally  privacy protection in <B>database</B> <B>systems</B> is understood to be the control over what information a given user can get from a <B>database</B>  this paper is concerned with another  independent  dimension of privacy protection by the <B>database</B>  the ability to condition the supply of information on its intended use is called here
60 Q0 2738 36 0.043863896 Lucene_47
 of examples from <B>hardware</B> and <B>software</B> are given as illustrations of the method  cacm july  1975 parnas  d  l  siewiorek  d  p  <B>hierarchical</B> <B>systems</B>  bottom up design  levels of abstractionuse of the concept of transparency in the design of hierarchically structured <B>systems</B> this paper deals with the design of hierarchically structured programming <B>systems</B>  it develops a method
60 Q0 2624 37 0.043152038 Lucene_47
-generation-<B>like</B> computer <B>system</B> is developed  formal techniques are used to derive precise sufficient  goldberg  <B>r</B>  p  operating <B>system</B>  third generation architecture  sensitive instruction  formalformal requirements for virtualizable third generation architectures virtual machine <B>systems</B> have been implemented on a limited number of third generation computer <B>systems</B>  e g  cp-67 on the ibm 360
60 Q0 2198 38 0.04313537 Lucene_47
 of the full report  cacm may  1971 <B>codasyl</B> <B>systems</B> committee data base <B>management</B> <B>systems</B>  programmingintroduction to  feature analysis of generalized data base <B>management</B> <B>systems</B>  this paper <B>management</B> <B>systems</B>  this introduction gives a review of the current state of the art in these <B>systems</B> and discusses the differences and similarities between capabilities found in host language <B>systems</B>
60 Q0 3089 39 0.042123456 Lucene_47
  and the <B>system</B> saturation point  cacm june  1978 gelenbe  e  derochette  d  <B>database</B> reliability  file <B>systems</B>  checkpoints  recovery procedures  checking techniques  reliability and <B>system</B> performanceperformance of rollback recovery <B>systems</B> under intermittent failures a mathematical model of a transaction-oriented <B>system</B> under intermittent failures is proposed  the <B>system</B> is assumed to operate
60 Q0 698 40 0.04211636 Lucene_47
data-dial  two-way communication with <B>computers</B> from ordinary dial telephones an operating <B>system</B> is described which allows users to call up a remotely located computer from ordinary dial telephones  no <B>special</B> <B>hardware</B> or connections are required at the users  telephones  input to the computer is through the telephone dial output from the computer is in spoken form  results of a test
60 Q0 2298 41 0.040523667 Lucene_47
 placed on the early results achieved in this research  cacm august  1972 rosin  <B>r</B>  f  frieder  g  eckhouse jr   <B>r</B>  h  microprogramming  emulation  computer <B>systems</B>  language processors  input-output <B>systems</B>  nano-program  project <B>management</B>  <B>hardware</B> evaluation 4.1 4.2 4.3 6.2 ca720804 jb january 30
60 Q0 3127 42 0.04043052 Lucene_47
 with quite different architectures  both the <B>system</B> and application programs which use it are written in a high-level language  because the <B>system</B> is implemented by the same <B>software</B> on different <B>hardware</B>thoth  a portable real-time operating <B>system</B> thoth isa real-time operating <B>system</B> which is designed  sager  g  portability  real time  operating <B>systems</B>  minicomputer 3.80 4.30 4.35 ca790206 dh april
60 Q0 2859 43 0.040417697 Lucene_47
 are valid for a much larger class of <B>models</B>  including those more nearly <B>like</B> real <B>systems</B> that the simpleinterference in multiprocessor computer <B>systems</B> with interleaved memory this paper analyzes results are computed for a simple model of such a <B>system</B>  the limiting value is derived for the relative degree of memory interference as the <B>system</B> size increases  the model of the limiting behavior
60 Q0 1199 44 0.040120028 Lucene_47
a computer center simulation project today s computation centers are based on rapidly changing technologies of <B>hardware</B> and <B>software</B> <B>systems</B>  it is difficult  therefore  to base decisions on experience  in most instances  the benefits of comparable experience for a given problem situation are not available  in this paper  a mathematical model of the lockheed central computer center is formulated
60 Q0 1754 45 0.039800297 Lucene_47
dynamic storage allocation <B>systems</B> in many recent computer <B>system</B> designs  <B>hardware</B> facilities have storage allocation <B>systems</B>-according to the functional capabilities provided and the underlying the utility of various <B>hardware</B> facilities may be assessed  a brief survey of storage allocation facilities in several representative computer <B>systems</B> is included as an appendix  cacm may  1968
60 Q0 2740 46 0.039603617 Lucene_47
 structuring of operating <B>systems</B>  the project <B>management</B> and the performance are discussed  too  deadlock  deadly embrace  <B>hierarchical</B> structuring  multiprogramming  operating <B>system</B> structurea large semaphore based operating <B>system</B> the paper describes the internal structure of a large operating <B>system</B> as a set of cooperating sequential processes  the processes synchronize by means
60 Q0 1366 47 0.03918063 Lucene_47
 in comparing <B>software</B> <B>packages</B> for digital <B>computers</B> are discussed in part i  the issue is obvious  users of digital <B>computers</B> must choose from available languages or write their own  substantial costs of simulation are discussed with <B>special</B> attention being paid to a distinction between continuous and discrete change <B>models</B>  part iii presents a detailed comparison of six simulation languages and <B>packages</B>
60 Q0 2016 48 0.03787718 Lucene_47
the instrumentation of multics an array of measuring tools devised to aid in the implementation of a prototype computer utility is discussed  these tools include <B>special</B> <B>hardware</B> clocks and data  performance measurement  multiprogramming <B>systems</B>  measuring tools  <B>system</B> analysis  multics  metering  some particular measurements of interest in a <B>system</B> which combines demand paging
60 Q0 2816 49 0.03780307 Lucene_47
optimal reorganization of distributed space <B>disk</B> files in most <B>database</B> organizations  the cost of accessing the <B>database</B> will increase due to structural changes caused by updates and insertions  by reorganizing the <B>database</B> the access costs can be reduced  a basic problem is to establish the optimum points at which to reorganize a <B>database</B>  a <B>disk</B> file organization which allows
60 Q0 2625 50 0.037780147 Lucene_47
 july  1974 fabry  <B>r</B>  s  addressing  capabilities  addressing <B>hardware</B>  protection  protection <B>hardware</B>  these inadequacies are traced to the lack of an efficient absolute address for objects in these <B>systems</B>  the direct that the use of tags to identify capabilities will dominate  a <B>hardware</B> address translation scheme  the hash table is avoided for recently accessed segments by means of a set of <B>associative</B> registers
60 Q0 1698 51 0.03777445 Lucene_47
a statistical model for console behavior in multiuser <B>computers</B> the ability of a computer <B>system</B>  cacm september  1968 denning  p  j  statistical <B>models</B> for input-output  operating <B>system</B> design a hypothetical  virtual console   no claim is made that a virtual console behaves <B>like</B> any actual console  but the entire collection of virtual consoles <B>models</B> the collection of actual consoles  using
60 Q0 3164 52 0.037205826 Lucene_47
  list processing  data structures  topological sort  acyclic digraph  <B>database</B> integrity  <B>network</B>progressive acyclic digraphs-a tool for <B>database</B> integrity a progressive acyclic digraph  pad in certain areas of <B>database</B> implementation in which there are constraints on the permissible sequences is considerably faster  though both are asymptotically o nr   where n is the number of nodes and <B>r</B>
60 Q0 2380 53 0.036952317 Lucene_47
tenex  a paged time sharing <B>system</B> for the pdp-10 tenex is a new time sharing <B>system</B> implemented on dec pdp-10 augmented by <B>special</B> paging <B>hardware</B> developed at bbn  this report specifies a set of goals which are important for any time sharing <B>system</B>  it describes how the tenex design to achieve a <B>system</B> operational within six months of <B>hardware</B> checkout  tenex has met its major goals
60 Q0 3070 54 0.03679855 Lucene_47
  and a central-server queueing <B>network</B> <B>models</B> the use of <B>system</B> processors  the accuracy and efficiencyhybrid simulation <B>models</B> of computer <B>systems</B> this paper describes the structure and operation to produce efficient yet accurate <B>system</B> <B>models</B>  in an example based on a simple hypothetical  h  performance evaluation  simulation  queueing <B>network</B> <B>models</B>  central server model 4.32 4.35 8.1
60 Q0 3011 55 0.036464706 Lucene_47
<B>management</B> utilization of <B>computers</B> in american local governments traditional concepts of <B>management</B> information <B>systems</B>  mis  bear little relation to the information <B>systems</B> currently in use by top <B>management</B> in most us local governments  what exists is <B>management</B>-oriented computing  involving information  cacm march  1978 dutton  w  kraemer  k  computer utilization  <B>management</B> information <B>system</B>
60 Q0 1752 56 0.0364413 Lucene_47
  time-sharing  operating <B>systems</B>  resource <B>management</B>  task scheduling  paging  <B>system</B> simulationresource <B>management</B> for a medium scale time-sharing operating <B>system</B> task scheduling and resource emphasis is placed on balancing the <B>system</B> performance relative to the characteristics of all the <B>system</B> resources  simulation results relative to alternate <B>hardware</B> characteristics and the effects
60 Q0 3059 57 0.035998408 Lucene_47
<B>models</B> for parallel processing within programs  application to cpu i o and i o i o overlap approximate queueing <B>models</B> for internal parallel processing by individual programs in a multiprogrammed <B>system</B> are developed in this paper  the solution technique is developed by <B>network</B> decomposition  multiprogramming  parallel processing  queueing <B>network</B> <B>models</B>  multiprocessing of computation and i o 4.32
60 Q0 2948 58 0.03591327 Lucene_47
a terminal-oriented communication <B>system</B> this paper describes a <B>system</B> for full-duplex communication between a time-shared computer and its terminals  the <B>system</B> consists of a communications computer directly connected to the time-shared <B>system</B>  a number of small remote <B>computers</B> to which  error correction  multiplexing  local echoing  communication <B>system</B>  <B>network</B> 3.81 4.31 ca770704 jb
60 Q0 2359 59 0.034784634 Lucene_47
  isam  is one of the most important file <B>management</B> <B>systems</B> used with moveable head <B>disk</B> devices techniques  these conditions are  long overflow chains with significant overflow  lack of tight <B>disk</B> space constraints  record keys which are small compared to the <B>total</B> record size  and significant to locate a record is dependent not on the <B>total</B> volume of overflow records as in conventional isam
60 Q0 2888 60 0.03468261 Lucene_47
information reference coding items in business <B>systems</B> have to be identified by reference codes  which can later be used as data codes and file keys in an associated data processing <B>system</B>  in business <B>systems</B> associated with large collections of integrated files  <B>database</B>  it is vital to assign-theoretic information model  cacm january  1976 florentin  j  j  data  file  reference code  <B>systems</B>
60 Q0 2710 61 0.03465222 Lucene_47
specifying queries as <B>relational</B> expressions  the square data sublanguage this paper presents specialists  square is based on the <B>relational</B> model of data  and is shown to be relationally on the <B>relational</B> calculus  facilities for query  insertion  deletion  and update on tabular data bases based on english key words for users with limited mathematical background  cacm november  1975 boyce  <B>r</B>
60 Q0 1962 62 0.03428343 Lucene_47
 mathews  m  v  moore  f  <B>r</B>  computer music  music  real-time control  digital control  time functions  interactive <B>software</B>  hybrid <B>systems</B>  conductor program 3.44 3.8 7.3 ca701201 jb february 9  1978 4 on a small computer  ddp-224   functions are stored on a <B>disk</B> file  functions may be created by real functions  real-time feedback from the process being controlled is an important link in the <B>system</B>
60 Q0 322 63 0.03426293 Lucene_47
operational compatibility of <B>systems</B>-conventions the general standards committee of the share of the growing number of programming <B>systems</B> available  each of these programming <B>systems</B> has been coded to utilize a fixed set of <B>hardware</B> components without recognizing the fact that others may by manually setting up the computer for each <B>system</B> as required  the following set of conventions
60 Q0 2486 64 0.033970583 Lucene_47
 of photocomposition  <B>special</B> problems arise in highly technical material such as mathematical formulas  new solutions to several of these problems have been devised in the information <B>system</B> of the american institute of physics  they include  the representation of <B>special</B> characters  foreign alphabets  mathematical symbols  <B>etc</B>   not available on input keyboards or on the photocomposer  the generation
60 Q0 2106 65 0.033966236 Lucene_47
computer education in a graduate school of <B>management</B> several years of experience have led to the belief that the creative design and evaluation of <B>management</B> information <B>systems</B> requires a thorough  simulation  machine language  <B>management</B> information <B>systems</B>  interpreters 1.52 3.51 4.13 4.21 <B>systems</B> can best be explained at the machine language level  any machine used for exposition should
60 Q0 616 66 0.03390098 Lucene_47
an information algebra - phase i report-language structure group of the <B>codasyl</B> development-defining language  at the <B>systems</B> level of data processing  the report is based  for the most part  on a mathematical model called  an information algebra  developed primarily by <B>r</B>  bosak  it is hoped and understanding by professional programmers and <B>systems</B> analysts  and  c  with appreciation
60 Q0 2720 67 0.03378321 Lucene_47
 and utilization of a set of <B>disk</B> drives with differing operational characteristics is examined using analytical techniques  using standard queueing theory  each <B>disk</B> drive is characterized by a queueing model with service time of a <B>disk</B> drive represented by the probability density function of the sum of two uniform distributions  <B>total</B> response time of the set of <B>disk</B> <B>models</B> is then minimized under varying
60 Q0 2669 68 0.033137668 Lucene_47
 the amount of core memory sharing  cacm april  1974 saltzer  j  h  paging  demand paging  memory <B>models</B>  program <B>models</B>  performance measurement  multilevel memory <B>systems</B>  virtual memory  <B>associative</B> memory automatically managed multilevel memory <B>system</B> requires a model of the patterns by which programs refer of the automatic <B>management</B> algorithm to produce a single  composite statement  the mean number of memory
60 Q0 2715 69 0.03278152 Lucene_47
implementation of a structured english query language the <B>relational</B> model of data  the xrm <B>relational</B> memory <B>system</B>  and the sequel language have been covered in previous papers and are reviewed  sequel is a <B>relational</B> data sublanguages intended for the ad hoc interactive problem solving by non october  1975 astrahan  m  m  chamberlin d  d  <B>relational</B> model  query language  nonprocedural language
60 Q0 1695 70 0.032731954 Lucene_47
 analysis  discrete <B>system</B> simulation  library <B>systems</B>  modeling  <B>network</B> simulation  neural networksplexus-an on-line <B>system</B> for modeling neural networks a description is presented of plexus  a <B>system</B> which enables a user to construct and specify a neural <B>network</B>  to analyze the output data produced by the <B>network</B>  and to store and retrieve networks and data from a library  the <B>system</B>  operated
60 Q0 397 71 0.032567494 Lucene_47
 terms  <B>hardware</B> terms  equipment  machine <B>systems</B>  abbreviations  <B>etc</B>   it is suitable
60 Q0 1165 72 0.03248378 Lucene_47
 on the spectra 70 45  the emulator makes use of both <B>hardware</B> micro-program routines and <B>software</B> routines to accomplish its function  cacm december  1965 benjamin  <B>r</B>  i  ca651204 jb march 6  1978 4 15the spectra 70 45 emulator for the rca 301 the rca 301 emulator <B>system</B> is supplied with the spectra 70 45 as a reprogramming aid  it allows an rca 301 object program to be run on the spectra 70 45
60 Q0 2716 73 0.032375246 Lucene_47
optimizing the performance of a <B>relational</B> algebra <B>database</B> interface an approach for implementing a  smart  interface to support a <B>relational</B> view of data is proposed  the basic idea is to employ  p  <B>relational</B> <B>database</B>  <B>database</B> optimization  inverted file  automatic programming  query query specification supplied by the user  a <B>relational</B> algebra interface  called squiral  which
60 Q0 1532 74 0.032201745 Lucene_47
the <B>hardware</B>-<B>software</B> complementarity cacm october  1967 oettinger  a  g  ca671001 jb february 27  1978 2 42 pm 1532 5 1532 1532 5 1532 1532 5 1532
60 Q0 2957 75 0.032064103 Lucene_47
  smith  d  c  p  data abstraction  <B>relational</B> <B>database</B>  data type  aggregation  <B>database</B> design<B>database</B> abstractions  aggregation aggregation is in troduced as an abstraction which is important of  well-definedness   specifies aggregation abstractions  <B>relational</B> databases defined as collections are important in <B>database</B> design  a top-down methodology for <B>database</B> design is described which separates
60 Q0 2928 76 0.03191653 Lucene_47
<B>hardware</B> estimation of a process  primary memory requirements a minor <B>hardware</B> extension in multics to be approximated  the additional <B>hardware</B> required for this estimate to be computed consists of a program accessible register containing the miss rate of the <B>associative</B> memory used for page to control the level of multiprogramming in the <B>system</B> and to bill for memory usage  the resulting
60 Q0 2319 77 0.031718183 Lucene_47
operating <B>system</B> performance an overview of the current and future positions with respect to operating <B>system</B> performance is given  while a great deal of information and a large number of <B>models</B> interactions between the various subsystems of an operating <B>system</B>  an overall model of the <B>total</B> <B>system</B> must such <B>total</B> <B>system</B> designs are exceptional today  it is projected that they will become increasingly
60 Q0 1083 78 0.031696845 Lucene_47
an experiment in a user-oriented computer <B>system</B> a version of a <B>software</B>-<B>hardware</B> <B>system</B> for the purpose of facilitating the programming and analysis of well-formulated problems is described  the <B>system</B> as a whole has much broader aspects as a tool for the study of problem solving and self-teaching <B>systems</B>  cacm may  1964 klerer  m  may  j  ca640506 jb march 10  1978 12 03 am 1083 4 1083 1083
60 Q0 2308 79 0.0316083 Lucene_47
  cacm july  1972 sturman  g  m  urban <B>systems</B>  urban applications  data acquisition  data <B>management</B>  engineering analysis  information <B>systems</B> 3.23 3.39 3.53 3.72 3.82 3.89 ca720720 jb january 30<B>computers</B> and urban society this brief survey of the use of <B>computers</B> in urban society covers by the imagination and inventiveness of future <B>system</B> designers  programmers  analysts  and decision makers
60 Q0 3050 80 0.031183904 Lucene_47
  <B>system</B> design  configuration  <B>management</B> game 2.43 2.44 ca781101 dh january 29  1979 11 43 am 2407 4 3050<B>systems</B> design education  a gaming approach one of the problems facing managers of computer installations is the problem of configuring the computer <B>system</B> to meet the demands made by the mix of jobs that the computer center must service  this paper presents a <B>management</B> game that allows the player
60 Q0 2634 81 0.031123519 Lucene_47
an evaluation of statistical <B>software</B> in the social sciences several hundred college and university computer installations now offer various types of statistical <B>packages</B> for general use  among those with a basis for selection and use  tests were made for each of these <B>systems</B>  and the results <B>software</B>  descriptive statistics  bivariate tables  pearson correlation  regression  factor analysis
60 Q0 2828 82 0.030546285 Lucene_47
<B>hierarchical</B> geometric <B>models</B> for visible surface algorithms the geometric structure inherent algorithms  hidden surface algorithms  <B>hierarchical</B> data structures  geometric <B>models</B> 5.31 8.2 their relative motion and placement  but also to assist in solving many other problems of <B>systems</B> define a graphical  working set   or fraction of the <B>total</B> structure that should be present
60 Q0 3112 83 0.030156108 Lucene_47
  file or <B>database</B> <B>management</B>  storage <B>management</B>  storage allocation  lisp  cdr-coding  referencelist processing in real time on a serial computer a real-time list processing <B>system</B> is one <B>systems</B> lack this property because allocating a list cell from the heap may cause a garbage collection <B>system</B> is presented which continuously reclaims garbage  including directed cycles  while linearizing
60 Q0 2972 84 0.029782195 Lucene_47
 programs  such as operating <B>systems</B>  cacm april  1977 robinson  l  levitt  k  n  <B>hierarchical</B> structure nonprocedural specification  the proofs  <B>like</B> the programs  are structured by levels  although only
60 Q0 2421 85 0.029613297 Lucene_47
a scan conversion algorithm with reduced storage requirements most graphics <B>systems</B> using a raster scan output device  crt or hardcopy  maintain a display file in the xy or random scan format  scan converters  <B>hardware</B> or <B>software</B>  must be provided to translate the picture description from the xy in execution time  cacm november  1973 jordan  b  w  jr  barrett  <B>r</B>  c  graphics  scan conversion
60 Q0 2372 86 0.029213963 Lucene_47
 existing <B>systems</B>  and serves as a framework for a proposal for general security <B>system</B> implementation within today s languages and operating <B>systems</B>  cacm april  1972 conway  <B>r</B>  w  maxwell  w  l  morgan  h  l  security  privacy  access control confidentiality  operating <B>systems</B>  access <B>management</B>  data banks  <B>management</B> information <B>systems</B> 3.50 3.73 4.12 4.22 4.39 ca720401 jb january 31  1978 1 59 pm
60 Q0 2542 87 0.028560575 Lucene_47
a <B>software</B> design and evaluation <B>system</B> a critical failure of current <B>software</B> <B>system</B> design reimplementation of the proposed <B>system</B>  cacm february  1973 graham  <B>r</B>  m  clancy  g  j  jr  devaney  d  b  operating <B>system</B> development  language processing <B>software</B> evaluation  compilers  <B>system</B> programming  supervisory <B>systems</B>  debugging  program maintenance  modeling  <B>system</B> integration  simulation 4.0
60 Q0 2951 88 0.027215686 Lucene_47
 <B>network</B> <B>systems</B> studied in detail  to describe and predict the response time for <B>network</B> time-sharing <B>systems</B> as it depends on some measure of <B>system</B> activity or load level  cacm july  1977 mamrak  s <B>network</B>  anlytic modeling  simulation  benchmark jobs  <B>system</B> measurement 4.6 6.20 8.1 ca770701 jbdynamic response time prediction for computer networks if the ultimate aim of a computing <B>network</B>
60 Q0 2342 89 0.027062617 Lucene_47
  and informal proofs of correctness have been given for these solutions  in this paper a <B>system</B> s -- gt  s   a set of such rules yields sequences of states  which dictate the <B>system</B> s behavior  the formation of partial rules and the calculation of transition rules are both applicable to <B>hardware</B> processes as well as to <B>software</B> processes  and symmetry between processes is not required  cacm june  1972
60 Q0 618 90 0.026997317 Lucene_47
<B>computers</B>- the key to <B>total</B> <B>systems</B> control  an industrial viewpoint man-man-machine processes are characterized in five main types  and the markets for each type are shown for 1950 and 1960 and estimated for 1970  cacm march  1962 carlson  w  m  ca620314 jb march 20  1978 2 53 pm 618 5 618 618 5 618 618 5 618
60 Q0 2277 91 0.02681401 Lucene_47
demand paging through utilization of working sets on the maniac ii a <B>hardware</B> implementation scheme and the associate memory which has been added to the maniac ii <B>hardware</B>  finally  a description of the <B>hardware</B> design for implementation of the working set model is discussed working set model  demand paging <B>system</B> is given  cacm october  1972 morris  j  b  demand paging
60 Q0 1808 92 0.026613103 Lucene_47
advanced cryptographic techniques for <B>computers</B> cryptographic techniques which can be used to maintain the confidentiality of information processed by <B>computers</B> are dealt with  <B>special</B> emphasis is paid to the unique characteristics of computer files that make many cryptographic methods of little van tassel  d  cryptographic  cryptanalysis  ciphers secrecy <B>systems</B>  security <B>systems</B>  confidential
60 Q0 2188 93 0.02652436 Lucene_47
an approach to the optimum design of computer graphics <B>systems</B> display <B>system</B> designers are faced from large numbers of alternatives  the selection is based on considerations such as <B>system</B> response time  <B>system</B> cost  and the distribution of data storage and processing between the graphics processor and its supporting data processing <B>system</B>  the work reported here develops an objective
60 Q0 2491 94 0.026445357 Lucene_47
threaded code the concept of  threaded code  is presented as an alternative to machine language code  <B>hardware</B> and <B>software</B> realizations of it are given  in <B>software</B> it is realized as interpretive code not needing an interpreter  extensions and optimizations are mentioned  cacm june  1973 bell  j  <B>r</B>  interpreter  machine code  time tradeoff  space tradeoff  compiled code  subroutine calls
60 Q0 2069 95 0.026355673 Lucene_47
comments on a paper by wallace and mason cacm april  1970 heess jr   w  f  page-on-demand  demand paging  time-sharing multiprogramming  markovian computer <B>models</B>  scheduling strategies  operating <B>systems</B>  memory <B>management</B> 2.44 4.32 4.39 6.20 6.21 ca700415 jb february 13  1978 2 36 pm 2069 5 2069 2069 5 2069 2069 5 2069
60 Q0 1605 96 0.026161898 Lucene_47
   programmer time  computer time  elapsed time  <B>etc</B>   which were considered to be definitive of  <B>system</B> development of the mit compatible time-sharing <B>system</B>  ctss  was compared with that of the ibm ibsys batch-processing <B>system</B> by means of a statistically designed experiment  an identical set of four to the <B>systems</B>  such as the sequence of problem solution  and programmer and problem characteristics
60 Q0 2379 97 0.026061561 Lucene_47
 to test the effect of machine architecture on complexity of <B>software</B>  the <B>system</B> is defined architectural feature  the <B>software</B> exploits these features to define the operating <B>system</B> as simply on the principles which guided the design  cacm march  1972 liskov  b  h  operating <B>systems</B>  <B>system</B> designthe design of the venus operating <B>system</B> the venus operating <B>system</B> is an experimental
60 Q0 3067 98 0.02582912 Lucene_47
 policies  empirical data from an actual <B>system</B> are included  cacm september  1978 denning  p  slutz  d  <B>database</B> referencing  memory <B>management</B>  optimal memory policies  paging  program behavior  program it minimizes aggregated retention and swapping costs  <B>special</B> cases of the cost structure allow gws and gopt
60 Q0 2541 99 0.025779802 Lucene_47
an overview of the ispl computer <B>system</B> design this paper explores the advantages of the concurrent design of the language  operating <B>system</B>  and machine  via microcode  to create an interactive from one of these domains to another has had on the design of this <B>system</B>  which has not been implemented   this freedom simplified both incremental compilation and the <B>system</B> s addressing structure
60 Q0 3090 100 0.025778411 Lucene_47
 <B>systems</B> fit the political economies of the groups that use them  cacm june  1978 kling  <B>r</B>  social impacts of computing  organizational impacts of computing  <B>management</B> information <B>systems</B>  sociology the impacts of an automated client-tracking <B>system</B> on the clients  caseworkers  administrators  and operations of the welfare agencies that use it are reported  the major impact of this <B>system</B>
*************Query 61*************************

61 Q0 2711 1 0.35792667 Lucene_47
a <B>vector</B> <B>space</B> <B>model</B> for automatic indexing in a document <B>retrieval</B>  or other pattern matching are shown  demonstrating the usefulness of the <B>model</B>  cacm november  1975 <B>salton</B>  <B>g</B>  wong  a  yang  c  s  automatic <B>information</B> <B>retrieval</B>  automatic indexing  content analysis  document <B>space</B> 3.71 3.73  <B>search</B> requests   it appears that the best indexing  property  <B>space</B> is one where each entity lies
61 Q0 2307 2 0.23120688 Lucene_47
 is then outlined in which clustered <B>files</B> are searched and <B>information</B> is retrieved following an interactive user-controlled <B>search</B> process  <B>methods</B> are described for an automatic query modification based for <B>information</B> <B>retrieval</B> and for the control of dynamic library collections in which new items are continually added and old ones are retired  cacm july  1972 <B>salton</B>  <B>g</B>  automatic indexing  automatic
61 Q0 1236 3 0.13530684 Lucene_47
 hundred different <B>methods</B> are available to analyze documents and <B>search</B> requests  this feature can in general be relied upon to retrieve the wanted <B>information</B>  a typical <B>search</B> request is used june  1965 <B>salton</B>  <B>g</B>  lesk  m  e  ca650619 jb march 6  1978 9 41 pm 1236 5 1236 1236 5 1236 1236 5the smart automatic document <B>retrieval</B> system-an illustration a fully automatic document <B>retrieval</B>
61 Q0 2631 4 0.12947626 Lucene_47
an <B>information</B>-theoretic approach to text searching in direct access systems <B>using</B> direct access computer <B>files</B> of <B>bibliographic</B> <B>information</B>  an attempt is made to overcome one of the problems often associated with <B>information</B> <B>retrieval</B>  namely  the maintenance and <B>use</B> of large dictionaries  file organization  direct access  <B>information</B> <B>retrieval</B>  character string  bit <B>vector</B> 3.42 3.70 3.73
61 Q0 3134 5 0.11638779 Lucene_47
the <B>use</B> of normal multiplication tables for <B>information</B> storage and <B>retrieval</B> this paper describes a method for the organization and <B>retrieval</B> of attribute based <B>information</B> systems  <B>using</B> the normal <B>retrieval</B>  <B>inverted</B> <B>files</B>  multiattribute <B>retrieval</B>  multilist file  normal multiplication table  queries an d <B>retrieval</B> of <B>information</B> are described  this method is particularly suitable for queries
61 Q0 2451 6 0.11228241 Lucene_47
 and <B>retrieval</B>  <B>clustering</B>  <B>search</B>  data structure  data management  query answering 3.62 3.74 ca730904design of tree structures for efficient querying a standard <B>information</B> <B>retrieval</B> operation  the process of locating the desired responses can be represented by a tree <B>search</B> <B>model</B>  this paper  as a practical application of such a <B>model</B> this paper considers the design of a novel tree <B>search</B> scheme based
61 Q0 634 7 0.10321708 Lucene_47
manipulation of trees in <B>information</B> <B>retrieval</B>  cacm february  1962 <B>salton</B>  <B>g</B>  ca620209 jb march 20  1978 3 44 pm 1087 4 634 634 4 634 931 5 634 1324 5 634 329 5 634 634 5 634 634 5 634 634 5 634 202 6 634 396 6 634 634 6 634 634 6 634 652 6 634 653 6 634
61 Q0 2990 8 0.10125252 Lucene_47
  1977 yu  c  t  <B>salton</B>  <B>g</B>  <B>information</B> <B>retrieval</B>  automatic indexing  content analysis  term accuracyeffective <B>information</B> <B>retrieval</B> <B>using</B> term accuracy the performance of <B>information</B> <B>retrieval</B> on measuring the <B>retrieval</B> performance of an average user query  unfortunately  formal proofs are difficult to construct for the average case  in the present study  <B>retrieval</B> evaluation is based
61 Q0 1457 9 0.095488206 Lucene_47
data manipulation and programming problems in automatic <B>information</B> <B>retrieval</B> automatic <B>information</B> <B>retrieval</B> programs require the manipulation of a variety of different data structures  including are made for the design of programming facilities to aid in <B>information</B> <B>retrieval</B>  cacm march  1966 <B>salton</B>  <B>g</B>  ca660315 jb march 3  1978 11 35 am 1457 4 1457 1236 5 1457 1457 5 1457 1457 5 1457 1457 5
61 Q0 2140 10 0.09096908 Lucene_47
<B>retrieval</B>-update speed tradeoffs <B>using</B> combined indices in a paper in the november 1970  this technique permitted decreased <B>retrieval</B> time at the cost of increased storage <B>space</B>  this paper examines combined indices  cacm december  1971 mullin  j  k  file organization  combined index <B>files</B>  <B>inverted</B> <B>files</B>  <B>information</B> <B>retrieval</B>  query  multi-attribute <B>retrieval</B>  file update 3.73 3.74 3.79 ca711203 jb
61 Q0 2114 11 0.08264087 Lucene_47
a formal system for <B>information</B> <B>retrieval</B> from <B>files</B> a generalized file structure is provided  and record <B>retrieval</B> are defined and from which some of the frequently used file structures such as <B>inverted</B> <B>files</B>  index-sequential <B>files</B>  and multilist <B>files</B> are derived  two algorithms which retrieve file structure  <B>inverted</B> file  index-sequential-file  multilist file  description  file <B>search</B>
61 Q0 2561 12 0.07943648 Lucene_47
  the procedures make <B>use</B> of a similarity structure which is imposed on the data base <B>using</B> nonnumerical <B>clustering</B> algorithms  they are implemented in a <B>model</B> fact <B>retrieval</B> system which uses a formal  inference  inductive inference  <B>clustering</B>  fact <B>retrieval</B>  heuristics 3.61 3.71 3.79 ca741213 jba heuristic approach to inductive inference in fact <B>retrieval</B> systems heuristic procedures
61 Q0 2437 13 0.07319492 Lucene_47
 analytically  the approach is applied to a group of transformation <B>methods</B> <B>using</B> <B>files</B> whose keysgeneral performance analysis of key-to-address transformation <B>methods</B> <B>using</B> an abstract file the key <B>space</B> according to a certain probabilistic selection algorithm  all <B>files</B> with the same number  and the average performance of the transformation <B>methods</B> on these <B>files</B> will be used as the potential
61 Q0 397 14 0.06646808 Lucene_47
a card format for reference <B>files</B> in <B>information</B> processing this paper proposes a card format suitable for a variety of reference <B>files</B> in <B>information</B> processing  an 80-column ibm card is divided is sufficient to identify the material normally associated with reference <B>files</B> for books  <B>articles</B>  programming as a standard for card reference <B>files</B> in <B>information</B> processing  cacm february  1961 grems  m  ca610201 jb
61 Q0 2746 15 0.064929694 Lucene_47
 <B>bibliographic</B> <B>search</B> program by a factor of 5 to 10  cacm june  1975 aho  a  v  corasick  m  j  keywords and phrases  string pattern matching  <B>bibliographic</B> <B>search</B>  <B>information</B> <B>retrieval</B>  text-editingefficient string matching  an aid to <B>bibliographic</B> <B>search</B> this paper describes a simple  efficient and then <B>using</B> the pattern matching machine to process the text string in a single pass  construction
61 Q0 2991 16 0.062040973 Lucene_47
 storage  <B>search</B> method  collisions  synonyms  <B>clustering</B>  <B>information</B> <B>retrieval</B>  open addressingimproving the access time for random access <B>files</B> <B>clustering</B> in the key set is decreased in the key set  shadow buckets in the key <B>search</B> sequence reduce the effect of nonuniformity in file loading studies  cacm march  1977 clapson  p  hashing  hashing techniques  hashing <B>methods</B>  hash coding  keys
61 Q0 1927 17 0.06158055 Lucene_47
  1969 <B>salton</B>  <B>g</B>  course curriculum  graduate courses  university courses computer science curriculum  <B>information</B> science  <B>information</B> organization  <B>information</B> <B>retrieval</B>  data <B>retrieval</B>  language<B>information</B> science in a ph  computer science program this report contains recommendations on a sample course curriculum in the general area of <B>information</B> organization and <B>information</B> system design
61 Q0 1935 18 0.05978279 Lucene_47
 <B>retrieval</B>  mathematical <B>model</B>  partitioning  probabilistic method  random sequencing  <B>search</B>randomized binary <B>search</B> technique a mathematical <B>model</B> is developed for the mean and variance of the number of trials to recover a given document in a randomly received list of <B>files</B>  the <B>search</B> method described is binary in nature and offers new potential for <B>information</B> <B>retrieval</B> systems  cacm
61 Q0 2882 19 0.058079347 Lucene_47
a stochastic evaluation <B>model</B> for database organization in data <B>retrieval</B> systems experimental work and prohibitive cost  this paper discusses a simulation <B>model</B> of a data <B>retrieval</B> system which has before  the <B>model</B> is designed to estimate the <B>retrieval</B> workload of alternative data <B>retrieval</B> systems  effectiveness of the methodology is demonstrated by <B>using</B> the <B>model</B> to study the effect of database
61 Q0 2160 20 0.057917245 Lucene_47
  <B>information</B> <B>retrieval</B>  <B>inverted</B> file  key words  multilist  queries  searches 3.70 3.73 3.74 ca710904 <B>retrieval</B> is proposed in this paper  it allows queries involving arbitrary <B>boolean</B> functions of the allowed queries  thus  for example  the structure for <B>retrieval</B> on the basis of ranges of values of a given attribute would be very different from one where only <B>retrieval</B> on the basis
61 Q0 2883 21 0.057293173 Lucene_47
an application of heuristic <B>search</B> <B>methods</B> to edge and contour detection this paper presents lead to substantial improvements in computing time  moreover  if heuristic <B>search</B> <B>methods</B> are used are given  these show how various <B>information</B> <B>about</B> the shape of the contour of an object can be embedded  shortest path  heuristic <B>search</B> <B>methods</B>  problem solving <B>methods</B> 3.63 3.64 3.66 5.42 ca760204 jb january
61 Q0 1976 22 0.054431293 Lucene_47
 november  1970 lum  v  y  file organization  secondary index <B>files</B>  <B>inverted</B> <B>files</B>  <B>information</B> <B>retrieval</B>multi-attribute <B>retrieval</B> with combined indexes in this paper a file organization scheme designed to replace the <B>use</B> of the popular secondary index filing scheme  or <B>inverted</B> <B>files</B> on secondary key fields  is described  through the <B>use</B> of redundancy and storing keys  or access numbers
61 Q0 1830 23 0.053747837 Lucene_47
<B>retrieval</B> times for a packed direct access <B>inverted</B> file cacm october  1969 bayes  a  j  <B>information</B> <B>retrieval</B>  direct access memory  data base  <B>inverted</B> list 3.70 4.41 ca691016 jb february 15  1978 1 27 pm 1830 5 1830 1830 5 1830 1830 5 1830
61 Q0 2916 24 0.051944584 Lucene_47
 the size of the alphabet  cacm october  1977 boyer  r  s  <B>bibliographic</B> <B>search</B>  computational complexity  <B>information</B> <B>retrieval</B>  linear time bound  pattern matching  text editing 3.74 4.40 5.25 ca771010   of the first occurrence of a character string   pat   in another string   string   during the <B>search</B> operation  the characters of pat are matched starting with the last character of pat  the <B>information</B>
61 Q0 239 25 0.051861305 Lucene_47
inefficiency of the <B>use</B> of <B>boolean</B> functions for <B>information</B> <B>retrieval</B> systems cacm december  1961 verhoeff  j  goffman  w  belzer  j  ca611211 jb march 15  1978 10 10 pm 239 5 239 239 5 239 239 5 239
61 Q0 1700 26 0.051506024 Lucene_47
  idea from punched card <B>information</B> <B>retrieval</B> <B>methods</B> has been mated with the idea of superimposed of 33,000 subject index entries  a <B>search</B> program <B>using</B> the device has been operational since late <B>using</B> the inclusive or operation  if  at <B>search</B> time  the logical product  <B>using</B> the and operation coding  natural language searching text searching  <B>information</B> compaction  computer <B>search</B> technique
61 Q0 2288 27 0.05094754 Lucene_47
 of an <B>information</B> <B>retrieval</B> system with a minimal <B>search</B> time and no redundant storage  some important theorems an <B>information</B> <B>retrieval</B> system based on the consecutive <B>retrieval</B> property is also discussed  cacm september  1972 ghosh  s  p  file organization  consecutive storage  consecutive <B>retrieval</B>  <B>information</B> <B>retrieval</B>  record organization  query structure  record structure  storage on tapes  storage <B>space</B>
61 Q0 2258 28 0.050838694 Lucene_47
 existing formatted <B>files</B> cacm november  1972 lum  v  y  yuen  p  s  t  hashing  hashing techniques  hashing <B>methods</B>  hash coding  keys  key transformation  key-to-address transformation  direct addressing  direct access method  randomizing  random access file organization  file <B>search</B>  scatter storage  <B>information</B> <B>retrieval</B> 3.7 3.72 3.73 3.74 3.79 4.9 ca721111 jb january 27  1978 1 31 pm 2258 4
61 Q0 1194 29 0.05030217 Lucene_47
  is reviewed briefly  two principles are presented as paramount in the provision of <B>information</B> services   1  easy accessibility to the <B>information</B> <B>files</B> by users unfamiliar with file organization repository  the main features of the <B>information</B> system are direct user access via on-line and expandable <B>search</B> vocabulary  user access through many facets of document indexing  and stochastic <B>search</B>
61 Q0 2947 30 0.04990339 Lucene_47
  <B>information</B> <B>retrieval</B>  text editing  minicomputers  crts time sharing  <B>bibliographic</B> <B>search</B> and <B>retrieval</B> to in teractive bibliographical <B>search</B> and <B>retrieval</B> systems  but has several additional features  it uses a simple command language designating a function  a file  and a <B>search</B> template consisting
61 Q0 2516 31 0.048690394 Lucene_47
hierarchical storage in <B>information</B> <B>retrieval</B> a probabilistic analysis is employed to determine the effect of hierarchical storage organizations on <B>information</B> <B>retrieval</B> operations  the data storage  1973 salasin  j  <B>information</B> <B>retrieval</B>  hierarchical storage 3.70 3.72 3.73 3.74 3.79 3.90 6.20  equations are derived to predict the effect of such a system on data access times <B>using</B> sequential
61 Q0 2278 32 0.046387553 Lucene_47
on foster s <B>information</B> storage and <B>retrieval</B> <B>using</B> avl trees cacm september  1972 tan  k  c  binary trees  <B>search</B> trees  <B>information</B> storage  <B>information</B> <B>retrieval</B> 3.70 3.73 3.74 ca720912 jb january 27  1978 4 10 pm 2278 5 2278 2278 5 2278 2278 5 2278 2455 5 2278 2278 6 2278 2388 6 2278
61 Q0 2033 33 0.04471451 Lucene_47
 of <B>space</B> required to contain the hash-coded <B>information</B> from that associated with conventional <B>methods</B> by <B>using</B> a smaller core resident hash area in conjunction with the new <B>methods</B> and  when necessary<B>space</B> time trade-offs in hash coding with allowable errors in this paper trade-offs among certain computational factors a given set of messages  two new hash-coding <B>methods</B> are examined and compared
61 Q0 2968 34 0.04357994 Lucene_47
 are given for an efficient <B>use</B> of the <B>methods</B>  if insertion and subsequent queries are the only of algorithms  <B>information</B> storage and <B>retrieval</B> 3.7 3.72 3.74 5.31 ca770504 jb december 29  1977 2 16 am and extensions   weight-balance  i e  bb and wb   and total restructuring-for building balanced binary <B>search</B> trees are compared  the criteria for comparison encompass theoretical aspects  e <B>g</B>  path lengths
61 Q0 3129 35 0.03934786 Lucene_47
  generates a demand <B>vector</B> which designates the <B>space</B> required in each file for record addition criteria for best allocating storage <B>space</B> to the <B>files</B>  cacm february  1979 mendelson  h  pliskin  joptimal storage allocation for serial <B>files</B> a computer system uses several serial <B>files</B>  the <B>files</B> reside on a direct-access storage device in which storage <B>space</B> is limited  records are added
61 Q0 1808 36 0.038837135 Lucene_47
 to maintain the confidentiality of <B>information</B> processed by computers are dealt with  special emphasis is paid to the unique characteristics of computer <B>files</B> that make many cryptographic <B>methods</B> of little <B>use</B>  relative security  costs  and preferred <B>methods</B> are included in this paper  cacm december  1969 <B>information</B> processing 1.3 2.12 2.19 3.73 3.81 4.41 ca691204 jb february 15  1978 4 20 pm 1808 5
61 Q0 1287 37 0.037475552 Lucene_47
<B>vector</B> <B>coupling</B> or clebsch-gordan coefficients  algorithm 252  z   cacm april  1965 gunn  j  h  ca650404 jb march 7  1978 3 58 pm 1287 5 1287 1287 5 1287 1287 5 1287
61 Q0 1135 38 0.03687035 Lucene_47
  there are no control statements such as go to  <B>etc</B>    instead of <B>using</B> procedure descriptions  which complex applications  in terms of tables of control expressions which express only <B>information</B> characteristic of the particular application  furthermore local changes of a process  e <B>g</B>  changes affecting only one of the output <B>files</B> involved  can be effected by local modifications in the program  e
61 Q0 2978 39 0.035812225 Lucene_47
  k  smith  s  e  index  index structure  pages  virtual memory  <B>files</B>  <B>retrieval</B>  main tenanceanalysis of design alternatives for virtual memory indexes a class of index structures for <B>use</B> are analyzed  these alternatives include a choice of <B>search</B> strategy  whether or not pages of crossing a page boundary in the index structure  formulas for the <B>retrieval</B> costs for possible
61 Q0 3137 40 0.035288237 Lucene_47
a methodology for the design of distributed <B>information</B> systems a macro <B>model</B> of a distributed <B>information</B> system in presented  the <B>model</B> describes the major costs of <B>using</B> an <B>information</B> system from the perspective of the end-user  the making evident the effect of various design and operating of an interactive transaction processing system  cacm april  1979 bucci  <B>g</B>  streeter  d  distributed
61 Q0 3087 41 0.03520534 Lucene_47
 of aircraft flight and maintenance data <B>using</B> a system called planes  the design and implementation for the relational database  and optimize the order of searching relations  <B>methods</B> are discussed of this system to <B>others</B>  cacm july  1978 waltz  d  question answering  relational database  natural language  database front end  artificial intelligence  dialogue  query generation  <B>information</B>
61 Q0 1928 42 0.03370887 Lucene_47
 ease and economy in <B>model</B> generation  economy in execution time and <B>space</B>  and a facility of structural and behavioral <B>model</B> description  a reduction of manual tasks in converting <B>boolean</B> logic into a structural <B>model</B>  the elimination of manual processes in achieving exclusive simulation of activity february  1969 ulrich  e  <B>g</B>  simulation  logical simulation  digital simulation  large systems
61 Q0 2777 43 0.03368212 Lucene_47
 be solved <B>using</B> the p and v operations introduced by dijkstra unless conditional statements are used restrictions on the <B>use</B> of p and v  these restrictions eliminate programming techniques used by dijkstra and <B>others</B> since the first introduction of the semaphore concept  this paper contains a solution  1975 parnas  d  l  operating systems  <B>co</B>-operating processes process synchronization primitives 4.3
61 Q0 2484 44 0.033249777 Lucene_47
 an element from the given set of objects  the <B>use</B> of different relations and algorithms results in different <B>information</B> structures  as list  tree  ring  <B>etc</B>  thus the problem of <B>information</B>  data base  data-base management  <B>information</B> <B>retrieval</B>  <B>information</B> structure  file organizationa note on <B>information</B> organization and storage since the logical structure of a data base can
61 Q0 2680 45 0.032914065 Lucene_47
 of mounts thus decreases turnaround time  an optimization <B>model</B> for the assignment of <B>files</B> to disk  disk analysis  disk optimization  disk <B>files</B> file systems  file scheduling  <B>space</B> allocation  memoryoptimal <B>space</B> allocation on disk storage devices when the amount of <B>space</B> required for file storage exceeds the amount which can be kept on-line  decisions must be made as to which <B>files</B>
61 Q0 1699 46 0.03271619 Lucene_47
experimental evaluation of <B>information</B> <B>retrieval</B> through a teletypewriter experiments designed to evaluate the capabilities of mechanized <B>information</B> <B>retrieval</B> systems  with emphasis on interactive of the research is that an <B>information</B> <B>retrieval</B> system that provides for man-machine dialogue at a remote in evaluation of such a system include ease of <B>use</B>  learning time  and effectiveness of actual <B>retrieval</B>  three
61 Q0 696 47 0.032052096 Lucene_47
an automatic data acquisition and inquiry system <B>using</B> disk <B>files</B> lockheed missiles and <B>space</B> to the data processing center  a large capacity rca 366 data disc file is used to store <B>information</B> required to provide up-to-date <B>information</B> in response to inquiries received from remotely located inquiry stations  in addition to storage of data on the disk <B>files</B>  the system automatically records
61 Q0 2976 48 0.0319484 Lucene_47
approximating block accesses in database organizations cacm april  1977 yao  s  b  database  <B>inverted</B> file organization  database performance and measurement  <B>information</B> <B>retrieval</B>  query answering 3.70 3.72 4.33 ca770406 jb december 29  1977 5 06 am 2976 4 2976 2976 4 2976 2976 4 2976 2688 5 2976 2765 5 2976 2882 5 2976 2976 5 2976 2976 5 2976 2976 5 2976
61 Q0 3168 49 0.031941645 Lucene_47
comment on  an optimal evaluation of <B>boolean</B> expressions in an online query system   cacm october  1979 laird  p  query  <B>boolean</B> expression  <B>information</B> <B>retrieval</B>  file organization 3.53.70 3.73 3.74 ca791001 db january 16  1980 4 50 pm 3168 4 3168 3168 4 3168 3169 4 3168 2965 5 3168 3002 5 3168 3168 5 3168 3168 5 3168 3168 5 3168
61 Q0 3169 50 0.031941645 Lucene_47
note on  an optimal evaluation of <B>boolean</B> expressions in an online query system   cacm october  1979 gudes  e  hoffman  a  query  <B>boolean</B> expression  optimal evaluation  <B>information</B> <B>retrieval</B> 3.50 3.70 3.74 ca791002 db january 16  1980 4 52 pm 3168 4 3169 3169 4 3169 2965 5 3169 3169 5 3169 3169 5 3169 3169 5 3169
61 Q0 2722 51 0.031892274 Lucene_47
multidimensional binary <B>search</B> trees used for associative searching this paper develops the multidimensional binary <B>search</B> tree  or k-d tree  where k is the dimensionality of the <B>search</B> <B>space</B> uses are given  cacm september  1975 bently  j  l  associative <B>retrieval</B>  binary <B>search</B> trees  key  attribute  <B>information</B> <B>retrieval</B> system  nearest neighbor queries  partial match queries
61 Q0 3041 52 0.031809624 Lucene_47
 <B>search</B>  heaps  balanced trees  zipf s law  <B>information</B> <B>retrieval</B> 3.74 5.25 5.39 ca781110 dh january median of a node s descendents as its split value to force the <B>search</B> tree to be perfectly balanced  achieving both a <B>space</B> efficient representation of the tree and high <B>search</B> speed  unlike frequency is a binary <B>search</B> tree each node of which contains two key values-a node value which is a maximally frequent
61 Q0 2070 53 0.03124715 Lucene_47
a formal system for <B>information</B> <B>retrieval</B> from <B>files</B> cacm april  1970 hsiao  d  harary  f  ca700414 jb february 13  1978 2 37 pm 2070 5 2070 2070 5 2070 2070 5 2070
61 Q0 2374 54 0.03105198 Lucene_47
a study of storage partitioning <B>using</B> a mathematical <B>model</B> of locality both fixed and dynamic storage partitioning procedures are examined for <B>use</B> in multiprogramming systems  the storage requirement of programs is modeled as a stationary gaussian process  experiments justifying this <B>model</B> jr   e  <B>g</B>  ryan jr   t  a  storage partitioning  memory management  dynamic storage allocation  <B>space</B>
61 Q0 2203 55 0.030188777 Lucene_47
  <B>search</B>  collisions  clusters  <B>information</B> <B>retrieval</B> 3.7 3.72 3.73 3.74 3.79 4.9 ca710402 jb february 3 <B>files</B> the results of a study of eight different key-to-address transformation <B>methods</B> applied to a set of existing <B>files</B> are presented  as each method is applied to a particular file  load factor  1971 lum  v  y  yuen  p  s  t  dodd  m  hashing  hashing techniques  hashing <B>methods</B>  hash coding
61 Q0 2109 56 0.029958354 Lucene_47
the <B>use</B> of quadratic residue research a quadratic residue <B>search</B> method has previously been suggested to avoid the <B>clustering</B> usually encountered when hash address collisions occur and linear <B>search</B> <B>methods</B> are used  the <B>search</B> size  because of the property of quadratic residues  is limited to one is that prime number  can be searched  cacm february  1970 radke  c  e  quadratic residue  <B>search</B>
61 Q0 2542 57 0.029396396 Lucene_47
 language description is used as direct input to performance analysis and simulation routines  <B>using</B> the performance <B>information</B> obtained from these routines as <B>feedback</B>  the problems which adversely affect reimplementation of the proposed system  cacm february  1973 graham  r  m  clancy  <B>g</B>  j  jr  devaney  d  b
61 Q0 3075 58 0.028954105 Lucene_47
 log n  and the <B>use</B> of n processors  the algorithm makes <B>use</B> of a technique that requires more <B>space</B> than the product of processors and time  a realistic <B>model</B> is used <B>model</B> is used in which no memory contention is permitted  a procedure is also presented to sort n numbers in time o k log n  <B>using</B> n 1   1 k processors  for k an arbitrary integer  the <B>model</B> of computation for this procedure permits
61 Q0 3072 59 0.028842928 Lucene_47
<B>feedback</B> coupled resource allocation policies in the multiprogramming- multiprocessor computer system <B>model</B> studies of some integrated  <B>feedback</B>-driven scheduling systems for multiprogrammed required for effective processing of the i o activity  buffer <B>space</B> assignment   the <B>model</B> studies used for the processes executing on the cpu  the <B>model</B> systems feature simulated continuous-flow and preempt
61 Q0 867 60 0.02814711 Lucene_47
 to surfaces z <B>g</B> x y  defined over certain types of subareas of the  x y -<B>space</B>  the first <B>model</B> in the  x y -<B>space</B>  it is then shown how this <B>model</B> may be incorporated into an algorithm that providesleast squares fitting of planes to surfaces <B>using</B> dynamic programming dynamic programming has recently been used by stone  by bellman and by gluss to determine the closet fit of broken line segments
61 Q0 2969 61 0.027727308 Lucene_47
 the <B>model</B>  a <B>search</B> procedure for the file location problem is described  along with an example and a possible application of the <B>model</B>  cacm may  1977 morgan  h  l  levin  k  d  computer networks for the allocation of program and data <B>files</B> in a computer network is presented  this algorithm takes into account the dependencies between <B>files</B> and programs such as occur in real heterogeneous computer networks
61 Q0 2141 62 0.027055534 Lucene_47
  cacm december  1971 amidon  e  l  akin  <B>g</B>  s  data compression  map storage  <B>information</B> <B>retrieval</B>algorithmic selection of the best method for compressing map data strings the best of a dozen different <B>methods</B> for compressing map data is illustrated  the choices are generated by encoding data strings-sequence of like codes-by three <B>methods</B> and in four directions  relationships are developed
61 Q0 2846 63 0.02705088 Lucene_47
  to be used in <B>information</B> <B>retrieval</B> systems  it has the same underlying m-ary tree structure as a trie  first the c-trie is analyzed as a data structure  and then several <B>methods</B> of its <B>use</B>  in the analysis part of the paper it will be shown that for a collection of n keys the <B>retrieval</B> time  measured of the order n  m log2 n  bits  this improvement in storage requirements and <B>retrieval</B> time is achieved
61 Q0 2927 64 0.026939746 Lucene_47
 to be equivalent to the theoretical lower bound for sieve <B>methods</B> without preprocessing  <B>use</B> of preprocessing techniques involving <B>space</B>-time and additive-multiplicative tradeoffs reduces this upper bound to o <B>using</B> o n logn log logn  bits as well  cacm september  1977 mairson  h  <B>g</B>  computational complexity is the computational complexity of finding all the primes less than n  a modified sieve of eratosthenes <B>using</B> doubly
61 Q0 2753 65 0.026811345 Lucene_47
 behind it are general  it demonstrates the need for selectivity in controlling <B>search</B> and the <B>methods</B> used to achieve it  task-specific <B>information</B>  planning  diagnostic procedures  remedial actions  representations  <B>search</B> strategies  <B>space</B> planning  spatial representations 3.20 3.25 3.64 3.66 ca750514 management  these <B>space</B> planning tasks usually involve manipulating two-dimensional representations
61 Q0 2862 66 0.02666556 Lucene_47
 is represented by a semi-markov <B>model</B>  <B>using</B> these models  such parameters as the inter-page-fault-page-fault interval  <B>etc</B>  are able to be analytically determined  <B>using</B> these models to evaluateanalysis of the pff replacement algorithm via a semi-markov <B>model</B> an analytical <B>model</B> is presented to estimate the performance of the page fault frequency  pff  replacement algorithm  in this <B>model</B>
61 Q0 1210 67 0.026593521 Lucene_47
file-handling within fortran this note describes some fortran subroutines to facilitate handling of tape <B>files</B>  they allow symbolic naming of <B>information</B> <B>files</B>  without violating the casual scientific programmer s idea of simplicity  some comments on two years <B>use</B> of these subroutines are given  cacm august  1965 harrison  m  c  ca650814 jb march 6  1978 7 59 pm 1210 5 1210 1210 5 1210 1210 5
61 Q0 440 68 0.026534254 Lucene_47
 and updating any large <B>files</B> of documents that must be identified primarily on the basis of names and other personal particulars  the underlying problem is that of making nearly maximum <B>use</B> of items of identifying <B>information</B> that are individually unreliable but that may collectively be of considerable discriminating power  rules that can be applied generally to name <B>retrieval</B> systems have been
61 Q0 1936 69 0.025757302 Lucene_47
 level of the tree  cacm february  1969 patt  y  n  <B>information</B> <B>retrieval</B>  file searching  treevariable length tree structures having minimum average <B>search</B> time sussenguth suggests in a paper to <B>search</B> and to update frequently  such a structure provides a compromise between the fast <B>search</B> slow update characteristics of binary searching and the slow <B>search</B> fast update characteristics
61 Q0 2809 70 0.025650755 Lucene_47
positivity and norms following some lines of joint work with a  s  householder  the character and <B>use</B> of algebraic <B>methods</B> in the theory of norms is demonstrated  new results concerning norms with values in an archimedian <B>vector</B> lattice  not necessarily being totally ordered  are given bauer  f  l  matrices  norms  positivity  numerical range  positivity cones  <B>vector</B> lattice absolute
61 Q0 1725 71 0.025308035 Lucene_47
  ordered lists  ordered <B>information</B> <B>retrieval</B>  ordered <B>retrieval</B> theorem  column digit values  digita simple proof of lewin s ordered-<B>retrieval</B> theorem for associative memories an efficient method of ordered <B>retrieval</B> of binary words from an associative memory  as described by lewin  is based on the <B>use</B> of special readout circuits which indicate the digit values present in the individual digit
61 Q0 2547 72 0.025180632 Lucene_47
representation of contours ad regions for efficient computer <B>search</B> a novel computer-searchable mean of searching large <B>files</B> for data associated with geometric position as well as with attribute value  an application of this representation to handling terrain <B>information</B> illustrates its utility  1973 merrill  r  d  contour map representation  region boundary representation  computer-<B>search</B>-able
61 Q0 3084 73 0.025150144 Lucene_47
 number of accesses  binary <B>search</B>  database  interpolation <B>search</B>  <B>retrieval</B>  searching  uniforminterpolation <B>search</B> -a log logn <B>search</B> interpolation <B>search</B> is a method of retrieving a desired record by key in an ordered file by <B>using</B> the value of the key and the statistical distribution of the keys  it is shown that on the average log logn file accesses are required to retrieve a key
61 Q0 2646 74 0.024607373 Lucene_47
 behavior  while the <B>methods</B> are not restricted to numerical computations  matrix and partial differential equation <B>methods</B> are typical examples of their <B>use</B>  it is shown that latency may be masked <B>using</B> a small amount of buffer memory  the <B>methods</B> discussed are independent of the overall sizea <B>model</B> for masking rotational latency by dynamic disk allocation this paper presents
61 Q0 1916 75 0.024077939 Lucene_47
 in a nondirected <B>model</B>  the complete structural specification of a program is represented by a combined <B>model</B>  a transformation of the combined <B>model</B> yields a new <B>model</B> in which additional timing <B>information</B> is also contained  analysis of these models prior to execution yields <B>information</B> valuable in determininganalysis of <B>boolean</B> program models for time-shared  paged environments directed graphs
61 Q0 2251 76 0.023331556 Lucene_47
  scatter storage  hash table  key  hash address  <B>clustering</B>  <B>search</B> length 3.73 3.74 4.9 ca721204 jbweighted increment linear <B>search</B> for scatter tables a new linear <B>search</B> for hash tables whose increment step is a function of the key being addressed is presented  comparisons with known <B>methods</B> to tables of size n   2 r  it allows full table searching  and practically eliminates primary <B>clustering</B>
61 Q0 1705 77 0.023275517 Lucene_47
 in the form of equivalent algol statements is also provided when <B>use</B> is made of the subset oti  otr  otb  ota  the berkeley style of providing <B>information</B> on the form of output <B>using</B> prior calls of procedures such as real format is defined  a <B>use</B> of the parameter outchannel to provide <B>information</B>  for instance  is written as a derived procedure  it outputs <B>using</B> the fixed point or the floating point
61 Q0 2388 78 0.023247954 Lucene_47
 longer than <B>others</B>  therefore  it is possible to reduce the average <B>retrieval</B> time by restructuring  the <B>use</B> of this algorithm is discussed  and it is compared with another which restructures the tree after each new item is added  cacm february  1972 martin  w  a  ness  d  n  retrieving <B>information</B>
61 Q0 2314 79 0.023089709 Lucene_47
  as is the duality of data <B>retrieval</B> and function evaluation  syntax directed input and output of data would facilitate <B>use</B> of complex data stores  cacm july  1972 bobrow  d  <B>g</B>  list processing  programming  and packaging  implementation of a generalized environment structure <B>model</B> specified would allow  alternative <B>methods</B> of procedure invocation required include invocation by pattern and by monitoring
61 Q0 1032 80 0.02301447 Lucene_47
theoretical considerations in <B>information</B> <B>retrieval</B> systems <B>information</B> storage and <B>retrieval</B> systems are composed of three major components   a  identification of <B>information</B> and tagging it for effective <B>retrieval</B>   b  searching strategy  how to enter the file to circumvent the scanning of nonrelevant material  and  c  file organization to make access to <B>information</B> efficient  for identification
61 Q0 3012 81 0.022900946 Lucene_47
the <B>use</B> of an interactive <B>information</B> storage and <B>retrieval</B> system in medical research this paper presents the results of a study of the <B>use</B> of an interactive computerized storage and <B>retrieval</B>  implementation  system <B>use</B>  <B>information</B> storage and <B>retrieval</B> system 2.10 3.50 3.72 ca780301 jb march 28  1978 by frequently chosen laboratory reference leaders in influencing the <B>use</B> of this system  the implications
61 Q0 2998 82 0.022826144 Lucene_47
 assumptions  the entropy or <B>information</B> content of a car-cdr pair in the programs measured is <B>about</B> 10 to 15 bits before linearization  and <B>about</B> 7 to 12 bits after  cacm february  1977 clark  d  w languages  poin ters to lists usually poin t to a location physically nearby in memory  the <B>use</B> of such regularities in the <B>space</B>-efficient representation of list structure is discussed  linearization
61 Q0 1881 83 0.022789674 Lucene_47
transpose <B>vector</B> stored array  algorithm 302  k2   cacm june  1969 macleod  i  d  <B>g</B>  matrix transposition  array transposition  <B>vector</B> stored array 5.39 ca690612 jb february 17  1978 9 51 am 1881 5 1881 1881 5 1881 1881 5 1881
61 Q0 1398 84 0.022680748 Lucene_47
  rather than a  statistical  criterion by which variables are grouped into a deterministic <B>model</B>  algorithm are developed by which some variables are kept on for further analysis while <B>others</B> are derived from <B>information</B> theory  cacm july  1966 sterling  t  gleser  m  haberman  s  pollack
61 Q0 1456 85 0.022250364 Lucene_47
 vehicle for research on the logic of question answering  examples of <B>methods</B> of inputting <B>information</B>storage and <B>retrieval</B> of aspects of meaning in directed graph structures an experimental system english word the syntactic <B>information</B>  definitional material  and references to the contexts in which  they are inadequate vehicles for language processing on any large scale-at east until they can <B>use</B>
61 Q0 2765 86 0.022172915 Lucene_47
analysis and performance of <B>inverted</B> data base structures the need to envision and architecture data base systems in a hierarchical level by level framework is stressed  the <B>inverted</B> data base  file  organization is then analyzed  considering implementation oriented aspects  the <B>inverted</B> directory to determine the optimum set of index keys  cacm may  1975 cardenas  a  f  data base architecture  <B>inverted</B>
61 Q0 973 87 0.02216917 Lucene_47
estimation of heart parameters <B>using</B> skin potential measurements a fundamental problem of <B>vector</B> cardiography is the estimation of the state of the heart on the basis of skin potential measurements  a mathematical <B>model</B> relating ventricular dipoles to surface potentials is sketched  then it is shown that the inverse problem-that of determining electrical heart parameters on the basis of skin
61 Q0 3147 88 0.022100361 Lucene_47
  1979 alter  s  system design  automatic programming  <B>search</B> <B>methods</B>  system configurations  designa <B>model</B> for automating file and program design in business application systems this paper discusses a <B>model</B> for finding an efficient implementation of a business application system whose logical specifications have been determined in advance  the <B>model</B> views file and program design as a problem
61 Q0 2816 89 0.022019764 Lucene_47
optimal reorganization of distributed <B>space</B> disk <B>files</B> in most database organizations  the cost of accessing the database will increase due to structural changes caused by updates and insertions  1976 maruyama  k  smith  s  e  disk file  free <B>space</B> <B>retrieval</B>  insertion  deterioration for distributed free <B>space</B> is described  a cost function describing the excess costs due to physical
61 Q0 2524 90 0.021846212 Lucene_47
 on the the key <B>space</B>  is suitably defined  three file structures are presented together with their corresponding <B>search</B> algorithms  which are intended to reduce the number of comparisons required to achieve the desired result  these <B>methods</B> are derived <B>using</B> certain inequalities satisfied of the <B>methods</B>  cacm april  1973 burkhard  w  a  keller  r  m  matching  file structuring  file
61 Q0 1681 91 0.021671774 Lucene_47
easy english a language for <B>information</B> <B>retrieval</B> through a remote typewriter console easy english base  the moore school <B>information</B> systems laboratory <B>files</B>  requests are formulated in a standardized  on-line searching  remote console communication  <B>information</B> <B>retrieval</B>  man-machine communication  remote terminal communication  translator  document <B>retrieval</B>  conversational mode  <B>information</B>
61 Q0 616 92 0.021632558 Lucene_47
  on a mathematical <B>model</B> called  an <B>information</B> algebra  developed primarily by r  bosak  it is hopedan <B>information</B> algebra - phase i report-language structure group of the codasyl development with providing a working language for the systems analyst s <B>use</B>  they trust that the ideas in this report will stimulate <B>others</B> to think along similar lines  questions and comments will be welcomed
61 Q0 2396 93 0.021471588 Lucene_47
 to demonstrate how the <B>model</B> interprets text  resolves ambiguities  adds <B>information</B> to memory  generalizesmuse  a <B>model</B> to understand simple english muse is a computer <B>model</B> for natural language processing  based on a semantic memory network like that of quillian s tlc  muse  from a <B>model</B> to understand  the <B>model</B> first applies syntactic analysis to eliminate some interpretations and then employs
61 Q0 2157 94 0.021423845 Lucene_47
average binary <B>search</B> length for dense ordered lists cacm september  1971 flores  i  madpis  <B>g</B>  searching  binary searching  record <B>retrieval</B> 3.74 ca710907 jb february 2  1978 1 42 pm 2157 5 2157 2157 5 2157 2157 5 2157 2293 5 2157 2157 6 2157
61 Q0 972 95 0.021324396 Lucene_47
 used by the air force permits many operators to access large data <B>files</B> through the <B>use</B> of a computer and inventories directly to the computer  the <B>information</B> received over the on-line data link is used to update the data <B>files</B> which are stored on disk  the 473l programming system is divided is on the technique of <B>using</B> the definition of a finite-state automaton for organizing the executive
61 Q0 2245 96 0.020816892 Lucene_47
 in scheduling <B>methods</B> can be easily carried out in a controlled way with cause and effects relationships being isolated  the scheduling <B>methods</B> tested included the best possible and worst possible <B>methods</B>  the traditional <B>methods</B> of multiprogramming theory  round-robin  first-come-first-served  <B>etc</B> to drive a <B>model</B> of a multiprogramming computer system  the cpu scheduling algorithm of the <B>model</B>
61 Q0 2795 97 0.020767357 Lucene_47
 operates in conjunction with a natural language analyzer and a combined memory and inference <B>model</B>  in generating sentences from meaning structures  the program employs both the <B>information</B> <B>retrieval</B>sentence paraphrasing from a conceptual base a <B>model</B> of natural language based on an underlying language-free representation of meaning is described  a program based on this <B>model</B> is able to produce
61 Q0 1506 98 0.020757357 Lucene_47
the laconiq monitor  time sharing for online dialogues the laconiq  laboratory computer online inquiry  monitor was developed primarily to support non-numerical applications such as <B>retrieval</B> from very large <B>files</B> by means of a  dialogue  between a system user and a <B>retrieval</B> application techniques for resource allocation were important  for this reason the <B>use</B> of core storage  computational
61 Q0 1680 99 0.020740476 Lucene_47
  programming  and <B>information</B> <B>retrieval</B>  it is written in fortran iv  <B>g</B>  for the ibm system 360  <B>model</B> instruction  tutorial systems  programming  simulation  modeling  <B>information</B> <B>retrieval</B> operating
61 Q0 2987 100 0.020715116 Lucene_47
 representation  geographic <B>information</B> processing  graphic data <B>retrieval</B>  in tersection of curves  line-drawing processing  poin ts in polygons  regional boundary representation  spatial <B>information</B> of two polygonal lines can be located by what is essentially a binary tree <B>search</B>  the algorithm with the various fixed-grid <B>methods</B> for representing curves and regions cacm march  1977 burton w
*************Query 62*************************

62 Q0 1961 1 0.3953631 Lucene_47
 in the graph to give a relation between speed and <B>complexity</B>  extensions to undirected and <B>s</B>-graphsan efficient search algorithm to find the elementary <B>circuits</B> of a graph a theoretically most <B>circuits</B> of a graph  the algorithm can be easily modified to find all of the elementary <B>circuits</B> as an example of its application  empirical bounds are presented <B>relating</B> the speed of the algorithm
62 Q0 1368 2 0.1831203 Lucene_47
systematic generation of hamiltonian <B>circuits</B> for a combinatorial matrix which may specify <B>both</B> directed and nondirected arcs  the paper describes a computer program which generates systematically and exhaustively all the hamiltonian <B>circuits</B>  specific application is made to the  traveling salesman  problem  cacm september  1966 roberts  <B>s</B>  m  ca660911 jb march 2  1978 4 30 pm 1368 5 1368 1368 5
62 Q0 1856 3 0.13548319 Lucene_47
 for correctly <B>relating</B> text to the memory <B>s</B> prior content are to be taught to the program overall ability to comprehend text  the program <B>s</B> strategy is presented as a general <B>theory</B>the teachable language comprehender  a simulation program and <B>theory</B> of language the teachable by correctly <B>relating</B> each  explicit or implicit  assertion of the new text to a large memory
62 Q0 320 4 0.13319956 Lucene_47
 to fully express and consider <B>both</B> the sequential and <B>parallel</B> aspects of logic  they can be compiledlogic-structure tables logic tables are an excellent way of developing and expressing the logic required in procedures  operations  systems and <B>circuits</B>  a set of rules for writing and using logic tables is explained by means of some simple examples  then the logic structure of a vending machine
62 Q0 2702 5 0.11602891 Lucene_47
  the time <B>complexity</B> of this problem is analyzed <B>both</B> when k is considered to be a fixed integeron the <B>complexity</B> of lr k  testing the problem of determining whether an arbitrary context-free of the grammar in question  on the other hand  if <B>both</B> k and the subject grammar are problem parameters  then the <B>complexity</B> of the problem depends very strongly on the representation chosen for k  more
62 Q0 1725 6 0.10653224 Lucene_47
a simple proof of lewin <B>s</B> ordered-retrieval theorem for associative memories an efficient method on the use of special readout <B>circuits</B> which indicate the digit values present in the individual digit columns of the memory  thus the <B>circuits</B> indicate whether the individual digit columns contain digits of <B>both</B> values  or of only one value  or contain no digits at all  i e  that the memory is empty
62 Q0 1143 7 0.10603175 Lucene_47
 to artificially-generated sets of data as well as to the <B>results</B> of experiments with radioactive tracers on <B>both</B> human and animal subjects  <B>results</B> show that the values of the fitted parameters are very therefore appear best to select a <B>uniform</B> technique <B>both</B> for running the experiments and for analyzing the data  and then to consider as significant only relative <B>results</B> between one subject
62 Q0 2720 8 0.10278487 Lucene_47
 analytical techniques  using standard queueing <B>theory</B>  each disk drive is characterized by a queueing model <B>uniform</B> distributions  total response time of the set of disk models is then minimized under varying load conditions  the <B>results</B> indicate that faster devices should have higher utilization factors drive hierarchies  system evaluation  input output  modeling  queueing <B>theory</B>  balancing  scheduling
62 Q0 2932 9 0.1024788 Lucene_47
<B>complexity</B> of computations the framework for research in the <B>theory</B> of <B>complexity</B> of computations is described  emphasizing the in terrelation between seemingly diverse problems and methods  illustrative examples of practical and theoretical significance are given  directions for new research are discussed  cacm september  1977 rabin  m  o  <B>complexity</B> of computations  algebraic <B>complexity</B>
62 Q0 2401 10 0.097680606 Lucene_47
 january  1972 levialdi  <B>s</B>  counting binary patterns  shrinking  <B>parallel</B> processing  multiple connectedon shrinking binary picture patterns a <B>parallel</B> processing algorithm for shrinking binary patterns employed  two-by-two elements   the <B>parallel</B> nature of the process  and the possibility of shrinking any pattern  regardless of the <B>complexity</B> of its configuration  problems regarding merging
62 Q0 2327 11 0.09645418 Lucene_47
toward an automata <B>theory</B> of brains a source of ideas for automata <B>theory</B>-the study of the brain-has been pushed aside in mathematical development of the <B>theory</B>  this paper suggests the ways in which automata <B>theory</B> might evolve over the next 25 years if it is to contribute to an understanding of how the brain processes information  cacm july  1972 arbib  m  a  automata <B>theory</B>  brain <B>theory</B>
62 Q0 2430 12 0.09306945 Lucene_47
the elementary <B>circuits</B> of a graph  h   algorithm a459  cacm october  1973 syslo m  m  algorithm  graph <B>theory</B>  circuit search algorithm  path search algorithm  searching 3.74 4.22 5.32 ca731010 jb january 20  1978 11 11 am 2430 4 2430 1961 5 2430 2430 5 2430 2430 5 2430 2430 5 2430
62 Q0 1911 13 0.09057247 Lucene_47
 languages is considered within the frame work of transformational <B>theory</B>  to account for these phenomena of <B>both</B> the generative procedure of this paper and its inverse is given in the form of lisp function definitions  cacm april  1969 petrick  <B>s</B>  r  postal  p  m  rosenbaum  p  <B>s</B>  natural languages  generative grammar  transformational <B>theory</B>  syntax  coordination  sentence coordination  sentence
62 Q0 1309 14 0.08812956 Lucene_47
a computer user-oriented system a computer language system has been developed which makes possible fast preparation of management reports  regardless of computational <B>complexity</B> or format variety  efficient processing through any computational sequence  and flexible presentation of <B>results</B> in either tabular or graphical form  matrix algebra is used as a fundamental vehicle for accomplishing <B>both</B>
62 Q0 2200 15 0.08286644 Lucene_47
 it to serve as the basis for devising division operations that produce <B>both</B> quotient and remainder in complement form  algorithms for division yielding complement <B>results</B> are derived for numbers represented in any base greater than one  <B>both</B> radix and radix-less-one complementation schemes are considered  the binary form of the algorithms thus includes <B>both</B> two <B>s</B> and one <B>s</B> complement implementation
62 Q0 2342 16 0.07911803 Lucene_47
 of <B>parallel</B> processes is regarded as a machine which proceeds from one state <B>s</B>  i e  a collectioninterference between communicating <B>parallel</B> processes various kinds of interference between communicating <B>parallel</B> processes have been examined by dijkstra  knuth  and others  solutions have been given for the mutual exclusion problem and associated subproblems  in the form of <B>parallel</B> programs
62 Q0 1925 17 0.07832021 Lucene_47
concepts of use in contour map processing generalized techniques whose use can simplify the solution of problems <B>relating</B> to contour maps  one of these techniques makes use of the topological properties to determine the characteristics of straight lines drawn on the contour map  <B>both</B> elevation readings obtained during a flight  cacm march  1969 morse  <B>s</B>  p  map  contour map  contour lines
62 Q0 335 18 0.07382212 Lucene_47
some numerical experiments using newton <B>s</B> method for nonlinear parabolic and ellipticboundary-value problems using a generalization of newton <B>s</B> method  a nonlinear parabolic equation of the form u t of these <B>results</B> with <B>results</B> obtained using the picard iteration procedure show that in many cases the quisi linearization method offers substantial advantages in <B>both</B> time and accuracy  cacm april
62 Q0 1888 19 0.07275158 Lucene_47
 allocation  for <B>uniform</B> mesh size h  the error in the quintic spline y x  is o h 4   with typical error one-third that from numerov <B>s</B> method  requiring the differential equation to be satisfied at the mesh points <B>results</B> in a set of difference equations  which are block tridiagonal and so are easily
62 Q0 3175 20 0.07153768 Lucene_47
  these probabilities are updated in <B>parallel</B> for all code letters  using joint letter probabilities  iterating the updating scheme <B>results</B> in improved estimates that finally lead to breaking the cipher  the method is applies successfully to two examples  cacm november  1979 peleg  <B>s</B>  rosenfeld  a  cryptography
62 Q0 2931 21 0.07047571 Lucene_47
 through the developments in <B>complexity</B> <B>theory</B>  these  however  are applications to logic  and a big before we can say we have a unified <B>theory</B>  cacm september  1977 scott  d  <B>s</B>  logic  programming parts of computability <B>theory</B>  programming languages offer an obvious opportunity as their syntactic formalization is well advanced  however  the semantical <B>theory</B> can hardly be said to be complete
62 Q0 2685 22 0.069841765 Lucene_47
the <B>parallel</B> execution of do loops methods are developed for the <B>parallel</B> execution of different iterations of a do loop  <B>both</B> asynchronous multiprocessor computers and array computers are considered  practical application to the design of compilers for such computers is discussed  cacm february  1974 lamport  l  <B>parallel</B> computing  multiprocessor computers  array computers  vector computers
62 Q0 1595 23 0.068807915 Lucene_47
 of topologies which can be formed from a finite point set is considered <B>both</B> theoretically and computationally  certain fundamental <B>results</B> are established  leading to an algorithm for enumerating finite topologies  and computed <B>results</B> are given for n  lt   7  an interesting side result of the computational  <B>s</B>  ca670507 jb february 28  1978 10 37 am 1595 5 1595 1595 5 1595 1595 5 1595
62 Q0 2560 24 0.068807915 Lucene_47
a queuing model of a multiprogrammed computer with a two-level storage system the <B>results</B> are obtained for the long-run probability that <B>both</B> the cpu and each of the storage devices are busy  some numerical <B>results</B> are given which quantify the gains in cpu utilization obtainable by multiprogramming in the presence of this type of storage system  cacm january  1973 shedler  g  <B>s</B>
62 Q0 2134 25 0.06834883 Lucene_47
 for rectangular matrices  timing <B>results</B> obtained by using an adapted version of silver <B>s</B> algol procedure bourgeois  f  lassalle  j  operations research  optimization <B>theory</B>  assignment problem  rectangular
62 Q0 2809 26 0.06834883 Lucene_47
positivity and norms following some lines of joint work with a  <B>s</B>  householder  the character and use of algebraic methods in the <B>theory</B> of norms is demonstrated  new <B>results</B> concerning norms with values in an archimedian vector lattice  not necessarily being totally ordered  are given  in particular for the generalization of order unit norms  l-norms and m-norms  an example of application
62 Q0 2220 27 0.065780416 Lucene_47
 tests the else rule but <B>results</B> in more executions than the first modification  <B>both</B> modifications <B>s</B> algorithm pollack has proposed an algorithm for converting decision tables into flowcharts which of this algorithm are proposed  the first relies on shannon <B>s</B> noiseless coding theorem  coding  decision table  entropy  information <B>theory</B>  noiseless channel  sorting 3.50 5.31 ca710201 jb
62 Q0 2515 28 0.06220473 Lucene_47
minimal event-node network of project precedence relations a procedure for constructing a minimal event-node network to represent a set of precedence relations without <B>parallel</B> activities is presented  a minimal event-node network is an event-node network in which <B>both</B> the number of nodes to show that the algorithm presented by a  c  fisher  j  <B>s</B>  liebman  and g  l  nemhauser  1968
62 Q0 3086 29 0.06170642 Lucene_47
on the <B>complexity</B> of computing the measure of u ai  bi  the decision tree <B>complexity</B> of computing the measure of the union of n  possibly overlapping  intervals is shown to be  n log n   even of the computational model on the ease of analysis and on the <B>results</B> produced  cacm july  1978 fredman  m  weide  b  analysis of algorithms  combinatorial problems  computational <B>complexity</B>  computational models
62 Q0 3163 30 0.06116913 Lucene_47
 require time o log 2n   moreover  the o log n  <B>complexity</B> is optimal  earlier <B>results</B> have shown of their kind  where deletion has a smaller time <B>complexity</B> than insertion  furthermore  it can now be concluded algorithms for avl trees  cacm september  1979 raiha k  zweben  <B>s</B>  insertion  one-sided height-balanced
62 Q0 2622 31 0.06058417 Lucene_47
 that more rigorous <B>results</B> are unlikely  finally  some human engineering problems <B>relating</B> to the scheme  this function is applied to the user <B>s</B> password and the result compared to a table entry  a match being
62 Q0 2189 32 0.059542727 Lucene_47
generation of rosary permutations expressed in hamiltonian <B>circuits</B> systematic generation of a specific class of permutations fundamental to scheduling problems is described  in a nonoriented complete graph with n vertices  hamitonian <B>circuits</B> equivalent to  5 n - 1   specific permutations of n fairly efficiently by computer  cacm june  1971 harada  k  permutation  graph <B>theory</B>  scheduling
62 Q0 2195 33 0.058395196 Lucene_47
  the relation between the structure of the figure of merit and the <B>complexity</B> of the optimization process is then discussed  the method described is suitable for <B>parallel</B> processing because the operations relative to each state can be computed in <B>parallel</B>  and the number of stages is equal to the length n optimal detection  heuristic methods  global recognition  <B>parallel</B> processing  dynamic programming
62 Q0 950 34 0.057792373 Lucene_47
<B>parallel</B> methods for integrating ordinary differential equations this paper is dedicated to the proposition that  in order to take full advantage for real-time computations of highly <B>parallel</B> to be recast in a more  <B>parallel</B>  form  by this is meant that serial algorithms ought to be replaced by algorithm which consist of several subtasks which can be computed without knowledge of the <B>results</B>
62 Q0 1932 35 0.057061907 Lucene_47
the logarithmic error and newton <B>s</B> method for the square root the problem of obtaining optimal starting values for the calculation of the square root using newton <B>s</B> method is considered  it has been <B>results</B> are not obtained when the initial approximation is a best fit  it is shown here that if  instead  the so-called logarithmic error is used  then a best initial fit is optimal for <B>both</B> types
62 Q0 2631 36 0.056957364 Lucene_47
 frequencies <B>results</B> in a much simplified file organization and promises considerable cost advantages  cacm june  1974 barton  i  j  creasey  <B>s</B>  e  lynch  m  f  snell  m  j  text searching  information <B>theory</B>
62 Q0 678 37 0.055176407 Lucene_47
optimizing bit-time computer simulation a major component of a bit-time computer simulation program is the boolean compiler  the compiler accepts the boolean functions representing the simulated computer <B>s</B> digital <B>circuits</B>  and generates corresponding sets of machine instructions which are subsequently executed on the  host  computer  techniques are discussed for increasing the sophistication
62 Q0 3156 38 0.05474047 Lucene_47
  graph <B>theory</B>  <B>parallel</B> processing  algorithms  transitive closure  connected component 5.25 5.32 6.22computing connected components on <B>parallel</B> computers we present a <B>parallel</B> algorithm which uses n2 processors to find the connected components of an undirected graph with n vertices in time o log2n   an o log2n  time bound also can be achieved using only n n  log2n   processors  the algorithm can
62 Q0 2266 39 0.054405697 Lucene_47
a highly <B>parallel</B> algorithm for approximating all zeros of a polynomial with only real zeros an algorithm is described based on newton <B>s</B> method which simultaneously approximates all zeros of a polynomial with only real zeros  the algorithm  which is conceptually suitable for <B>parallel</B> computation  cacm november  1972 patrick  m  l  <B>parallel</B> numerical algorithms  real polynomials  real zeros
62 Q0 3096 40 0.053294368 Lucene_47
 <B>complexity</B> cannot be reduced in order of magnitude  this result  coupled with earlier <B>results</B>an optimal method for deletion in one-sided height-balanced trees a one-sided height-balanced tree is a binary tree in which every node <B>s</B> right subtree has a height which is equal to or exactly one insertion is adversely affected by this modification of an avl tree  cacm june  1978 zweben  <B>s</B>  mcdonald
62 Q0 2121 41 0.05127694 Lucene_47
partitions in natural order  algorithm 371  a1   cacm january  1970 mckay  j  k  <B>s</B>  partitions number <B>theory</B> 5.39 ca700110 jb february 14  1978 1 48 pm 2121 5 2121 2121 5 2121 2121 5 2121
62 Q0 2927 42 0.0512394 Lucene_47
 is the computational <B>complexity</B> of finding all the primes less than n  a modified sieve of eratosthenes using doubly linked lists yields an algorithm of o n  arithmetic <B>complexity</B>  this upper bound is shown n log logn  and the bit <B>complexity</B> to o n logn log log logn   a storage requirement is described using o n logn log logn  bits as well  cacm september  1977 mairson  h  g  computational <B>complexity</B>
62 Q0 1806 43 0.050341763 Lucene_47
on the downhill method the downhill method is a numerical method for solving complex equations f z    0 on which the only restriction is that the function w   f z  must be analytical  an introduction to this method is given and a critical review of <B>relating</B> literature is presented  although in <B>theory</B> the method always converges  it is shown that a fundamental dilemma exists which may cause
62 Q0 1948 44 0.05015964 Lucene_47
computers in group <B>theory</B>  a survey computers are being applied to an increasingly diverse range of problems in group <B>theory</B>  the most important areas of application at present are coset enumeration  group <B>theory</B> programs range from simple combinatorial or numerical programs to large symbol  and <B>results</B> which have been obtained using existing programs are indicated  an extensive bibliography
62 Q0 1566 45 0.050131023 Lucene_47
optimal starting values for newton-raphson calculation of sqrt x  the problem of obtaining starting values for the newton-raphson calculation of sqrt x  on a digital computer is considered  it is shown that the conventionally used best <B>uniform</B> approximations to sqrt x  do not provide optimal starting values is stated  and several basic <B>results</B> are proved  a table of optimal polynomial starting
62 Q0 3084 46 0.050131023 Lucene_47
  computational experiments confirm these <B>results</B>  cacm july  1978 perl  y  itai  a  avni  h  average number of accesses  binary search  database  interpolation search  retrieval  searching  <B>uniform</B>
62 Q0 1603 47 0.050127592 Lucene_47
a multiprogramming monitor for small machines int  a combination hardware software monitor designed to control a wide variety of real-time input output devices  is described  the simple hardware additions provide a <B>uniform</B> device to machine interface for such elements as keyboards graphic input timing  buffering  and task scheduling and provides <B>parallel</B> processing capability  user programs
62 Q0 2714 48 0.04916173 Lucene_47
 favorably with the previous best <B>parallel</B> merging algorithm  batcher <B>s</B> algorithm  which requires n p     mmerging with <B>parallel</B> processors consider two linearly ordered sets a  b   a  m   b  n  m lt  n  and p  p lt  m  <B>parallel</B> processors working synchronously  the paper presents an algorithm for merging a and b with the p <B>parallel</B> processors  which requires at most 2 log2  2m 1    3m p     m p  log2
62 Q0 2924 49 0.04835601 Lucene_47
an interactive computer graphics approach to surface representation an in teractive computer graphics method has been developed for the rapid generation of arbitrary shaped three-dimensional surfaces  the method is a synthesis of spline <B>theory</B> and algorithms  an in teractive means for man-machine is a modified lofting method on which sectional curves are represented by <B>uniform</B> b-splines
62 Q0 1957 50 0.04769179 Lucene_47
 <B>results</B> from any expression involving sets and set operators  the efficiency derives from evaluating the expression as a whole and in <B>parallel</B>  rather than evaluating subexpressions and then using those sets to arrive at the final result  cacm december  1970 shapiro  <B>s</B>  c  set manipulating  list
62 Q0 2648 51 0.047380727 Lucene_47
a design for a number <B>theory</B> package with an optimized trial division routine a number <B>theory</B> package is described which uses doubly linked list structures for storing multiprecise integers  the package has been coded in ibm <B>s</B> basic assembly language and makes heavy use of the macro language  l  number <B>theory</B> package  trial division  multiprecise arithmetic  factorization  doubly linked
62 Q0 2216 52 0.047263976 Lucene_47
 from the generating function  the empirical tests  as well as the analytical <B>results</B>  are in agreement with previously published <B>results</B> for the first moment in the cases of <B>uniform</B> and nonuniform distribution of branching ratio  and for the second moment in the case of <B>uniform</B> distribution
62 Q0 2790 53 0.047106165 Lucene_47
the elementary <B>circuits</B> of a graph  algorithm r459  cacm february  1975 syslo  m  m  ca750209 jb january 12  1978 2 54 pm 2790 5 2790 2790 5 2790 2790 5 2790
62 Q0 1825 54 0.046992127 Lucene_47
  but decreases <B>both</B> the effort required to construct the processor and the size of the processor produced  processor can be constructed for each part  using knuth <B>s</B> algorithm  and if certain conditions <B>relating</B> these individual processors are satisfied  then an lr k  processor for the entire grammar can
62 Q0 2580 55 0.046818506 Lucene_47
 musical rounds by computer  this method uses some music <B>theory</B> plus additional heuristics  fundamental that full-blown music <B>theory</B> is not needed for rounds--all the hardware required for structural levels is not necessary for these pieces  the author has tried to address <B>both</B> musicians and computer of cognitive processes  computer music  computer composition  music <B>theory</B>  formal languages  probabilistic
62 Q0 2837 56 0.0463694 Lucene_47
new upper bounds for selection the worst-case minimum number of comparisons <B>complexity</B> vi n  of the i-th selection problem is considered  a new upper bound for vi n  improves the bound given  and extends kirkpatrick <B>s</B> method to a much wider range of application  this generalization compares  comparison problems  concrete computational <B>complexity</B>  upper bounds  worst-case analysis 5.25
62 Q0 2196 57 0.04564952 Lucene_47
-time to solve large  100-200  point problems  this technique takes advantage of <B>both</B> the computer <B>s</B> and the human <B>s</B> problem-solving abilities  the computer is not asked to solve the problem in a brute force way as in many of today <B>s</B> heuristics  but it is asked to organize the data for the human so  heuristic procedures have been proposed and tested with only slightly better <B>results</B>  this paper
62 Q0 2110 58 0.045520615 Lucene_47
an efficient context-free parsing algorithm a parsing algorithm which seems to be the most efficient general context-free algorithm known is described  it is similar to <B>both</B> knuth <B>s</B> lr k  algorithm and the familiar top-down algorithm  it has a time bound proportional to n 3  where n is the length  parsing  context-free grammar  compilers  computational <B>complexity</B> 4.12 5.22 5.23 ca700205 jb
62 Q0 2795 59 0.045488268 Lucene_47
  in generating sentences from meaning structures  the program employs <B>both</B> the information retrieval in discrimination nets   2  information <B>relating</B> conceptual to syntactic roles  stored in a word-sense
62 Q0 2255 60 0.045478623 Lucene_47
comments on moorer <B>s</B> music and computer composition cacm november  1972 smoliar  <B>s</B>  w  artificial intelligence  heuristic programming  models of cognitive processes  computer music  computer composition  music <B>theory</B> 3.44 3.65 ca721114 jb january 27  1978 1 22 pm 2255 5 2255 2255 5 2255 2255 5 2255
62 Q0 2326 61 0.044952113 Lucene_47
fix point approach to the <B>theory</B> of computation following the fix point <B>theory</B> of scott  the semantics of computer programs are defined in terms of the least fix points of recursive programs  this allows not only the justification of all existing verification techniques  but also their extension to the handling  in a <B>uniform</B> manner of various properties of computer programs  including correctness
62 Q0 3055 62 0.043953314 Lucene_47
an analysis of algorithms for the dutch national flag problem solutions to the dutch national flag problem have been given by dijkstra  1  and meyer  3   dijkstra starts with a simple program and arrives at an improved program by refinement  <B>both</B> of the algorithms given by dijkstra are shown <B>complexity</B> 5 9n  cacm october  1978 mcmaster  c  algorithmic analysis  dutch national flag problem
62 Q0 2232 63 0.043761607 Lucene_47
 be obtained  the focus is on the theoretical subject matter  the <B>results</B> consist of a set-theoretic definition of width-at-angle  a theorem <B>relating</B> it to the pattern boundary radius vector
62 Q0 2261 64 0.04340154 Lucene_47
an approximate method for generating symmetric random variables a method for generating values of continuous symmetric random variables that is relatively fast  requires essentially no computer memory  and is easy to use is developed  the method  which uses a <B>uniform</B> zero-one random number source  the method should be useful to simulation practitioners  cacm november  1972 ramberg  j  <B>s</B>
62 Q0 2851 65 0.04238234 Lucene_47
formal verification of <B>parallel</B> programs two formal models for <B>parallel</B> computation are presented  an abstract conceptual model and a <B>parallel</B>-program model  the former model does not distinguish principle  a special case of the assertions method  which is called <B>parallel</B> place assertions  is shown  is introduced  which yields an extension  to the deadlock problem  of floyd <B>s</B> technique for proving termination
62 Q0 2709 66 0.042232048 Lucene_47
 structures  <B>results</B> on time space limitations  and theorems <B>relating</B> the relative power of control structures under notions of equivalence  in conclusion  the impact of theoretical <B>results</B> on the practicing <B>results</B> on control structures and explores their practical implications  the classic result of bohm
62 Q0 1874 67 0.04109114 Lucene_47
generating pseudorandom numbers on a two <B>s</B> complement machine such as the ibm 360 the familiar multiplicative congruential generator is examined in the context of the type of two <B>s</B> complement criteria  cacm july  1969 hemmerle  w  j  random number  <B>uniform</B> distribution  pseudo-random number  random number generator  multiplicative congruential generator  power residue  two <B>s</B> complement
62 Q0 2672 68 0.041021552 Lucene_47
emotional content considered dangerous cacm march  1974 smoliar  <B>s</B>  w  artificial intelligence  heuristic programming  models of cognitive processes  computer music  computer composition  music <B>theory</B> 3.44 3.65 ca740311 jb january 18  1978 10 56 am 2672 5 2672 2672 5 2672 2672 5 2672
62 Q0 2227 69 0.04027341 Lucene_47
  finally  some conclusions <B>relating</B> to general programming methodology are drawn  cacm january correctness  <B>theory</B> of programming 4.0 4.22 5.21 5.23 5.24 ca710107 jb february 8  1978 10 40 am 2021 4
62 Q0 2368 70 0.04016712 Lucene_47
 is connect or cut  cacm april  1972 chase  <B>s</B>  m  graph algorithms  graph processing  shannon switching games  game playing  graph <B>theory</B>  positional games  demonstration programs  game <B>theory</B>  spinning
62 Q0 2889 71 0.04013795 Lucene_47
performance of height-balanced trees this paper presents the <B>results</B> of simulations  trees drops sharply as the allowable imbalance  k  increases  <B>both</B> analytical and experimental <B>results</B> that show the cost of maintaining hb k  trees as a function of k are discussed  cacm january  1976 karlton  p  l  fuller  <B>s</B>  h  scroggs  r  e  kaehler  e  b  hb k  trees  balanced trees  avl
62 Q0 1567 72 0.039793797 Lucene_47
on the representation of symmetric polynomials relations are given between certain symmetric polynomials in the light of the <B>theory</B> of the symmetric group  such an approach unifies earlier work and lends insight to previously published work by aaron booker  a generalization of graeffe <B>s</B> root  j  k  <B>s</B>  ca670706 jb february 28  1978 8 56 am 1567 4 1567 1948 4 1567 1559 5 1567 1567 5 1567 1567
62 Q0 2628 73 0.039741695 Lucene_47
 discipline with respect to the shortest-latency-time-first  sltf  scheduling discipline  the <B>results</B> discipline are shown to be comparable to sltf algorithms  in <B>both</B> cases  the sorting procedure is the most time-consuming phase of the algorithm  cacm july  1974 fuller  <B>s</B>  h  drum scheduling  disk
62 Q0 1424 74 0.038860604 Lucene_47
automatic analysis of electronic digital <B>circuits</B> using list processing a mapping from black diagrams of digital <B>circuits</B> to list structures is described  together with a list processing program written for the control data 3600 which uses this mapping to automatically carry out circuit analysis  cacm may  1966 shalla  l  ca660513 jb march 3  1978 9 24 am 1424 5 1424 1424 5 1424 1424 5 1424 1846
62 Q0 2952 75 0.03879989 Lucene_47
functions realizable with word-<B>parallel</B> logical and two <B>s</B>-complement addition instructions cacm june  1977 warren  h  <B>s</B>  jr  boolean functions  two <B>s</B>-complement  sign propagation 4.0 6.32 ca770611 jb december 28  1977 12 45 pm 362 4 2952 2296 4 2952 2952 4 2952 2952 4 2952 2952 4 2952 2952 4 2952 2952 4 2952 2952 4 2952 142 4 2952 142 4 2952 142 4 2952 142 5 2952 162 5 2952 163 5 2952 192 5 2952
62 Q0 2703 76 0.038641166 Lucene_47
the intrinsically exponential <B>complexity</B> of the circularity problem for attribute grammars attribute grammars are an extension of context-free grammars devised by knuth as a mechanism for including many cases use an exponential amount of timen improved version of knuth <B>s</B> circularity testing algorithm  computational <B>complexity</B>  exponential time  semantics 4.12 5.25 ca751204 jb january 5  1978 4 38 pm
62 Q0 2936 77 0.038641166 Lucene_47
 of the best of the previously published algorithms  first  the new algorithm <B>s</B> performance is quite insensitive to skewed distributions  and second  its worst-case <B>complexity</B> is o  n   where n is the number of events in the set  furthermore  tests conducted to estimate the average <B>complexity</B> showed
62 Q0 2997 78 0.038641166 Lucene_47
  the time <B>complexity</B> of the proposed algorithms is optimal within a multiplicative constant  cacm february  1977 preparata  f  p  hong  <B>s</B>  j  computational <B>complexity</B>  convex hull  optimal algorithms
62 Q0 2289 79 0.038532842 Lucene_47
 in speed achieved by virtue of the possibilities for <B>parallel</B> processing  in this paper it is shown 2 to n 3 steps  cacm september  1972 levitt  k  n  kautz  w  h  graph <B>theory</B>  cellular logic-in-memory arrays  <B>parallel</B> processing  special purpose computers  algorithms for distance and spanning tree
62 Q0 2682 80 0.038153704 Lucene_47
 the appropriate parameters  calibration experiments are conducted to determine expressions <B>relating</B> jobs is constructed to represent a month <B>s</B> workload consisting of about 6000 jobs  cacm march  1974
62 Q0 1111 81 0.037713032 Lucene_47
a class of iterative techniques for the factorization of polynomials  a method of iteration is developed in terms of a function of somewhat arbitrary character  sufficient conditions are given for convergence of the process  yielding factors of arbitrary degree for polynomials in one variable  <B>both</B> lin <B>s</B> method and newton <B>s</B> method occur as special cases  cacm march  1964 luther  h  a  ca640321 jb
62 Q0 2977 82 0.037070464 Lucene_47
the stage hypothesis and the <B>s</B>-curve  some contradictory evidence this paper presents the <B>results</B> of a study testing the <B>s</B>-shaped budget curve of nolan <B>s</B> stage model of computer development in an organization  research on the data processing budgets of california counties fails to support the <B>s</B>-shaped curve or the use of budgets as a basis for a stage model  however  the <B>results</B> do not invalidate
62 Q0 252 83 0.03695003 Lucene_47
 reliability  after achieving the required level of integration  <B>both</B> computers do similar processing on the same inputs and continually cross-check the intermediate and final <B>results</B>  cacm november  1961
62 Q0 2305 84 0.03667399 Lucene_47
the  plankalkul  of konrad zuse  a forerunner of today <B>s</B> programming languages plankalkul was an attempt by korrad zuse in the 1940 <B>s</B> to devise a notational and conceptual system for writing what to practical use  the plan is described here because it contains features that are standard in today <B>s</B> july  1972 bauer  f  l  wossner  h  higher programming languages  programming  <B>theory</B> of programming
62 Q0 2784 85 0.036627766 Lucene_47
expected time bounds for selection a new selection algorithm is presented which is shown to be very efficient on the average  <B>both</B> theoretically and practically  the number of comparisons used to select the ith smallest of n numbers is n min i n-i  o n   a lower bound within 9 percent of the above <B>complexity</B>  medians  tournaments  quantiles 5.30 5.39 ca750304 jb january 9  1978 4 52 pm 1919 4 2784 2191
62 Q0 2484 86 0.03635491 Lucene_47
 an element from the given set of objects  the use of different relations and algorithms <B>results</B> set of constraints  the <B>results</B> presented may be valuable to designers as useful design concepts  and may serve as a basis for developing a formal <B>theory</B> on the subject  cacm july  1973 huang  j  c
62 Q0 1536 87 0.036234863 Lucene_47
dynamic computation of derivatives it is shown how wengert <B>s</B> procedure for computation of derivatives can be implemented conveniently by use of compiler-generated complex addition  subtraction  and linkage to complex arithmetic subroutines  evaluation of a function and derivative proceed in <B>parallel</B>  as in wengert <B>s</B> procedure  but with the  imaginary  parts of variables declared complex bearing
62 Q0 2076 88 0.03569743 Lucene_47
cubic splines on <B>uniform</B> meshes a very simple procedure is presented for constructing cubic splines  periodic or nonperiodic  on <B>uniform</B> meshes  arcs of two cubics suffice to construct a basis of cardinal splines  an algorithm is given which requires only minimal storage and computation and permits representation  cardinal splines  <B>uniform</B> mesh splines 5.13 ca700408 jb february 13  1978 2 51 pm 2076 5 2076
62 Q0 1664 89 0.035009284 Lucene_47
 equations <B>relating</B> the curvilinear coordinates of interest to an orthogonal cartesian triad  when on programming details  <B>results</B> are presented for cylindrical polar and spherical polar coordinate systems
62 Q0 2077 90 0.034950368 Lucene_47
the cyclical majority problem the problem of the cyclical majority is presented and some new  simulated <B>results</B> for 3  4  5       40 issues ad 3  5  7       37 judges are reported  cacm april  1970 pomeranz  j  e  weil jr   r  l  arrow <B>s</B> paradox  cyclical majority  simulation  voter <B>s</B> paradox  voting paradox 3.31 3.35 ca700407 jb february 13  1978 2 58 pm 2077 5 2077 2077 5 2077 2077 5 2077
62 Q0 2911 91 0.034773987 Lucene_47
 differ considerably and in <B>both</B> directions from the predictions of the 50 percent rule  a new that the anomalous behavior <B>results</B> from the combined effects of systematic placement and the statistics as the distribution <B>s</B> coefficient of variation increases  some practical implications are briefly discussed  cacm
62 Q0 2898 92 0.034744617 Lucene_47
 <B>both</B> nonprocedural and sequential facilities  within a program  nonprocedural and sequential program modules may be nested freely  cacm december  1977 kessels  j  l  w  <B>parallel</B> programming
62 Q0 1398 93 0.034108967 Lucene_47
 are derived from information <B>theory</B>  cacm july  1966 sterling  t  gleser  m  haberman  <B>s</B>  pollack  <B>s</B>  ca660714jb march 2  1978 8 26 pm 1398 5 1398 1398 5 1398 1398 5 1398
62 Q0 1747 94 0.034041926 Lucene_47
 the influences affecting the content and extent of his computer <B>s</B> output  to define the scope clock  the synchronization of <B>parallel</B> processes  protection in multiprogrammed systems  debugging  program debugging  program testing  <B>parallel</B> processing  <B>parallel</B> programming
62 Q0 2865 95 0.034041926 Lucene_47
verifying properties of <B>parallel</B> programs  an axiomatic approach an axiomatic method for proving a number of properties of <B>parallel</B> programs is presented  hoare has given a set of axioms for partial for the use of auxiliary variables  which are added to a <B>parallel</B> program as an aid to proving it correct are presented and illustrated by application to the dining philosophers problem  cacm may  1976 owicki  <B>s</B>
62 Q0 2896 96 0.034041926 Lucene_47
an exercise in proving <B>parallel</B> programs correct a <B>parallel</B> program  dijkstra <B>s</B> on-the-fly garbage collector  is proved correct using a proof method developed by owicki  the fine degree of in terleaving in this program makes it especially difficult to understand  and complicates the proof greatly  difficulties with proving such <B>parallel</B> programs correct are discussed  cacm december  1977 gries  d
62 Q0 1199 97 0.03383359 Lucene_47
a computer center simulation project today <B>s</B> computation centers are based on rapidly changing technologies of hardware and software systems  it is difficult  therefore  to base decisions processes  and control functions  experiments performed with this model  the <B>results</B> of the experiments  and the application of the <B>results</B> are discussed  cacm september  1965 hutchinson  g  k  ca650907jb
62 Q0 1601 98 0.03366643 Lucene_47
<B>parallel</B> numerical methods for the solution of equations classical iterative procedures iteration are computationally independent  making the methods of interest in a <B>parallel</B> processing families of numerical procedures which use the technique of the procedures in a <B>parallel</B> processing are interpreted in a <B>parallel</B> processing environment  in such an environment the procedures obtained
62 Q0 2333 99 0.033310663 Lucene_47
random vectors <B>uniform</B> is solid angle  algorithm r381  cacm june  1972 schrack  g  f  random vector generator  points <B>uniform</B> on sphere  spherically symmetric probability distribution 5.5 ca720612 jb january 30  1978 4 02 pm 2333 4 2333 2333 4 2333 2333 4 2333 87 4 2333 1793 5 2333 2333 5 2333 2333 5 2333 2333 5 2333 87 5 2333 88 5 2333
62 Q0 2975 100 0.033310663 Lucene_47
remark on <B>uniform</B> insertion in structured data structures cacm april  1977 hollander  c  data structures  directed graphs  <B>uniform</B> insertion 4.34 ca770407 jb december 29  1977 5 04 am 2975 4 2975 2594 5 2975 2975 5 2975 2975 5 2975 2975 5 2975
*************Query 63*************************

63 Q0 2289 1 0.5226894 Lucene_47
 is the determination of <B>algorithms</B> that exploit the possibilities for parallelism  <B>especially</B> for problems  these <B>algorithms</B> exhibit a <B>computation</B> time that in many cases grows at a rate not exceeding log2 n  where n-in-memory arrays  <B>parallel</B> processing  special purpose computers  <B>algorithms</B> for distance and spanning tree in speed achieved by virtue of the possibilities for <B>parallel</B> processing  in this paper it is shown
63 Q0 2266 2 0.45040956 Lucene_47
a highly <B>parallel</B> algorithm for approximating all zeros of a polynomial with only real zeros an algorithm is described based on newton s method which simultaneously approximates all zeros of a polynomial with only real zeros  the algorithm  which is conceptually suitable for <B>parallel</B> <B>computation</B>  cacm november  1972 patrick  m  l  <B>parallel</B> numerical <B>algorithms</B>  real polynomials  real zeros
63 Q0 3075 3 0.4093948 Lucene_47
fast <B>parallel</B> sorting <B>algorithms</B> a <B>parallel</B> bucket-sort algorithm is presented that requires time o 1   1 k processors  for k an arbitrary integer  the model of <B>computation</B> for this procedure permits simultaneous fetches from the same memory location  cacm august  1978 hirschberg  d  <B>parallel</B> processing  sorting  <B>algorithms</B>  bucket sort 3.74 4.34 5.25 5.31 ca780803 dh february 7  1979 10 25 am
63 Q0 2973 4 0.37635434 Lucene_47
sorting on a mesh-connected <B>parallel</B> computer two <B>algorithms</B> are presented for sorting n 2 elements on an n x n mesh-connected processor array that require o n  routing and comparison steps  the best previous algorithm takes time o n log n   the <B>algorithms</B> of this paper are shown to be optimal april  1977 thompson  c  d  kung  h  t  <B>parallel</B> computer  <B>parallel</B> sorting  <B>parallel</B> merge  routing
63 Q0 2114 5 0.3512465 Lucene_47
 such as inverted files  index-<B>sequential</B> files  and multilist files are derived  two <B>algorithms</B> which retrieve file structure  inverted file  index-<B>sequential</B>-file  multilist file  description  file search  directory search  serial processing of lists  prime keyword  <B>parallel</B> processing of lists 3.70 3.73 3.74
63 Q0 950 6 0.30819467 Lucene_47
<B>parallel</B> methods for integrating ordinary differential equations this paper is dedicated to the proposition that  in order to take full advantage for real-time computations of highly <B>parallel</B> computers as can be expected to be available in the near future  much of numerical analysis will have to be recast in a more  <B>parallel</B>  form  by this is meant that serial <B>algorithms</B> ought to be replaced
63 Q0 2557 7 0.2661227 Lucene_47
 to evaluate such products on ordinary serial computers as well as <B>parallel</B> computers is discussed  <B>algorithms</B> are presented which properly parse such matrix sequences subject to the constraints multiplication  operation minimization  <B>parallel</B> machine  time minimization 4.22 5.14 ca730104 jb january
63 Q0 2570 8 0.2661227 Lucene_47
a comparison of list schedules for <B>parallel</B> processing systems the problem of scheduling two or more processors to minimize the execution time of a program which consists of a set of partially times are random variables are analyzed  it is shown that different <B>algorithms</B> suggested is presented  cacm december  1974 adam  t  l  chandy  k  m  dickson  j  r  <B>parallel</B> processing
63 Q0 2851 9 0.26047218 Lucene_47
formal verification of <B>parallel</B> programs two formal models for <B>parallel</B> <B>computation</B> are presented  an abstract conceptual model and a <B>parallel</B>-program model  the former model does not distinguish <B>between</B> control and data states  the latter model includes the capability for the representation principle  a special case of the assertions method  which is called <B>parallel</B> place assertions  is shown
63 Q0 3156 10 0.25682887 Lucene_47
  graph theory  <B>parallel</B> processing  <B>algorithms</B>  transitive closure  connected component 5.25 5.32 6.22computing connected components on <B>parallel</B> computers we present a <B>parallel</B> algorithm which uses n2 processors to find the connected components of an undirected graph with n vertices in time o log2n   an o log2n  time bound also can be achieved using only n n  log2n   processors  the algorithm can
63 Q0 2884 11 0.23919609 Lucene_47
permutation enumeration  four new permutation <B>algorithms</B> classical permutation enumeration <B>algorithms</B> encounter special cases requiring additional <B>computation</B> every nth permutation when generating the n  permutations on n marks  four new <B>algorithms</B> have the attribute that special cases occur every n n-1 permutations  two of the <B>algorithms</B> produce the next permutation with a single exchange of two
63 Q0 2700 12 0.23765408 Lucene_47
reduction  a method of proving properties of <B>parallel</B> programs when proving that a <B>parallel</B> program properties such as halting  thus correctness proofs of a <B>parallel</B> system can often be greatly simplified  cacm december  1975 lipton  r  j  deadlock free  reduction  interruptible  indivisible  <B>parallel</B> program  semaphore  verification method  process  <B>computation</B> sequence 4.32 4.35 5.24 ca751207 jb
63 Q0 1795 13 0.23062818 Lucene_47
optimal code for serial and <B>parallel</B> <B>computation</B> cacm december  1969 fateman  r  j  code optimization  sequencing of operations  detection of common subexpressions 4.12 ca691217 jb february 15  1978 1 59 pm 1795 5 1795 1795 5 1795 1795 5 1795
63 Q0 2433 14 0.22176889 Lucene_47
 and express <B>parallel</B> <B>algorithms</B> are described  cacm october  1973 millstein  r  e  array processing  parallelism detection  explicit parallelism  array allocation  <B>parallel</B> control structures  illiac iv
63 Q0 3086 15 0.21936002 Lucene_47
on the complexity of computing the measure of u ai  bi  the decision tree complexity of computing the measure of the union of n  possibly overlapping  intervals is shown to be  n log n   even if <B>comparisons</B> <B>between</B> linear functions of the interval endpoints are allowed  the existence of an  n log n  analysis of <B>algorithms</B>  combinatorial problems  computational complexity  computational models
63 Q0 2402 16 0.217568 Lucene_47
 recognition <B>algorithms</B> is hindered by the fact that the cross-correlation <B>between</B> a model encourages the development of <B>algorithms</B> adapted to this environment  pictorial pattern recognition function  <B>especially</B> for large structures  this is significant  for crystallography of biological
63 Q0 2785 17 0.21105283 Lucene_47
  <B>parallel</B> <B>computation</B>  <B>parallel</B> architecture 4.2 4.21 4.22 ca750303jb january 9  1978 4 57 pm 2785 4 2785 of the language  and discusses some of the problems associated with <B>parallel</B> computer architectures  cacm march
63 Q0 2692 18 0.2058991 Lucene_47
reentrant polygon clipping a new family of clipping <B>algorithms</B> is described  these <B>algorithms</B> the parts of the polygon which lie outside the volume  in two dimensions the <B>algorithms</B> permit clipping vertices introduced in sequence to describe any newly-cut edge or edges  the <B>algorithms</B> easily handle of the clipping window  the <B>algorithms</B> described achieve considerable simplicity by clipping separately
63 Q0 3061 19 0.2048271 Lucene_47
simulations of dynamic <B>sequential</B> search <B>algorithms</B> none cacm september  1978 tenenbaum  a  searching  list processing  <B>sequential</B> searching  dynamic reordering  simulation 3.74 8.1 ca780911 dh january 29  1979 6 30 pm 3061 4 3061 2885 5 3061 3061 5 3061 3061 5 3061 3061 5 3061
63 Q0 1601 20 0.20047008 Lucene_47
<B>parallel</B> numerical methods for the solution of equations classical iterative procedures iteration are computationally independent  making the methods of interest in a <B>parallel</B> processing families of numerical procedures which use the technique of the procedures in a <B>parallel</B> processing are interpreted in a <B>parallel</B> processing environment  in such an environment the procedures obtained
63 Q0 2232 21 0.19075425 Lucene_47
 the word description can be made precise so that computer <B>algorithms</B> for feature extraction may and tabular <B>comparisons</B> are given  substantial variation in width-at-angle magnitude is found  the principal is recommended for cases where <B>computation</B> of width-at-angle is difficult  cacm january  1971 klinger
63 Q0 1811 22 0.18341291 Lucene_47
a case study in programming for <B>parallel</B>-processors an affirmative partial answer is provided to the question of whether it is possible to program <B>parallel</B>-processor computing systems to efficiently decrease execution time for useful problems  <B>parallel</B>-processor systems are multiprocessor systems independently of the other processors  communication <B>between</B> cooperating processors is by means of data
63 Q0 2895 23 0.17949885 Lucene_47
a language for formal problem specification a language for specifying the in tended behavior of communicating <B>parallel</B> processes is described  the specifications are constrain ts on the order in which events of a <B>computation</B> can occur  the language is used to write specifications of the readers greif  i  formal specifications program correctness  <B>parallel</B> processing  synchronization  readers
63 Q0 2898 24 0.17910556 Lucene_47
a conceptual framework for a nonprocedural programming language a <B>sequential</B> programming language forces the programmer to prescribe explicitly the order in which the operations in his program have both nonprocedural and <B>sequential</B> facilities  within a program  nonprocedural and <B>sequential</B> program modules may be nested freely  cacm december  1977 kessels  j  l  w  <B>parallel</B> programming
63 Q0 2337 25 0.1767721 Lucene_47
a sorting problem and its complexity a technique for proving min-max norms of sorting <B>algorithms</B> is given  one new algorithm for finding the minimum and maximum elements of a set with fewest <B>comparisons</B> is proved optimal with this technique  cacm june  1972 pohl  i  sorting  computational complexity  computational combinatorics 5.29 5.31 ca720608 jb january 30  1978 4 15 pm 2337 5 2337 2337 5
63 Q0 3059 26 0.17587736 Lucene_47
  multiprogramming  <B>parallel</B> processing  queueing network models  multiprocessing of <B>computation</B> and i o 4.32models for <B>parallel</B> processing within programs  application to cpu i o and i o i o overlap approximate queueing models for internal <B>parallel</B> processing by individual programs in a multiprogrammed system are developed in this paper  the solution technique is developed by network decomposition
63 Q0 2838 27 0.17430817 Lucene_47
 normally requires by performing garbage collection on a second processor in <B>parallel</B> with list processing operations  or on a single processor time-shared with them  <B>algorithms</B> for recovering discarded list  time-sharing  multiprocessing  <B>parallel</B> processing  real time  data structures  analysis of <B>algorithms</B> 3.69 3.89 4.19 4.29 4.32 4.34 4.9 5.25 ca760901 jb january 4  1978 9 57 am 1024 4 2838 1051 4 2838
63 Q0 2195 28 0.16991171 Lucene_47
  the relation <B>between</B> the structure of the figure of merit and the complexity of the optimization process is then discussed  the method described is suitable for <B>parallel</B> processing because the operations relative to each state can be computed in <B>parallel</B>  and the number of stages is equal to the length n optimal detection  heuristic methods  global recognition  <B>parallel</B> processing  dynamic programming
63 Q0 2896 29 0.16807464 Lucene_47
an exercise in proving <B>parallel</B> programs correct a <B>parallel</B> program  dijkstra s on-the-fly garbage collector  is proved correct using a proof method developed by owicki  the fine degree of in terleaving in this program makes it <B>especially</B> difficult to understand  and complicates the proof greatly  difficulties with proving such <B>parallel</B> programs correct are discussed  cacm december  1977 gries  d
63 Q0 2342 30 0.1667589 Lucene_47
interference <B>between</B> communicating <B>parallel</B> processes various kinds of interference <B>between</B> communicating <B>parallel</B> processes have been examined by dijkstra  knuth  and others  solutions have been given for the mutual exclusion problem and associated subproblems  in the form of <B>parallel</B> programs of <B>parallel</B> processes is regarded as a machine which proceeds from one state s  i e  a collection
63 Q0 320 31 0.16604744 Lucene_47
 to fully express and consider both the <B>sequential</B> and <B>parallel</B> aspects of logic  they can be compiled
63 Q0 2283 32 0.16430028 Lucene_47
thinning <B>algorithms</B> on rectangular  hexagonal  and triangular arrays in this report three thinning <B>algorithms</B> are developed  one each for use with rectangular  hexagonal  and triangular arrays of the <B>algorithms</B> are presented and the relative performances of the <B>algorithms</B> are compared  it is found a balance <B>between</B> those of the other two arrays  cacm september  1972 deutsch  e  s  thinning
63 Q0 1846 33 0.15914892 Lucene_47
on simulating networks of <B>parallel</B> processes in which simultaneous events may occur some <B>sequential</B> processes  briefly reviewed are the common techniques used to handle such simulations when problems  the technique will either find a method of simulating the <B>parallel</B> events or report  l  simulation  <B>parallel</B> processes  simultaneous events  picture processing  computer system
63 Q0 2324 34 0.15709758 Lucene_47
 of user oriented software  and <B>comparisons</B> of currently known <B>algorithms</B> to demonstrate which science  operations research  <B>algorithms</B> 5.41 8.3 ca720704 jb january 30  1978 3 14 pm 2324 5 2324
63 Q0 1536 35 0.15457255 Lucene_47
dynamic <B>computation</B> of derivatives it is shown how wengert s procedure for <B>computation</B> of derivatives can be implemented conveniently by use of compiler-generated complex addition  subtraction  and linkage to complex arithmetic subroutines  evaluation of a function and derivative proceed in <B>parallel</B>  as in wengert s procedure  but with the  imaginary  parts of variables declared complex bearing
63 Q0 1468 36 0.15409733 Lucene_47
syntax-directed interpretation of classes of pictures a descriptive scheme for classes of pictures based on labeling techniques using <B>parallel</B> processing <B>algorithms</B> was proposed by the author some  the <B>parallel</B> processing simulator  originally written for an ibm 7094 system  has now been rewritten for a cdc outputs using this grammar and the <B>parallel</B> processing simulator mentioned earlier  cacm march  1966
63 Q0 3039 37 0.1489154 Lucene_47
-grained interleaving  cooperation <B>between</B> <B>sequential</B> processes with minimized mutual exclusionon-the-fly garbage collection  an exercise in cooperation as an example of cooperation <B>between</B> <B>sequential</B> processes with very little mutual interference despite frequent manipulations of a large with the processor devoted to the <B>computation</B> proper  exclusion and synchronization constraints have been
63 Q0 2767 38 0.1416788 Lucene_47
  the <B>algorithms</B> are tested with a set of typical stochastic scheduling distributions <B>especially</B> chosen to show the advantages and limitations of the <B>algorithms</B>  the end-order tree algorithm is showna comparison of simulation event list <B>algorithms</B> four <B>algorithms</B> are considered which can be used to schedule events in a general purpose discrete simulation system  two of the <B>algorithms</B> are new
63 Q0 1957 39 0.14086229 Lucene_47
the list set generator  a construct for evaluating set expressions the list set generator is defined and <B>algorithms</B> for its use are given  the list set generator is a construct which may be added to a list processing system or any system that handles sets  it efficiently generates the set which the expression as a whole and in <B>parallel</B>  rather than evaluating subexpressions and then using those
63 Q0 3131 40 0.13655853 Lucene_47
focus microcomputer number system focus is a number system and supporting computational <B>algorithms</B> <B>especially</B> useful for microcomputer control and other signal processing applications  focus has the wide-ranging character of floating-point numbers with a uniformity of state distributions that give  <B>algorithms</B> for 8-bit and 16-bit implementations of focus are included  cacm march  1979 edgar
63 Q0 2490 41 0.13446605 Lucene_47
efficient <B>algorithms</B> for graph manipulation  h   algorithm a447  efficient <B>algorithms</B> are presented for partitioning a graph into connected components  biconnected components and simple paths path <B>between</B> two vertices already on paths   the start vertex can be specified dynamically   if v  r  graphs analysis of <B>algorithms</B>  graph manipulation 5.32 ca730610 jb january 23  1978 1 55 pm 2490
63 Q0 2685 42 0.1337413 Lucene_47
the <B>parallel</B> execution of do loops methods are developed for the <B>parallel</B> execution of different iterations of a do loop  both asynchronous multiprocessor computers and array computers are considered  practical application to the design of compilers for such computers is discussed  cacm february  1974 lamport  l  <B>parallel</B> computing  multiprocessor computers  array computers  vector computers
63 Q0 3166 43 0.13352518 Lucene_47
computing standard deviations  accuracy four <B>algorithms</B> for the numerical <B>computation</B> of the standard deviation of  unweighted  sampled data are analyzed  two of the <B>algorithms</B> are well-known in the statistical and computational literature  the other two are new <B>algorithms</B> specifically intended for automatic <B>computation</B>  our discussion is expository  with emphasis on reaching a suitable
63 Q0 2837 44 0.13257907 Lucene_47
new upper bounds for selection the worst-case minimum number of <B>comparisons</B> complexity vi n  of the i-th selection problem is considered  a new upper bound for vi n  improves the bound given by the standard hadian-sobel algorithm by a generalization of the kirkpatrick-hadian-sobel algorithm favorably with a recent algorithm by hyafil  cacm september  1976 yap  c  k  selection problem  <B>algorithms</B>
63 Q0 1262 45 0.13236956 Lucene_47
procedure-oriented language statements to facilitate <B>parallel</B> processing two statements are suggested which allow a programmer writing in a procedure-oriented language to indicate sections of program which are to be executed in <B>parallel</B>  the statements are do together and hold  these serve partly as brackets in establishing a range of <B>parallel</B> operation and partly to define each <B>parallel</B> path
63 Q0 141 46 0.13236956 Lucene_47
some thoughts on <B>parallel</B> processing cacm october  1960 yarbrough  l  d  ca601007 jb march 20  1978 8 16 pm 141 5 141 141 5 141 141 5 141
63 Q0 392 47 0.13236956 Lucene_47
comment on a paper on <B>parallel</B> processing cacm february  1961 nekora  m  r  ca610206 jb march 17  1978 12 58 am 392 5 392 392 5 392 392 5 392
63 Q0 2306 48 0.13105685 Lucene_47
ancient babylonian <B>algorithms</B> the early origins of mathematics are discussed  emphasizing those aspects which seem to be of greatest interest from the standpoint of computer science  a number of old babylonian tablets  many of which have never before been translated into english  are quoted  cacm july  1972 knuth  d  e  history of <B>computation</B>  babylonian tablets  sexagesimal number system
63 Q0 2630 49 0.1288827 Lucene_47
on computing sets of shortest paths in a graph two <B>algorithms</B> are presented that construct the k shortest paths <B>between</B> every pair of vertices in a directed graph  these <B>algorithms</B> generalize the floyd algorithm and the dantzig algorithm for finding the shortest path <B>between</B> every pair of vertices in a directed graph  cacm june  1974 minieka  e  graph  network  shortest path  algorithm 5.32
63 Q0 1411 50 0.1261951 Lucene_47
comparison of several <B>algorithms</B> for <B>computation</B> of means  standard deviations and correlation coefficients several <B>algorithms</B> for <B>computation</B> of basic statistics are compared by their performance on systematically generated test data  the statistics calculated were the mean  standard deviation  correction due to an accumulated error term  and a recursive <B>computation</B> of the current value
63 Q0 2263 51 0.12510315 Lucene_47
 <B>algorithms</B> two new <B>algorithms</B> for deriving optimal and near-optimal flowcharts from limited entry conditions  one of the <B>algorithms</B>  called the optimum-finding algorithm  leads to a flowchart which truly but does not necessarily produce the optimum flowchart  the <B>algorithms</B> are first derived for treating to be equally valid for tables including such a rule  both <B>algorithms</B> are compared with existing ones
63 Q0 1158 52 0.124799214 Lucene_47
program structures for <B>parallel</B> processing constructs for organizing and explicating <B>parallel</B> program segments are discussed as extensions to algol 60  the constructs serve as meta-commands and are motivated by equipment having multiprocessing capability  cacm december  1965 anderson  j  p  ca651211 jb march 6  1978 3 39 pm 1158 4 1158 1158 5 1158 1158 5 1158 1158 5 1158 1262 5 1158
63 Q0 2932 53 0.12151178 Lucene_47
complexity of computations the framework for research in the theory of complexity of computations is described  emphasizing the in terrelation <B>between</B> seemingly diverse problems and methods  illustrative examples of practical and theoretical significance are given  directions for new research  in tractable problems  probabilistic <B>algorithms</B> 5.25 ca770901 jb december 28  1977 6 54 am 2932 5 2932
63 Q0 2740 54 0.12084882 Lucene_47
a large semaphore based operating system the paper describes the internal structure of a large operating system as a set of cooperating <B>sequential</B> processes  the processes synchronize by means of semaphores and extended semaphores  queue semaphores   the number of <B>parallel</B> processes is carefully  asynchronous structuring  buffering  <B>parallel</B> processes  synchronizing primitives  reentrant code  rc
63 Q0 2679 55 0.120346814 Lucene_47
 that qsort  no  402  requires many more <B>comparisons</B> than its author claims  of all these <B>algorithms</B>  quickersort requires the fewest <B>comparisons</B> to sort random arrays  cacm march  1974 loeser  r  sorting are presented for six acm <B>algorithms</B>  quicksort  no  64   shellsort  no  201   stringsort  no  207    treesort3   no  245   quickersort  no  271   and qsort  no  402   <B>algorithms</B> 271 and 402 are refinements
63 Q0 3073 56 0.117413275 Lucene_47
communicating <B>sequential</B> processes this paper suggests that input and output are basic primitives of programming and that <B>parallel</B> composition of communicating <B>sequential</B> processes is a fundamental program structuring method  when combined with a development of dijkstra s guarded command  programming primitives  program structures  <B>parallel</B> programming  concurrency  input  output  guarded
63 Q0 2714 57 0.11673897 Lucene_47
merging with <B>parallel</B> processors consider two linearly ordered sets a  b   a  m   b  n  m lt  n  and p  p lt  m  <B>parallel</B> processors working synchronously  the paper presents an algorithm for merging a and b with the p <B>parallel</B> processors  which requires at most 2 log2  2m 1    3m p     m p  log2 favorably with the previous best <B>parallel</B> merging algorithm  batcher s algorithm  which requires n p     m
63 Q0 1171 58 0.115652345 Lucene_47
 parameters in determining the difference in the number of iterations <B>between</B> the <B>algorithms</B> is not onlya comparison of the primal-simplex and primal-dual <B>algorithms</B> for linear programming a statistical comparison of the primal-dual and the more commonly used primal-simplex algorithm for solving linear programming problems has been made under the assumption of starting with a full artificial basis
63 Q0 409 59 0.115652345 Lucene_47
cl-1  an environment for a compiler a flexible  large-scale programming system to facilitate the solution of information processing problems and to provide intercommunication <B>between</B> programs and instances of large and complex data sets  as well as <B>algorithms</B> defined on these data sets  both data and <B>algorithms</B> may be expressed in a family of command and descriptive languages  the concept
63 Q0 2135 60 0.11448827 Lucene_47
rapid <B>computation</B> of general interpolation formulas and mechanical quadrature rules let f have n continuous on a closed interval  a b  and let l be a linear functional  the attempt is made to approximate l  f  with l  q  where q is a polynomial  approximating f  <B>algorithms</B> are developed for rapid <B>computation</B> of l  q  for a wide class of selections of q which includes the lagrangian and hermitian
63 Q0 3132 61 0.112055026 Lucene_47
experiments with some <B>algorithms</B> that find central solutions for pattern classification in two in the empty space <B>between</B> the two classes  since a central hyperplane does not favor one class a noncentral hyperplane  six <B>algorithms</B> for finding central hyperplanes are tested on three data sets  although frequently used practice  the modified relaxation algorithm is very poor  three <B>algorithms</B>
63 Q0 1302 62 0.11030797 Lucene_47
<B>parallel</B> signaling speeds for data transmission  proposed american stand ard  cacm march  1965 ca650305 jb march 7  1978 6 08 pm 1302 5 1302 1302 5 1302 1302 5 1302
63 Q0 2325 63 0.10499035 Lucene_47
 of <B>algorithms</B>  analysis of error  programs and program libraries  cacm july  1972 traub  j  f  numerical mathematics  computer science  mathematics of <B>computation</B>  <B>algorithms</B>  continuous <B>algorithms</B> 1.3 5.0 5.1numerical mathematics and computer science numerical mathematics is viewed as the analysis of continuous <B>algorithms</B>  four of the components of numerical mathematics are discussed
63 Q0 2366 64 0.098292634 Lucene_47
  in addition to <B>computation</B> of function values  this algorithm includes an object-time estimation of round  a fortran program for the algorithm appears in the <B>algorithms</B> section of this issue  cacm april
63 Q0 2030 65 0.09637695 Lucene_47
 parsers for context-sensitive grammars and general rewriting systems  and the difference <B>between</B> grammars  formal language theory  parsing  parsing <B>algorithms</B>  recognition <B>algorithms</B> 3.42 5.22 5.23
63 Q0 2276 66 0.09637695 Lucene_47
 distribution there remains a choice <B>between</B> slower and shorter <B>algorithms</B> and faster but space consuming  with some new <B>algorithms</B>  a number of procedures convert taylor series expansions directly into sampling
63 Q0 2924 67 0.09637695 Lucene_47
  the method is a synthesis of spline theory and <B>algorithms</B>  an in teractive means for man-machine and the surface is in terpolated <B>between</B> sections by cardinal splines  among the features of this method are <B>algorithms</B> which enable in teractive modification of the b-spline representation of the sectional
63 Q0 3018 68 0.09637695 Lucene_47
 subgraphs with the objective of minimizing the number of complete subgraphs  a relationship <B>between</B> this edge-clique-cover problem and the graph coloring problem is established which allows <B>algorithms</B>-complete  and if p  np then they do not admit polynomial-time approximation <B>algorithms</B> which always
63 Q0 3124 69 0.09637695 Lucene_47
recursive data structures in apl a mathematical study of three approaches for defining nested arrays in apl is presented  theorems exhibiting the relationships <B>between</B> the definitional systems in the construction of data-driven <B>algorithms</B>  cacm february  1979 gull w  jenkins  m  nested arrays  apl arrays  recursive data structures  trees  data-driven <B>algorithms</B>  theory of arrays 4.22 5.29
63 Q0 3153 70 0.09637695 Lucene_47
 is examined in the context of a paged computer system  two parameterized <B>algorithms</B> which partition the main memory <B>between</B> two classes of jobs are considered  initially  a closed system consisting alocation parameters on the expected response times under the two <B>algorithms</B>  numerical solutions
63 Q0 2175 71 0.0955295 Lucene_47
 the expression is to be executed  these subexpressions can be evaluated in serials  in <B>parallel</B> with a  cache  buffer memory  if the number of subexpressions which can be executed in <B>parallel</B>  <B>parallel</B> processing  cache  arithmetic expressions  subexpression ordering  computational trees  compilers
63 Q0 2401 72 0.0955295 Lucene_47
on shrinking binary picture patterns a <B>parallel</B> processing algorithm for shrinking binary patterns to obtain single isolated elements  one for each pattern  is presented  this procedure may be used employed  two-by-two elements   the <B>parallel</B> nature of the process  and the possibility of shrinking january  1972 levialdi  s  counting binary patterns  shrinking  <B>parallel</B> processing  multiple connected
63 Q0 371 73 0.09301266 Lucene_47
remarks on <B>algorithms</B> 2 and 3  algorithm 15 and <B>algorithms</B> 25 and 26 cacm march  1961 wilkinson  j  h  ca610311 jb march 17  1978 12 35 am 371 5 371 371 5 371 371 5 371
63 Q0 2226 74 0.09207783 Lucene_47
further evidence for the analysis of <B>algorithms</B> for the zero-one programming problem the purpose  with two <B>algorithms</B> for the zero-one linear programming problem  an error in gue s paper is corrected  the utility of one of the <B>algorithms</B> as a suboptimizer is indicated  cacm january  1971 proll  l  g  operations research  integer programming  zero-one variables  <B>algorithms</B> 5.39 5.41 ca710108 jb
63 Q0 2948 75 0.09113383 Lucene_47
a terminal-oriented communication system this paper describes a system for full-duplex communication <B>between</B> a time-shared computer and its terminals  the system consists of a communications computer directly connected to the time-shared system  a number of small remote computers to which of terminals of various types  the overall system design is presented along with the <B>algorithms</B> used
63 Q0 2483 76 0.08964403 Lucene_47
 selection  the tree searching <B>algorithms</B> are the heart of coko s effectiveness  yet to a large extent by the definition and trimming of the fischer set  a clear distinction <B>between</B> <B>algorithms</B> are described which could be used as a command structure by anyone desiring to do some  tree searching  tree searching catastrophe  heuristic programming chess <B>algorithms</B>  lasker regions
63 Q0 2524 77 0.08838605 Lucene_47
some approaches to best-match file searching the problem of searching the set of keys in a file to find a key which is closest to a given query key is discussed  after  closest   in terms of a metric on the the key space  is suitably defined  three file structures are presented together with their corresponding search <B>algorithms</B>  which are intended to reduce the number of <B>comparisons</B> required
63 Q0 1367 78 0.088246375 Lucene_47
character structure and character parity sense for <B>parallel</B>-by-bit data communication in ascii   proposed american standard  cacm september  1966 ca660912 jb march 2  1978 4 26 pm 1367 4 1367 2772 4 1367 2787 4 1367 1116 5 1367 1367 5 1367 1367 5 1367 1367 5 1367
63 Q0 1569 79 0.088246375 Lucene_47
implementing phrase-structure productions in pl i a method is described for implementing the productions of a context-free phrase structure grammar in a pl i procedure whose structure and statements <B>parallel</B> the structure and notation of the grammar  cacm july  1967 irwin  l  ca670704 jb february 28  1978 9 01 am 1569 5 1569 1569 5 1569 1569 5 1569
63 Q0 1828 80 0.088246375 Lucene_47
synchronization in a <B>parallel</B>-accessed data base the following problem is considered  given a data for synchronization which will maximize the amount of <B>parallel</B> activity allowed  it is assumed that the data is discussed and their performance compared  cacm november  1969 shoshani  a  bernstein  a  j  <B>parallel</B> accessing  <B>parallel</B> search  file search  data base  synchronization  locking  deadlock 3.73 3.74 4.32
63 Q0 2723 81 0.08803892 Lucene_47
multiprocessing compactifying garbage collection <B>algorithms</B> for a multiprocessing compactifying garbage collector are presented and discussed  the simple case of two processors  one performing lisp-like list operations and the other performing garbage collection continuously  is thoroughly examined reclamation  reclaimer  storage allocation  multiprocessing  synchronization  semaphores  <B>parallel</B>
63 Q0 3037 82 0.08697017 Lucene_47
a linear sieve algorithm for finding prime numbers a new algorithm is presented for finding all primes <B>between</B> 2 and n  the algorithm executes in time proportional to n  assuming that multiplication elegant  it is also easily extended to find the prime factorization of all integers <B>between</B> 2 and n in time proportional to n  cacm december  1978 gries  d  misra  j  primes  <B>algorithms</B>  data
63 Q0 2828 83 0.08261448 Lucene_47
hierarchical geometric models for visible surface <B>algorithms</B> the geometric structure inherent in the definition of the shapes of three-dimensional objects and environments is used not just to define suggests a recursive descent  visible surface algorithm in which the <B>computation</B> time potentially <B>algorithms</B>  hidden surface <B>algorithms</B>  hierarchical data structures  geometric models 5.31 8.2
63 Q0 1145 84 0.08191052 Lucene_47
 in areas such as game-playing and theorem-proving  where practical <B>algorithms</B> are unknown for a solution  and the program is designed to avoid excessive <B>computation</B> along fruitless lines
63 Q0 2081 85 0.08191052 Lucene_47
 and cumulative operators  <B>algorithms</B> are given which use symbol manipulation of matrix expressions so as to find the forms best suited for <B>computation</B>  these forms are called normal forms  several
63 Q0 3152 86 0.08191052 Lucene_47
storage reorganization techniques for matrix <B>computation</B> in a paging environment in order to multiply matrices while minimizing the number of page fetches required  it is often more efficient to reorganize the data into submatrix form and to use block multiplication rather than to use the best known <B>algorithms</B> which leave the matrices stored in row- or column- oriented form  an efficient method
63 Q0 3165 87 0.08191052 Lucene_47
 illustrated by the outline of <B>algorithms</B> for area <B>computation</B> and point inclusion  the algorithm is applied
63 Q0 2950 88 0.08055132 Lucene_47
 <B>algorithms</B> based on an abstract model of a scheduling system which formalizes the notion of priority  various classes of scheduling <B>algorithms</B> are defined and related to existing <B>algorithms</B>  a criterion-invariant <B>algorithms</B>  which include most of the commonly implemented ones  for time-invariant <B>algorithms</B>  fabry  r  s  scheduling <B>algorithms</B>  scheduling models  priority  operating systems processor
63 Q0 1342 89 0.07892386 Lucene_47
transportation problem  <B>algorithms</B> 293  h   cacm december  1966 bayer  g  ca661207a jb march 2  1978 2 30 pm 1342 5 1342 1342 5 1342 1342 5 1342
63 Q0 1658 90 0.07892386 Lucene_47
analysis of <B>algorithms</B> for the zero-one programming problem this paper is concerned with a review and examination of several existing <B>algorithms</B> for the zero-one programming problem  computational experience is summarized  the machine time and storage requirements of several of the <B>algorithms</B>  integer programming  zero-one variables  <B>algorithms</B> 5.39 5.41 ca681208 jb february 21  1978 1 31 pm
63 Q0 1660 91 0.07892386 Lucene_47
index by subject to <B>algorithms</B>  1960-1968 cacm december  1968 ca681206 jb february 21  1978 1 39 pm 1660 5 1660 1660 5 1660 1660 5 1660
63 Q0 1952 92 0.07892386 Lucene_47
index by subject to <B>algorithms</B>  1970 cacm december  1970 ca701211 jb february 9  1978 2 50 pm 1952 5 1952 1952 5 1952 1952 5 1952
63 Q0 2007 93 0.07892386 Lucene_47
<B>algorithms</B> policy revised august 1970 cacm august  1970 ca700814 jb february 10  1978 3 12 pm 2007 5 2007 2007 5 2007 2007 5 2007
63 Q0 2819 94 0.07892386 Lucene_47
 <B>algorithms</B> for encoding a string differ slightly from earlier proposals  the analysis program attempts to find an optimal set of codes for representing substrings of the file  four new <B>algorithms</B> for this operation are described and compared  various parameters in the <B>algorithms</B> are optimized to obtain file compaction  huffman codes  n-gram encoding  comparison of <B>algorithms</B> 3.7 3.73 4.33 ca761104 jb
63 Q0 804 95 0.07892386 Lucene_47
exponentiation of series  <B>algorithms</B> 134  cacm july  1963 thacher jr   h  c  ca630720 jb march 14  1978 8 19 am 804 5 804 804 5 804 804 5 804
63 Q0 1008 96 0.07721558 Lucene_47
scheduling meetings with a computer computer scheduling of papers as it was developed for the 1960 meeting of the federation of american societies for experimental biology  faseb  is described  the faseb meeting is the largest scientific meeting held in the united states each year  the technique developed for faseb can be applied to schedule any meeting with <B>parallel</B> sessions  cacm september
63 Q0 1341 97 0.07721558 Lucene_47
levels of computer systems in building current computer systems  we tend to break them down into  levels  of control  command and communication  in using the system  we break our problems down correspondingly  the continued use of such a structure raises questions about its effects on the usefulness of future systems  particularly with regard to such trends as time sharing  <B>parallel</B> programming
63 Q0 2182 98 0.07721558 Lucene_47
interrupt driven programming cacm july  1971 zelkowitz  m  interrupts  supervisors  monitors  debugging  <B>parallel</B> processing  associative memories  microprogramming 3.51 4.32 4.42 ca710608 jb february 3  1978 9 49 am 2182 4 2182 2534 4 2182 1959 5 2182 2182 5 2182 2182 5 2182 2182 5 2182 2497 5 2182 2534 5 2182 830 6 2182 1471 6 2182 1787 6 2182 1959 6 2182 1973 6 2182 2111 6 2182 2182 6 2182
63 Q0 2514 99 0.07721558 Lucene_47
an array grammar programming system a package of fortran programs has been developed that permits a user to interactively design and test array grammars  the user can control the rule selection procedure in a derivation or parse  using weighted programming matrices  he also has a choice of instance selection schemes  raster random  <B>parallel</B>   examples are given involving array languages
63 Q0 1471 100 0.076543905 Lucene_47
programming semantics for multiprogrammed computations the semantics are defined for a number of meta-instructions which perform operation essential to the writing of programs in multiprogrammed computer systems  these meta-instructions relate to <B>parallel</B> processing  protection of separate is midway <B>between</B> an assembly language and an advanced algebraic language  cacm march  1966 dennis j  b
*************Query 64*************************

64 Q0 497 1 0.06450985 Lucene_47
 shown that an equation for u <B>i</B>  involving no minimization <B>may</B> be found  in addition  it is shown <B>how</B> bellman s method <B>may</B> be applied to the curve-fitting problem when the additional constraints showed <B>how</B> dynamic programming could be used to determine the solution to a problem previously considered by stone  the problem comprises the determination  <B>given</B> n  of the n points of subdivision
64 Q0 2993 2 0.05990016 Lucene_47
 function subject to the same constrain <B>t</B> set was attempted  but mps solved only one of these while giving an indication of infeasibility for the other  cacm february  1977 kotiah  <B>t</B>  c  <B>t</B>  steinberg  d  <B>i</B> perturbations in the input data resulted in problems which <B>did</B> not cycle  this fact  plus several other
64 Q0 595 3 0.05841656 Lucene_47
  difficult to measure  <B>how</B> then might we approach solving this problem  cacm <B>may</B>  1962 greene  <B>i</B>  ca620510 jbguides to teaching cobol the teaching of cobol can be divided into three main subject areas  they are the syntax of cobol  the use of such syntax in solving any <B>given</B> problem  and programming by the programmer  the teaching problem arises in determining <B>how</B> thoroughly a student must know
64 Q0 1890 4 0.05439055 Lucene_47
-meter lengths and is represented by a bidirectional <B>list</B> in computer memory  the movement of cars  <B>i</B> e of cars in the block  and this speed-versus-density curve is empirically <B>given</B> the numerical values of traffic flows in a variety of situations  some examples of which are <B>given</B> for an actual area of the city of kyoto  japan  june  1969 sakai  <B>t</B>  nagao  m  traffic simulation  traffic flow  traffic
64 Q0 3057 5 0.050833546 Lucene_47
optimal his togram matching by monotone gray level transformation this paper investigates the problem of optimal his togram matching using monotone gray level transformation  which always assigns <B>all</B> picture points of a <B>given</B> gray level <B>i</B> to another gray level <B>t</B> <B>i</B>  such that if <B>i</B>  gt  j  then <B>t</B> <B>i</B>   gt  <B>t</B> j   the objective is to find a transformed digital picture of a <B>given</B> picture
64 Q0 1878 6 0.048004232 Lucene_47
 descendants from program variables <B>may</B> then be identified and collected  the <B>list</B>-creating function <B>list</B>  <B>given</B> this modification  a lisp-like garbage collector that recovers abandoned reentrant <B>list</B> structures <B>may</B> then be appended to the slip system  cacm july  1969 weizenbaum  j  <B>list</B> processing  sliprecovery of reentrant <B>list</B> structures in slip one consequence of the reference-count-based space
64 Q0 1853 7 0.046664413 Lucene_47
 convenient  the swym system permits a <B>list</B> to be chained  compact  or any combination of the two  a description is <B>given</B> of that <B>list</B> representation and the operators implemented  most are similar and rearranges <B>all</B> of <B>list</B> storage using temporary storage  this unique <B>list</B>-compacting garbagecompact <B>list</B> representation  definition  garbage collection  and system implementation compact
64 Q0 1717 8 0.046384845 Lucene_47
generating prime implicants via ternary encoding and decimal arithmetic decimal arithmetic  ternary encoding of cubes  and topological considerations are used in an algorithm to obtain the extremals and prime implicants of boolean functions  the algorithm  which has been programmed in the fortran language  generally requires less memory than other minimization procedures  and treats <B>don</B> <B>t</B> care
64 Q0 2232 9 0.046071354 Lucene_47
pattern width at a <B>given</B> angle that the pattern feature  width as a function of angle  possesses in pattern recognition and the geometrical concept itself  the object of the work is to clarify <B>how</B> the word description can be made precise so that computer algorithms for feature extraction <B>may</B>  and descriptions of alternate widths  <B>all</B> widths are calculated for an illustrative example  graphical
64 Q0 2051 10 0.043444272 Lucene_47
 in the data of each correspondence found in that pair of words  the output is a <B>list</B> of <B>all</B>a pl <B>i</B> program to assist the comparative linguist a practical pl <B>i</B> program is described which can  the program tabulates the correspondences  and uses <B>list</B> processing techniques to sort and count correspondence with <B>all</B> word-pairs showing that correspondence  unless their relative value is below
64 Q0 2513 11 0.043182306 Lucene_47
a nonrecursive <B>list</B> moving algorithm an efficient  nonrecursive algorithm is <B>given</B> for moving any lisp-type <B>list</B>  in particular  the algorithm requires no storage other than the new nodes into which the <B>list</B> is to be moved  and no additional bits per node for marking  the algorithm runs in time as it is moved  cacm <B>may</B>  1973 reingold  e  m  <B>list</B> moving  <B>list</B> copying  <B>list</B> traversal  garbage collection lisp
64 Q0 1051 12 0.042648893 Lucene_47
multiword <B>list</B> items the <B>list</B> concept as originally proposed by newell  simon and shaw specified single computer words as elements of a <B>list</B>  this report describes the use of two or more consecutive a <B>given</B> amount of data  and in the execution time required to perform a <B>given</B> process on the data  following a brief description of standard <B>list</B> structures with single-word items  the multiword items
64 Q0 2354 13 0.041848626 Lucene_47
 paper to this   <B>i</B> methodology and experiences   the automatic clenshaw-curtis quadrature scheme was described and <B>how</B> each quadrature formula used in the scheme requires a cosine transformation  this second part of the paper shows <B>how</B> the cosine transformation can be computed by a modification of the fast fourier transform and <B>all</B> three problems overcome  the modification is also applicable in other
64 Q0 1588 14 0.040153194 Lucene_47
pl <B>i</B> <B>list</B> processing the concepts of <B>list</B> processing have been introduced into the pl <B>i</B> language  with these new facilities  it is possible to write pl <B>i</B> procedures that operate on simple and complex eliminated in the <B>list</B>-processing facilities of pl <B>i</B>  the basic concepts of <B>list</B> processing and the philosophy of the pl <B>i</B> language extensions are discussed  in addition  several detailed <B>list</B>-processing
64 Q0 2756 15 0.03944368 Lucene_47
a problem-<B>list</B> of public policy issues concerning computers and health care cacm <B>may</B>  1975 wasserman  a  <B>i</B>  economic and social implications  the public and computing  medicine and health care 2.11 2.12 3.34 ca750511 jb january 9  1978 2 22 pm 2756 4 2756 3076 4 2756 3179 4 2756 2607 5 2756 2756 5 2756 2756 5 2756 2756 5 2756
64 Q0 3074 16 0.038316287 Lucene_47
a time- and space- efficient garbage compaction algorithm <B>given</B> an area of storage containing scattered  marked nodes of differing sizes  one <B>may</B> wish to rearrange them into a compact mass at one end of the area while revising <B>all</B> pointers to marked nodes to show their new locations  an algorithm encoding the situation  that a collection of locations point to a single location  by a linear <B>list</B>
64 Q0 1264 17 0.03731736 Lucene_47
 or of executing programs <B>may</B> be in either english or braille  even though this system was written for a small machine with minimal peripheral equipment  jobs <B>may</B> be batched  so that card handling and lost processing time is at a minimum  this system will perform any or <B>all</B> of the following users specified functions  assemble sps source decks  post <B>list</B>  produce condensed or uncondensed object
64 Q0 2002 18 0.036105074 Lucene_47
 manufacturers  having diverse configurations  the elements common to <B>all</B> types of data plots are outlined and the way in which these elements <B>may</B> be combined into a system based on simple modules modules  the basic syntax of amesplot is outlined  and a brief description is <B>given</B> of its current  in the layout of multiple subplots  of axes  labels  and <B>all</B> other elements of the plot are handled
64 Q0 2971 19 0.03585617 Lucene_47
sp k  a system for teaching computer programming sp k is a compatible subset of the pl <B>i</B> language constructs while retaining <B>all</B> the constructs of preceding subsets  each subset is precisely defined and can be learned or implemented without the following subsets  cacm <B>may</B>  1977 holt  r  c  wortman  d  b  barnard  d  <B>t</B>  cordy  j  r  programmer education  universities  community colleges  high
64 Q0 2144 20 0.034417834 Lucene_47
 on a computer which performs <B>t</B>-digit base b floating-point addition with exponents in the range -m to m  an algorithm is <B>given</B> for accurately summing n <B>t</B>-digit floating-point numbers  each of these n numbers is split into q parts  forming qn <B>t</B>-digit floating-point numbers  each of these is then added to yield the computed sum  in <B>all</B>  qn n-1 <B>t</B>-digit floating-point additions are performed  under usual
64 Q0 2305 21 0.03424811 Lucene_47
the  plankalkul  of konrad zuse  a forerunner of today s programming languages plankalkul was an attempt by korrad zuse in the 1940 s to devise a notational and conceptual system for writing what today is termed a program  although this early approach to a programming language <B>did</B> not lead programming languages  the investigation is of historical interest  also  it <B>may</B> provide insights
64 Q0 3102 22 0.032674227 Lucene_47
incorporation of units into programming languages the issues of <B>how</B> a programming language might aid in keeping track of physical units  feet  sec  etc   are discussed  a method is <B>given</B> for the introduction of relationships among units  a watt is volts amps  a yard is three feet  and subsequent <B>may</B>  1978 karr  m  loveman iii  d  units  language design  compiler construction  language syntax
64 Q0 2822 23 0.032058485 Lucene_47
homilies for humble standards copyright 1976  association for computing machinery  inc  general permission to republish  but not for profit  <B>all</B> or part of this material is granted provided that acm s copyright notice is <B>given</B> and that reference is made to the publication  to its data of issue machinery  cacm november  1976 ross  d  <B>t</B>  standards  case standards criteria for standards
64 Q0 951 24 0.031244282 Lucene_47
rational chebyshev approximations to the bessel function integrals kis x  the second remes algorithm is used to approximate the integrals kis by rational functions  the related coefficients for the approximations of ki1  ki2  ki3 are <B>given</B> for different precisions  cacm december  1964 gargantini  <B>i</B>  pomentale  <B>t</B>  ca641220 jb march 9  1978 3 12 pm 1015 4 951 1346 4 951 1440 4 951 1645 4 951 951 4
64 Q0 1012 25 0.031110484 Lucene_47
 analysis determines a formal parsing system  a directed production analyzer  <B>i</B> <B>t</B> x p  is a nondeterministic pushdown-store machine with internal vocabulary <B>i</B>  input vocabulary <B>t</B>  and <B>all</B> productions of p language data processing and syntax-directed compilers  a formal parsing system g    v u <B>t</B> r  consists of two finite disjoint vocabularies  v and <B>t</B>  a many-many map  u  from v onto <B>t</B>  and a recursive
64 Q0 527 26 0.030911116 Lucene_47
the description <B>list</B> of concepts a concept is defined as a class of objects whose members can be distinguished by processing its properties  property is defined to mean a partition of the set of <B>all</B> is described by a <B>list</B> structure  a one-to-one correspondence is established between the recursive definition of a concept and its description <B>list</B> structure  like the definition  the description <B>list</B>
64 Q0 2358 27 0.030274518 Lucene_47
 and system programs of <B>all</B> information  independent of its physical storage location  information and sharing in multics are first discussed under the assumption that <B>all</B> information resides in large  it is then shown <B>how</B> the multics software achieves the effect of a large segmented main memory through the use of the honeywell 645 segmentation and paging hardware  cacm <B>may</B>  1972 bensoussan  a  clingen
64 Q0 1957 28 0.029188339 Lucene_47
the <B>list</B> set generator  a construct for evaluating set expressions the <B>list</B> set generator is defined and algorithms for its use are <B>given</B>  the <B>list</B> set generator is a construct which <B>may</B> be added to a <B>list</B> processing system or any system that handles sets  it efficiently generates the set which sets to arrive at the final result  cacm december  1970 shapiro  s  c  set manipulating  <B>list</B>
64 Q0 3142 29 0.027466858 Lucene_47
 with which errors <B>may</B> be encountered by the end targets of a computerized process is assessed  <B>how</B> many and what type of errors occur  <B>how</B> easily are they corrected  what is the reaction of consumers for instance   cacm <B>may</B>  1979 sterling  <B>t</B>  errors  systems errors  billing errors  management systems is indicated  while most management systems <B>may</B> be adequate  results of the survey raise concerns
64 Q0 2484 30 0.027152685 Lucene_47
 an element from the <B>given</B> set of objects  the use of different relations and algorithms results in different information structures  as <B>list</B>  tree  ring  etc  thus the problem of information organization and storage is reduced to that of defining relations and formulating algorithms under a <B>given</B> set of constraints  the results presented <B>may</B> be valuable to designers as useful design concepts
64 Q0 2766 31 0.026619641 Lucene_47
copying cyclic <B>list</B> structures in linear time using bounded workspace a bounded workspace copying algorithm for arbitrary <B>list</B> structures is <B>given</B>  this algorithm operates in linear time and does or variable size nodes  cacm <B>may</B>  1975 fisher  d  a  <B>list</B> processing  copying  linear time  space complexity tag bits and n log n time with one tag  the only restriction on the algorithm <B>given</B> here
64 Q0 1886 32 0.026493302 Lucene_47
generation of optimal code for expressions via factorization <B>given</B> a set of expressions which by first factoring the expressions  <B>i</B> e  finding a set of subexpressions each of which occurs in two or more other expressions or subexpressions  once <B>all</B> the factors have been ascertained  a sequencing procedure is applied which orders the factors and expressions such that <B>all</B> information is computed
64 Q0 1847 33 0.026289416 Lucene_47
 and the vertices examined in turn  unexamined vertices being stored in a pushdown <B>list</B> to await examination  one stage in the process is to take the top element v of the pushdown <B>list</B> and examine it  <B>i</B> e  inspect <B>all</B> those edges  v z  of the graph for which z has not yet been examined  if z is already
64 Q0 2194 34 0.026061473 Lucene_47
<B>how</B> to keep the addresses short an algorithm is presented for minimizing the sum of the lengths of the blocks of coding produced by an assembler or compiler when  1  the length of each computer-bit addressing of <B>all</B> of memory  when assembling or compiling two or more blocks of instructions operations on the column vectors of a ternary matrix  cacm <B>may</B>  1971 richards  d  l  addressing
64 Q0 2666 35 0.025807118 Lucene_47
on lions  counter example for gotlieb s method for the construction of school timetables the timetable problem is an essentially discrete problem  although the discrete problem <B>may</B> have no feasible solution  there <B>may</B> exist a solution to the equivalent continuous problem  an example is <B>given</B>  g  sefton  <B>i</B>  m  combinatorial  multi-index problem  necessary conditions  schedule  school
64 Q0 1935 36 0.025476838 Lucene_47
randomized binary search technique a mathematical model is developed for the mean and variance of the number of trials to recover a <B>given</B> document in a randomly received <B>list</B> of files  the search method described is binary in nature and offers new potential for information retrieval systems  cacm february  1969 arora  s  r  dent  w  <B>t</B>  binary pattern  file examination  graph theory  information
64 Q0 2742 37 0.02523387 Lucene_47
 are presented  <B>all</B> of which improve in effectiveness as the events-<B>list</B> scan problem becomes moreimproved event-scanning mechanisms for discrete event simulation simulation models of large  complex  real-world  applications have occasionally earned the reputation of eating up hours of computer time  this problem <B>may</B> be attributed in part to difficulties such as slow stochastic convergence
64 Q0 2060 38 0.024791436 Lucene_47
  regardless of its internal representation  more generally  any data structure <B>may</B> be implicit  <B>i</B> e  it <B>may</B> be specified by giving an arbitrary algorithm for computing or accessing its components reference and its value   3  <B>all</B> compound data structures are treated as functions   4  type declarations of the language  limitations and possible extensions are discussed briefly  cacm <B>may</B>  1970 reynolds  j  c
64 Q0 2622 39 0.024771003 Lucene_47
  in this paper a password scheme is presented which does not require secrecy in the computer  <B>all</B> aspects of the system  including <B>all</B> relevant code and data bases  <B>may</B> be known by anyone attempting interpreted as authentication of the user  the intruder <B>may</B> know <B>all</B> about h and have access a <B>given</B> output  this paper discusses issues surrounding selection of a suitable h  two different
64 Q0 1072 40 0.02391986 Lucene_47
 reduced computation time by 40 percent over a previously published algorithm by identifying <B>all</B> problem in which it is necessary to identify equivalence classes  <B>given</B> the element pairs defining the equivalence relation  cacm <B>may</B>  1964 galler  b  a  fisher  m  j  ca640517 jb march 9  1978 11 48 pm
64 Q0 717 41 0.023815952 Lucene_47
partitioning algorithms for finite sets the partitions of a set with n elements are represented by certain n-tuples of positive integers  algorithm are described which generate without repetitions the n-tuples corresponding to   1  <B>all</B> partitions of the <B>given</B> set   2  <B>all</B> partitions of the <B>given</B> set into m or fewer sets  1  lt   m  lt   n   and  3  <B>all</B> partitions of the <B>given</B> set into exactly m
64 Q0 1665 42 0.02373804 Lucene_47
 and easy to use  cacm december  1968 johnson  w  l  porter  j  h  ackley  s  <B>i</B>  ross  d  <B>t</B>  character allowable in a language <B>given</B> in terms of a subset of regular expressions  the output of the system for character string  these processors <B>may</B> be described as generalized decision-making mechanisms based upon the area of lexical processing  however convenient these advantages <B>may</B> be  speed is the most
64 Q0 2208 43 0.023338733 Lucene_47
 though other areas in the first-level store <B>may</B> have space available  <B>given</B> the n entries have been filed in the first-level storehis expression gives a measure of <B>how</B> effectively the first-level store is being
64 Q0 2712 44 0.023338733 Lucene_47
 summation <B>may</B> become impractical  an algorithm is <B>given</B> which does not show a combinatorial operation <B>how</B> mean queue size and throughput an be obtained at negligible extra cost once the normalization
64 Q0 2062 45 0.023246778 Lucene_47
 to achieve <B>given</B> levels of statistical precision is calculated  also the cost of computer time using procedures versus sequential sampling procedures are compared  cacm <B>may</B>  1970 sasser  w  e  burdick  d  s  graham  d  a  naylor  <B>t</B>  h  simulation  inventory models  sequential sampling  models  experimental
64 Q0 1424 46 0.023130342 Lucene_47
automatic analysis of electronic digital circuits using <B>list</B> processing a mapping from black diagrams of digital circuits to <B>list</B> structures is described  together with a <B>list</B> processing program written for the control data 3600 which uses this mapping to automatically carry out circuit analysis  cacm <B>may</B>  1966 shalla  l  ca660513 jb march 3  1978 9 24 am 1424 5 1424 1424 5 1424 1424 5 1424 1846
64 Q0 2772 47 0.022892525 Lucene_47
on maintenance of the opportunity <B>list</B> for class-teacher timetable problems one of the principal of the opportunity <B>list</B>  opportunity <B>list</B> maintenance methods are based on necessary conditions specific sets of necessary conditions  is <B>given</B>  cacm april  1975 smith  g  combinatorial  necessary conditions  opportunity <B>list</B>  schedule school timetable  timetable 3.51 5.39 ca750405 jb january 9  1978
64 Q0 2065 48 0.022511134 Lucene_47
a programming system for the on-line analysis of biomedical images a preliminary description of the software for a computer-display system is <B>given</B> with special emphasis on the man-machine laboratory at mit conceived by marvin minsky  cacm <B>may</B>  1970 hodes  l  image processing  biomedical  semiautomatic picture processing  semiautomatic karyotyping  karyotyping  <B>list</B> processing picture processing
64 Q0 2177 49 0.022421168 Lucene_47
an algorithm for the blocks and cutnodes of a graph an efficient method is presented for finding blocks and cutnodes of an arbitrary undirected graph  the graph <B>may</B> be represented either  <B>i</B>  as an ordered <B>list</B> of edges or  ii  as a packed adjacency matrix  if w denotes the word length essentially as 2 m n  in case  <B>i</B>   or  n 2  win case  ii   a spanning tree with labeled edges
64 Q0 1609 50 0.022420477 Lucene_47
 examinations simultaneously can be found in two steps  first  course which <B>may</B> have their examinations scheduled at the same period are grouped together in <B>all</B> possible ways  then a minimum number to the ideal procedure outlined above are <B>given</B> which yield nonminimal but feasible schedules with a very small expenditure of time  results of experiments using these techniques are <B>given</B>
64 Q0 2657 51 0.022317344 Lucene_47
an improved program-synthesizing algorithm and its correctness an improved program-synthesizing algorithm based on the algorithm proposed by waldinger and lee in 1969 is <B>given</B>  in the old algorithm mechanism invented by green in 1969  the correctness of the improved algorithm is also proved  <B>i</B> e  the program thus obtained always satisfies the specification  cacm april  1974 lee  r  c  <B>t</B>  chang
64 Q0 3144 52 0.02210735 Lucene_47
 in which programs execute by virtue of being interpreted by other programs  which themselves <B>may</B> either be interpreted  <B>i</B> e  nested interpreters  or run directly on the host machine  the model reveals the anatomy of interpreters and <B>how</B> these differ from procedures  and exhibits links to protection domains and multiprocessor architectures  cacm <B>may</B>  1979 manthey  m  interpreters  transfer-of-control
64 Q0 2142 53 0.022095053 Lucene_47
 are described  <B>all</B> using monte carlo methods  which were designed to solve this problem  the algorithms are applicable in a large and varied number of fields  the most important uses <B>may</B> be the reconstruction december  1971 gordon r  herman  g  <B>t</B>  approximation  biomedical image processing  efficient encoding
64 Q0 637 54 0.022074379 Lucene_47
a neliac-generated 7090-1401 compiler neliac systems for several different machines have been generated using the original neliac system developed at the naval electronics laboratory  san diego  in 1958  a basic  bootstrap  process was used to generate <B>all</B> but the first  <B>i</B> e  the systems were of a project completed in <B>may</B>  1961 in which the neliac system was used to generate a compiler
64 Q0 1674 55 0.021513479 Lucene_47
one-line random number generators and their use in combinations some one-line random number generators  <B>i</B> e  generators requiring a single fortran instruction are discussed  and some short fortran the library generators currently available  <B>may</B> wish to consider some of the simple fortran program discussed here  cacm november  1968 marsaglia  g  bray  <B>t</B>  a  random number generation  monte carlo
64 Q0 2646 56 0.021505931 Lucene_47
 system  a basic permutation algorithm and several variations are <B>given</B>  because of the anticipatory nature of the <B>i</B> o scheduling  these algorithms are restricted to classes of programs with predictable differential equation methods are typical examples of their use  it is shown that latency <B>may</B> be masked of the data base being considered  cacm <B>may</B>  1974 gold  d  e  kuck  d  j  buffer memory  memory hierarchy
64 Q0 2729 57 0.021008305 Lucene_47
comments on a paper by <B>t</B>  c  chen and <B>i</B>  <B>t</B>  ho cacm august  1975 smith  a  j  binary coded decimal digits  decimal data storage  data compression  huffman codes  variable length codes 6.32 6.34 ca750806 jb january 6  1978 4 37 pm 2729 4 2729 2729 4 2729 2288 5 2729 2729 5 2729 2729 5 2729 2729 5 2729 2801 5 2729
64 Q0 2927 58 0.02083019 Lucene_47
some new upper bounds on the generation of prime numbers <B>given</B> an integer n  what is the computational complexity of finding <B>all</B> the primes less than n  a modified sieve of eratosthenes using doubly linked lists yields an algorithm of o n  arithmetic complexity  this upper bound is shown  sieve  prime number generation  number theory  linked <B>list</B>  preprocessing  balancing 5.25 5.39
64 Q0 598 59 0.020787459 Lucene_47
the cobol librarian - a key to object program efficiency many answers to the question  <B>how</B> <B>may</B> a cobol compiler be forced into the generation of an efficient object program   the purpose of this article is to present one possible answer  the creation and full utilization of a well-constructed cobol library  cacm <B>may</B>  1962 hicks  w  ca620507 jb march 20  1978 1 50 pm 598 5 598 598 5 598 598 5 598
64 Q0 3177 60 0.020708982 Lucene_47
<B>how</B> to share a secret in this paper we show <B>how</B> to divide data d into n pieces in such a way that d is easily reconstructable from any k pieces  but even complete knowledge of k - 1 pieces reveals olutely no information about d  this technique enables the construction of robust key management half the pieces and security breaches expose <B>all</B> but one of the remaining pieces  cacm november  1979
64 Q0 796 61 0.02056205 Lucene_47
 are <B>all</B> available autonomously  concurrently  time-shared   multiplication and division orders are also autonomous  so that the machine <B>may</B> be executing up to three orders simultaneously  <B>all</B> functions the computer has also been <B>given</B> a 224-word ferrite core store from which the program is obeyed  transfers one to expect and its design indicates one way in which the concepts of time sharing <B>may</B>
64 Q0 2723 62 0.020558536 Lucene_47
 and interlocks  complete procedures for garbage collection and for standard <B>list</B> processing primitives are presented and thoroughly explained  particular attention is <B>given</B> to the problems of marking and relocating <B>list</B> cells while another processor <B>may</B> be operating on them  the primary aim-like <B>list</B> operations and the other performing garbage collection continuously  is thoroughly examined
64 Q0 367 63 0.0204691 Lucene_47
topological ordering of a <B>list</B> of randomly-numbered elements of a network a network of directed line segments free of circular elements is assumed  the lines are identified by their terminal nodes and the nodes are assumed to be numbered by a non-topological system  <B>given</B> a <B>list</B> of these lines in numeric order  a simple technique can be used to create at high speed a <B>list</B> in topological order
64 Q0 2786 64 0.020358833 Lucene_47
  and the like necessary to print according to mathematical conventions are <B>all</B> done automatically  for example  the input sum from <B>i</B> o to infinity x sub <B>i</B> pi over 2 produces  formula   the syntax with text formatting programs  so mixtures of text and mathematics <B>may</B> be handled simply  this paper
64 Q0 2998 65 0.020308264 Lucene_47
an empirical study of <B>list</B> structure in lisp static measurements of the <B>list</B> structure of five languages  poin ters to lists usually poin <B>t</B> to a location physically nearby in memory  the use of such regularities in the space-efficient representation of <B>list</B> structure is discussed  linearization  greatly strengthens the observed regularity of <B>list</B> structure  it is shown that under some reasonable
64 Q0 1470 66 0.020187099 Lucene_47
 <B>list</B> processing languages  illustrate the forms described  elementary program statements usually take  subroutines <B>may</B> be entered explicitly  by execute call  or by function composition  explicitly called concludes by suggesting the evolution of programming languages toward one which will permit <B>all</B>
64 Q0 2342 67 0.020139717 Lucene_47
 <B>given</B> for the mutual exclusion problem and associated subproblems  in the form of parallel programs  and informal proofs of correctness have been <B>given</B> for these solutions  in this paper a system of parallel processes is regarded as a machine which proceeds from one state s  <B>i</B> e  a collection of  an attempted solution  with respect to any of the interference properties  it is shown <B>how</B>
64 Q0 1255 68 0.019776605 Lucene_47
a method of data <B>list</B> processing with application to eeg analysis a set of subroutines is discussed  which is designed to aid in the programming of computations on indexed lists of numbers using machine language or a symbolic assembly system  the most commonly performed <B>list</B> operations are outlined from the autocovariance function is discussed for a class of eeg signals  cacm <B>may</B>  1965 philpott  c
64 Q0 1307 69 0.019578103 Lucene_47
 is not required to learn or <B>remember</B> the vocabulary of the language because the vocabulary is displayed to the system  he does not have to learn or <B>remember</B> the grammar  the program restricts the user severely
64 Q0 3088 70 0.019566808 Lucene_47
general equations for idealized cpu-<B>i</B> o overlap configurations general equations are derived for estimating the maximum possible utilization of main storage partitions  cpu and <B>i</B> o devices under different conditions in an idealized cpu-<B>i</B> o overlap model of multiprogrammed computer systems  the equations are directly applicable to any configuration consisting of sets of identical cpu s <B>i</B> o
64 Q0 1906 71 0.01935164 Lucene_47
   and vias  feed-through holes  is described  in this program  each interconnection is <B>given</B> a planned the top  a virtual aperture  <B>i</B> e  a long horizontal slit  is stepped down the board  the planned routing and to the problem of obtaining 100 percent interconnect are also discussed  cacm <B>may</B>  1969 lass  s  routing
64 Q0 2771 72 0.01935164 Lucene_47
 a cube  wedge  or cylinder  any solid can be moved  scaled  or rotated  solids <B>may</B> also be added  the technique has the advantage that operations are concise  readily composed  and are <B>given</B> in terms bounded by many faces  cacm april  1975 braid  <B>i</B>  c  computational geometry  computer-aided design
64 Q0 2570 73 0.019323938 Lucene_47
a comparison of <B>list</B> schedules for parallel processing systems the problem of scheduling two or more processors to minimize the execution time of a program which consists of a set of partially is presented  cacm december  1974 adam  <B>t</B>  l  chandy  k  m  dickson  j  r  parallel processing  precedence graphs  scheduling  <B>list</B> scheduling  optimization  dynamic programming 4.3 4.32 4.34 4.35 5.3
64 Q0 2373 74 0.019277252 Lucene_47
properties of the working-set model a program s working set w <B>t</B> <B>t</B>  at time <B>t</B> is the set of distinct pages among the <B>t</B> most recently referenced pages  relations between the average working-set size  the missing-page rate  and the interreference-interval distribution <B>may</B> be derived both from time for estimating these quantities is <B>given</B>  the relation to lru  least recently used  paging is characterized
64 Q0 2609 75 0.019250074 Lucene_47
 rounded ramp functions  <B>how</B> the interpolation function can be extended to more than one variable is shown  an efficient fortran program is <B>given</B> by which the interpolation function can be obtained for a <B>given</B> point set  cacm august  1974 lagerlof  r  o  e  interpolation  approximation  smooth
64 Q0 1350 76 0.019091835 Lucene_47
 proven by greibach that for a <B>given</B> context-free grammar g  a standard-form grammar gs can be constructed  which generates the same languages as is generated by g and whose rules are <B>all</B> of the form z -- gt  cy 1      y m    m  gt   o  where z and y <B>i</B>  are intermediate symbols and c a terminal symbol of any context-free grammar g  <B>given</B> an equivalent standard-form grammar gs  the structural
64 Q0 1931 77 0.01894995 Lucene_47
 papers  one by hansen and one by hansen and r  r  smith  have shown <B>how</B> interval arithmetic  <B>i</B> by hasen and r  r  smith is compared with straightforward use of <B>i</B>  in determinant evaluation  computational results show the accuracy and running times that can be expected when using <B>i</B>  for determinant evaluation  an application using <B>i</B>  determinants in a program to test a set of functions to see
64 Q0 1643 78 0.01848955 Lucene_47
an improvement to iterative methods of polynomial factorization methods of polynomial factorization which find the zeros one at a time require the division of the polynomial by the accepted factor  it is shown <B>how</B> the accuracy of this division <B>may</B> be increased by dividing in order of both ascending and descending powers of the variable and choosing a crossover point which minimizes a very simply
64 Q0 1382 79 0.018189026 Lucene_47
 which <B>may</B> influence the professional activities of applied mathematicians over the next several years  and discusses in broad terms <B>how</B> this information <B>may</B> relate to the undergraduate training
64 Q0 2968 80 0.018180642 Lucene_47
a comparison of tree-balancing algorithms several algorithms-height-balance  <B>i</B> e  avl and extensions   weight-balance  <B>i</B> e  bb and wb   and total restructuring-for building balanced binary search are <B>given</B> for an efficient use of the methods  if insertion and subsequent queries are the only operations of in terest  then  pure  avl trees present the overall best qualities  cacm <B>may</B>  1977 baer
64 Q0 1752 81 0.017936382 Lucene_47
 batch processing and time-sharing environment  a synopsis is <B>given</B> of the task scheduling and paging algorithms that were implemented  and the results of comparative simulation are <B>given</B> by tracing emphasis is placed on balancing the system performance relative to the characteristics of <B>all</B> of program mix and loading variations are also presented  cacm <B>may</B>  1968 oppenheimer  g  weizer  n
64 Q0 3134 82 0.017936382 Lucene_47
 requesting a group of information items  <B>all</B> of which possess a particular set of attributes  and possibly some other attributes as well   several examples are <B>given</B>  the results with respect to the number the appropriateness of the above approach to a <B>given</B> information system are described  for a certain class  rapid retrieval  space economy 3.70 3.73 3.79 ca790305 dh <B>may</B> 21  1979 9 46 am 2140 4 3134 2452 4
64 Q0 2907 83 0.017870413 Lucene_47
 for proving properties of optimal fixed poin <B>t</B> are <B>given</B>  the presentation is informal  with emphasisthe optimal approach to recursive programs the classical fixed poin <B>t</B> approach toward recursive programs suggests choosing the  least defined fixed poin <B>t</B>  as the most appropriate solution  in contrast to the least defined fixed poin <B>t</B>  embodies the maximal amount of valuable information
64 Q0 1437 84 0.01782338 Lucene_47
the mutual primal-dual method  algorithm 285  h   cacm <B>may</B>  1966 aird  <B>t</B>  j  ca660501b jb march 23  1978 7 12 pm 1437 5 1437 1437 5 1437 1437 5 1437
64 Q0 22 85 0.01782338 Lucene_47
unusual applications department--automatic implementation of computer logic cacm <B>may</B>  1958 morris  e  f  wohr  <B>t</B>  e  ca580506 jb march 22  1978 9 11 pm 22 5 22 22 5 22 22 5 22
64 Q0 1895 86 0.017795814 Lucene_47
gaussian quadrature formulas  algorithm 331  d1   cacm <B>may</B>  1969 hill  <B>i</B>  d  quadrature  gaussian quadrature  numerical integration  weight function  orthogonal polynomials 5.16 ca690514 jb february 17  1978 3 13 pm 1895 5 1895 1895 5 1895 1895 5 1895
64 Q0 2762 87 0.017795814 Lucene_47
ten subroutines for the manipulation of chebyshev series  algorithm r446  c446  cacm <B>may</B>  1975 piessens  r  mertens  <B>i</B>  ca750505 jb january 9  1978 2 37 pm 2762 4 2762 2521 5 2762 2762 5 2762 2762 5 2762 2762 5 2762
64 Q0 2447 88 0.017769238 Lucene_47
sard kernels for certain bivariate cubatures an error analysis for some bivariate cubatures is <B>given</B>  the remainders are obtained by the use of sard kernels  numerical results and computer graphs are <B>given</B> for some of the kernel functions  cacm september  1973 barnhill  r  e  pilcher  d  <B>t</B>  cubatures  sard kernels  numerical integration  remainder formulas 5.13 5.16 ca730908 jb january 23  1978 8
64 Q0 1098 89 0.017606113 Lucene_47
 considered is distinctly superior in <B>all</B> possible <B>list</B>-processing applications  cacm april  1964a comparison of <B>list</B>-processing computer languages  including a detailed comparison of comit  ipl-v well-known computer programming languages which  among them  exhibit <B>all</B> the principal characteristics of existing <B>list</B>-processing languages  important common features of <B>list</B>-processing languages
64 Q0 1288 90 0.017594468 Lucene_47
clp-the cornell <B>list</B> processor presented in this paper are the highlights of clp  a teaching language which has been employed at cornell university and was constructed to serve as a means of introducing simulation and other <B>list</B>-processing concepts  the various advantages of clp are discussed and examples are <B>given</B>  cacm april  1965 conway  r  w  delfausse  j  j  maxwell  w  l  walker  w  e
64 Q0 2309 91 0.01692863 Lucene_47
computers in the instructional process  directions for research and development a survey is <B>given</B> of computer applications to the instructional process which suggests <B>how</B> the computer professional can contribute to effective educational systems  cacm july 1972 zinn  k  l  education 1.5 3.32 ca720719 jb january 30  1978 11 13 am 2127 4 2309 2309 4 2309 2309 4 2309 2310 4 2309 2396 4 2309 1856 5
64 Q0 1783 92 0.016688446 Lucene_47
in-and-out conversions byan in-and-out conversion we mean that a floating-point number in one base is converted into a floating-point number in another base and then converted back to a floating-point number in the original base  for <B>all</B> combinations of rounding and truncation conversions the question is considered of <B>how</B> many significant digits are needed in the intermediate base to allow
64 Q0 2286 93 0.016500065 Lucene_47
 floating-point arithmetic operations  an automatic error analysis technique is <B>given</B> for determining  directly from the results of a trial low-precision interval arithmetic calculation  just <B>how</B> much precision and data accuracy are required to achieve a desired final accuracy  the technique <B>given</B>
64 Q0 106 94 0.015757794 Lucene_47
a method for overlapping and erasure of lists an important property of the newell-shaw-simon scheme for computer storage of lists is that data having multiple occurrences need not be stored at more than one place in the computer  that is  lists <B>may</B> be  overlapped   unfortunately  overlapping poses a problem for subsequent erasure  <B>given</B> a <B>list</B> that is no longer needed  it is desired to erase just
64 Q0 1727 95 0.015490664 Lucene_47
 of the number of jumps from the <B>i</B>-th instruction on to the j-th instruction in the run time  in the cases estimation of the s ij   it is easier to estimate not s ij  but the quantities p ij  s ij  c <B>i</B>  sum s ij   j 1 n   where c <B>i</B>  is an arbitrary positive constant for each <B>i</B>  although the p ij  are  for each <B>i</B>  proportional to s ij   the estimation of p ij  is easier  because we must estimate only
64 Q0 1976 96 0.015461254 Lucene_47
 to retrieve <B>all</B> keys satisfying any input query derived from a subset of fields by a single access to an index file  although each bucket <B>may</B> be used for many combinations of values and a combination of buckets <B>may</B> be required for a <B>given</B> query  the method which  in its degenerate case  becomes
64 Q0 3031 97 0.015442325 Lucene_47
abstract data types and software validation a data abstraction can be naturally specified using algebraic axioms  the virtue of these axioms is that they permit a representation-independent formal specification of a data type  an example is <B>given</B> which shows <B>how</B> to employ algebraic axioms at successive levels of implementation  the major thrust of the paper is twofold  first  it is shown <B>how</B>
64 Q0 2317 98 0.0154136615 Lucene_47
programming systems and languages 1965-1975 in spite of impressive gains by pl <B>i</B>  fortran and cobol languages <B>may</B> very well become the most important language development area in the next five to ten years  in the operating system area <B>all</B> major computer manufacturers set out to produce very ambitious multiprogramming systems  and they <B>all</B> ran into similar problems  a number of university projects
64 Q0 3106 99 0.015350287 Lucene_47
 processing operations to be optimized for each type  cacm <B>may</B>  1978 clark  d  <B>list</B> copying  lisp  spacea fast algorithm for copying <B>list</B> structures an algorithm is presented for copying an arbitrarily linked <B>list</B> structure into a block of contiguous storage locations without destroying the original <B>list</B>  apart from a fixed number of program variables  no auxiliary storage  such as a stack  is used
64 Q0 2916 100 0.0152964955 Lucene_47
 cases  not <B>all</B> of the first <B>i</B> characters of string are inspected  the number of characters actuallya fast string searching algorithm an algorithm is presented that searches for the location   <B>i</B> pattern of length 5  the algorithm will typically inspect <B>i</B> 4 characters of string before finding a match at <B>i</B>  furthermore  the algorithm has been implemented so that  on the average  fewer than <B>i</B> patlen